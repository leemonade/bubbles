/*! For license information please see 368fcde482afbbb57031.js.LICENSE.txt */
!function webpackUniversalModuleDefinition(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define("pdfjs-dist/build/pdf.worker",[],factory):"object"==typeof exports?exports["pdfjs-dist/build/pdf.worker"]=factory():root["pdfjs-dist/build/pdf.worker"]=root.pdfjsWorker=factory()}(globalThis,(()=>(()=>{"use strict";var __webpack_modules__=[,(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkerTask=exports.WorkerMessageHandler=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_core_utils=__w_pdfjs_require__(6),_pdf_manager=__w_pdfjs_require__(8),_cleanup_helper=__w_pdfjs_require__(71),_writer=__w_pdfjs_require__(65),_is_node=__w_pdfjs_require__(4),_message_handler=__w_pdfjs_require__(102),_worker_stream=__w_pdfjs_require__(103);class WorkerTask{constructor(name){this.name=name,this.terminated=!1,this._capability=(0,_util.createPromiseCapability)()}get finished(){return this._capability.promise}finish(){this._capability.resolve()}terminate(){this.terminated=!0}ensureNotTerminated(){if(this.terminated)throw new Error("Worker task was terminated")}}exports.WorkerTask=WorkerTask;class WorkerMessageHandler{static setup(handler,port){let testMessageProcessed=!1;handler.on("test",(function wphSetupTest(data){testMessageProcessed||(testMessageProcessed=!0,handler.send("test",data instanceof Uint8Array))})),handler.on("configure",(function wphConfigure(data){(0,_util.setVerbosityLevel)(data.verbosity)})),handler.on("GetDocRequest",(function wphSetupDoc(data){return WorkerMessageHandler.createDocumentHandler(data,port)}))}static createDocumentHandler(docParams,port){let pdfManager,terminated=!1,cancelXHRs=null;const WorkerTasks=[],verbosity=(0,_util.getVerbosityLevel)(),apiVersion=docParams.apiVersion;if("2.16.105"!==apiVersion)throw new Error(`The API version "${apiVersion}" does not match the Worker version "2.16.105".`);const enumerableProperties=[];for(const property in[])enumerableProperties.push(property);if(enumerableProperties.length)throw new Error("The `Array.prototype` contains unexpected enumerable properties: "+enumerableProperties.join(", ")+"; thus breaking e.g. `for...in` iteration of `Array`s.");if("undefined"==typeof ReadableStream){const partialMsg="The browser/environment lacks native support for critical functionality used by the PDF.js library (e.g. `ReadableStream`); ";if(_is_node.isNodeJS)throw new Error(partialMsg+"please use a `legacy`-build instead.");throw new Error(partialMsg+"please update to a supported browser.")}const docId=docParams.docId,docBaseUrl=docParams.docBaseUrl,workerHandlerName=docParams.docId+"_worker";let handler=new _message_handler.MessageHandler(workerHandlerName,docId,port);function ensureNotTerminated(){if(terminated)throw new Error("Worker was terminated")}function startWorkerTask(task){WorkerTasks.push(task)}function finishWorkerTask(task){task.finish();const i=WorkerTasks.indexOf(task);WorkerTasks.splice(i,1)}async function loadDocument(recoveryMode){await pdfManager.ensureDoc("checkHeader"),await pdfManager.ensureDoc("parseStartXRef"),await pdfManager.ensureDoc("parse",[recoveryMode]),await pdfManager.ensureDoc("checkFirstPage",[recoveryMode]),await pdfManager.ensureDoc("checkLastPage",[recoveryMode]);const isPureXfa=await pdfManager.ensureDoc("isPureXfa");if(isPureXfa){const task=new WorkerTask("loadXfaFonts");startWorkerTask(task),await Promise.all([pdfManager.loadXfaFonts(handler,task).catch((reason=>{})).then((()=>finishWorkerTask(task))),pdfManager.loadXfaImages()])}const[numPages,fingerprints]=await Promise.all([pdfManager.ensureDoc("numPages"),pdfManager.ensureDoc("fingerprints")]);return{numPages,fingerprints,htmlForXfa:isPureXfa?await pdfManager.ensureDoc("htmlForXfa"):null}}function getPdfManager(data,evaluatorOptions,enableXfa){const pdfManagerCapability=(0,_util.createPromiseCapability)();let newPdfManager;const source=data.source;if(source.data){try{newPdfManager=new _pdf_manager.LocalPdfManager(docId,source.data,source.password,handler,evaluatorOptions,enableXfa,docBaseUrl),pdfManagerCapability.resolve(newPdfManager)}catch(ex){pdfManagerCapability.reject(ex)}return pdfManagerCapability.promise}let pdfStream,cachedChunks=[];try{pdfStream=new _worker_stream.PDFWorkerStream(handler)}catch(ex){return pdfManagerCapability.reject(ex),pdfManagerCapability.promise}const fullRequest=pdfStream.getFullReader();fullRequest.headersReady.then((function(){if(!fullRequest.isRangeSupported)return;const disableAutoFetch=source.disableAutoFetch||fullRequest.isStreamingSupported;newPdfManager=new _pdf_manager.NetworkPdfManager(docId,pdfStream,{msgHandler:handler,password:source.password,length:fullRequest.contentLength,disableAutoFetch,rangeChunkSize:source.rangeChunkSize},evaluatorOptions,enableXfa,docBaseUrl);for(const chunk of cachedChunks)newPdfManager.sendProgressiveData(chunk);cachedChunks=[],pdfManagerCapability.resolve(newPdfManager),cancelXHRs=null})).catch((function(reason){pdfManagerCapability.reject(reason),cancelXHRs=null}));let loaded=0;return new Promise((function(resolve,reject){const readChunk=function({value,done}){try{if(ensureNotTerminated(),done)return newPdfManager||function(){const pdfFile=(0,_util.arraysToBytes)(cachedChunks);source.length&&pdfFile.length!==source.length&&(0,_util.warn)("reported HTTP length is different from actual");try{newPdfManager=new _pdf_manager.LocalPdfManager(docId,pdfFile,source.password,handler,evaluatorOptions,enableXfa,docBaseUrl),pdfManagerCapability.resolve(newPdfManager)}catch(ex){pdfManagerCapability.reject(ex)}cachedChunks=[]}(),void(cancelXHRs=null);loaded+=(0,_util.arrayByteLength)(value),fullRequest.isStreamingSupported||handler.send("DocProgress",{loaded,total:Math.max(loaded,fullRequest.contentLength||0)}),newPdfManager?newPdfManager.sendProgressiveData(value):cachedChunks.push(value),fullRequest.read().then(readChunk,reject)}catch(e){reject(e)}};fullRequest.read().then(readChunk,reject)})).catch((function(e){pdfManagerCapability.reject(e),cancelXHRs=null})),cancelXHRs=function(reason){pdfStream.cancelAllRequests(reason)},pdfManagerCapability.promise}return handler.on("GetPage",(function wphSetupGetPage(data){return pdfManager.getPage(data.pageIndex).then((function(page){return Promise.all([pdfManager.ensure(page,"rotate"),pdfManager.ensure(page,"ref"),pdfManager.ensure(page,"userUnit"),pdfManager.ensure(page,"view")]).then((function([rotate,ref,userUnit,view]){return{rotate,ref,userUnit,view}}))}))})),handler.on("GetPageIndex",(function wphSetupGetPageIndex(data){const pageRef=_primitives.Ref.get(data.num,data.gen);return pdfManager.ensureCatalog("getPageIndex",[pageRef])})),handler.on("GetDestinations",(function wphSetupGetDestinations(data){return pdfManager.ensureCatalog("destinations")})),handler.on("GetDestination",(function wphSetupGetDestination(data){return pdfManager.ensureCatalog("getDestination",[data.id])})),handler.on("GetPageLabels",(function wphSetupGetPageLabels(data){return pdfManager.ensureCatalog("pageLabels")})),handler.on("GetPageLayout",(function wphSetupGetPageLayout(data){return pdfManager.ensureCatalog("pageLayout")})),handler.on("GetPageMode",(function wphSetupGetPageMode(data){return pdfManager.ensureCatalog("pageMode")})),handler.on("GetViewerPreferences",(function(data){return pdfManager.ensureCatalog("viewerPreferences")})),handler.on("GetOpenAction",(function(data){return pdfManager.ensureCatalog("openAction")})),handler.on("GetAttachments",(function wphSetupGetAttachments(data){return pdfManager.ensureCatalog("attachments")})),handler.on("GetJavaScript",(function wphSetupGetJavaScript(data){return pdfManager.ensureCatalog("javaScript")})),handler.on("GetDocJSActions",(function wphSetupGetDocJSActions(data){return pdfManager.ensureCatalog("jsActions")})),handler.on("GetPageJSActions",(function({pageIndex}){return pdfManager.getPage(pageIndex).then((function(page){return pdfManager.ensure(page,"jsActions")}))})),handler.on("GetOutline",(function wphSetupGetOutline(data){return pdfManager.ensureCatalog("documentOutline")})),handler.on("GetOptionalContentConfig",(function(data){return pdfManager.ensureCatalog("optionalContentConfig")})),handler.on("GetPermissions",(function(data){return pdfManager.ensureCatalog("permissions")})),handler.on("GetMetadata",(function wphSetupGetMetadata(data){return Promise.all([pdfManager.ensureDoc("documentInfo"),pdfManager.ensureCatalog("metadata")])})),handler.on("GetMarkInfo",(function wphSetupGetMarkInfo(data){return pdfManager.ensureCatalog("markInfo")})),handler.on("GetData",(function wphSetupGetData(data){return pdfManager.requestLoadedStream(),pdfManager.onLoadedStream().then((function(stream){return stream.bytes}))})),handler.on("GetAnnotations",(function({pageIndex,intent}){return pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(`GetAnnotations: page ${pageIndex}`);return startWorkerTask(task),page.getAnnotationsData(handler,task,intent).then((data=>(finishWorkerTask(task),data)),(reason=>{finishWorkerTask(task)}))}))})),handler.on("GetFieldObjects",(function(data){return pdfManager.ensureDoc("fieldObjects")})),handler.on("HasJSActions",(function(data){return pdfManager.ensureDoc("hasJSActions")})),handler.on("GetCalculationOrderIds",(function(data){return pdfManager.ensureDoc("calculationOrderIds")})),handler.on("SaveDocument",(function({isPureXfa,numPages,annotationStorage,filename}){pdfManager.requestLoadedStream();const newAnnotationsByPage=isPureXfa?null:(0,_core_utils.getNewAnnotationsMap)(annotationStorage),promises=[pdfManager.onLoadedStream(),pdfManager.ensureCatalog("acroForm"),pdfManager.ensureCatalog("acroFormRef"),pdfManager.ensureDoc("xref"),pdfManager.ensureDoc("startXRef")];if(newAnnotationsByPage)for(const[pageIndex,annotations]of newAnnotationsByPage)promises.push(pdfManager.getPage(pageIndex).then((page=>{const task=new WorkerTask(`Save (editor): page ${pageIndex}`);return page.saveNewAnnotations(handler,task,annotations).finally((function(){finishWorkerTask(task)}))})));if(isPureXfa)promises.push(pdfManager.serializeXfaData(annotationStorage));else for(let pageIndex=0;pageIndex<numPages;pageIndex++)promises.push(pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(`Save: page ${pageIndex}`);return page.save(handler,task,annotationStorage).finally((function(){finishWorkerTask(task)}))})));return Promise.all(promises).then((function([stream,acroForm,acroFormRef,xref,startXRef,...refs]){let newRefs=[],xfaData=null;if(isPureXfa){if(xfaData=refs[0],!xfaData)return stream.bytes}else if(newRefs=refs.flat(2),0===newRefs.length)return stream.bytes;const xfa=acroForm instanceof _primitives.Dict&&acroForm.get("XFA")||null;let xfaDatasetsRef=null,hasXfaDatasetsEntry=!1;if(Array.isArray(xfa)){for(let i=0,ii=xfa.length;i<ii;i+=2)"datasets"===xfa[i]&&(xfaDatasetsRef=xfa[i+1],acroFormRef=null,hasXfaDatasetsEntry=!0);null===xfaDatasetsRef&&(xfaDatasetsRef=xref.getNewRef())}else xfa&&(acroFormRef=null,(0,_util.warn)("Unsupported XFA type."));let newXrefInfo=Object.create(null);if(xref.trailer){const infoObj=Object.create(null),xrefInfo=xref.trailer.get("Info")||null;xrefInfo instanceof _primitives.Dict&&xrefInfo.forEach(((key,value)=>{"string"==typeof value&&(infoObj[key]=(0,_util.stringToPDFString)(value))})),newXrefInfo={rootRef:xref.trailer.getRaw("Root")||null,encryptRef:xref.trailer.getRaw("Encrypt")||null,newRef:xref.getNewRef(),infoRef:xref.trailer.getRaw("Info")||null,info:infoObj,fileIds:xref.trailer.get("ID")||null,startXRef,filename}}return xref.resetNewRef(),(0,_writer.incrementalUpdate)({originalData:stream.bytes,xrefInfo:newXrefInfo,newRefs,xref,hasXfa:!!xfa,xfaDatasetsRef,hasXfaDatasetsEntry,acroFormRef,acroForm,xfaData})}))})),handler.on("GetOperatorList",(function wphSetupRenderPage(data,sink){const pageIndex=data.pageIndex;pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(`GetOperatorList: page ${pageIndex}`);startWorkerTask(task);const start=verbosity>=_util.VerbosityLevel.INFOS?Date.now():0;page.getOperatorList({handler,sink,task,intent:data.intent,cacheKey:data.cacheKey,annotationStorage:data.annotationStorage}).then((function(operatorListInfo){finishWorkerTask(task),start&&(0,_util.info)(`page=${pageIndex+1} - getOperatorList: time=${Date.now()-start}ms, len=${operatorListInfo.length}`),sink.close()}),(function(reason){finishWorkerTask(task),task.terminated||(handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorOperatorList}),sink.error(reason))}))}))})),handler.on("GetTextContent",(function wphExtractText(data,sink){const pageIndex=data.pageIndex;pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask("GetTextContent: page "+pageIndex);startWorkerTask(task);const start=verbosity>=_util.VerbosityLevel.INFOS?Date.now():0;page.extractTextContent({handler,task,sink,includeMarkedContent:data.includeMarkedContent,combineTextItems:data.combineTextItems}).then((function(){finishWorkerTask(task),start&&(0,_util.info)(`page=${pageIndex+1} - getTextContent: time=`+(Date.now()-start)+"ms"),sink.close()}),(function(reason){finishWorkerTask(task),task.terminated||sink.error(reason)}))}))})),handler.on("GetStructTree",(function wphGetStructTree(data){return pdfManager.getPage(data.pageIndex).then((function(page){return pdfManager.ensure(page,"getStructTree")}))})),handler.on("FontFallback",(function(data){return pdfManager.fontFallback(data.id,handler)})),handler.on("Cleanup",(function wphCleanup(data){return pdfManager.cleanup(!0)})),handler.on("Terminate",(function wphTerminate(data){terminated=!0;const waitOn=[];if(pdfManager){pdfManager.terminate(new _util.AbortException("Worker was terminated."));const cleanupPromise=pdfManager.cleanup();waitOn.push(cleanupPromise),pdfManager=null}else(0,_cleanup_helper.clearGlobalCaches)();cancelXHRs&&cancelXHRs(new _util.AbortException("Worker was terminated."));for(const task of WorkerTasks)waitOn.push(task.finished),task.terminate();return Promise.all(waitOn).then((function(){handler.destroy(),handler=null}))})),handler.on("Ready",(function wphReady(data){!function setupDoc(data){function onSuccess(doc){ensureNotTerminated(),handler.send("GetDoc",{pdfInfo:doc})}function onFailure(ex){if(ensureNotTerminated(),ex instanceof _util.PasswordException){const task=new WorkerTask(`PasswordException: response ${ex.code}`);startWorkerTask(task),handler.sendWithPromise("PasswordRequest",ex).then((function({password}){finishWorkerTask(task),pdfManager.updatePassword(password),pdfManagerReady()})).catch((function(){finishWorkerTask(task),handler.send("DocException",ex)}))}else ex instanceof _util.InvalidPDFException||ex instanceof _util.MissingPDFException||ex instanceof _util.UnexpectedResponseException||ex instanceof _util.UnknownErrorException?handler.send("DocException",ex):handler.send("DocException",new _util.UnknownErrorException(ex.message,ex.toString()))}function pdfManagerReady(){ensureNotTerminated(),loadDocument(!1).then(onSuccess,(function(reason){ensureNotTerminated(),reason instanceof _core_utils.XRefParseException?(pdfManager.requestLoadedStream(),pdfManager.onLoadedStream().then((function(){ensureNotTerminated(),loadDocument(!0).then(onSuccess,onFailure)}))):onFailure(reason)}))}ensureNotTerminated(),getPdfManager(data,{maxImageSize:data.maxImageSize,disableFontFace:data.disableFontFace,ignoreErrors:data.ignoreErrors,isEvalSupported:data.isEvalSupported,fontExtraProperties:data.fontExtraProperties,useSystemFonts:data.useSystemFonts,cMapUrl:data.cMapUrl,standardFontDataUrl:data.standardFontDataUrl},data.enableXfa).then((function(newPdfManager){if(terminated)throw newPdfManager.terminate(new _util.AbortException("Worker was terminated.")),new Error("Worker was terminated");pdfManager=newPdfManager,pdfManager.onLoadedStream().then((function(stream){handler.send("DataLoaded",{length:stream.bytes.byteLength})}))})).then(pdfManagerReady,onFailure)}(docParams),docParams=null})),workerHandlerName}static initializeFromPort(port){const handler=new _message_handler.MessageHandler("worker","main",port);WorkerMessageHandler.setup(handler,port),handler.send("ready",null)}}exports.WorkerMessageHandler=WorkerMessageHandler,"undefined"==typeof window&&!_is_node.isNodeJS&&"undefined"!=typeof self&&function isMessagePort(maybePort){return"function"==typeof maybePort.postMessage&&"onmessage"in maybePort}(self)&&WorkerMessageHandler.initializeFromPort(self)},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VerbosityLevel=exports.Util=exports.UnknownErrorException=exports.UnexpectedResponseException=exports.UNSUPPORTED_FEATURES=exports.TextRenderingMode=exports.StreamType=exports.RenderingIntentFlag=exports.PermissionFlag=exports.PasswordResponses=exports.PasswordException=exports.PageActionEventType=exports.OPS=exports.MissingPDFException=exports.LINE_FACTOR=exports.LINE_DESCENT_FACTOR=exports.InvalidPDFException=exports.ImageKind=exports.IDENTITY_MATRIX=exports.FormatError=exports.FontType=exports.FeatureTest=exports.FONT_IDENTITY_MATRIX=exports.DocumentActionEventType=exports.CMapCompressionType=exports.BaseException=exports.AnnotationType=exports.AnnotationStateModelType=exports.AnnotationReviewState=exports.AnnotationReplyType=exports.AnnotationMode=exports.AnnotationMarkedState=exports.AnnotationFlag=exports.AnnotationFieldFlag=exports.AnnotationEditorType=exports.AnnotationEditorPrefix=exports.AnnotationEditorParamsType=exports.AnnotationBorderStyleType=exports.AnnotationActionEventType=exports.AbortException=void 0,exports.arrayByteLength=arrayByteLength,exports.arraysToBytes=function arraysToBytes(arr){const length=arr.length;if(1===length&&arr[0]instanceof Uint8Array)return arr[0];let resultLength=0;for(let i=0;i<length;i++)resultLength+=arrayByteLength(arr[i]);let pos=0;const data=new Uint8Array(resultLength);for(let i=0;i<length;i++){let item=arr[i];item instanceof Uint8Array||(item="string"==typeof item?stringToBytes(item):new Uint8Array(item));const itemLength=item.byteLength;data.set(item,pos),pos+=itemLength}return data},exports.assert=function assert(cond,msg){cond||unreachable(msg)},exports.bytesToString=function bytesToString(bytes){"object"==typeof bytes&&null!==bytes&&void 0!==bytes.length||unreachable("Invalid argument for bytesToString");const length=bytes.length;if(length<8192)return String.fromCharCode.apply(null,bytes);const strBuf=[];for(let i=0;i<length;i+=8192){const chunkEnd=Math.min(i+8192,length),chunk=bytes.subarray(i,chunkEnd);strBuf.push(String.fromCharCode.apply(null,chunk))}return strBuf.join("")},exports.createPromiseCapability=function createPromiseCapability(){const capability=Object.create(null);let isSettled=!1;return Object.defineProperty(capability,"settled",{get:()=>isSettled}),capability.promise=new Promise((function(resolve,reject){capability.resolve=function(data){isSettled=!0,resolve(data)},capability.reject=function(reason){isSettled=!0,reject(reason)}})),capability},exports.createValidAbsoluteUrl=function createValidAbsoluteUrl(url,baseUrl=null,options=null){if(!url)return null;try{if(options&&"string"==typeof url){if(options.addDefaultProtocol&&url.startsWith("www.")){const dots=url.match(/\./g);dots&&dots.length>=2&&(url=`http://${url}`)}if(options.tryConvertEncoding)try{url=stringToUTF8String(url)}catch(ex){}}const absoluteUrl=baseUrl?new URL(url,baseUrl):new URL(url);if(function _isValidProtocol(url){if(!url)return!1;switch(url.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(absoluteUrl))return absoluteUrl}catch(ex){}return null},exports.escapeString=function escapeString(str){return str.replace(/([()\\\n\r])/g,(match=>"\n"===match?"\\n":"\r"===match?"\\r":`\\${match}`))},exports.getModificationDate=function getModificationDate(date=new Date){return[date.getUTCFullYear().toString(),(date.getUTCMonth()+1).toString().padStart(2,"0"),date.getUTCDate().toString().padStart(2,"0"),date.getUTCHours().toString().padStart(2,"0"),date.getUTCMinutes().toString().padStart(2,"0"),date.getUTCSeconds().toString().padStart(2,"0")].join("")},exports.getVerbosityLevel=function getVerbosityLevel(){return verbosity},exports.info=function info(msg){verbosity>=VerbosityLevel.INFOS&&console.log(`Info: ${msg}`)},exports.isArrayBuffer=function isArrayBuffer(v){return"object"==typeof v&&null!==v&&void 0!==v.byteLength},exports.isArrayEqual=function isArrayEqual(arr1,arr2){if(arr1.length!==arr2.length)return!1;for(let i=0,ii=arr1.length;i<ii;i++)if(arr1[i]!==arr2[i])return!1;return!0},exports.isAscii=function isAscii(str){return/^[\x00-\x7F]*$/.test(str)},exports.objectFromMap=function objectFromMap(map){const obj=Object.create(null);for(const[key,value]of map)obj[key]=value;return obj},exports.objectSize=function objectSize(obj){return Object.keys(obj).length},exports.setVerbosityLevel=function setVerbosityLevel(level){Number.isInteger(level)&&(verbosity=level)},exports.shadow=shadow,exports.string32=function string32(value){return String.fromCharCode(value>>24&255,value>>16&255,value>>8&255,255&value)},exports.stringToBytes=stringToBytes,exports.stringToPDFString=function stringToPDFString(str){if(str[0]>="ï"){let encoding;if("þ"===str[0]&&"ÿ"===str[1]?encoding="utf-16be":"ÿ"===str[0]&&"þ"===str[1]?encoding="utf-16le":"ï"===str[0]&&"»"===str[1]&&"¿"===str[2]&&(encoding="utf-8"),encoding)try{const decoder=new TextDecoder(encoding,{fatal:!0}),buffer=stringToBytes(str);return decoder.decode(buffer)}catch(ex){warn(`stringToPDFString: "${ex}".`)}}const strBuf=[];for(let i=0,ii=str.length;i<ii;i++){const code=PDFStringTranslateTable[str.charCodeAt(i)];strBuf.push(code?String.fromCharCode(code):str.charAt(i))}return strBuf.join("")},exports.stringToUTF16BEString=function stringToUTF16BEString(str){const buf=["þÿ"];for(let i=0,ii=str.length;i<ii;i++){const char=str.charCodeAt(i);buf.push(String.fromCharCode(char>>8&255),String.fromCharCode(255&char))}return buf.join("")},exports.stringToUTF8String=stringToUTF8String,exports.unreachable=unreachable,exports.utf8StringToString=function utf8StringToString(str){return unescape(encodeURIComponent(str))},exports.warn=warn,__w_pdfjs_require__(3);exports.IDENTITY_MATRIX=[1,0,0,1,0,0];exports.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0];exports.LINE_FACTOR=1.35;exports.LINE_DESCENT_FACTOR=.35;exports.RenderingIntentFlag={ANY:1,DISPLAY:2,PRINT:4,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,OPLIST:256};exports.AnnotationMode={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3};exports.AnnotationEditorPrefix="pdfjs_internal_editor_";exports.AnnotationEditorType={DISABLE:-1,NONE:0,FREETEXT:3,INK:15};exports.AnnotationEditorParamsType={FREETEXT_SIZE:1,FREETEXT_COLOR:2,FREETEXT_OPACITY:3,INK_COLOR:11,INK_THICKNESS:12,INK_OPACITY:13};exports.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048};exports.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4};exports.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3};exports.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26};exports.AnnotationStateModelType={MARKED:"Marked",REVIEW:"Review"};exports.AnnotationMarkedState={MARKED:"Marked",UNMARKED:"Unmarked"};exports.AnnotationReviewState={ACCEPTED:"Accepted",REJECTED:"Rejected",CANCELLED:"Cancelled",COMPLETED:"Completed",NONE:"None"};exports.AnnotationReplyType={GROUP:"Group",REPLY:"R"};exports.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512};exports.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864};exports.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5};exports.AnnotationActionEventType={E:"Mouse Enter",X:"Mouse Exit",D:"Mouse Down",U:"Mouse Up",Fo:"Focus",Bl:"Blur",PO:"PageOpen",PC:"PageClose",PV:"PageVisible",PI:"PageInvisible",K:"Keystroke",F:"Format",V:"Validate",C:"Calculate"};exports.DocumentActionEventType={WC:"WillClose",WS:"WillSave",DS:"DidSave",WP:"WillPrint",DP:"DidPrint"};exports.PageActionEventType={O:"PageOpen",C:"PageClose"};exports.StreamType={UNKNOWN:"UNKNOWN",FLATE:"FLATE",LZW:"LZW",DCT:"DCT",JPX:"JPX",JBIG:"JBIG",A85:"A85",AHX:"AHX",CCF:"CCF",RLX:"RLX"};exports.FontType={UNKNOWN:"UNKNOWN",TYPE1:"TYPE1",TYPE1STANDARD:"TYPE1STANDARD",TYPE1C:"TYPE1C",CIDFONTTYPE0:"CIDFONTTYPE0",CIDFONTTYPE0C:"CIDFONTTYPE0C",TRUETYPE:"TRUETYPE",CIDFONTTYPE2:"CIDFONTTYPE2",TYPE3:"TYPE3",OPENTYPE:"OPENTYPE",TYPE0:"TYPE0",MMTYPE1:"MMTYPE1"};const VerbosityLevel={ERRORS:0,WARNINGS:1,INFOS:5};exports.VerbosityLevel=VerbosityLevel;exports.CMapCompressionType={NONE:0,BINARY:1,STREAM:2};exports.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotations:78,endAnnotations:79,beginAnnotation:80,endAnnotation:81,paintJpegXObject:82,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91};exports.UNSUPPORTED_FEATURES={unknown:"unknown",forms:"forms",javaScript:"javaScript",signatures:"signatures",smask:"smask",shadingPattern:"shadingPattern",font:"font",errorTilingPattern:"errorTilingPattern",errorExtGState:"errorExtGState",errorXObject:"errorXObject",errorFontLoadType3:"errorFontLoadType3",errorFontState:"errorFontState",errorFontMissing:"errorFontMissing",errorFontTranslate:"errorFontTranslate",errorColorSpace:"errorColorSpace",errorOperatorList:"errorOperatorList",errorFontToUnicode:"errorFontToUnicode",errorFontLoadNative:"errorFontLoadNative",errorFontBuildPath:"errorFontBuildPath",errorFontGetPath:"errorFontGetPath",errorMarkedContent:"errorMarkedContent",errorContentSubStream:"errorContentSubStream"};exports.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let verbosity=VerbosityLevel.WARNINGS;function warn(msg){verbosity>=VerbosityLevel.WARNINGS&&console.log(`Warning: ${msg}`)}function unreachable(msg){throw new Error(msg)}function shadow(obj,prop,value){return Object.defineProperty(obj,prop,{value,enumerable:!0,configurable:!0,writable:!1}),value}const BaseException=function BaseExceptionClosure(){function BaseException(message,name){this.constructor===BaseException&&unreachable("Cannot initialize BaseException."),this.message=message,this.name=name}return BaseException.prototype=new Error,BaseException.constructor=BaseException,BaseException}();exports.BaseException=BaseException;exports.PasswordException=class PasswordException extends BaseException{constructor(msg,code){super(msg,"PasswordException"),this.code=code}};exports.UnknownErrorException=class UnknownErrorException extends BaseException{constructor(msg,details){super(msg,"UnknownErrorException"),this.details=details}};exports.InvalidPDFException=class InvalidPDFException extends BaseException{constructor(msg){super(msg,"InvalidPDFException")}};exports.MissingPDFException=class MissingPDFException extends BaseException{constructor(msg){super(msg,"MissingPDFException")}};exports.UnexpectedResponseException=class UnexpectedResponseException extends BaseException{constructor(msg,status){super(msg,"UnexpectedResponseException"),this.status=status}};exports.FormatError=class FormatError extends BaseException{constructor(msg){super(msg,"FormatError")}};function stringToBytes(str){"string"!=typeof str&&unreachable("Invalid argument for stringToBytes");const length=str.length,bytes=new Uint8Array(length);for(let i=0;i<length;++i)bytes[i]=255&str.charCodeAt(i);return bytes}function arrayByteLength(arr){return void 0!==arr.length?arr.length:void 0!==arr.byteLength?arr.byteLength:void unreachable("Invalid argument for arrayByteLength")}exports.AbortException=class AbortException extends BaseException{constructor(msg){super(msg,"AbortException")}};exports.FeatureTest=class FeatureTest{static get isLittleEndian(){return shadow(this,"isLittleEndian",function isLittleEndian(){const buffer8=new Uint8Array(4);return buffer8[0]=1,1===new Uint32Array(buffer8.buffer,0,1)[0]}())}static get isEvalSupported(){return shadow(this,"isEvalSupported",function isEvalSupported(){try{return new Function(""),!0}catch(e){return!1}}())}static get isOffscreenCanvasSupported(){return shadow(this,"isOffscreenCanvasSupported","undefined"!=typeof OffscreenCanvas)}};const hexNumbers=[...Array(256).keys()].map((n=>n.toString(16).padStart(2,"0")));class Util{static makeHexColor(r,g,b){return`#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`}static scaleMinMax(transform,minMax){let temp;transform[0]?(transform[0]<0&&(temp=minMax[0],minMax[0]=minMax[1],minMax[1]=temp),minMax[0]*=transform[0],minMax[1]*=transform[0],transform[3]<0&&(temp=minMax[2],minMax[2]=minMax[3],minMax[3]=temp),minMax[2]*=transform[3],minMax[3]*=transform[3]):(temp=minMax[0],minMax[0]=minMax[2],minMax[2]=temp,temp=minMax[1],minMax[1]=minMax[3],minMax[3]=temp,transform[1]<0&&(temp=minMax[2],minMax[2]=minMax[3],minMax[3]=temp),minMax[2]*=transform[1],minMax[3]*=transform[1],transform[2]<0&&(temp=minMax[0],minMax[0]=minMax[1],minMax[1]=temp),minMax[0]*=transform[2],minMax[1]*=transform[2]),minMax[0]+=transform[4],minMax[1]+=transform[4],minMax[2]+=transform[5],minMax[3]+=transform[5]}static transform(m1,m2){return[m1[0]*m2[0]+m1[2]*m2[1],m1[1]*m2[0]+m1[3]*m2[1],m1[0]*m2[2]+m1[2]*m2[3],m1[1]*m2[2]+m1[3]*m2[3],m1[0]*m2[4]+m1[2]*m2[5]+m1[4],m1[1]*m2[4]+m1[3]*m2[5]+m1[5]]}static applyTransform(p,m){return[p[0]*m[0]+p[1]*m[2]+m[4],p[0]*m[1]+p[1]*m[3]+m[5]]}static applyInverseTransform(p,m){const d=m[0]*m[3]-m[1]*m[2];return[(p[0]*m[3]-p[1]*m[2]+m[2]*m[5]-m[4]*m[3])/d,(-p[0]*m[1]+p[1]*m[0]+m[4]*m[1]-m[5]*m[0])/d]}static getAxialAlignedBoundingBox(r,m){const p1=Util.applyTransform(r,m),p2=Util.applyTransform(r.slice(2,4),m),p3=Util.applyTransform([r[0],r[3]],m),p4=Util.applyTransform([r[2],r[1]],m);return[Math.min(p1[0],p2[0],p3[0],p4[0]),Math.min(p1[1],p2[1],p3[1],p4[1]),Math.max(p1[0],p2[0],p3[0],p4[0]),Math.max(p1[1],p2[1],p3[1],p4[1])]}static inverseTransform(m){const d=m[0]*m[3]-m[1]*m[2];return[m[3]/d,-m[1]/d,-m[2]/d,m[0]/d,(m[2]*m[5]-m[4]*m[3])/d,(m[4]*m[1]-m[5]*m[0])/d]}static apply3dTransform(m,v){return[m[0]*v[0]+m[1]*v[1]+m[2]*v[2],m[3]*v[0]+m[4]*v[1]+m[5]*v[2],m[6]*v[0]+m[7]*v[1]+m[8]*v[2]]}static singularValueDecompose2dScale(m){const transpose=[m[0],m[2],m[1],m[3]],a=m[0]*transpose[0]+m[1]*transpose[2],b=m[0]*transpose[1]+m[1]*transpose[3],c=m[2]*transpose[0]+m[3]*transpose[2],d=m[2]*transpose[1]+m[3]*transpose[3],first=(a+d)/2,second=Math.sqrt((a+d)**2-4*(a*d-c*b))/2,sx=first+second||1,sy=first-second||1;return[Math.sqrt(sx),Math.sqrt(sy)]}static normalizeRect(rect){const r=rect.slice(0);return rect[0]>rect[2]&&(r[0]=rect[2],r[2]=rect[0]),rect[1]>rect[3]&&(r[1]=rect[3],r[3]=rect[1]),r}static intersect(rect1,rect2){const xLow=Math.max(Math.min(rect1[0],rect1[2]),Math.min(rect2[0],rect2[2])),xHigh=Math.min(Math.max(rect1[0],rect1[2]),Math.max(rect2[0],rect2[2]));if(xLow>xHigh)return null;const yLow=Math.max(Math.min(rect1[1],rect1[3]),Math.min(rect2[1],rect2[3])),yHigh=Math.min(Math.max(rect1[1],rect1[3]),Math.max(rect2[1],rect2[3]));return yLow>yHigh?null:[xLow,yLow,xHigh,yHigh]}static bezierBoundingBox(x0,y0,x1,y1,x2,y2,x3,y3){const tvalues=[],bounds=[[],[]];let a,b,c,t,t1,t2,b2ac,sqrtb2ac;for(let i=0;i<2;++i)if(0===i?(b=6*x0-12*x1+6*x2,a=-3*x0+9*x1-9*x2+3*x3,c=3*x1-3*x0):(b=6*y0-12*y1+6*y2,a=-3*y0+9*y1-9*y2+3*y3,c=3*y1-3*y0),Math.abs(a)<1e-12){if(Math.abs(b)<1e-12)continue;t=-c/b,0<t&&t<1&&tvalues.push(t)}else b2ac=b*b-4*c*a,sqrtb2ac=Math.sqrt(b2ac),b2ac<0||(t1=(-b+sqrtb2ac)/(2*a),0<t1&&t1<1&&tvalues.push(t1),t2=(-b-sqrtb2ac)/(2*a),0<t2&&t2<1&&tvalues.push(t2));let mt,j=tvalues.length;const jlen=j;for(;j--;)t=tvalues[j],mt=1-t,bounds[0][j]=mt*mt*mt*x0+3*mt*mt*t*x1+3*mt*t*t*x2+t*t*t*x3,bounds[1][j]=mt*mt*mt*y0+3*mt*mt*t*y1+3*mt*t*t*y2+t*t*t*y3;return bounds[0][jlen]=x0,bounds[1][jlen]=y0,bounds[0][jlen+1]=x3,bounds[1][jlen+1]=y3,bounds[0].length=bounds[1].length=jlen+2,[Math.min(...bounds[0]),Math.min(...bounds[1]),Math.max(...bounds[0]),Math.max(...bounds[1])]}}exports.Util=Util;const PDFStringTranslateTable=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function stringToUTF8String(str){return decodeURIComponent(escape(str))}},(__unused_webpack_module,__unused_webpack_exports,__w_pdfjs_require__)=>{__w_pdfjs_require__(4)},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isNodeJS=void 0;const isNodeJS=!("object"!=typeof process||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&"browser"!==process.type);exports.isNodeJS=isNodeJS},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RefSetCache=exports.RefSet=exports.Ref=exports.Name=exports.EOF=exports.Dict=exports.Cmd=exports.CIRCULAR_REF=void 0,exports.clearPrimitiveCaches=function clearPrimitiveCaches(){Cmd._clearCache(),Name._clearCache(),Ref._clearCache()},exports.isCmd=function isCmd(v,cmd){return v instanceof Cmd&&(void 0===cmd||v.cmd===cmd)},exports.isDict=function isDict(v,type){return v instanceof Dict&&(void 0===type||isName(v.get("Type"),type))},exports.isName=isName,exports.isRefsEqual=function isRefsEqual(v1,v2){return v1.num===v2.num&&v1.gen===v2.gen};var _util=__w_pdfjs_require__(2);const CIRCULAR_REF=Symbol("CIRCULAR_REF");exports.CIRCULAR_REF=CIRCULAR_REF;const EOF=Symbol("EOF");exports.EOF=EOF;const Name=function NameClosure(){let nameCache=Object.create(null);class Name{constructor(name){this.name=name}static get(name){return nameCache[name]||(nameCache[name]=new Name(name))}static _clearCache(){nameCache=Object.create(null)}}return Name}();exports.Name=Name;const Cmd=function CmdClosure(){let cmdCache=Object.create(null);class Cmd{constructor(cmd){this.cmd=cmd}static get(cmd){return cmdCache[cmd]||(cmdCache[cmd]=new Cmd(cmd))}static _clearCache(){cmdCache=Object.create(null)}}return Cmd}();exports.Cmd=Cmd;const nonSerializable=function nonSerializableClosure(){return nonSerializable};class Dict{constructor(xref=null){this._map=Object.create(null),this.xref=xref,this.objId=null,this.suppressEncryption=!1,this.__nonSerializable__=nonSerializable}assignXref(newXref){this.xref=newXref}get size(){return Object.keys(this._map).length}get(key1,key2,key3){let value=this._map[key1];return void 0===value&&void 0!==key2&&(value=this._map[key2],void 0===value&&void 0!==key3&&(value=this._map[key3])),value instanceof Ref&&this.xref?this.xref.fetch(value,this.suppressEncryption):value}async getAsync(key1,key2,key3){let value=this._map[key1];return void 0===value&&void 0!==key2&&(value=this._map[key2],void 0===value&&void 0!==key3&&(value=this._map[key3])),value instanceof Ref&&this.xref?this.xref.fetchAsync(value,this.suppressEncryption):value}getArray(key1,key2,key3){let value=this._map[key1];if(void 0===value&&void 0!==key2&&(value=this._map[key2],void 0===value&&void 0!==key3&&(value=this._map[key3])),value instanceof Ref&&this.xref&&(value=this.xref.fetch(value,this.suppressEncryption)),Array.isArray(value)){value=value.slice();for(let i=0,ii=value.length;i<ii;i++)value[i]instanceof Ref&&this.xref&&(value[i]=this.xref.fetch(value[i],this.suppressEncryption))}return value}getRaw(key){return this._map[key]}getKeys(){return Object.keys(this._map)}getRawValues(){return Object.values(this._map)}set(key,value){this._map[key]=value}has(key){return void 0!==this._map[key]}forEach(callback){for(const key in this._map)callback(key,this.get(key))}static get empty(){const emptyDict=new Dict(null);return emptyDict.set=(key,value)=>{(0,_util.unreachable)("Should not call `set` on the empty dictionary.")},(0,_util.shadow)(this,"empty",emptyDict)}static merge({xref,dictArray,mergeSubDicts=!1}){const mergedDict=new Dict(xref),properties=new Map;for(const dict of dictArray)if(dict instanceof Dict)for(const[key,value]of Object.entries(dict._map)){let property=properties.get(key);if(void 0===property)property=[],properties.set(key,property);else if(!(mergeSubDicts&&value instanceof Dict))continue;property.push(value)}for(const[name,values]of properties){if(1===values.length||!(values[0]instanceof Dict)){mergedDict._map[name]=values[0];continue}const subDict=new Dict(xref);for(const dict of values)for(const[key,value]of Object.entries(dict._map))void 0===subDict._map[key]&&(subDict._map[key]=value);subDict.size>0&&(mergedDict._map[name]=subDict)}return properties.clear(),mergedDict.size>0?mergedDict:Dict.empty}}exports.Dict=Dict;const Ref=function RefClosure(){let refCache=Object.create(null);class Ref{constructor(num,gen){this.num=num,this.gen=gen}toString(){return 0===this.gen?`${this.num}R`:`${this.num}R${this.gen}`}static get(num,gen){const key=0===gen?`${num}R`:`${num}R${gen}`;return refCache[key]||(refCache[key]=new Ref(num,gen))}static _clearCache(){refCache=Object.create(null)}}return Ref}();exports.Ref=Ref;class RefSet{constructor(parent=null){this._set=new Set(parent&&parent._set)}has(ref){return this._set.has(ref.toString())}put(ref){this._set.add(ref.toString())}remove(ref){this._set.delete(ref.toString())}[Symbol.iterator](){return this._set.values()}clear(){this._set.clear()}}exports.RefSet=RefSet;class RefSetCache{constructor(){this._map=new Map}get size(){return this._map.size}get(ref){return this._map.get(ref.toString())}has(ref){return this._map.has(ref.toString())}put(ref,obj){this._map.set(ref.toString(),obj)}putAlias(ref,aliasRef){this._map.set(ref.toString(),this.get(aliasRef))}[Symbol.iterator](){return this._map.values()}clear(){this._map.clear()}}function isName(v,name){return v instanceof Name&&(void 0===name||v.name===name)}exports.RefSetCache=RefSetCache},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XRefParseException=exports.XRefEntryException=exports.ParserEOFException=exports.MissingDataException=exports.DocStats=void 0,exports.collectActions=function collectActions(xref,dict,eventType){const actions=Object.create(null),additionalActionsDicts=getInheritableProperty({dict,key:"AA",stopWhenFound:!1});if(additionalActionsDicts)for(let i=additionalActionsDicts.length-1;i>=0;i--){const additionalActions=additionalActionsDicts[i];if(additionalActions instanceof _primitives.Dict)for(const key of additionalActions.getKeys()){const action=eventType[key];if(!action)continue;const actionDict=additionalActions.getRaw(key),parents=new _primitives.RefSet,list=[];_collectJS(actionDict,xref,list,parents),list.length>0&&(actions[action]=list)}}if(dict.has("A")){const actionDict=dict.get("A"),parents=new _primitives.RefSet,list=[];_collectJS(actionDict,xref,list,parents),list.length>0&&(actions.Action=list)}return(0,_util.objectSize)(actions)>0?actions:null},exports.encodeToXmlString=function encodeToXmlString(str){const buffer=[];let start=0;for(let i=0,ii=str.length;i<ii;i++){const char=str.codePointAt(i);if(32<=char&&char<=126){const entity=XMLEntities[char];entity&&(start<i&&buffer.push(str.substring(start,i)),buffer.push(entity),start=i+1)}else start<i&&buffer.push(str.substring(start,i)),buffer.push(`&#x${char.toString(16).toUpperCase()};`),char>55295&&(char<57344||char>65533)&&i++,start=i+1}if(0===buffer.length)return str;start<str.length&&buffer.push(str.substring(start,str.length));return buffer.join("")},exports.escapePDFName=function escapePDFName(str){const buffer=[];let start=0;for(let i=0,ii=str.length;i<ii;i++){const char=str.charCodeAt(i);(char<33||char>126||35===char||40===char||41===char||60===char||62===char||91===char||93===char||123===char||125===char||47===char||37===char)&&(start<i&&buffer.push(str.substring(start,i)),buffer.push(`#${char.toString(16)}`),start=i+1)}if(0===buffer.length)return str;start<str.length&&buffer.push(str.substring(start,str.length));return buffer.join("")},exports.getArrayLookupTableFactory=function getArrayLookupTableFactory(initializer){let lookup;return function(){if(initializer){let arr=initializer();initializer=null,lookup=Object.create(null);for(let i=0,ii=arr.length;i<ii;i+=2)lookup[arr[i]]=arr[i+1];arr=null}return lookup}},exports.getInheritableProperty=getInheritableProperty,exports.getLookupTableFactory=function getLookupTableFactory(initializer){let lookup;return function(){return initializer&&(lookup=Object.create(null),initializer(lookup),initializer=null),lookup}},exports.getNewAnnotationsMap=function getNewAnnotationsMap(annotationStorage){if(!annotationStorage)return null;const newAnnotationsByPage=new Map;for(const[key,value]of annotationStorage){if(!key.startsWith(_util.AnnotationEditorPrefix))continue;let annotations=newAnnotationsByPage.get(value.pageIndex);annotations||(annotations=[],newAnnotationsByPage.set(value.pageIndex,annotations)),annotations.push(value)}return newAnnotationsByPage.size>0?newAnnotationsByPage:null},exports.isWhiteSpace=function isWhiteSpace(ch){return 32===ch||9===ch||13===ch||10===ch},exports.log2=function log2(x){if(x<=0)return 0;return Math.ceil(Math.log2(x))},exports.numberToString=function numberToString(value){if(Number.isInteger(value))return value.toString();const roundedValue=Math.round(100*value);if(roundedValue%100==0)return(roundedValue/100).toString();if(roundedValue%10==0)return value.toFixed(1);return value.toFixed(2)},exports.parseXFAPath=function parseXFAPath(path){const positionPattern=/(.+)\[(\d+)\]$/;return path.split(".").map((component=>{const m=component.match(positionPattern);return m?{name:m[1],pos:parseInt(m[2],10)}:{name:component,pos:0}}))},exports.readInt8=function readInt8(data,offset){return data[offset]<<24>>24},exports.readUint16=function readUint16(data,offset){return data[offset]<<8|data[offset+1]},exports.readUint32=function readUint32(data,offset){return(data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3])>>>0},exports.recoverJsURL=function recoverJsURL(str){const jsUrl=new RegExp("^\\s*("+["app.launchURL","window.open","xfa.host.gotoURL"].join("|").split(".").join("\\.")+")\\((?:'|\")([^'\"]*)(?:'|\")(?:,\\s*(\\w+)\\)|\\))","i").exec(str);if(jsUrl&&jsUrl[2]){const url=jsUrl[2];let newWindow=!1;return"true"===jsUrl[3]&&"app.launchURL"===jsUrl[1]&&(newWindow=!0),{url,newWindow}}return null},exports.toRomanNumerals=function toRomanNumerals(number,lowerCase=!1){(0,_util.assert)(Number.isInteger(number)&&number>0,"The number should be a positive integer.");const romanBuf=[];let pos;for(;number>=1e3;)number-=1e3,romanBuf.push("M");pos=number/100|0,number%=100,romanBuf.push(ROMAN_NUMBER_MAP[pos]),pos=number/10|0,number%=10,romanBuf.push(ROMAN_NUMBER_MAP[10+pos]),romanBuf.push(ROMAN_NUMBER_MAP[20+number]);const romanStr=romanBuf.join("");return lowerCase?romanStr.toLowerCase():romanStr},exports.validateCSSFont=function validateCSSFont(cssFontInfo){const CSS_FONT_WEIGHT_VALUES=new Set(["100","200","300","400","500","600","700","800","900","1000","normal","bold","bolder","lighter"]),{fontFamily,fontWeight,italicAngle}=cssFontInfo;if(/^".*"$/.test(fontFamily)){if(/[^\\]"/.test(fontFamily.slice(1,fontFamily.length-1)))return(0,_util.warn)(`XFA - FontFamily contains some unescaped ": ${fontFamily}.`),!1}else if(/^'.*'$/.test(fontFamily)){if(/[^\\]'/.test(fontFamily.slice(1,fontFamily.length-1)))return(0,_util.warn)(`XFA - FontFamily contains some unescaped ': ${fontFamily}.`),!1}else for(const ident of fontFamily.split(/[ \t]+/))if(/^(\d|(-(\d|-)))/.test(ident)||!/^[\w-\\]+$/.test(ident))return(0,_util.warn)(`XFA - FontFamily contains some invalid <custom-ident>: ${fontFamily}.`),!1;const weight=fontWeight?fontWeight.toString():"";cssFontInfo.fontWeight=CSS_FONT_WEIGHT_VALUES.has(weight)?weight:"400";const angle=parseFloat(italicAngle);return cssFontInfo.italicAngle=isNaN(angle)||angle<-90||angle>90?"14":italicAngle.toString(),!0};var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_base_stream=__w_pdfjs_require__(7);class MissingDataException extends _util.BaseException{constructor(begin,end){super(`Missing data [${begin}, ${end})`,"MissingDataException"),this.begin=begin,this.end=end}}exports.MissingDataException=MissingDataException;class ParserEOFException extends _util.BaseException{constructor(msg){super(msg,"ParserEOFException")}}exports.ParserEOFException=ParserEOFException;class XRefEntryException extends _util.BaseException{constructor(msg){super(msg,"XRefEntryException")}}exports.XRefEntryException=XRefEntryException;class XRefParseException extends _util.BaseException{constructor(msg){super(msg,"XRefParseException")}}exports.XRefParseException=XRefParseException;function getInheritableProperty({dict,key,getArray=!1,stopWhenFound=!0}){let values;const visited=new _primitives.RefSet;for(;dict instanceof _primitives.Dict&&(!dict.objId||!visited.has(dict.objId));){dict.objId&&visited.put(dict.objId);const value=getArray?dict.getArray(key):dict.get(key);if(void 0!==value){if(stopWhenFound)return value;values||(values=[]),values.push(value)}dict=dict.get("Parent")}return values}exports.DocStats=class DocStats{constructor(handler){this._handler=handler,this._streamTypes=new Set,this._fontTypes=new Set}_send(){const streamTypes=Object.create(null),fontTypes=Object.create(null);for(const type of this._streamTypes)streamTypes[type]=!0;for(const type of this._fontTypes)fontTypes[type]=!0;this._handler.send("DocStats",{streamTypes,fontTypes})}addStreamType(type){this._streamTypes.has(type)||(this._streamTypes.add(type),this._send())}addFontType(type){this._fontTypes.has(type)||(this._fontTypes.add(type),this._send())}};const ROMAN_NUMBER_MAP=["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM","","X","XX","XXX","XL","L","LX","LXX","LXXX","XC","","I","II","III","IV","V","VI","VII","VIII","IX"];function _collectJS(entry,xref,list,parents){if(!entry)return;let parent=null;if(entry instanceof _primitives.Ref){if(parents.has(entry))return;parent=entry,parents.put(parent),entry=xref.fetch(entry)}if(Array.isArray(entry))for(const element of entry)_collectJS(element,xref,list,parents);else if(entry instanceof _primitives.Dict){if((0,_primitives.isName)(entry.get("S"),"JavaScript")){const js=entry.get("JS");let code;js instanceof _base_stream.BaseStream?code=js.getString():"string"==typeof js&&(code=js),code=code&&(0,_util.stringToPDFString)(code).replace(/\u0000/g,""),code&&list.push(code)}_collectJS(entry.getRaw("Next"),xref,list,parents)}parent&&parents.remove(parent)}const XMLEntities={60:"&lt;",62:"&gt;",38:"&amp;",34:"&quot;",39:"&apos;"}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseStream=void 0;var _util=__w_pdfjs_require__(2);class BaseStream{constructor(){this.constructor===BaseStream&&(0,_util.unreachable)("Cannot initialize BaseStream.")}get length(){(0,_util.unreachable)("Abstract getter `length` accessed")}get isEmpty(){(0,_util.unreachable)("Abstract getter `isEmpty` accessed")}get isDataLoaded(){return(0,_util.shadow)(this,"isDataLoaded",!0)}getByte(){(0,_util.unreachable)("Abstract method `getByte` called")}getBytes(length){(0,_util.unreachable)("Abstract method `getBytes` called")}peekByte(){const peekedByte=this.getByte();return-1!==peekedByte&&this.pos--,peekedByte}peekBytes(length){const bytes=this.getBytes(length);return this.pos-=bytes.length,bytes}getUint16(){const b0=this.getByte(),b1=this.getByte();return-1===b0||-1===b1?-1:(b0<<8)+b1}getInt32(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}getByteRange(begin,end){(0,_util.unreachable)("Abstract method `getByteRange` called")}getString(length){return(0,_util.bytesToString)(this.getBytes(length))}skip(n){this.pos+=n||1}reset(){(0,_util.unreachable)("Abstract method `reset` called")}moveStart(){(0,_util.unreachable)("Abstract method `moveStart` called")}makeSubStream(start,length,dict=null){(0,_util.unreachable)("Abstract method `makeSubStream` called")}getBaseStreams(){return null}}exports.BaseStream=BaseStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NetworkPdfManager=exports.LocalPdfManager=void 0;var _util=__w_pdfjs_require__(2),_chunked_stream=__w_pdfjs_require__(9),_core_utils=__w_pdfjs_require__(6),_document=__w_pdfjs_require__(11),_stream=__w_pdfjs_require__(10);function parseDocBaseUrl(url){if(url){const absoluteUrl=(0,_util.createValidAbsoluteUrl)(url);if(absoluteUrl)return absoluteUrl.href;(0,_util.warn)(`Invalid absolute docBaseUrl: "${url}".`)}return null}class BasePdfManager{constructor(){this.constructor===BasePdfManager&&(0,_util.unreachable)("Cannot initialize BasePdfManager.")}get docId(){return this._docId}get password(){return this._password}get docBaseUrl(){const catalog=this.pdfDocument.catalog;return(0,_util.shadow)(this,"docBaseUrl",catalog.baseUrl||this._docBaseUrl)}onLoadedStream(){(0,_util.unreachable)("Abstract method `onLoadedStream` called")}ensureDoc(prop,args){return this.ensure(this.pdfDocument,prop,args)}ensureXRef(prop,args){return this.ensure(this.pdfDocument.xref,prop,args)}ensureCatalog(prop,args){return this.ensure(this.pdfDocument.catalog,prop,args)}getPage(pageIndex){return this.pdfDocument.getPage(pageIndex)}fontFallback(id,handler){return this.pdfDocument.fontFallback(id,handler)}loadXfaFonts(handler,task){return this.pdfDocument.loadXfaFonts(handler,task)}loadXfaImages(){return this.pdfDocument.loadXfaImages()}serializeXfaData(annotationStorage){return this.pdfDocument.serializeXfaData(annotationStorage)}cleanup(manuallyTriggered=!1){return this.pdfDocument.cleanup(manuallyTriggered)}async ensure(obj,prop,args){(0,_util.unreachable)("Abstract method `ensure` called")}requestRange(begin,end){(0,_util.unreachable)("Abstract method `requestRange` called")}requestLoadedStream(){(0,_util.unreachable)("Abstract method `requestLoadedStream` called")}sendProgressiveData(chunk){(0,_util.unreachable)("Abstract method `sendProgressiveData` called")}updatePassword(password){this._password=password}terminate(reason){(0,_util.unreachable)("Abstract method `terminate` called")}}exports.LocalPdfManager=class LocalPdfManager extends BasePdfManager{constructor(docId,data,password,msgHandler,evaluatorOptions,enableXfa,docBaseUrl){super(),this._docId=docId,this._password=password,this._docBaseUrl=parseDocBaseUrl(docBaseUrl),this.msgHandler=msgHandler,this.evaluatorOptions=evaluatorOptions,this.enableXfa=enableXfa;const stream=new _stream.Stream(data);this.pdfDocument=new _document.PDFDocument(this,stream),this._loadedStreamPromise=Promise.resolve(stream)}async ensure(obj,prop,args){const value=obj[prop];return"function"==typeof value?value.apply(obj,args):value}requestRange(begin,end){return Promise.resolve()}requestLoadedStream(){}onLoadedStream(){return this._loadedStreamPromise}terminate(reason){}};exports.NetworkPdfManager=class NetworkPdfManager extends BasePdfManager{constructor(docId,pdfNetworkStream,args,evaluatorOptions,enableXfa,docBaseUrl){super(),this._docId=docId,this._password=args.password,this._docBaseUrl=parseDocBaseUrl(docBaseUrl),this.msgHandler=args.msgHandler,this.evaluatorOptions=evaluatorOptions,this.enableXfa=enableXfa,this.streamManager=new _chunked_stream.ChunkedStreamManager(pdfNetworkStream,{msgHandler:args.msgHandler,length:args.length,disableAutoFetch:args.disableAutoFetch,rangeChunkSize:args.rangeChunkSize}),this.pdfDocument=new _document.PDFDocument(this,this.streamManager.getStream())}async ensure(obj,prop,args){try{const value=obj[prop];return"function"==typeof value?value.apply(obj,args):value}catch(ex){if(!(ex instanceof _core_utils.MissingDataException))throw ex;return await this.requestRange(ex.begin,ex.end),this.ensure(obj,prop,args)}}requestRange(begin,end){return this.streamManager.requestRange(begin,end)}requestLoadedStream(){this.streamManager.requestAllChunks()}sendProgressiveData(chunk){this.streamManager.onReceiveData({chunk})}onLoadedStream(){return this.streamManager.onLoadedStream()}terminate(reason){this.streamManager.abort(reason)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChunkedStreamManager=exports.ChunkedStream=void 0;var _util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_stream=__w_pdfjs_require__(10);class ChunkedStream extends _stream.Stream{constructor(length,chunkSize,manager){super(new Uint8Array(length),0,length,null),this.chunkSize=chunkSize,this._loadedChunks=new Set,this.numChunks=Math.ceil(length/chunkSize),this.manager=manager,this.progressiveDataLength=0,this.lastSuccessfulEnsureByteChunk=-1}getMissingChunks(){const chunks=[];for(let chunk=0,n=this.numChunks;chunk<n;++chunk)this._loadedChunks.has(chunk)||chunks.push(chunk);return chunks}get numChunksLoaded(){return this._loadedChunks.size}get isDataLoaded(){return this.numChunksLoaded===this.numChunks}onReceiveData(begin,chunk){const chunkSize=this.chunkSize;if(begin%chunkSize!=0)throw new Error(`Bad begin offset: ${begin}`);const end=begin+chunk.byteLength;if(end%chunkSize!=0&&end!==this.bytes.length)throw new Error(`Bad end offset: ${end}`);this.bytes.set(new Uint8Array(chunk),begin);const beginChunk=Math.floor(begin/chunkSize),endChunk=Math.floor((end-1)/chunkSize)+1;for(let curChunk=beginChunk;curChunk<endChunk;++curChunk)this._loadedChunks.add(curChunk)}onReceiveProgressiveData(data){let position=this.progressiveDataLength;const beginChunk=Math.floor(position/this.chunkSize);this.bytes.set(new Uint8Array(data),position),position+=data.byteLength,this.progressiveDataLength=position;const endChunk=position>=this.end?this.numChunks:Math.floor(position/this.chunkSize);for(let curChunk=beginChunk;curChunk<endChunk;++curChunk)this._loadedChunks.add(curChunk)}ensureByte(pos){if(pos<this.progressiveDataLength)return;const chunk=Math.floor(pos/this.chunkSize);if(!(chunk>this.numChunks)&&chunk!==this.lastSuccessfulEnsureByteChunk){if(!this._loadedChunks.has(chunk))throw new _core_utils.MissingDataException(pos,pos+1);this.lastSuccessfulEnsureByteChunk=chunk}}ensureRange(begin,end){if(begin>=end)return;if(end<=this.progressiveDataLength)return;const beginChunk=Math.floor(begin/this.chunkSize);if(beginChunk>this.numChunks)return;const endChunk=Math.min(Math.floor((end-1)/this.chunkSize)+1,this.numChunks);for(let chunk=beginChunk;chunk<endChunk;++chunk)if(!this._loadedChunks.has(chunk))throw new _core_utils.MissingDataException(begin,end)}nextEmptyChunk(beginChunk){const numChunks=this.numChunks;for(let i=0;i<numChunks;++i){const chunk=(beginChunk+i)%numChunks;if(!this._loadedChunks.has(chunk))return chunk}return null}hasChunk(chunk){return this._loadedChunks.has(chunk)}getByte(){const pos=this.pos;return pos>=this.end?-1:(pos>=this.progressiveDataLength&&this.ensureByte(pos),this.bytes[this.pos++])}getBytes(length){const bytes=this.bytes,pos=this.pos,strEnd=this.end;if(!length)return strEnd>this.progressiveDataLength&&this.ensureRange(pos,strEnd),bytes.subarray(pos,strEnd);let end=pos+length;return end>strEnd&&(end=strEnd),end>this.progressiveDataLength&&this.ensureRange(pos,end),this.pos=end,bytes.subarray(pos,end)}getByteRange(begin,end){return begin<0&&(begin=0),end>this.end&&(end=this.end),end>this.progressiveDataLength&&this.ensureRange(begin,end),this.bytes.subarray(begin,end)}makeSubStream(start,length,dict=null){function ChunkedStreamSubstream(){}length?start+length>this.progressiveDataLength&&this.ensureRange(start,start+length):start>=this.progressiveDataLength&&this.ensureByte(start),ChunkedStreamSubstream.prototype=Object.create(this),ChunkedStreamSubstream.prototype.getMissingChunks=function(){const chunkSize=this.chunkSize,beginChunk=Math.floor(this.start/chunkSize),endChunk=Math.floor((this.end-1)/chunkSize)+1,missingChunks=[];for(let chunk=beginChunk;chunk<endChunk;++chunk)this._loadedChunks.has(chunk)||missingChunks.push(chunk);return missingChunks},Object.defineProperty(ChunkedStreamSubstream.prototype,"isDataLoaded",{get(){return this.numChunksLoaded===this.numChunks||0===this.getMissingChunks().length},configurable:!0});const subStream=new ChunkedStreamSubstream;return subStream.pos=subStream.start=start,subStream.end=start+length||this.end,subStream.dict=dict,subStream}getBaseStreams(){return[this]}}exports.ChunkedStream=ChunkedStream;exports.ChunkedStreamManager=class ChunkedStreamManager{constructor(pdfNetworkStream,args){this.length=args.length,this.chunkSize=args.rangeChunkSize,this.stream=new ChunkedStream(this.length,this.chunkSize,this),this.pdfNetworkStream=pdfNetworkStream,this.disableAutoFetch=args.disableAutoFetch,this.msgHandler=args.msgHandler,this.currRequestId=0,this._chunksNeededByRequest=new Map,this._requestsByChunk=new Map,this._promisesByRequest=new Map,this.progressiveDataLength=0,this.aborted=!1,this._loadedStreamCapability=(0,_util.createPromiseCapability)()}onLoadedStream(){return this._loadedStreamCapability.promise}sendRequest(begin,end){const rangeReader=this.pdfNetworkStream.getRangeReader(begin,end);rangeReader.isStreamingSupported||(rangeReader.onProgress=this.onProgress.bind(this));let chunks=[],loaded=0;return new Promise(((resolve,reject)=>{const readChunk=chunk=>{try{if(!chunk.done){const data=chunk.value;return chunks.push(data),loaded+=(0,_util.arrayByteLength)(data),rangeReader.isStreamingSupported&&this.onProgress({loaded}),void rangeReader.read().then(readChunk,reject)}const chunkData=(0,_util.arraysToBytes)(chunks);chunks=null,resolve(chunkData)}catch(e){reject(e)}};rangeReader.read().then(readChunk,reject)})).then((data=>{this.aborted||this.onReceiveData({chunk:data,begin})}))}requestAllChunks(){const missingChunks=this.stream.getMissingChunks();return this._requestChunks(missingChunks),this._loadedStreamCapability.promise}_requestChunks(chunks){const requestId=this.currRequestId++,chunksNeeded=new Set;this._chunksNeededByRequest.set(requestId,chunksNeeded);for(const chunk of chunks)this.stream.hasChunk(chunk)||chunksNeeded.add(chunk);if(0===chunksNeeded.size)return Promise.resolve();const capability=(0,_util.createPromiseCapability)();this._promisesByRequest.set(requestId,capability);const chunksToRequest=[];for(const chunk of chunksNeeded){let requestIds=this._requestsByChunk.get(chunk);requestIds||(requestIds=[],this._requestsByChunk.set(chunk,requestIds),chunksToRequest.push(chunk)),requestIds.push(requestId)}if(chunksToRequest.length>0){const groupedChunksToRequest=this.groupChunks(chunksToRequest);for(const groupedChunk of groupedChunksToRequest){const begin=groupedChunk.beginChunk*this.chunkSize,end=Math.min(groupedChunk.endChunk*this.chunkSize,this.length);this.sendRequest(begin,end).catch(capability.reject)}}return capability.promise.catch((reason=>{if(!this.aborted)throw reason}))}getStream(){return this.stream}requestRange(begin,end){end=Math.min(end,this.length);const beginChunk=this.getBeginChunk(begin),endChunk=this.getEndChunk(end),chunks=[];for(let chunk=beginChunk;chunk<endChunk;++chunk)chunks.push(chunk);return this._requestChunks(chunks)}requestRanges(ranges=[]){const chunksToRequest=[];for(const range of ranges){const beginChunk=this.getBeginChunk(range.begin),endChunk=this.getEndChunk(range.end);for(let chunk=beginChunk;chunk<endChunk;++chunk)chunksToRequest.includes(chunk)||chunksToRequest.push(chunk)}return chunksToRequest.sort((function(a,b){return a-b})),this._requestChunks(chunksToRequest)}groupChunks(chunks){const groupedChunks=[];let beginChunk=-1,prevChunk=-1;for(let i=0,ii=chunks.length;i<ii;++i){const chunk=chunks[i];beginChunk<0&&(beginChunk=chunk),prevChunk>=0&&prevChunk+1!==chunk&&(groupedChunks.push({beginChunk,endChunk:prevChunk+1}),beginChunk=chunk),i+1===chunks.length&&groupedChunks.push({beginChunk,endChunk:chunk+1}),prevChunk=chunk}return groupedChunks}onProgress(args){this.msgHandler.send("DocProgress",{loaded:this.stream.numChunksLoaded*this.chunkSize+args.loaded,total:this.length})}onReceiveData(args){const chunk=args.chunk,isProgressive=void 0===args.begin,begin=isProgressive?this.progressiveDataLength:args.begin,end=begin+chunk.byteLength,beginChunk=Math.floor(begin/this.chunkSize),endChunk=end<this.length?Math.floor(end/this.chunkSize):Math.ceil(end/this.chunkSize);isProgressive?(this.stream.onReceiveProgressiveData(chunk),this.progressiveDataLength=end):this.stream.onReceiveData(begin,chunk),this.stream.isDataLoaded&&this._loadedStreamCapability.resolve(this.stream);const loadedRequests=[];for(let curChunk=beginChunk;curChunk<endChunk;++curChunk){const requestIds=this._requestsByChunk.get(curChunk);if(requestIds){this._requestsByChunk.delete(curChunk);for(const requestId of requestIds){const chunksNeeded=this._chunksNeededByRequest.get(requestId);chunksNeeded.has(curChunk)&&chunksNeeded.delete(curChunk),chunksNeeded.size>0||loadedRequests.push(requestId)}}}if(!this.disableAutoFetch&&0===this._requestsByChunk.size){let nextEmptyChunk;if(1===this.stream.numChunksLoaded){const lastChunk=this.stream.numChunks-1;this.stream.hasChunk(lastChunk)||(nextEmptyChunk=lastChunk)}else nextEmptyChunk=this.stream.nextEmptyChunk(endChunk);Number.isInteger(nextEmptyChunk)&&this._requestChunks([nextEmptyChunk])}for(const requestId of loadedRequests){const capability=this._promisesByRequest.get(requestId);this._promisesByRequest.delete(requestId),capability.resolve()}this.msgHandler.send("DocProgress",{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length})}onError(err){this._loadedStreamCapability.reject(err)}getBeginChunk(begin){return Math.floor(begin/this.chunkSize)}getEndChunk(end){return Math.floor((end-1)/this.chunkSize)+1}abort(reason){this.aborted=!0,this.pdfNetworkStream&&this.pdfNetworkStream.cancelAllRequests(reason);for(const capability of this._promisesByRequest.values())capability.reject(reason)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StringStream=exports.Stream=exports.NullStream=void 0;var _base_stream=__w_pdfjs_require__(7),_util=__w_pdfjs_require__(2);class Stream extends _base_stream.BaseStream{constructor(arrayBuffer,start,length,dict){super(),this.bytes=arrayBuffer instanceof Uint8Array?arrayBuffer:new Uint8Array(arrayBuffer),this.start=start||0,this.pos=this.start,this.end=start+length||this.bytes.length,this.dict=dict}get length(){return this.end-this.start}get isEmpty(){return 0===this.length}getByte(){return this.pos>=this.end?-1:this.bytes[this.pos++]}getBytes(length){const bytes=this.bytes,pos=this.pos,strEnd=this.end;if(!length)return bytes.subarray(pos,strEnd);let end=pos+length;return end>strEnd&&(end=strEnd),this.pos=end,bytes.subarray(pos,end)}getByteRange(begin,end){return begin<0&&(begin=0),end>this.end&&(end=this.end),this.bytes.subarray(begin,end)}reset(){this.pos=this.start}moveStart(){this.start=this.pos}makeSubStream(start,length,dict=null){return new Stream(this.bytes.buffer,start,length,dict)}}exports.Stream=Stream;exports.StringStream=class StringStream extends Stream{constructor(str){super((0,_util.stringToBytes)(str))}};exports.NullStream=class NullStream extends Stream{constructor(){super(new Uint8Array(0))}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Page=exports.PDFDocument=void 0;var _annotation=__w_pdfjs_require__(12),_util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_primitives=__w_pdfjs_require__(5),_xfa_fonts=__w_pdfjs_require__(51),_base_stream=__w_pdfjs_require__(7),_crypto=__w_pdfjs_require__(67),_catalog=__w_pdfjs_require__(69),_cleanup_helper=__w_pdfjs_require__(71),_dataset_reader=__w_pdfjs_require__(100),_parser=__w_pdfjs_require__(17),_stream=__w_pdfjs_require__(10),_object_loader=__w_pdfjs_require__(75),_operator_list=__w_pdfjs_require__(62),_evaluator=__w_pdfjs_require__(15),_decode_stream=__w_pdfjs_require__(19),_struct_tree=__w_pdfjs_require__(74),_writer=__w_pdfjs_require__(65),_factory=__w_pdfjs_require__(76),_xref=__w_pdfjs_require__(101);const LETTER_SIZE_MEDIABOX=[0,0,612,792];class Page{constructor({pdfManager,xref,pageIndex,pageDict,ref,globalIdFactory,fontCache,builtInCMapCache,standardFontDataCache,globalImageCache,nonBlendModesSet,xfaFactory}){this.pdfManager=pdfManager,this.pageIndex=pageIndex,this.pageDict=pageDict,this.xref=xref,this.ref=ref,this.fontCache=fontCache,this.builtInCMapCache=builtInCMapCache,this.standardFontDataCache=standardFontDataCache,this.globalImageCache=globalImageCache,this.nonBlendModesSet=nonBlendModesSet,this.evaluatorOptions=pdfManager.evaluatorOptions,this.resourcesPromise=null,this.xfaFactory=xfaFactory;const idCounters={obj:0};this._localIdFactory=class extends globalIdFactory{static createObjId(){return`p${pageIndex}_${++idCounters.obj}`}static getPageObjId(){return`page${ref.toString()}`}}}_getInheritableProperty(key,getArray=!1){const value=(0,_core_utils.getInheritableProperty)({dict:this.pageDict,key,getArray,stopWhenFound:!1});return Array.isArray(value)?1!==value.length&&value[0]instanceof _primitives.Dict?_primitives.Dict.merge({xref:this.xref,dictArray:value}):value[0]:value}get content(){return this.pageDict.getArray("Contents")}get resources(){const resources=this._getInheritableProperty("Resources");return(0,_util.shadow)(this,"resources",resources instanceof _primitives.Dict?resources:_primitives.Dict.empty)}_getBoundingBox(name){if(this.xfaData)return this.xfaData.bbox;const box=this._getInheritableProperty(name,!0);if(Array.isArray(box)&&4===box.length){if(box[2]-box[0]!=0&&box[3]-box[1]!=0)return box;(0,_util.warn)(`Empty /${name} entry.`)}return null}get mediaBox(){return(0,_util.shadow)(this,"mediaBox",this._getBoundingBox("MediaBox")||LETTER_SIZE_MEDIABOX)}get cropBox(){return(0,_util.shadow)(this,"cropBox",this._getBoundingBox("CropBox")||this.mediaBox)}get userUnit(){let obj=this.pageDict.get("UserUnit");return("number"!=typeof obj||obj<=0)&&(obj=1),(0,_util.shadow)(this,"userUnit",obj)}get view(){const{cropBox,mediaBox}=this;let view;if(cropBox===mediaBox||(0,_util.isArrayEqual)(cropBox,mediaBox))view=mediaBox;else{const box=_util.Util.intersect(cropBox,mediaBox);box&&box[2]-box[0]!=0&&box[3]-box[1]!=0?view=box:(0,_util.warn)("Empty /CropBox and /MediaBox intersection.")}return(0,_util.shadow)(this,"view",view||mediaBox)}get rotate(){let rotate=this._getInheritableProperty("Rotate")||0;return rotate%90!=0?rotate=0:rotate>=360?rotate%=360:rotate<0&&(rotate=(rotate%360+360)%360),(0,_util.shadow)(this,"rotate",rotate)}_onSubStreamError(handler,reason,objId){if(this.evaluatorOptions.ignoreErrors)return handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorContentSubStream}),void(0,_util.warn)(`getContentStream - ignoring sub-stream (${objId}): "${reason}".`);throw reason}getContentStream(handler){return this.pdfManager.ensure(this,"content").then((content=>content instanceof _base_stream.BaseStream?content:Array.isArray(content)?new _decode_stream.StreamsSequenceStream(content,this._onSubStreamError.bind(this,handler)):new _stream.NullStream))}get xfaData(){return(0,_util.shadow)(this,"xfaData",this.xfaFactory?{bbox:this.xfaFactory.getBoundingBox(this.pageIndex)}:null)}async saveNewAnnotations(handler,task,annotations){if(this.xfaFactory)throw new Error("XFA: Cannot save new annotations.");const partialEvaluator=new _evaluator.PartialEvaluator({xref:this.xref,handler,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,standardFontDataCache:this.standardFontDataCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions}),pageDict=this.pageDict,annotationsArray=this.annotations.slice(),newData=await _annotation.AnnotationFactory.saveNewAnnotations(partialEvaluator,task,annotations);for(const{ref}of newData.annotations)annotationsArray.push(ref);const savedDict=pageDict.get("Annots");pageDict.set("Annots",annotationsArray);const buffer=[];let transform=null;this.xref.encrypt&&(transform=this.xref.encrypt.createCipherTransform(this.ref.num,this.ref.gen)),(0,_writer.writeObject)(this.ref,pageDict,buffer,transform),savedDict&&pageDict.set("Annots",savedDict);const objects=newData.dependencies;return objects.push({ref:this.ref,data:buffer.join("")},...newData.annotations),objects}save(handler,task,annotationStorage){const partialEvaluator=new _evaluator.PartialEvaluator({xref:this.xref,handler,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,standardFontDataCache:this.standardFontDataCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions});return this._parsedAnnotations.then((function(annotations){const newRefsPromises=[];for(const annotation of annotations)annotation.mustBePrinted(annotationStorage)&&newRefsPromises.push(annotation.save(partialEvaluator,task,annotationStorage).catch((function(reason){return(0,_util.warn)(`save - ignoring annotation data during "${task.name}" task: "${reason}".`),null})));return Promise.all(newRefsPromises).then((function(newRefs){return newRefs.filter((newRef=>!!newRef))}))}))}loadResources(keys){return this.resourcesPromise||(this.resourcesPromise=this.pdfManager.ensure(this,"resources")),this.resourcesPromise.then((()=>new _object_loader.ObjectLoader(this.resources,keys,this.xref).load()))}getOperatorList({handler,sink,task,intent,cacheKey,annotationStorage=null}){const contentStreamPromise=this.getContentStream(handler),resourcesPromise=this.loadResources(["ColorSpace","ExtGState","Font","Pattern","Properties","Shading","XObject"]),partialEvaluator=new _evaluator.PartialEvaluator({xref:this.xref,handler,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,standardFontDataCache:this.standardFontDataCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions}),newAnnotationsByPage=this.xfaFactory?null:(0,_core_utils.getNewAnnotationsMap)(annotationStorage);let newAnnotationsPromise=Promise.resolve(null);if(newAnnotationsByPage){const newAnnotations=newAnnotationsByPage.get(this.pageIndex);newAnnotations&&(newAnnotationsPromise=_annotation.AnnotationFactory.printNewAnnotations(partialEvaluator,task,newAnnotations))}const pageListPromise=Promise.all([contentStreamPromise,resourcesPromise]).then((([contentStream])=>{const opList=new _operator_list.OperatorList(intent,sink);return handler.send("StartRenderPage",{transparency:partialEvaluator.hasBlendModes(this.resources,this.nonBlendModesSet),pageIndex:this.pageIndex,cacheKey}),partialEvaluator.getOperatorList({stream:contentStream,task,resources:this.resources,operatorList:opList}).then((function(){return opList}))}));return Promise.all([pageListPromise,this._parsedAnnotations,newAnnotationsPromise]).then((function([pageOpList,annotations,newAnnotations]){if(newAnnotations&&(annotations=annotations.concat(newAnnotations)),0===annotations.length||intent&_util.RenderingIntentFlag.ANNOTATIONS_DISABLE)return pageOpList.flush(!0),{length:pageOpList.totalLength};const renderForms=!!(intent&_util.RenderingIntentFlag.ANNOTATIONS_FORMS),intentAny=!!(intent&_util.RenderingIntentFlag.ANY),intentDisplay=!!(intent&_util.RenderingIntentFlag.DISPLAY),intentPrint=!!(intent&_util.RenderingIntentFlag.PRINT),opListPromises=[];for(const annotation of annotations)(intentAny||intentDisplay&&annotation.mustBeViewed(annotationStorage)||intentPrint&&annotation.mustBePrinted(annotationStorage))&&opListPromises.push(annotation.getOperatorList(partialEvaluator,task,intent,renderForms,annotationStorage).catch((function(reason){return(0,_util.warn)(`getOperatorList - ignoring annotation data during "${task.name}" task: "${reason}".`),null})));return Promise.all(opListPromises).then((function(opLists){let form=!1,canvas=!1;for(const{opList,separateForm,separateCanvas}of opLists)pageOpList.addOpList(opList),separateForm&&(form=separateForm),separateCanvas&&(canvas=separateCanvas);return pageOpList.flush(!0,{form,canvas}),{length:pageOpList.totalLength}}))}))}extractTextContent({handler,task,includeMarkedContent,sink,combineTextItems}){const contentStreamPromise=this.getContentStream(handler),resourcesPromise=this.loadResources(["ExtGState","Font","Properties","XObject"]);return Promise.all([contentStreamPromise,resourcesPromise]).then((([contentStream])=>new _evaluator.PartialEvaluator({xref:this.xref,handler,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,standardFontDataCache:this.standardFontDataCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions}).getTextContent({stream:contentStream,task,resources:this.resources,includeMarkedContent,combineTextItems,sink,viewBox:this.view})))}async getStructTree(){const structTreeRoot=await this.pdfManager.ensureCatalog("structTreeRoot");if(!structTreeRoot)return null;return(await this.pdfManager.ensure(this,"_parseStructTree",[structTreeRoot])).serializable}_parseStructTree(structTreeRoot){const tree=new _struct_tree.StructTreePage(structTreeRoot,this.pageDict);return tree.parse(),tree}async getAnnotationsData(handler,task,intent){const annotations=await this._parsedAnnotations;if(0===annotations.length)return[];const textContentPromises=[],annotationsData=[];let partialEvaluator;const intentAny=!!(intent&_util.RenderingIntentFlag.ANY),intentDisplay=!!(intent&_util.RenderingIntentFlag.DISPLAY),intentPrint=!!(intent&_util.RenderingIntentFlag.PRINT);for(const annotation of annotations){const isVisible=intentAny||intentDisplay&&annotation.viewable;(isVisible||intentPrint&&annotation.printable)&&annotationsData.push(annotation.data),annotation.hasTextContent&&isVisible&&(partialEvaluator||(partialEvaluator=new _evaluator.PartialEvaluator({xref:this.xref,handler,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,standardFontDataCache:this.standardFontDataCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions})),textContentPromises.push(annotation.extractTextContent(partialEvaluator,task,this.view).catch((function(reason){(0,_util.warn)(`getAnnotationsData - ignoring textContent during "${task.name}" task: "${reason}".`)}))))}return await Promise.all(textContentPromises),annotationsData}get annotations(){const annots=this._getInheritableProperty("Annots");return(0,_util.shadow)(this,"annotations",Array.isArray(annots)?annots:[])}get _parsedAnnotations(){const parsedAnnotations=this.pdfManager.ensure(this,"annotations").then((()=>{const annotationPromises=[];for(const annotationRef of this.annotations)annotationPromises.push(_annotation.AnnotationFactory.create(this.xref,annotationRef,this.pdfManager,this._localIdFactory,!1).catch((function(reason){return(0,_util.warn)(`_parsedAnnotations: "${reason}".`),null})));return Promise.all(annotationPromises).then((function(annotations){if(0===annotations.length)return annotations;const sortedAnnotations=[];let popupAnnotations;for(const annotation of annotations)annotation&&(annotation instanceof _annotation.PopupAnnotation?(popupAnnotations||(popupAnnotations=[]),popupAnnotations.push(annotation)):sortedAnnotations.push(annotation));return popupAnnotations&&sortedAnnotations.push(...popupAnnotations),sortedAnnotations}))}));return(0,_util.shadow)(this,"_parsedAnnotations",parsedAnnotations)}get jsActions(){const actions=(0,_core_utils.collectActions)(this.xref,this.pageDict,_util.PageActionEventType);return(0,_util.shadow)(this,"jsActions",actions)}}exports.Page=Page;const PDF_HEADER_SIGNATURE=new Uint8Array([37,80,68,70,45]),STARTXREF_SIGNATURE=new Uint8Array([115,116,97,114,116,120,114,101,102]),ENDOBJ_SIGNATURE=new Uint8Array([101,110,100,111,98,106]),PDF_HEADER_VERSION_REGEXP=/^[1-9]\.\d$/;function find(stream,signature,limit=1024,backwards=!1){const signatureLength=signature.length,scanBytes=stream.peekBytes(limit),scanLength=scanBytes.length-signatureLength;if(scanLength<=0)return!1;if(backwards){const signatureEnd=signatureLength-1;let pos=scanBytes.length-1;for(;pos>=signatureEnd;){let j=0;for(;j<signatureLength&&scanBytes[pos-j]===signature[signatureEnd-j];)j++;if(j>=signatureLength)return stream.pos+=pos-signatureEnd,!0;pos--}}else{let pos=0;for(;pos<=scanLength;){let j=0;for(;j<signatureLength&&scanBytes[pos+j]===signature[j];)j++;if(j>=signatureLength)return stream.pos+=pos,!0;pos++}}return!1}exports.PDFDocument=class PDFDocument{constructor(pdfManager,stream){if(stream.length<=0)throw new _util.InvalidPDFException("The PDF file is empty, i.e. its size is zero bytes.");this.pdfManager=pdfManager,this.stream=stream,this.xref=new _xref.XRef(stream,pdfManager),this._pagePromises=new Map,this._version=null;const idCounters={font:0};this._globalIdFactory=class{static getDocId(){return`g_${pdfManager.docId}`}static createFontId(){return"f"+ ++idCounters.font}static createObjId(){(0,_util.unreachable)("Abstract method `createObjId` called.")}static getPageObjId(){(0,_util.unreachable)("Abstract method `getPageObjId` called.")}}}parse(recoveryMode){this.xref.parse(recoveryMode),this.catalog=new _catalog.Catalog(this.pdfManager,this.xref),this.catalog.version&&(this._version=this.catalog.version)}get linearization(){let linearization=null;try{linearization=_parser.Linearization.create(this.stream)}catch(err){if(err instanceof _core_utils.MissingDataException)throw err;(0,_util.info)(err)}return(0,_util.shadow)(this,"linearization",linearization)}get startXRef(){const stream=this.stream;let startXRef=0;if(this.linearization)stream.reset(),find(stream,ENDOBJ_SIGNATURE)&&(startXRef=stream.pos+6-stream.start);else{const step=1024,startXRefLength=STARTXREF_SIGNATURE.length;let found=!1,pos=stream.end;for(;!found&&pos>0;)pos-=step-startXRefLength,pos<0&&(pos=0),stream.pos=pos,found=find(stream,STARTXREF_SIGNATURE,step,!0);if(found){let ch;stream.skip(9);do{ch=stream.getByte()}while((0,_core_utils.isWhiteSpace)(ch));let str="";for(;ch>=32&&ch<=57;)str+=String.fromCharCode(ch),ch=stream.getByte();startXRef=parseInt(str,10),isNaN(startXRef)&&(startXRef=0)}}return(0,_util.shadow)(this,"startXRef",startXRef)}checkHeader(){const stream=this.stream;if(stream.reset(),!find(stream,PDF_HEADER_SIGNATURE))return;stream.moveStart();let ch,version="";for(;(ch=stream.getByte())>32&&!(version.length>=12);)version+=String.fromCharCode(ch);this._version||(this._version=version.substring(5))}parseStartXRef(){this.xref.setStartXRef(this.startXRef)}get numPages(){let num=0;return num=this.catalog.hasActualNumPages?this.catalog.numPages:this.xfaFactory?this.xfaFactory.getNumPages():this.linearization?this.linearization.numPages:this.catalog.numPages,(0,_util.shadow)(this,"numPages",num)}_hasOnlyDocumentSignatures(fields,recursionDepth=0){return!!Array.isArray(fields)&&fields.every((field=>{if(!((field=this.xref.fetchIfRef(field))instanceof _primitives.Dict))return!1;if(field.has("Kids"))return++recursionDepth>10?((0,_util.warn)("_hasOnlyDocumentSignatures: maximum recursion depth reached"),!1):this._hasOnlyDocumentSignatures(field.get("Kids"),recursionDepth);const isSignature=(0,_primitives.isName)(field.get("FT"),"Sig"),rectangle=field.get("Rect"),isInvisible=Array.isArray(rectangle)&&rectangle.every((value=>0===value));return isSignature&&isInvisible}))}get _xfaStreams(){const acroForm=this.catalog.acroForm;if(!acroForm)return null;const xfa=acroForm.get("XFA"),entries={"xdp:xdp":"",template:"",datasets:"",config:"",connectionSet:"",localeSet:"",stylesheet:"","/xdp:xdp":""};if(xfa instanceof _base_stream.BaseStream&&!xfa.isEmpty)return entries["xdp:xdp"]=xfa,entries;if(!Array.isArray(xfa)||0===xfa.length)return null;for(let i=0,ii=xfa.length;i<ii;i+=2){let name;if(name=0===i?"xdp:xdp":i===ii-2?"/xdp:xdp":xfa[i],!entries.hasOwnProperty(name))continue;const data=this.xref.fetchIfRef(xfa[i+1]);data instanceof _base_stream.BaseStream&&!data.isEmpty&&(entries[name]=data)}return entries}get xfaDatasets(){const streams=this._xfaStreams;if(!streams)return(0,_util.shadow)(this,"xfaDatasets",null);for(const key of["datasets","xdp:xdp"]){const stream=streams[key];if(stream)try{const data={[key]:(0,_util.stringToUTF8String)(stream.getString())};return(0,_util.shadow)(this,"xfaDatasets",new _dataset_reader.DatasetReader(data))}catch(_){(0,_util.warn)("XFA - Invalid utf-8 string.");break}}return(0,_util.shadow)(this,"xfaDatasets",null)}get xfaData(){const streams=this._xfaStreams;if(!streams)return null;const data=Object.create(null);for(const[key,stream]of Object.entries(streams))if(stream)try{data[key]=(0,_util.stringToUTF8String)(stream.getString())}catch(_){return(0,_util.warn)("XFA - Invalid utf-8 string."),null}return data}get xfaFactory(){let data;return this.pdfManager.enableXfa&&this.catalog.needsRendering&&this.formInfo.hasXfa&&!this.formInfo.hasAcroForm&&(data=this.xfaData),(0,_util.shadow)(this,"xfaFactory",data?new _factory.XFAFactory(data):null)}get isPureXfa(){return!!this.xfaFactory&&this.xfaFactory.isValid()}get htmlForXfa(){return this.xfaFactory?this.xfaFactory.getPages():null}async loadXfaImages(){const xfaImagesDict=await this.pdfManager.ensureCatalog("xfaImages");if(!xfaImagesDict)return;const keys=xfaImagesDict.getKeys(),objectLoader=new _object_loader.ObjectLoader(xfaImagesDict,keys,this.xref);await objectLoader.load();const xfaImages=new Map;for(const key of keys){const stream=xfaImagesDict.get(key);stream instanceof _base_stream.BaseStream&&xfaImages.set(key,stream.getBytes())}this.xfaFactory.setImages(xfaImages)}async loadXfaFonts(handler,task){const acroForm=await this.pdfManager.ensureCatalog("acroForm");if(!acroForm)return;const resources=await acroForm.getAsync("DR");if(!(resources instanceof _primitives.Dict))return;const objectLoader=new _object_loader.ObjectLoader(resources,["Font"],this.xref);await objectLoader.load();const fontRes=resources.get("Font");if(!(fontRes instanceof _primitives.Dict))return;const options=Object.assign(Object.create(null),this.pdfManager.evaluatorOptions);options.useSystemFonts=!1;const partialEvaluator=new _evaluator.PartialEvaluator({xref:this.xref,handler,pageIndex:-1,idFactory:this._globalIdFactory,fontCache:this.catalog.fontCache,builtInCMapCache:this.catalog.builtInCMapCache,standardFontDataCache:this.catalog.standardFontDataCache,options}),operatorList=new _operator_list.OperatorList,pdfFonts=[],initialState={get font(){return pdfFonts.at(-1)},set font(font){pdfFonts.push(font)},clone(){return this}},fonts=new Map;fontRes.forEach(((fontName,font)=>{fonts.set(fontName,font)}));const promises=[];for(const[fontName,font]of fonts){const descriptor=font.get("FontDescriptor");if(!(descriptor instanceof _primitives.Dict))continue;let fontFamily=descriptor.get("FontFamily");fontFamily=fontFamily.replace(/[ ]+(\d)/g,"$1");const cssFontInfo={fontFamily,fontWeight:descriptor.get("FontWeight"),italicAngle:-descriptor.get("ItalicAngle")};(0,_core_utils.validateCSSFont)(cssFontInfo)&&promises.push(partialEvaluator.handleSetFont(resources,[_primitives.Name.get(fontName),1],null,operatorList,task,initialState,null,cssFontInfo).catch((function(reason){return(0,_util.warn)(`loadXfaFonts: "${reason}".`),null})))}await Promise.all(promises);const missingFonts=this.xfaFactory.setFonts(pdfFonts);if(!missingFonts)return;options.ignoreErrors=!0,promises.length=0,pdfFonts.length=0;const reallyMissingFonts=new Set;for(const missing of missingFonts)(0,_xfa_fonts.getXfaFontName)(`${missing}-Regular`)||reallyMissingFonts.add(missing);reallyMissingFonts.size&&missingFonts.push("PdfJS-Fallback");for(const missing of missingFonts)if(!reallyMissingFonts.has(missing))for(const fontInfo of[{name:"Regular",fontWeight:400,italicAngle:0},{name:"Bold",fontWeight:700,italicAngle:0},{name:"Italic",fontWeight:400,italicAngle:12},{name:"BoldItalic",fontWeight:700,italicAngle:12}]){const name=`${missing}-${fontInfo.name}`,dict=(0,_xfa_fonts.getXfaFontDict)(name);promises.push(partialEvaluator.handleSetFont(resources,[_primitives.Name.get(name),1],null,operatorList,task,initialState,dict,{fontFamily:missing,fontWeight:fontInfo.fontWeight,italicAngle:fontInfo.italicAngle}).catch((function(reason){return(0,_util.warn)(`loadXfaFonts: "${reason}".`),null})))}await Promise.all(promises),this.xfaFactory.appendFonts(pdfFonts,reallyMissingFonts)}async serializeXfaData(annotationStorage){return this.xfaFactory?this.xfaFactory.serializeData(annotationStorage):null}get formInfo(){const formInfo={hasFields:!1,hasAcroForm:!1,hasXfa:!1,hasSignatures:!1},acroForm=this.catalog.acroForm;if(!acroForm)return(0,_util.shadow)(this,"formInfo",formInfo);try{const fields=acroForm.get("Fields"),hasFields=Array.isArray(fields)&&fields.length>0;formInfo.hasFields=hasFields;const xfa=acroForm.get("XFA");formInfo.hasXfa=Array.isArray(xfa)&&xfa.length>0||xfa instanceof _base_stream.BaseStream&&!xfa.isEmpty;const hasSignatures=!!(1&acroForm.get("SigFlags")),hasOnlyDocumentSignatures=hasSignatures&&this._hasOnlyDocumentSignatures(fields);formInfo.hasAcroForm=hasFields&&!hasOnlyDocumentSignatures,formInfo.hasSignatures=hasSignatures}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)(`Cannot fetch form information: "${ex}".`)}return(0,_util.shadow)(this,"formInfo",formInfo)}get documentInfo(){let version=this._version;"string"==typeof version&&PDF_HEADER_VERSION_REGEXP.test(version)||((0,_util.warn)(`Invalid PDF header version number: ${version}`),version=null);const docInfo={PDFFormatVersion:version,Language:this.catalog.lang,EncryptFilterName:this.xref.encrypt?this.xref.encrypt.filterName:null,IsLinearized:!!this.linearization,IsAcroFormPresent:this.formInfo.hasAcroForm,IsXFAPresent:this.formInfo.hasXfa,IsCollectionPresent:!!this.catalog.collection,IsSignaturesPresent:this.formInfo.hasSignatures};let infoDict;try{infoDict=this.xref.trailer.get("Info")}catch(err){if(err instanceof _core_utils.MissingDataException)throw err;(0,_util.info)("The document information dictionary is invalid.")}if(!(infoDict instanceof _primitives.Dict))return(0,_util.shadow)(this,"documentInfo",docInfo);for(const key of infoDict.getKeys()){const value=infoDict.get(key);switch(key){case"Title":case"Author":case"Subject":case"Keywords":case"Creator":case"Producer":case"CreationDate":case"ModDate":if("string"==typeof value){docInfo[key]=(0,_util.stringToPDFString)(value);continue}break;case"Trapped":if(value instanceof _primitives.Name){docInfo[key]=value;continue}break;default:let customValue;switch(typeof value){case"string":customValue=(0,_util.stringToPDFString)(value);break;case"number":case"boolean":customValue=value;break;default:value instanceof _primitives.Name&&(customValue=value)}if(void 0===customValue){(0,_util.warn)(`Bad value, for custom key "${key}", in Info: ${value}.`);continue}docInfo.Custom||(docInfo.Custom=Object.create(null)),docInfo.Custom[key]=customValue;continue}(0,_util.warn)(`Bad value, for key "${key}", in Info: ${value}.`)}return(0,_util.shadow)(this,"documentInfo",docInfo)}get fingerprints(){function validate(data){return"string"==typeof data&&data.length>0&&"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"!==data}function hexString(hash){const buf=[];for(let i=0,ii=hash.length;i<ii;i++){const hex=hash[i].toString(16);buf.push(hex.padStart(2,"0"))}return buf.join("")}const idArray=this.xref.trailer.get("ID");let hashOriginal,hashModified;return Array.isArray(idArray)&&validate(idArray[0])?(hashOriginal=(0,_util.stringToBytes)(idArray[0]),idArray[1]!==idArray[0]&&validate(idArray[1])&&(hashModified=(0,_util.stringToBytes)(idArray[1]))):hashOriginal=(0,_crypto.calculateMD5)(this.stream.getByteRange(0,1024),0,1024),(0,_util.shadow)(this,"fingerprints",[hexString(hashOriginal),hashModified?hexString(hashModified):null])}async _getLinearizationPage(pageIndex){const{catalog,linearization,xref}=this,ref=_primitives.Ref.get(linearization.objectNumberFirst,0);try{const obj=await xref.fetchAsync(ref);if(obj instanceof _primitives.Dict){let type=obj.getRaw("Type");if(type instanceof _primitives.Ref&&(type=await xref.fetchAsync(type)),(0,_primitives.isName)(type,"Page")||!obj.has("Type")&&!obj.has("Kids"))return catalog.pageKidsCountCache.has(ref)||catalog.pageKidsCountCache.put(ref,1),catalog.pageIndexCache.has(ref)||catalog.pageIndexCache.put(ref,0),[obj,ref]}throw new _util.FormatError("The Linearization dictionary doesn't point to a valid Page dictionary.")}catch(reason){return(0,_util.warn)(`_getLinearizationPage: "${reason.message}".`),catalog.getPageDict(pageIndex)}}getPage(pageIndex){const cachedPromise=this._pagePromises.get(pageIndex);if(cachedPromise)return cachedPromise;const{catalog,linearization,xfaFactory}=this;let promise;return promise=xfaFactory?Promise.resolve([_primitives.Dict.empty,null]):linearization&&linearization.pageFirst===pageIndex?this._getLinearizationPage(pageIndex):catalog.getPageDict(pageIndex),promise=promise.then((([pageDict,ref])=>new Page({pdfManager:this.pdfManager,xref:this.xref,pageIndex,pageDict,ref,globalIdFactory:this._globalIdFactory,fontCache:catalog.fontCache,builtInCMapCache:catalog.builtInCMapCache,standardFontDataCache:catalog.standardFontDataCache,globalImageCache:catalog.globalImageCache,nonBlendModesSet:catalog.nonBlendModesSet,xfaFactory}))),this._pagePromises.set(pageIndex,promise),promise}async checkFirstPage(recoveryMode=!1){if(!recoveryMode)try{await this.getPage(0)}catch(reason){if(reason instanceof _core_utils.XRefEntryException)throw this._pagePromises.delete(0),await this.cleanup(),new _core_utils.XRefParseException}}async checkLastPage(recoveryMode=!1){const{catalog,pdfManager}=this;let numPages;catalog.setActualNumPages();try{if(await Promise.all([pdfManager.ensureDoc("xfaFactory"),pdfManager.ensureDoc("linearization"),pdfManager.ensureCatalog("numPages")]),this.xfaFactory)return;if(numPages=this.linearization?this.linearization.numPages:catalog.numPages,!Number.isInteger(numPages))throw new _util.FormatError("Page count is not an integer.");if(numPages<=1)return;await this.getPage(numPages-1)}catch(reason){if(this._pagePromises.delete(numPages-1),await this.cleanup(),reason instanceof _core_utils.XRefEntryException&&!recoveryMode)throw new _core_utils.XRefParseException;let pagesTree;(0,_util.warn)(`checkLastPage - invalid /Pages tree /Count: ${numPages}.`);try{pagesTree=await catalog.getAllPageDicts(recoveryMode)}catch(reasonAll){if(reasonAll instanceof _core_utils.XRefEntryException&&!recoveryMode)throw new _core_utils.XRefParseException;return void catalog.setActualNumPages(1)}for(const[pageIndex,[pageDict,ref]]of pagesTree){let promise;pageDict instanceof Error?(promise=Promise.reject(pageDict),promise.catch((()=>{}))):promise=Promise.resolve(new Page({pdfManager,xref:this.xref,pageIndex,pageDict,ref,globalIdFactory:this._globalIdFactory,fontCache:catalog.fontCache,builtInCMapCache:catalog.builtInCMapCache,standardFontDataCache:catalog.standardFontDataCache,globalImageCache:catalog.globalImageCache,nonBlendModesSet:catalog.nonBlendModesSet,xfaFactory:null})),this._pagePromises.set(pageIndex,promise)}catalog.setActualNumPages(pagesTree.size)}}fontFallback(id,handler){return this.catalog.fontFallback(id,handler)}async cleanup(manuallyTriggered=!1){return this.catalog?this.catalog.cleanup(manuallyTriggered):(0,_cleanup_helper.clearGlobalCaches)()}_collectFieldObjects(name,fieldRef,promises){const field=this.xref.fetchIfRef(fieldRef);if(field.has("T")){const partName=(0,_util.stringToPDFString)(field.get("T"));name=""===name?partName:`${name}.${partName}`}if(promises.has(name)||promises.set(name,[]),promises.get(name).push(_annotation.AnnotationFactory.create(this.xref,fieldRef,this.pdfManager,this._localIdFactory,!0).then((annotation=>annotation&&annotation.getFieldObject())).catch((function(reason){return(0,_util.warn)(`_collectFieldObjects: "${reason}".`),null}))),field.has("Kids")){const kids=field.get("Kids");for(const kid of kids)this._collectFieldObjects(name,kid,promises)}}get fieldObjects(){if(!this.formInfo.hasFields)return(0,_util.shadow)(this,"fieldObjects",Promise.resolve(null));const allFields=Object.create(null),fieldPromises=new Map;for(const fieldRef of this.catalog.acroForm.get("Fields"))this._collectFieldObjects("",fieldRef,fieldPromises);const allPromises=[];for(const[name,promises]of fieldPromises)allPromises.push(Promise.all(promises).then((fields=>{(fields=fields.filter((field=>!!field))).length>0&&(allFields[name]=fields)})));return(0,_util.shadow)(this,"fieldObjects",Promise.all(allPromises).then((()=>allFields)))}get hasJSActions(){const promise=this.pdfManager.ensureDoc("_parseHasJSActions");return(0,_util.shadow)(this,"hasJSActions",promise)}async _parseHasJSActions(){const[catalogJsActions,fieldObjects]=await Promise.all([this.pdfManager.ensureCatalog("jsActions"),this.pdfManager.ensureDoc("fieldObjects")]);return!!catalogJsActions||!!fieldObjects&&Object.values(fieldObjects).some((fieldObject=>fieldObject.some((object=>null!==object.actions))))}get calculationOrderIds(){const acroForm=this.catalog.acroForm;if(!acroForm||!acroForm.has("CO"))return(0,_util.shadow)(this,"calculationOrderIds",null);const calculationOrder=acroForm.get("CO");if(!Array.isArray(calculationOrder)||0===calculationOrder.length)return(0,_util.shadow)(this,"calculationOrderIds",null);const ids=[];for(const id of calculationOrder)id instanceof _primitives.Ref&&ids.push(id.toString());return 0===ids.length?(0,_util.shadow)(this,"calculationOrderIds",null):(0,_util.shadow)(this,"calculationOrderIds",ids)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PopupAnnotation=exports.MarkupAnnotation=exports.AnnotationFactory=exports.AnnotationBorderStyle=exports.Annotation=void 0,exports.getQuadPoints=getQuadPoints;var _util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_default_appearance=__w_pdfjs_require__(13),_primitives=__w_pdfjs_require__(5),_writer=__w_pdfjs_require__(65),_base_stream=__w_pdfjs_require__(7),_bidi=__w_pdfjs_require__(60),_catalog=__w_pdfjs_require__(69),_colorspace=__w_pdfjs_require__(14),_file_spec=__w_pdfjs_require__(72),_object_loader=__w_pdfjs_require__(75),_operator_list=__w_pdfjs_require__(62),_stream=__w_pdfjs_require__(10),_factory=__w_pdfjs_require__(76);function getRgbColor(color,defaultColor=new Uint8ClampedArray(3)){if(!Array.isArray(color))return defaultColor;const rgbColor=defaultColor||new Uint8ClampedArray(3);switch(color.length){case 0:return null;case 1:return _colorspace.ColorSpace.singletons.gray.getRgbItem(color,0,rgbColor,0),rgbColor;case 3:return _colorspace.ColorSpace.singletons.rgb.getRgbItem(color,0,rgbColor,0),rgbColor;case 4:return _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color,0,rgbColor,0),rgbColor;default:return defaultColor}}function getQuadPoints(dict,rect){if(!dict.has("QuadPoints"))return null;const quadPoints=dict.getArray("QuadPoints");if(!Array.isArray(quadPoints)||0===quadPoints.length||quadPoints.length%8>0)return null;const quadPointsLists=[];for(let i=0,ii=quadPoints.length/8;i<ii;i++){quadPointsLists.push([]);for(let j=8*i,jj=8*i+8;j<jj;j+=2){const x=quadPoints[j],y=quadPoints[j+1];if(null!==rect&&(x<rect[0]||x>rect[2]||y<rect[1]||y>rect[3]))return null;quadPointsLists[i].push({x,y})}}return quadPointsLists.map((quadPointsList=>{const[minX,maxX,minY,maxY]=quadPointsList.reduce((([mX,MX,mY,MY],quadPoint)=>[Math.min(mX,quadPoint.x),Math.max(MX,quadPoint.x),Math.min(mY,quadPoint.y),Math.max(MY,quadPoint.y)]),[Number.MAX_VALUE,Number.MIN_VALUE,Number.MAX_VALUE,Number.MIN_VALUE]);return[{x:minX,y:maxY},{x:maxX,y:maxY},{x:minX,y:minY},{x:maxX,y:minY}]}))}function getTransformMatrix(rect,bbox,matrix){const[minX,minY,maxX,maxY]=_util.Util.getAxialAlignedBoundingBox(bbox,matrix);if(minX===maxX||minY===maxY)return[1,0,0,1,rect[0],rect[1]];const xRatio=(rect[2]-rect[0])/(maxX-minX),yRatio=(rect[3]-rect[1])/(maxY-minY);return[xRatio,0,0,yRatio,rect[0]-minX*xRatio,rect[1]-minY*yRatio]}exports.AnnotationFactory=class AnnotationFactory{static create(xref,ref,pdfManager,idFactory,collectFields){return Promise.all([pdfManager.ensureCatalog("acroForm"),pdfManager.ensureCatalog("baseUrl"),pdfManager.ensureDoc("xfaDatasets"),collectFields?this._getPageIndex(xref,ref,pdfManager):-1]).then((([acroForm,baseUrl,xfaDatasets,pageIndex])=>pdfManager.ensure(this,"_create",[xref,ref,pdfManager,idFactory,acroForm,xfaDatasets,collectFields,pageIndex])))}static _create(xref,ref,pdfManager,idFactory,acroForm,xfaDatasets,collectFields,pageIndex=-1){const dict=xref.fetchIfRef(ref);if(!(dict instanceof _primitives.Dict))return;const id=ref instanceof _primitives.Ref?ref.toString():`annot_${idFactory.createObjId()}`;let subtype=dict.get("Subtype");subtype=subtype instanceof _primitives.Name?subtype.name:null;const parameters={xref,ref,dict,subtype,id,pdfManager,acroForm:acroForm instanceof _primitives.Dict?acroForm:_primitives.Dict.empty,xfaDatasets,collectFields,pageIndex};switch(subtype){case"Link":return new LinkAnnotation(parameters);case"Text":return new TextAnnotation(parameters);case"Widget":let fieldType=(0,_core_utils.getInheritableProperty)({dict,key:"FT"});switch(fieldType=fieldType instanceof _primitives.Name?fieldType.name:null,fieldType){case"Tx":return new TextWidgetAnnotation(parameters);case"Btn":return new ButtonWidgetAnnotation(parameters);case"Ch":return new ChoiceWidgetAnnotation(parameters);case"Sig":return new SignatureWidgetAnnotation(parameters)}return(0,_util.warn)(`Unimplemented widget field type "${fieldType}", falling back to base field type.`),new WidgetAnnotation(parameters);case"Popup":return new PopupAnnotation(parameters);case"FreeText":return new FreeTextAnnotation(parameters);case"Line":return new LineAnnotation(parameters);case"Square":return new SquareAnnotation(parameters);case"Circle":return new CircleAnnotation(parameters);case"PolyLine":return new PolylineAnnotation(parameters);case"Polygon":return new PolygonAnnotation(parameters);case"Caret":return new CaretAnnotation(parameters);case"Ink":return new InkAnnotation(parameters);case"Highlight":return new HighlightAnnotation(parameters);case"Underline":return new UnderlineAnnotation(parameters);case"Squiggly":return new SquigglyAnnotation(parameters);case"StrikeOut":return new StrikeOutAnnotation(parameters);case"Stamp":return new StampAnnotation(parameters);case"FileAttachment":return new FileAttachmentAnnotation(parameters);default:return collectFields||(subtype?(0,_util.warn)(`Unimplemented annotation type "${subtype}", falling back to base annotation.`):(0,_util.warn)("Annotation is missing the required /Subtype.")),new Annotation(parameters)}}static async _getPageIndex(xref,ref,pdfManager){try{const annotDict=await xref.fetchIfRefAsync(ref);if(!(annotDict instanceof _primitives.Dict))return-1;const pageRef=annotDict.getRaw("P");if(!(pageRef instanceof _primitives.Ref))return-1;return await pdfManager.ensureCatalog("getPageIndex",[pageRef])}catch(ex){return(0,_util.warn)(`_getPageIndex: "${ex}".`),-1}}static async saveNewAnnotations(evaluator,task,annotations){const xref=evaluator.xref;let baseFontRef;const dependencies=[],promises=[];for(const annotation of annotations)switch(annotation.annotationType){case _util.AnnotationEditorType.FREETEXT:if(!baseFontRef){const baseFont=new _primitives.Dict(xref);baseFont.set("BaseFont",_primitives.Name.get("Helvetica")),baseFont.set("Type",_primitives.Name.get("Font")),baseFont.set("Subtype",_primitives.Name.get("Type1")),baseFont.set("Encoding",_primitives.Name.get("WinAnsiEncoding"));const buffer=[];baseFontRef=xref.getNewRef(),(0,_writer.writeObject)(baseFontRef,baseFont,buffer,null),dependencies.push({ref:baseFontRef,data:buffer.join("")})}promises.push(FreeTextAnnotation.createNewAnnotation(xref,annotation,dependencies,{evaluator,task,baseFontRef}));break;case _util.AnnotationEditorType.INK:promises.push(InkAnnotation.createNewAnnotation(xref,annotation,dependencies))}return{annotations:await Promise.all(promises),dependencies}}static async printNewAnnotations(evaluator,task,annotations){if(!annotations)return null;const xref=evaluator.xref,promises=[];for(const annotation of annotations)switch(annotation.annotationType){case _util.AnnotationEditorType.FREETEXT:promises.push(FreeTextAnnotation.createNewPrintAnnotation(xref,annotation,{evaluator,task}));break;case _util.AnnotationEditorType.INK:promises.push(InkAnnotation.createNewPrintAnnotation(xref,annotation))}return Promise.all(promises)}};class Annotation{constructor(params){const dict=params.dict;this.setTitle(dict.get("T")),this.setContents(dict.get("Contents")),this.setModificationDate(dict.get("M")),this.setFlags(dict.get("F")),this.setRectangle(dict.getArray("Rect")),this.setColor(dict.getArray("C")),this.setBorderStyle(dict),this.setAppearance(dict),this.setOptionalContent(dict);const MK=dict.get("MK");if(this.setBorderAndBackgroundColors(MK),this.setRotation(MK),this._streams=[],this.appearance&&this._streams.push(this.appearance),this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,backgroundColor:this.backgroundColor,borderColor:this.borderColor,rotation:this.rotation,contentsObj:this._contents,hasAppearance:!!this.appearance,id:params.id,modificationDate:this.modificationDate,rect:this.rectangle,subtype:params.subtype,hasOwnCanvas:!1},params.collectFields){const kids=dict.get("Kids");if(Array.isArray(kids)){const kidIds=[];for(const kid of kids)kid instanceof _primitives.Ref&&kidIds.push(kid.toString());0!==kidIds.length&&(this.data.kidIds=kidIds)}this.data.actions=(0,_core_utils.collectActions)(params.xref,dict,_util.AnnotationActionEventType),this.data.fieldName=this._constructFieldName(dict),this.data.pageIndex=params.pageIndex}this._fallbackFontDict=null}_hasFlag(flags,flag){return!!(flags&flag)}_isViewable(flags){return!this._hasFlag(flags,_util.AnnotationFlag.INVISIBLE)&&!this._hasFlag(flags,_util.AnnotationFlag.NOVIEW)}_isPrintable(flags){return this._hasFlag(flags,_util.AnnotationFlag.PRINT)&&!this._hasFlag(flags,_util.AnnotationFlag.INVISIBLE)}mustBeViewed(annotationStorage){const storageEntry=annotationStorage&&annotationStorage.get(this.data.id);return storageEntry&&void 0!==storageEntry.hidden?!storageEntry.hidden:this.viewable&&!this._hasFlag(this.flags,_util.AnnotationFlag.HIDDEN)}mustBePrinted(annotationStorage){const storageEntry=annotationStorage&&annotationStorage.get(this.data.id);return storageEntry&&void 0!==storageEntry.print?storageEntry.print:this.printable}get viewable(){return null!==this.data.quadPoints&&(0===this.flags||this._isViewable(this.flags))}get printable(){return null!==this.data.quadPoints&&(0!==this.flags&&this._isPrintable(this.flags))}_parseStringHelper(data){const str="string"==typeof data?(0,_util.stringToPDFString)(data):"";return{str,dir:str&&"rtl"===(0,_bidi.bidi)(str).dir?"rtl":"ltr"}}setTitle(title){this._title=this._parseStringHelper(title)}setContents(contents){this._contents=this._parseStringHelper(contents)}setModificationDate(modificationDate){this.modificationDate="string"==typeof modificationDate?modificationDate:null}setFlags(flags){this.flags=Number.isInteger(flags)&&flags>0?flags:0}hasFlag(flag){return this._hasFlag(this.flags,flag)}setRectangle(rectangle){Array.isArray(rectangle)&&4===rectangle.length?this.rectangle=_util.Util.normalizeRect(rectangle):this.rectangle=[0,0,0,0]}setColor(color){this.color=getRgbColor(color)}setLineEndings(lineEndings){if(this.lineEndings=["None","None"],Array.isArray(lineEndings)&&2===lineEndings.length)for(let i=0;i<2;i++){const obj=lineEndings[i];if(obj instanceof _primitives.Name)switch(obj.name){case"None":continue;case"Square":case"Circle":case"Diamond":case"OpenArrow":case"ClosedArrow":case"Butt":case"ROpenArrow":case"RClosedArrow":case"Slash":this.lineEndings[i]=obj.name;continue}(0,_util.warn)(`Ignoring invalid lineEnding: ${obj}`)}}setRotation(mk){if(this.rotation=0,mk instanceof _primitives.Dict){let angle=mk.get("R")||0;Number.isInteger(angle)&&0!==angle&&(angle%=360,angle<0&&(angle+=360),angle%90==0&&(this.rotation=angle))}}setBorderAndBackgroundColors(mk){mk instanceof _primitives.Dict?(this.borderColor=getRgbColor(mk.getArray("BC"),null),this.backgroundColor=getRgbColor(mk.getArray("BG"),null)):this.borderColor=this.backgroundColor=null}setBorderStyle(borderStyle){if(this.borderStyle=new AnnotationBorderStyle,borderStyle instanceof _primitives.Dict)if(borderStyle.has("BS")){const dict=borderStyle.get("BS"),dictType=dict.get("Type");dictType&&!(0,_primitives.isName)(dictType,"Border")||(this.borderStyle.setWidth(dict.get("W"),this.rectangle),this.borderStyle.setStyle(dict.get("S")),this.borderStyle.setDashArray(dict.getArray("D")))}else if(borderStyle.has("Border")){const array=borderStyle.getArray("Border");Array.isArray(array)&&array.length>=3&&(this.borderStyle.setHorizontalCornerRadius(array[0]),this.borderStyle.setVerticalCornerRadius(array[1]),this.borderStyle.setWidth(array[2],this.rectangle),4===array.length&&this.borderStyle.setDashArray(array[3],!0))}else this.borderStyle.setWidth(0)}setAppearance(dict){this.appearance=null;const appearanceStates=dict.get("AP");if(!(appearanceStates instanceof _primitives.Dict))return;const normalAppearanceState=appearanceStates.get("N");if(normalAppearanceState instanceof _base_stream.BaseStream)return void(this.appearance=normalAppearanceState);if(!(normalAppearanceState instanceof _primitives.Dict))return;const as=dict.get("AS");as instanceof _primitives.Name&&normalAppearanceState.has(as.name)&&(this.appearance=normalAppearanceState.get(as.name))}setOptionalContent(dict){this.oc=null;const oc=dict.get("OC");oc instanceof _primitives.Name?(0,_util.warn)("setOptionalContent: Support for /Name-entry is not implemented."):oc instanceof _primitives.Dict&&(this.oc=oc)}loadResources(keys,appearance){return appearance.dict.getAsync("Resources").then((resources=>{if(!resources)return;return new _object_loader.ObjectLoader(resources,keys,resources.xref).load().then((function(){return resources}))}))}async getOperatorList(evaluator,task,intent,renderForms,annotationStorage){const data=this.data;let appearance=this.appearance;const isUsingOwnCanvas=!!(this.data.hasOwnCanvas&&intent&_util.RenderingIntentFlag.DISPLAY);if(!appearance){if(!isUsingOwnCanvas)return{opList:new _operator_list.OperatorList,separateForm:!1,separateCanvas:!1};appearance=new _stream.StringStream(""),appearance.dict=new _primitives.Dict}const appearanceDict=appearance.dict,resources=await this.loadResources(["ExtGState","ColorSpace","Pattern","Shading","XObject","Font"],appearance),bbox=appearanceDict.getArray("BBox")||[0,0,1,1],matrix=appearanceDict.getArray("Matrix")||[1,0,0,1,0,0],transform=getTransformMatrix(data.rect,bbox,matrix),opList=new _operator_list.OperatorList;let optionalContent;return this.oc&&(optionalContent=await evaluator.parseMarkedContentProps(this.oc,null)),void 0!==optionalContent&&opList.addOp(_util.OPS.beginMarkedContentProps,["OC",optionalContent]),opList.addOp(_util.OPS.beginAnnotation,[data.id,data.rect,transform,matrix,isUsingOwnCanvas]),await evaluator.getOperatorList({stream:appearance,task,resources,operatorList:opList,fallbackFontDict:this._fallbackFontDict}),opList.addOp(_util.OPS.endAnnotation,[]),void 0!==optionalContent&&opList.addOp(_util.OPS.endMarkedContent,[]),this.reset(),{opList,separateForm:!1,separateCanvas:isUsingOwnCanvas}}async save(evaluator,task,annotationStorage){return null}get hasTextContent(){return!1}async extractTextContent(evaluator,task,viewBox){if(!this.appearance)return;const resources=await this.loadResources(["ExtGState","Font","Properties","XObject"],this.appearance),text=[],buffer=[],sink={desiredSize:Math.Infinity,ready:!0,enqueue(chunk,size){for(const item of chunk.items)buffer.push(item.str),item.hasEOL&&(text.push(buffer.join("")),buffer.length=0)}};await evaluator.getTextContent({stream:this.appearance,task,resources,includeMarkedContent:!0,combineTextItems:!0,sink,viewBox}),this.reset(),buffer.length&&text.push(buffer.join("")),text.length>0&&(this.data.textContent=text)}getFieldObject(){return this.data.kidIds?{id:this.data.id,actions:this.data.actions,name:this.data.fieldName,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,type:"",kidIds:this.data.kidIds,page:this.data.pageIndex,rotation:this.rotation}:null}reset(){for(const stream of this._streams)stream.reset()}_constructFieldName(dict){if(!dict.has("T")&&!dict.has("Parent"))return(0,_util.warn)("Unknown field name, falling back to empty field name."),"";if(!dict.has("Parent"))return(0,_util.stringToPDFString)(dict.get("T"));const fieldName=[];dict.has("T")&&fieldName.unshift((0,_util.stringToPDFString)(dict.get("T")));let loopDict=dict;const visited=new _primitives.RefSet;for(dict.objId&&visited.put(dict.objId);loopDict.has("Parent")&&(loopDict=loopDict.get("Parent"),loopDict instanceof _primitives.Dict&&(!loopDict.objId||!visited.has(loopDict.objId)));)loopDict.objId&&visited.put(loopDict.objId),loopDict.has("T")&&fieldName.unshift((0,_util.stringToPDFString)(loopDict.get("T")));return fieldName.join(".")}}exports.Annotation=Annotation;class AnnotationBorderStyle{constructor(){this.width=1,this.style=_util.AnnotationBorderStyleType.SOLID,this.dashArray=[3],this.horizontalCornerRadius=0,this.verticalCornerRadius=0}setWidth(width,rect=[0,0,0,0]){if(width instanceof _primitives.Name)this.width=0;else if("number"==typeof width){if(width>0){const maxWidth=(rect[2]-rect[0])/2,maxHeight=(rect[3]-rect[1])/2;maxWidth>0&&maxHeight>0&&(width>maxWidth||width>maxHeight)&&((0,_util.warn)(`AnnotationBorderStyle.setWidth - ignoring width: ${width}`),width=1)}this.width=width}}setStyle(style){if(style instanceof _primitives.Name)switch(style.name){case"S":this.style=_util.AnnotationBorderStyleType.SOLID;break;case"D":this.style=_util.AnnotationBorderStyleType.DASHED;break;case"B":this.style=_util.AnnotationBorderStyleType.BEVELED;break;case"I":this.style=_util.AnnotationBorderStyleType.INSET;break;case"U":this.style=_util.AnnotationBorderStyleType.UNDERLINE}}setDashArray(dashArray,forceStyle=!1){if(Array.isArray(dashArray)&&dashArray.length>0){let isValid=!0,allZeros=!0;for(const element of dashArray){if(!(+element>=0)){isValid=!1;break}element>0&&(allZeros=!1)}isValid&&!allZeros?(this.dashArray=dashArray,forceStyle&&this.setStyle(_primitives.Name.get("D"))):this.width=0}else dashArray&&(this.width=0)}setHorizontalCornerRadius(radius){Number.isInteger(radius)&&(this.horizontalCornerRadius=radius)}setVerticalCornerRadius(radius){Number.isInteger(radius)&&(this.verticalCornerRadius=radius)}}exports.AnnotationBorderStyle=AnnotationBorderStyle;class MarkupAnnotation extends Annotation{constructor(parameters){super(parameters);const dict=parameters.dict;if(dict.has("IRT")){const rawIRT=dict.getRaw("IRT");this.data.inReplyTo=rawIRT instanceof _primitives.Ref?rawIRT.toString():null;const rt=dict.get("RT");this.data.replyType=rt instanceof _primitives.Name?rt.name:_util.AnnotationReplyType.REPLY}if(this.data.replyType===_util.AnnotationReplyType.GROUP){const parent=dict.get("IRT");this.setTitle(parent.get("T")),this.data.titleObj=this._title,this.setContents(parent.get("Contents")),this.data.contentsObj=this._contents,parent.has("CreationDate")?(this.setCreationDate(parent.get("CreationDate")),this.data.creationDate=this.creationDate):this.data.creationDate=null,parent.has("M")?(this.setModificationDate(parent.get("M")),this.data.modificationDate=this.modificationDate):this.data.modificationDate=null,this.data.hasPopup=parent.has("Popup"),parent.has("C")?(this.setColor(parent.getArray("C")),this.data.color=this.color):this.data.color=null}else this.data.titleObj=this._title,this.setCreationDate(dict.get("CreationDate")),this.data.creationDate=this.creationDate,this.data.hasPopup=dict.has("Popup"),dict.has("C")||(this.data.color=null);dict.has("RC")&&(this.data.richText=_factory.XFAFactory.getRichTextAsHtml(dict.get("RC")))}setCreationDate(creationDate){this.creationDate="string"==typeof creationDate?creationDate:null}_setDefaultAppearance({xref,extra,strokeColor,fillColor,blendMode,strokeAlpha,fillAlpha,pointsCallback}){let minX=Number.MAX_VALUE,minY=Number.MAX_VALUE,maxX=Number.MIN_VALUE,maxY=Number.MIN_VALUE;const buffer=["q"];extra&&buffer.push(extra),strokeColor&&buffer.push(`${strokeColor[0]} ${strokeColor[1]} ${strokeColor[2]} RG`),fillColor&&buffer.push(`${fillColor[0]} ${fillColor[1]} ${fillColor[2]} rg`);let pointsArray=this.data.quadPoints;pointsArray||(pointsArray=[[{x:this.rectangle[0],y:this.rectangle[3]},{x:this.rectangle[2],y:this.rectangle[3]},{x:this.rectangle[0],y:this.rectangle[1]},{x:this.rectangle[2],y:this.rectangle[1]}]]);for(const points of pointsArray){const[mX,MX,mY,MY]=pointsCallback(buffer,points);minX=Math.min(minX,mX),maxX=Math.max(maxX,MX),minY=Math.min(minY,mY),maxY=Math.max(maxY,MY)}buffer.push("Q");const formDict=new _primitives.Dict(xref),appearanceStreamDict=new _primitives.Dict(xref);appearanceStreamDict.set("Subtype",_primitives.Name.get("Form"));const appearanceStream=new _stream.StringStream(buffer.join(" "));appearanceStream.dict=appearanceStreamDict,formDict.set("Fm0",appearanceStream);const gsDict=new _primitives.Dict(xref);blendMode&&gsDict.set("BM",_primitives.Name.get(blendMode)),"number"==typeof strokeAlpha&&gsDict.set("CA",strokeAlpha),"number"==typeof fillAlpha&&gsDict.set("ca",fillAlpha);const stateDict=new _primitives.Dict(xref);stateDict.set("GS0",gsDict);const resources=new _primitives.Dict(xref);resources.set("ExtGState",stateDict),resources.set("XObject",formDict);const appearanceDict=new _primitives.Dict(xref);appearanceDict.set("Resources",resources);const bbox=this.data.rect=[minX,minY,maxX,maxY];appearanceDict.set("BBox",bbox),this.appearance=new _stream.StringStream("/GS0 gs /Fm0 Do"),this.appearance.dict=appearanceDict,this._streams.push(this.appearance,appearanceStream)}static async createNewAnnotation(xref,annotation,dependencies,params){const annotationRef=xref.getNewRef(),apRef=xref.getNewRef(),annotationDict=this.createNewDict(annotation,xref,{apRef}),ap=await this.createNewAppearanceStream(annotation,xref,params),buffer=[];let transform=xref.encrypt?xref.encrypt.createCipherTransform(apRef.num,apRef.gen):null;return(0,_writer.writeObject)(apRef,ap,buffer,transform),dependencies.push({ref:apRef,data:buffer.join("")}),buffer.length=0,transform=xref.encrypt?xref.encrypt.createCipherTransform(annotationRef.num,annotationRef.gen):null,(0,_writer.writeObject)(annotationRef,annotationDict,buffer,transform),{ref:annotationRef,data:buffer.join("")}}static async createNewPrintAnnotation(xref,annotation,params){const ap=await this.createNewAppearanceStream(annotation,xref,params),annotationDict=this.createNewDict(annotation,xref,{ap});return new this.prototype.constructor({dict:annotationDict,xref})}}exports.MarkupAnnotation=MarkupAnnotation;class WidgetAnnotation extends Annotation{constructor(params){super(params);const dict=params.dict,data=this.data;this.ref=params.ref,data.annotationType=_util.AnnotationType.WIDGET,void 0===data.fieldName&&(data.fieldName=this._constructFieldName(dict)),void 0===data.actions&&(data.actions=(0,_core_utils.collectActions)(params.xref,dict,_util.AnnotationActionEventType));let fieldValue=(0,_core_utils.getInheritableProperty)({dict,key:"V",getArray:!0});data.fieldValue=this._decodeFormValue(fieldValue);const defaultFieldValue=(0,_core_utils.getInheritableProperty)({dict,key:"DV",getArray:!0});if(data.defaultFieldValue=this._decodeFormValue(defaultFieldValue),void 0===fieldValue&&params.xfaDatasets){const path=this._title.str;path&&(this._hasValueFromXFA=!0,data.fieldValue=fieldValue=params.xfaDatasets.getValue(path))}void 0===fieldValue&&null!==data.defaultFieldValue&&(data.fieldValue=data.defaultFieldValue),data.alternativeText=(0,_util.stringToPDFString)(dict.get("TU")||"");const defaultAppearance=(0,_core_utils.getInheritableProperty)({dict,key:"DA"})||params.acroForm.get("DA");this._defaultAppearance="string"==typeof defaultAppearance?defaultAppearance:"",data.defaultAppearanceData=(0,_default_appearance.parseDefaultAppearance)(this._defaultAppearance);const fieldType=(0,_core_utils.getInheritableProperty)({dict,key:"FT"});data.fieldType=fieldType instanceof _primitives.Name?fieldType.name:null;const localResources=(0,_core_utils.getInheritableProperty)({dict,key:"DR"}),acroFormResources=params.acroForm.get("DR"),appearanceResources=this.appearance&&this.appearance.dict.get("Resources");this._fieldResources={localResources,acroFormResources,appearanceResources,mergedResources:_primitives.Dict.merge({xref:params.xref,dictArray:[localResources,appearanceResources,acroFormResources],mergeSubDicts:!0})},data.fieldFlags=(0,_core_utils.getInheritableProperty)({dict,key:"Ff"}),(!Number.isInteger(data.fieldFlags)||data.fieldFlags<0)&&(data.fieldFlags=0),data.readOnly=this.hasFieldFlag(_util.AnnotationFieldFlag.READONLY),data.required=this.hasFieldFlag(_util.AnnotationFieldFlag.REQUIRED),data.hidden=this._hasFlag(data.annotationFlags,_util.AnnotationFlag.HIDDEN)}_decodeFormValue(formValue){return Array.isArray(formValue)?formValue.filter((item=>"string"==typeof item)).map((item=>(0,_util.stringToPDFString)(item))):formValue instanceof _primitives.Name?(0,_util.stringToPDFString)(formValue.name):"string"==typeof formValue?(0,_util.stringToPDFString)(formValue):null}hasFieldFlag(flag){return!!(this.data.fieldFlags&flag)}static _getRotationMatrix(rotation,width,height){switch(rotation){case 90:return[0,1,-1,0,width,0];case 180:return[-1,0,0,-1,width,height];case 270:return[0,-1,1,0,0,height];default:throw new Error("Invalid rotation")}}getRotationMatrix(annotationStorage){const storageEntry=annotationStorage?annotationStorage.get(this.data.id):void 0;let rotation=storageEntry&&storageEntry.rotation;if(void 0===rotation&&(rotation=this.rotation),0===rotation)return _util.IDENTITY_MATRIX;const width=this.data.rect[2]-this.data.rect[0],height=this.data.rect[3]-this.data.rect[1];return WidgetAnnotation._getRotationMatrix(rotation,width,height)}getBorderAndBackgroundAppearances(annotationStorage){const storageEntry=annotationStorage?annotationStorage.get(this.data.id):void 0;let rotation=storageEntry&&storageEntry.rotation;if(void 0===rotation&&(rotation=this.rotation),!this.backgroundColor&&!this.borderColor)return"";const width=this.data.rect[2]-this.data.rect[0],height=this.data.rect[3]-this.data.rect[1],rect=0===rotation||180===rotation?`0 0 ${width} ${height} re`:`0 0 ${height} ${width} re`;let str="";if(this.backgroundColor&&(str=`${(0,_default_appearance.getPdfColor)(this.backgroundColor,!0)} ${rect} f `),this.borderColor){str+=`${this.borderStyle.width||1} w ${(0,_default_appearance.getPdfColor)(this.borderColor,!1)} ${rect} S `}return str}async getOperatorList(evaluator,task,intent,renderForms,annotationStorage){if(renderForms&&!(this instanceof SignatureWidgetAnnotation))return{opList:new _operator_list.OperatorList,separateForm:!0,separateCanvas:!1};if(!this._hasText)return super.getOperatorList(evaluator,task,intent,renderForms,annotationStorage);const content=await this._getAppearance(evaluator,task,annotationStorage);if(this.appearance&&null===content)return super.getOperatorList(evaluator,task,intent,renderForms,annotationStorage);const opList=new _operator_list.OperatorList;if(!this._defaultAppearance||null===content)return{opList,separateForm:!1,separateCanvas:!1};const bbox=[0,0,this.data.rect[2]-this.data.rect[0],this.data.rect[3]-this.data.rect[1]],transform=getTransformMatrix(this.data.rect,bbox,[1,0,0,1,0,0]);let optionalContent;this.oc&&(optionalContent=await evaluator.parseMarkedContentProps(this.oc,null)),void 0!==optionalContent&&opList.addOp(_util.OPS.beginMarkedContentProps,["OC",optionalContent]),opList.addOp(_util.OPS.beginAnnotation,[this.data.id,this.data.rect,transform,this.getRotationMatrix(annotationStorage),!1]);const stream=new _stream.StringStream(content);return await evaluator.getOperatorList({stream,task,resources:this._fieldResources.mergedResources,operatorList:opList}),opList.addOp(_util.OPS.endAnnotation,[]),void 0!==optionalContent&&opList.addOp(_util.OPS.endMarkedContent,[]),{opList,separateForm:!1,separateCanvas:!1}}_getMKDict(rotation){const mk=new _primitives.Dict(null);return rotation&&mk.set("R",rotation),this.borderColor&&mk.set("BC",Array.from(this.borderColor).map((c=>c/255))),this.backgroundColor&&mk.set("BG",Array.from(this.backgroundColor).map((c=>c/255))),mk.size>0?mk:null}async save(evaluator,task,annotationStorage){const storageEntry=annotationStorage?annotationStorage.get(this.data.id):void 0;let value=storageEntry&&storageEntry.value,rotation=storageEntry&&storageEntry.rotation;if(value===this.data.fieldValue||void 0===value){if(!this._hasValueFromXFA&&void 0===rotation)return null;value=value||this.data.fieldValue}if(void 0===rotation&&!this._hasValueFromXFA&&Array.isArray(value)&&Array.isArray(this.data.fieldValue)&&value.length===this.data.fieldValue.length&&value.every(((x,i)=>x===this.data.fieldValue[i])))return null;void 0===rotation&&(rotation=this.rotation);let appearance=await this._getAppearance(evaluator,task,annotationStorage);if(null===appearance)return null;const{xref}=evaluator,dict=xref.fetchIfRef(this.ref);if(!(dict instanceof _primitives.Dict))return null;const bbox=[0,0,this.data.rect[2]-this.data.rect[0],this.data.rect[3]-this.data.rect[1]],xfa={path:(0,_util.stringToPDFString)(dict.get("T")||""),value},newRef=xref.getNewRef(),AP=new _primitives.Dict(xref);AP.set("N",newRef);const encrypt=xref.encrypt;let originalTransform=null,newTransform=null;encrypt&&(originalTransform=encrypt.createCipherTransform(this.ref.num,this.ref.gen),newTransform=encrypt.createCipherTransform(newRef.num,newRef.gen),appearance=newTransform.encryptString(appearance));const encoder=val=>(0,_util.isAscii)(val)?val:(0,_util.stringToUTF16BEString)(val);dict.set("V",Array.isArray(value)?value.map(encoder):encoder(value)),dict.set("AP",AP),dict.set("M",`D:${(0,_util.getModificationDate)()}`);const maybeMK=this._getMKDict(rotation);maybeMK&&dict.set("MK",maybeMK);const appearanceDict=new _primitives.Dict(xref);appearanceDict.set("Length",appearance.length),appearanceDict.set("Subtype",_primitives.Name.get("Form")),appearanceDict.set("Resources",this._getSaveFieldResources(xref)),appearanceDict.set("BBox",bbox);const rotationMatrix=this.getRotationMatrix(annotationStorage);rotationMatrix!==_util.IDENTITY_MATRIX&&appearanceDict.set("Matrix",rotationMatrix);const bufferOriginal=[`${this.ref.num} ${this.ref.gen} obj\n`];(0,_writer.writeDict)(dict,bufferOriginal,originalTransform),bufferOriginal.push("\nendobj\n");const bufferNew=[`${newRef.num} ${newRef.gen} obj\n`];return(0,_writer.writeDict)(appearanceDict,bufferNew,newTransform),bufferNew.push(" stream\n",appearance,"\nendstream\nendobj\n"),[{ref:this.ref,data:bufferOriginal.join(""),xfa},{ref:newRef,data:bufferNew.join(""),xfa:null}]}async _getAppearance(evaluator,task,annotationStorage){if(this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD))return null;const storageEntry=annotationStorage?annotationStorage.get(this.data.id):void 0;let value,rotation;if(storageEntry&&(value=storageEntry.formattedValue||storageEntry.value,rotation=storageEntry.rotation),void 0===rotation&&void 0===value&&(!this._hasValueFromXFA||this.appearance))return null;if(void 0===value&&(value=this.data.fieldValue,!value))return"";if(Array.isArray(value)&&1===value.length&&(value=value[0]),(0,_util.assert)("string"==typeof value,"Expected `value` to be a string."),value=value.trim(),""===value)return"";void 0===rotation&&(rotation=this.rotation);let lineCount=-1;this.data.multiLine&&(lineCount=value.split(/\r\n|\r|\n/).length);let totalHeight=this.data.rect[3]-this.data.rect[1],totalWidth=this.data.rect[2]-this.data.rect[0];90!==rotation&&270!==rotation||([totalWidth,totalHeight]=[totalHeight,totalWidth]),this._defaultAppearance||(this.data.defaultAppearanceData=(0,_default_appearance.parseDefaultAppearance)(this._defaultAppearance="/Helvetica 0 Tf 0 g"));const font=await WidgetAnnotation._getFontData(evaluator,task,this.data.defaultAppearanceData,this._fieldResources.mergedResources),[defaultAppearance,fontSize]=this._computeFontSize(totalHeight-2,totalWidth-4,value,font,lineCount);let descent=font.descent;isNaN(descent)&&(descent=0);const vPadding=Math.min(Math.floor((totalHeight-fontSize)/2),2)+Math.abs(descent)*fontSize,alignment=this.data.textAlignment;if(this.data.multiLine)return this._getMultilineAppearance(defaultAppearance,value,font,fontSize,totalWidth,totalHeight,alignment,2,vPadding,annotationStorage);const encodedString=font.encodeString(value).join("");if(this.data.comb)return this._getCombAppearance(defaultAppearance,font,encodedString,totalWidth,2,vPadding,annotationStorage);const colors=this.getBorderAndBackgroundAppearances(annotationStorage);if(0===alignment||alignment>2)return`/Tx BMC q ${colors}BT `+defaultAppearance+` 1 0 0 1 2 ${vPadding} Tm (${(0,_util.escapeString)(encodedString)}) Tj ET Q EMC`;return`/Tx BMC q ${colors}BT `+defaultAppearance+` 1 0 0 1 0 0 Tm ${this._renderText(encodedString,font,fontSize,totalWidth,alignment,2,vPadding)} ET Q EMC`}static async _getFontData(evaluator,task,appearanceData,resources){const operatorList=new _operator_list.OperatorList,initialState={font:null,clone(){return this}},{fontName,fontSize}=appearanceData;return await evaluator.handleSetFont(resources,[fontName&&_primitives.Name.get(fontName),fontSize],null,operatorList,task,initialState,null),initialState.font}_getTextWidth(text,font){return font.charsToGlyphs(text).reduce(((width,glyph)=>width+glyph.width),0)/1e3}_computeFontSize(height,width,text,font,lineCount){let{fontSize}=this.data.defaultAppearanceData;if(!fontSize){const roundWithTwoDigits=x=>Math.floor(100*x)/100;if(-1===lineCount){const textWidth=this._getTextWidth(text,font);fontSize=roundWithTwoDigits(Math.min(height/_util.LINE_FACTOR,width/textWidth))}else{const lines=text.split(/\r\n?|\n/),cachedLines=[];for(const line of lines){const encoded=font.encodeString(line).join(""),glyphs=font.charsToGlyphs(encoded),positions=font.getCharPositions(encoded);cachedLines.push({line:encoded,glyphs,positions})}const isTooBig=fsize=>{let totalHeight=0;for(const cache of cachedLines){if(totalHeight+=this._splitLine(null,font,fsize,width,cache).length*fsize,totalHeight>height)return!0}return!1};fontSize=12;let lineHeight=fontSize*_util.LINE_FACTOR,numberOfLines=Math.round(height/lineHeight);for(numberOfLines=Math.max(numberOfLines,lineCount);lineHeight=height/numberOfLines,fontSize=roundWithTwoDigits(lineHeight/_util.LINE_FACTOR),isTooBig(fontSize);)numberOfLines++}const{fontName,fontColor}=this.data.defaultAppearanceData;this._defaultAppearance=(0,_default_appearance.createDefaultAppearance)({fontSize,fontName,fontColor})}return[this._defaultAppearance,fontSize]}_renderText(text,font,fontSize,totalWidth,alignment,hPadding,vPadding){let shift;if(1===alignment){shift=(totalWidth-this._getTextWidth(text,font)*fontSize)/2}else if(2===alignment){shift=totalWidth-this._getTextWidth(text,font)*fontSize-hPadding}else shift=hPadding;return shift=(0,_core_utils.numberToString)(shift),`${shift} ${vPadding=(0,_core_utils.numberToString)(vPadding)} Td (${(0,_util.escapeString)(text)}) Tj`}_getSaveFieldResources(xref){const{localResources,appearanceResources,acroFormResources}=this._fieldResources,fontName=this.data.defaultAppearanceData&&this.data.defaultAppearanceData.fontName;if(!fontName)return localResources||_primitives.Dict.empty;for(const resources of[localResources,appearanceResources])if(resources instanceof _primitives.Dict){const localFont=resources.get("Font");if(localFont instanceof _primitives.Dict&&localFont.has(fontName))return resources}if(acroFormResources instanceof _primitives.Dict){const acroFormFont=acroFormResources.get("Font");if(acroFormFont instanceof _primitives.Dict&&acroFormFont.has(fontName)){const subFontDict=new _primitives.Dict(xref);subFontDict.set(fontName,acroFormFont.getRaw(fontName));const subResourcesDict=new _primitives.Dict(xref);return subResourcesDict.set("Font",subFontDict),_primitives.Dict.merge({xref,dictArray:[subResourcesDict,localResources],mergeSubDicts:!0})}}return localResources||_primitives.Dict.empty}getFieldObject(){return null}}class TextWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params),this._hasText=!0;const dict=params.dict;"string"!=typeof this.data.fieldValue&&(this.data.fieldValue="");let alignment=(0,_core_utils.getInheritableProperty)({dict,key:"Q"});(!Number.isInteger(alignment)||alignment<0||alignment>2)&&(alignment=null),this.data.textAlignment=alignment;let maximumLength=(0,_core_utils.getInheritableProperty)({dict,key:"MaxLen"});(!Number.isInteger(maximumLength)||maximumLength<0)&&(maximumLength=0),this.data.maxLen=maximumLength,this.data.multiLine=this.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE),this.data.comb=this.hasFieldFlag(_util.AnnotationFieldFlag.COMB)&&!this.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE)&&!this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD)&&!this.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT)&&0!==this.data.maxLen,this.data.doNotScroll=this.hasFieldFlag(_util.AnnotationFieldFlag.DONOTSCROLL)}_getCombAppearance(defaultAppearance,font,text,width,hPadding,vPadding,annotationStorage){const combWidth=(0,_core_utils.numberToString)(width/this.data.maxLen),buf=[],positions=font.getCharPositions(text);for(const[start,end]of positions)buf.push(`(${(0,_util.escapeString)(text.substring(start,end))}) Tj`);return`/Tx BMC q ${this.getBorderAndBackgroundAppearances(annotationStorage)}BT `+defaultAppearance+` 1 0 0 1 ${hPadding} ${vPadding} Tm ${buf.join(` ${combWidth} 0 Td `)} ET Q EMC`}_getMultilineAppearance(defaultAppearance,text,font,fontSize,width,height,alignment,hPadding,vPadding,annotationStorage){const lines=text.split(/\r\n?|\n/),buf=[],totalWidth=width-2*hPadding;for(const line of lines){const chunks=this._splitLine(line,font,fontSize,totalWidth);for(const chunk of chunks){const padding=0===buf.length?hPadding:0;buf.push(this._renderText(chunk,font,fontSize,width,alignment,padding,-fontSize))}}const renderedText=buf.join("\n");return`/Tx BMC q ${this.getBorderAndBackgroundAppearances(annotationStorage)}BT `+defaultAppearance+` 1 0 0 1 0 ${height} Tm ${renderedText} ET Q EMC`}_splitLine(line,font,fontSize,width,cache={}){line=cache.line||font.encodeString(line).join("");const glyphs=cache.glyphs||font.charsToGlyphs(line);if(glyphs.length<=1)return[line];const positions=cache.positions||font.getCharPositions(line),scale=fontSize/1e3,chunks=[];let lastSpacePosInStringStart=-1,lastSpacePosInStringEnd=-1,lastSpacePos=-1,startChunk=0,currentWidth=0;for(let i=0,ii=glyphs.length;i<ii;i++){const[start,end]=positions[i],glyph=glyphs[i],glyphWidth=glyph.width*scale;" "===glyph.unicode?currentWidth+glyphWidth>width?(chunks.push(line.substring(startChunk,start)),startChunk=start,currentWidth=glyphWidth,lastSpacePosInStringStart=-1,lastSpacePos=-1):(currentWidth+=glyphWidth,lastSpacePosInStringStart=start,lastSpacePosInStringEnd=end,lastSpacePos=i):currentWidth+glyphWidth>width?-1!==lastSpacePosInStringStart?(chunks.push(line.substring(startChunk,lastSpacePosInStringEnd)),startChunk=lastSpacePosInStringEnd,i=lastSpacePos+1,lastSpacePosInStringStart=-1,currentWidth=0):(chunks.push(line.substring(startChunk,start)),startChunk=start,currentWidth=glyphWidth):currentWidth+=glyphWidth}return startChunk<line.length&&chunks.push(line.substring(startChunk,line.length)),chunks}getFieldObject(){return{id:this.data.id,value:this.data.fieldValue,defaultValue:this.data.defaultFieldValue||"",multiline:this.data.multiLine,password:this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD),charLimit:this.data.maxLen,comb:this.data.comb,editable:!this.data.readOnly,hidden:this.data.hidden,name:this.data.fieldName,rect:this.data.rect,actions:this.data.actions,page:this.data.pageIndex,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,rotation:this.rotation,type:"text"}}}class ButtonWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params),this.checkedAppearance=null,this.uncheckedAppearance=null,this.data.checkBox=!this.hasFieldFlag(_util.AnnotationFieldFlag.RADIO)&&!this.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON),this.data.radioButton=this.hasFieldFlag(_util.AnnotationFieldFlag.RADIO)&&!this.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON),this.data.pushButton=this.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON),this.data.isTooltipOnly=!1,this.data.checkBox?this._processCheckBox(params):this.data.radioButton?this._processRadioButton(params):this.data.pushButton?(this.data.hasOwnCanvas=!0,this._processPushButton(params)):(0,_util.warn)("Invalid field flags for button widget annotation")}async getOperatorList(evaluator,task,intent,renderForms,annotationStorage){if(this.data.pushButton)return super.getOperatorList(evaluator,task,intent,!1,annotationStorage);let value=null,rotation=null;if(annotationStorage){const storageEntry=annotationStorage.get(this.data.id);value=storageEntry?storageEntry.value:null,rotation=storageEntry?storageEntry.rotation:null}if(null===value&&this.appearance)return super.getOperatorList(evaluator,task,intent,renderForms,annotationStorage);null==value&&(value=this.data.checkBox?this.data.fieldValue===this.data.exportValue:this.data.fieldValue===this.data.buttonValue);const appearance=value?this.checkedAppearance:this.uncheckedAppearance;if(appearance){const savedAppearance=this.appearance,savedMatrix=appearance.dict.getArray("Matrix")||_util.IDENTITY_MATRIX;rotation&&appearance.dict.set("Matrix",this.getRotationMatrix(annotationStorage)),this.appearance=appearance;const operatorList=super.getOperatorList(evaluator,task,intent,renderForms,annotationStorage);return this.appearance=savedAppearance,appearance.dict.set("Matrix",savedMatrix),operatorList}return{opList:new _operator_list.OperatorList,separateForm:!1,separateCanvas:!1}}async save(evaluator,task,annotationStorage){return this.data.checkBox?this._saveCheckbox(evaluator,task,annotationStorage):this.data.radioButton?this._saveRadioButton(evaluator,task,annotationStorage):null}async _saveCheckbox(evaluator,task,annotationStorage){if(!annotationStorage)return null;const storageEntry=annotationStorage.get(this.data.id);let rotation=storageEntry&&storageEntry.rotation,value=storageEntry&&storageEntry.value;if(void 0===rotation){if(void 0===value)return null;if(this.data.fieldValue===this.data.exportValue===value)return null}const dict=evaluator.xref.fetchIfRef(this.ref);if(!(dict instanceof _primitives.Dict))return null;void 0===rotation&&(rotation=this.rotation),void 0===value&&(value=this.data.fieldValue===this.data.exportValue);const xfa={path:(0,_util.stringToPDFString)(dict.get("T")||""),value:value?this.data.exportValue:""},name=_primitives.Name.get(value?this.data.exportValue:"Off");dict.set("V",name),dict.set("AS",name),dict.set("M",`D:${(0,_util.getModificationDate)()}`);const maybeMK=this._getMKDict(rotation);maybeMK&&dict.set("MK",maybeMK);const encrypt=evaluator.xref.encrypt;let originalTransform=null;encrypt&&(originalTransform=encrypt.createCipherTransform(this.ref.num,this.ref.gen));const buffer=[`${this.ref.num} ${this.ref.gen} obj\n`];return(0,_writer.writeDict)(dict,buffer,originalTransform),buffer.push("\nendobj\n"),[{ref:this.ref,data:buffer.join(""),xfa}]}async _saveRadioButton(evaluator,task,annotationStorage){if(!annotationStorage)return null;const storageEntry=annotationStorage.get(this.data.id);let rotation=storageEntry&&storageEntry.rotation,value=storageEntry&&storageEntry.value;if(void 0===rotation){if(void 0===value)return null;if(this.data.fieldValue===this.data.buttonValue===value)return null}const dict=evaluator.xref.fetchIfRef(this.ref);if(!(dict instanceof _primitives.Dict))return null;void 0===value&&(value=this.data.fieldValue===this.data.buttonValue),void 0===rotation&&(rotation=this.rotation);const xfa={path:(0,_util.stringToPDFString)(dict.get("T")||""),value:value?this.data.buttonValue:""},name=_primitives.Name.get(value?this.data.buttonValue:"Off");let parentBuffer=null;const encrypt=evaluator.xref.encrypt;if(value)if(this.parent instanceof _primitives.Ref){const parent=evaluator.xref.fetch(this.parent);let parentTransform=null;encrypt&&(parentTransform=encrypt.createCipherTransform(this.parent.num,this.parent.gen)),parent.set("V",name),parentBuffer=[`${this.parent.num} ${this.parent.gen} obj\n`],(0,_writer.writeDict)(parent,parentBuffer,parentTransform),parentBuffer.push("\nendobj\n")}else this.parent instanceof _primitives.Dict&&this.parent.set("V",name);dict.set("AS",name),dict.set("M",`D:${(0,_util.getModificationDate)()}`);const maybeMK=this._getMKDict(rotation);maybeMK&&dict.set("MK",maybeMK);let originalTransform=null;encrypt&&(originalTransform=encrypt.createCipherTransform(this.ref.num,this.ref.gen));const buffer=[`${this.ref.num} ${this.ref.gen} obj\n`];(0,_writer.writeDict)(dict,buffer,originalTransform),buffer.push("\nendobj\n");const newRefs=[{ref:this.ref,data:buffer.join(""),xfa}];return null!==parentBuffer&&newRefs.push({ref:this.parent,data:parentBuffer.join(""),xfa:null}),newRefs}_getDefaultCheckedAppearance(params,type){const width=this.data.rect[2]-this.data.rect[0],height=this.data.rect[3]-this.data.rect[1],bbox=[0,0,width,height],fontSize=.8*Math.min(width,height);let metrics,char;"check"===type?(metrics={width:.755*fontSize,height:.705*fontSize},char="3"):"disc"===type?(metrics={width:.791*fontSize,height:.705*fontSize},char="l"):(0,_util.unreachable)(`_getDefaultCheckedAppearance - unsupported type: ${type}`);const appearance=`q BT /PdfJsZaDb ${fontSize} Tf 0 g ${(0,_core_utils.numberToString)((width-metrics.width)/2)} ${(0,_core_utils.numberToString)((height-metrics.height)/2)} Td (${char}) Tj ET Q`,appearanceStreamDict=new _primitives.Dict(params.xref);appearanceStreamDict.set("FormType",1),appearanceStreamDict.set("Subtype",_primitives.Name.get("Form")),appearanceStreamDict.set("Type",_primitives.Name.get("XObject")),appearanceStreamDict.set("BBox",bbox),appearanceStreamDict.set("Matrix",[1,0,0,1,0,0]),appearanceStreamDict.set("Length",appearance.length);const resources=new _primitives.Dict(params.xref),font=new _primitives.Dict(params.xref);font.set("PdfJsZaDb",this.fallbackFontDict),resources.set("Font",font),appearanceStreamDict.set("Resources",resources),this.checkedAppearance=new _stream.StringStream(appearance),this.checkedAppearance.dict=appearanceStreamDict,this._streams.push(this.checkedAppearance)}_processCheckBox(params){const customAppearance=params.dict.get("AP");if(!(customAppearance instanceof _primitives.Dict))return;const normalAppearance=customAppearance.get("N");if(!(normalAppearance instanceof _primitives.Dict))return;const asValue=this._decodeFormValue(params.dict.get("AS"));"string"==typeof asValue&&(this.data.fieldValue=asValue);const yes=null!==this.data.fieldValue&&"Off"!==this.data.fieldValue?this.data.fieldValue:"Yes",exportValues=normalAppearance.getKeys();if(0===exportValues.length)exportValues.push("Off",yes);else if(1===exportValues.length)"Off"===exportValues[0]?exportValues.push(yes):exportValues.unshift("Off");else if(exportValues.includes(yes))exportValues.length=0,exportValues.push("Off",yes);else{const otherYes=exportValues.find((v=>"Off"!==v));exportValues.length=0,exportValues.push("Off",otherYes)}exportValues.includes(this.data.fieldValue)||(this.data.fieldValue="Off"),this.data.exportValue=exportValues[1],this.checkedAppearance=normalAppearance.get(this.data.exportValue)||null,this.uncheckedAppearance=normalAppearance.get("Off")||null,this.checkedAppearance?this._streams.push(this.checkedAppearance):this._getDefaultCheckedAppearance(params,"check"),this.uncheckedAppearance&&this._streams.push(this.uncheckedAppearance),this._fallbackFontDict=this.fallbackFontDict}_processRadioButton(params){this.data.fieldValue=this.data.buttonValue=null;const fieldParent=params.dict.get("Parent");if(fieldParent instanceof _primitives.Dict){this.parent=params.dict.getRaw("Parent");const fieldParentValue=fieldParent.get("V");fieldParentValue instanceof _primitives.Name&&(this.data.fieldValue=this._decodeFormValue(fieldParentValue))}const appearanceStates=params.dict.get("AP");if(!(appearanceStates instanceof _primitives.Dict))return;const normalAppearance=appearanceStates.get("N");if(normalAppearance instanceof _primitives.Dict){for(const key of normalAppearance.getKeys())if("Off"!==key){this.data.buttonValue=this._decodeFormValue(key);break}this.checkedAppearance=normalAppearance.get(this.data.buttonValue)||null,this.uncheckedAppearance=normalAppearance.get("Off")||null,this.checkedAppearance?this._streams.push(this.checkedAppearance):this._getDefaultCheckedAppearance(params,"disc"),this.uncheckedAppearance&&this._streams.push(this.uncheckedAppearance),this._fallbackFontDict=this.fallbackFontDict}}_processPushButton(params){params.dict.has("A")||params.dict.has("AA")||this.data.alternativeText?(this.data.isTooltipOnly=!params.dict.has("A")&&!params.dict.has("AA"),_catalog.Catalog.parseDestDictionary({destDict:params.dict,resultObj:this.data,docBaseUrl:params.pdfManager.docBaseUrl})):(0,_util.warn)("Push buttons without action dictionaries are not supported")}getFieldObject(){let exportValues,type="button";return this.data.checkBox?(type="checkbox",exportValues=this.data.exportValue):this.data.radioButton&&(type="radiobutton",exportValues=this.data.buttonValue),{id:this.data.id,value:this.data.fieldValue||"Off",defaultValue:this.data.defaultFieldValue,exportValues,editable:!this.data.readOnly,name:this.data.fieldName,rect:this.data.rect,hidden:this.data.hidden,actions:this.data.actions,page:this.data.pageIndex,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,rotation:this.rotation,type}}get fallbackFontDict(){const dict=new _primitives.Dict;return dict.set("BaseFont",_primitives.Name.get("ZapfDingbats")),dict.set("Type",_primitives.Name.get("FallbackType")),dict.set("Subtype",_primitives.Name.get("FallbackType")),dict.set("Encoding",_primitives.Name.get("ZapfDingbatsEncoding")),(0,_util.shadow)(this,"fallbackFontDict",dict)}}class ChoiceWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params),this.data.options=[];const options=(0,_core_utils.getInheritableProperty)({dict:params.dict,key:"Opt"});if(Array.isArray(options)){const xref=params.xref;for(let i=0,ii=options.length;i<ii;i++){const option=xref.fetchIfRef(options[i]),isOptionArray=Array.isArray(option);this.data.options[i]={exportValue:this._decodeFormValue(isOptionArray?xref.fetchIfRef(option[0]):option),displayValue:this._decodeFormValue(isOptionArray?xref.fetchIfRef(option[1]):option)}}}"string"==typeof this.data.fieldValue?this.data.fieldValue=[this.data.fieldValue]:this.data.fieldValue||(this.data.fieldValue=[]),this.data.combo=this.hasFieldFlag(_util.AnnotationFieldFlag.COMBO),this.data.multiSelect=this.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT),this._hasText=!0}getFieldObject(){const type=this.data.combo?"combobox":"listbox",value=this.data.fieldValue.length>0?this.data.fieldValue[0]:null;return{id:this.data.id,value,defaultValue:this.data.defaultFieldValue,editable:!this.data.readOnly,name:this.data.fieldName,rect:this.data.rect,numItems:this.data.fieldValue.length,multipleSelection:this.data.multiSelect,hidden:this.data.hidden,actions:this.data.actions,items:this.data.options,page:this.data.pageIndex,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,rotation:this.rotation,type}}async _getAppearance(evaluator,task,annotationStorage){if(this.data.combo)return super._getAppearance(evaluator,task,annotationStorage);if(!annotationStorage)return null;const storageEntry=annotationStorage.get(this.data.id);if(!storageEntry)return null;const rotation=storageEntry.rotation;let exportedValue=storageEntry.value;if(void 0===rotation&&void 0===exportedValue)return null;void 0===exportedValue?exportedValue=this.data.fieldValue:Array.isArray(exportedValue)||(exportedValue=[exportedValue]);let totalHeight=this.data.rect[3]-this.data.rect[1],totalWidth=this.data.rect[2]-this.data.rect[0];90!==rotation&&270!==rotation||([totalWidth,totalHeight]=[totalHeight,totalWidth]);const lineCount=this.data.options.length,valueIndices=[];for(let i=0;i<lineCount;i++){const{exportValue}=this.data.options[i];exportedValue.includes(exportValue)&&valueIndices.push(i)}this._defaultAppearance||(this.data.defaultAppearanceData=(0,_default_appearance.parseDefaultAppearance)(this._defaultAppearance="/Helvetica 0 Tf 0 g"));const font=await WidgetAnnotation._getFontData(evaluator,task,this.data.defaultAppearanceData,this._fieldResources.mergedResources);let defaultAppearance,{fontSize}=this.data.defaultAppearanceData;if(fontSize)defaultAppearance=this._defaultAppearance;else{const lineHeight=(totalHeight-2)/lineCount;let value,lineWidth=-1;for(const{displayValue}of this.data.options){const width=this._getTextWidth(displayValue,font);width>lineWidth&&(lineWidth=width,value=displayValue)}[defaultAppearance,fontSize]=this._computeFontSize(lineHeight,totalWidth-4,value,font,-1)}const lineHeight=fontSize*_util.LINE_FACTOR,vPadding=(lineHeight-fontSize)/2,numberOfVisibleLines=Math.floor(totalHeight/lineHeight);let firstIndex;if(1===valueIndices.length){const valuePosition=valueIndices[0];firstIndex=valuePosition-valuePosition%numberOfVisibleLines}else firstIndex=valueIndices.length?valueIndices[0]:0;const end=Math.min(firstIndex+numberOfVisibleLines+1,lineCount),buf=["/Tx BMC q",`1 1 ${totalWidth} ${totalHeight} re W n`];if(valueIndices.length){buf.push("0.600006 0.756866 0.854904 rg");for(const index of valueIndices)firstIndex<=index&&index<end&&buf.push(`1 ${totalHeight-(index-firstIndex+1)*lineHeight} ${totalWidth} ${lineHeight} re f`)}buf.push("BT",defaultAppearance,`1 0 0 1 0 ${totalHeight} Tm`);for(let i=firstIndex;i<end;i++){const{displayValue}=this.data.options[i],hpadding=i===firstIndex?2:0,vpadding=i===firstIndex?vPadding:0;buf.push(this._renderText(displayValue,font,fontSize,totalWidth,0,hpadding,-lineHeight+vpadding))}return buf.push("ET Q EMC"),buf.join("\n")}}class SignatureWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params),this.data.fieldValue=null}getFieldObject(){return{id:this.data.id,value:null,page:this.data.pageIndex,type:"signature"}}}class TextAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters);const dict=parameters.dict;this.data.annotationType=_util.AnnotationType.TEXT,this.data.hasAppearance?this.data.name="NoIcon":(this.data.rect[1]=this.data.rect[3]-22,this.data.rect[2]=this.data.rect[0]+22,this.data.name=dict.has("Name")?dict.get("Name").name:"Note"),dict.has("State")?(this.data.state=dict.get("State")||null,this.data.stateModel=dict.get("StateModel")||null):(this.data.state=null,this.data.stateModel=null)}}class LinkAnnotation extends Annotation{constructor(params){super(params),this.data.annotationType=_util.AnnotationType.LINK;const quadPoints=getQuadPoints(params.dict,this.rectangle);quadPoints&&(this.data.quadPoints=quadPoints),this.data.borderColor=this.data.borderColor||this.data.color,_catalog.Catalog.parseDestDictionary({destDict:params.dict,resultObj:this.data,docBaseUrl:params.pdfManager.docBaseUrl})}}class PopupAnnotation extends Annotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.POPUP;let parentItem=parameters.dict.get("Parent");if(!parentItem)return void(0,_util.warn)("Popup annotation has a missing or invalid parent annotation.");const parentSubtype=parentItem.get("Subtype");this.data.parentType=parentSubtype instanceof _primitives.Name?parentSubtype.name:null;const rawParent=parameters.dict.getRaw("Parent");this.data.parentId=rawParent instanceof _primitives.Ref?rawParent.toString():null;const parentRect=parentItem.getArray("Rect");Array.isArray(parentRect)&&4===parentRect.length?this.data.parentRect=_util.Util.normalizeRect(parentRect):this.data.parentRect=[0,0,0,0];const rt=parentItem.get("RT");if((0,_primitives.isName)(rt,_util.AnnotationReplyType.GROUP)&&(parentItem=parentItem.get("IRT")),parentItem.has("M")?(this.setModificationDate(parentItem.get("M")),this.data.modificationDate=this.modificationDate):this.data.modificationDate=null,parentItem.has("C")?(this.setColor(parentItem.getArray("C")),this.data.color=this.color):this.data.color=null,!this.viewable){const parentFlags=parentItem.get("F");this._isViewable(parentFlags)&&this.setFlags(parentFlags)}this.setTitle(parentItem.get("T")),this.data.titleObj=this._title,this.setContents(parentItem.get("Contents")),this.data.contentsObj=this._contents,parentItem.has("RC")&&(this.data.richText=_factory.XFAFactory.getRichTextAsHtml(parentItem.get("RC")))}}exports.PopupAnnotation=PopupAnnotation;class FreeTextAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.FREETEXT}get hasTextContent(){return!!this.appearance}static createNewDict(annotation,xref,{apRef,ap}){const{color,fontSize,rect,rotation,user,value}=annotation,freetext=new _primitives.Dict(xref);freetext.set("Type",_primitives.Name.get("Annot")),freetext.set("Subtype",_primitives.Name.get("FreeText")),freetext.set("CreationDate",`D:${(0,_util.getModificationDate)()}`),freetext.set("Rect",rect);const da=`/Helv ${fontSize} Tf ${(0,_default_appearance.getPdfColor)(color,!0)}`;freetext.set("DA",da),freetext.set("Contents",value),freetext.set("F",4),freetext.set("Border",[0,0,0]),freetext.set("Rotate",rotation),user&&freetext.set("T",(0,_util.stringToUTF8String)(user));const n=new _primitives.Dict(xref);return freetext.set("AP",n),apRef?n.set("N",apRef):n.set("N",ap),freetext}static async createNewAppearanceStream(annotation,xref,params){const{baseFontRef,evaluator,task}=params,{color,fontSize,rect,rotation,value}=annotation,resources=new _primitives.Dict(xref),font=new _primitives.Dict(xref);if(baseFontRef)font.set("Helv",baseFontRef);else{const baseFont=new _primitives.Dict(xref);baseFont.set("BaseFont",_primitives.Name.get("Helvetica")),baseFont.set("Type",_primitives.Name.get("Font")),baseFont.set("Subtype",_primitives.Name.get("Type1")),baseFont.set("Encoding",_primitives.Name.get("WinAnsiEncoding")),font.set("Helv",baseFont)}resources.set("Font",font);const helv=await WidgetAnnotation._getFontData(evaluator,task,{fontName:"Helvetica",fontSize},resources),[x1,y1,x2,y2]=rect;let w=x2-x1,h=y2-y1;rotation%180!=0&&([w,h]=[h,w]);const lines=value.split("\n"),scale=fontSize/1e3;let totalWidth=-1/0;const encodedLines=[];for(let line of lines){line=helv.encodeString(line).join(""),encodedLines.push(line);let lineWidth=0;const glyphs=helv.charsToGlyphs(line);for(const glyph of glyphs)lineWidth+=glyph.width*scale;totalWidth=Math.max(totalWidth,lineWidth)}let hscale=1;totalWidth>w&&(hscale=w/totalWidth);let vscale=1;const lineHeight=_util.LINE_FACTOR*fontSize,lineDescent=_util.LINE_DESCENT_FACTOR*fontSize,totalHeight=lineHeight*lines.length;totalHeight>h&&(vscale=h/totalHeight);const newFontSize=fontSize*Math.min(hscale,vscale),buffer=["q",`0 0 ${(0,_core_utils.numberToString)(w)} ${(0,_core_utils.numberToString)(h)} re W n`,"BT",`1 0 0 1 0 ${(0,_core_utils.numberToString)(h+lineDescent)} Tm 0 Tc ${(0,_default_appearance.getPdfColor)(color,!0)}`,`/Helv ${(0,_core_utils.numberToString)(newFontSize)} Tf`],vShift=(0,_core_utils.numberToString)(lineHeight);for(const line of encodedLines)buffer.push(`0 -${vShift} Td (${(0,_util.escapeString)(line)}) Tj`);buffer.push("ET","Q");const appearance=buffer.join("\n"),appearanceStreamDict=new _primitives.Dict(xref);if(appearanceStreamDict.set("FormType",1),appearanceStreamDict.set("Subtype",_primitives.Name.get("Form")),appearanceStreamDict.set("Type",_primitives.Name.get("XObject")),appearanceStreamDict.set("BBox",[0,0,w,h]),appearanceStreamDict.set("Length",appearance.length),appearanceStreamDict.set("Resources",resources),rotation){const matrix=WidgetAnnotation._getRotationMatrix(rotation,w,h);appearanceStreamDict.set("Matrix",matrix)}const ap=new _stream.StringStream(appearance);return ap.dict=appearanceStreamDict,ap}}class LineAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters);const{dict}=parameters;this.data.annotationType=_util.AnnotationType.LINE;const lineCoordinates=dict.getArray("L");if(this.data.lineCoordinates=_util.Util.normalizeRect(lineCoordinates),this.setLineEndings(dict.getArray("LE")),this.data.lineEndings=this.lineEndings,!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=dict.get("CA");let fillColor=null,interiorColor=dict.getArray("IC");interiorColor&&(interiorColor=getRgbColor(interiorColor,null),fillColor=interiorColor?Array.from(interiorColor).map((c=>c/255)):null);const fillAlpha=fillColor?strokeAlpha:null,borderWidth=this.borderStyle.width||1,borderAdjust=2*borderWidth,bbox=[this.data.lineCoordinates[0]-borderAdjust,this.data.lineCoordinates[1]-borderAdjust,this.data.lineCoordinates[2]+borderAdjust,this.data.lineCoordinates[3]+borderAdjust];_util.Util.intersect(this.rectangle,bbox)||(this.rectangle=bbox),this._setDefaultAppearance({xref:parameters.xref,extra:`${borderWidth} w`,strokeColor,fillColor,strokeAlpha,fillAlpha,pointsCallback:(buffer,points)=>(buffer.push(`${lineCoordinates[0]} ${lineCoordinates[1]} m`,`${lineCoordinates[2]} ${lineCoordinates[3]} l`,"S"),[points[0].x-borderWidth,points[1].x+borderWidth,points[3].y-borderWidth,points[1].y+borderWidth])})}}}class SquareAnnotation extends MarkupAnnotation{constructor(parameters){if(super(parameters),this.data.annotationType=_util.AnnotationType.SQUARE,!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=parameters.dict.get("CA");let fillColor=null,interiorColor=parameters.dict.getArray("IC");interiorColor&&(interiorColor=getRgbColor(interiorColor,null),fillColor=interiorColor?Array.from(interiorColor).map((c=>c/255)):null);const fillAlpha=fillColor?strokeAlpha:null;if(0===this.borderStyle.width&&!fillColor)return;this._setDefaultAppearance({xref:parameters.xref,extra:`${this.borderStyle.width} w`,strokeColor,fillColor,strokeAlpha,fillAlpha,pointsCallback:(buffer,points)=>{const x=points[2].x+this.borderStyle.width/2,y=points[2].y+this.borderStyle.width/2,width=points[3].x-points[2].x-this.borderStyle.width,height=points[1].y-points[3].y-this.borderStyle.width;return buffer.push(`${x} ${y} ${width} ${height} re`),fillColor?buffer.push("B"):buffer.push("S"),[points[0].x,points[1].x,points[3].y,points[1].y]}})}}}class CircleAnnotation extends MarkupAnnotation{constructor(parameters){if(super(parameters),this.data.annotationType=_util.AnnotationType.CIRCLE,!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=parameters.dict.get("CA");let fillColor=null,interiorColor=parameters.dict.getArray("IC");interiorColor&&(interiorColor=getRgbColor(interiorColor,null),fillColor=interiorColor?Array.from(interiorColor).map((c=>c/255)):null);const fillAlpha=fillColor?strokeAlpha:null;if(0===this.borderStyle.width&&!fillColor)return;const controlPointsDistance=4/3*Math.tan(Math.PI/8);this._setDefaultAppearance({xref:parameters.xref,extra:`${this.borderStyle.width} w`,strokeColor,fillColor,strokeAlpha,fillAlpha,pointsCallback:(buffer,points)=>{const x0=points[0].x+this.borderStyle.width/2,y0=points[0].y-this.borderStyle.width/2,x1=points[3].x-this.borderStyle.width/2,y1=points[3].y+this.borderStyle.width/2,xMid=x0+(x1-x0)/2,yMid=y0+(y1-y0)/2,xOffset=(x1-x0)/2*controlPointsDistance,yOffset=(y1-y0)/2*controlPointsDistance;return buffer.push(`${xMid} ${y1} m`,`${xMid+xOffset} ${y1} ${x1} ${yMid+yOffset} ${x1} ${yMid} c`,`${x1} ${yMid-yOffset} ${xMid+xOffset} ${y0} ${xMid} ${y0} c`,`${xMid-xOffset} ${y0} ${x0} ${yMid-yOffset} ${x0} ${yMid} c`,`${x0} ${yMid+yOffset} ${xMid-xOffset} ${y1} ${xMid} ${y1} c`,"h"),fillColor?buffer.push("B"):buffer.push("S"),[points[0].x,points[1].x,points[3].y,points[1].y]}})}}}class PolylineAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters);const{dict}=parameters;this.data.annotationType=_util.AnnotationType.POLYLINE,this.data.vertices=[],this instanceof PolygonAnnotation||(this.setLineEndings(dict.getArray("LE")),this.data.lineEndings=this.lineEndings);const rawVertices=dict.getArray("Vertices");if(Array.isArray(rawVertices)){for(let i=0,ii=rawVertices.length;i<ii;i+=2)this.data.vertices.push({x:rawVertices[i],y:rawVertices[i+1]});if(!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=dict.get("CA"),borderWidth=this.borderStyle.width||1,borderAdjust=2*borderWidth,bbox=[1/0,1/0,-1/0,-1/0];for(const vertex of this.data.vertices)bbox[0]=Math.min(bbox[0],vertex.x-borderAdjust),bbox[1]=Math.min(bbox[1],vertex.y-borderAdjust),bbox[2]=Math.max(bbox[2],vertex.x+borderAdjust),bbox[3]=Math.max(bbox[3],vertex.y+borderAdjust);_util.Util.intersect(this.rectangle,bbox)||(this.rectangle=bbox),this._setDefaultAppearance({xref:parameters.xref,extra:`${borderWidth} w`,strokeColor,strokeAlpha,pointsCallback:(buffer,points)=>{const vertices=this.data.vertices;for(let i=0,ii=vertices.length;i<ii;i++)buffer.push(`${vertices[i].x} ${vertices[i].y} ${0===i?"m":"l"}`);return buffer.push("S"),[points[0].x,points[1].x,points[3].y,points[1].y]}})}}}}class PolygonAnnotation extends PolylineAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.POLYGON}}class CaretAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.CARET}}class InkAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.INK,this.data.inkLists=[];const rawInkLists=parameters.dict.getArray("InkList");if(!Array.isArray(rawInkLists))return;const xref=parameters.xref;for(let i=0,ii=rawInkLists.length;i<ii;++i){this.data.inkLists.push([]);for(let j=0,jj=rawInkLists[i].length;j<jj;j+=2)this.data.inkLists[i].push({x:xref.fetchIfRef(rawInkLists[i][j]),y:xref.fetchIfRef(rawInkLists[i][j+1])})}if(!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=parameters.dict.get("CA"),borderWidth=this.borderStyle.width||1,borderAdjust=2*borderWidth,bbox=[1/0,1/0,-1/0,-1/0];for(const inkLists of this.data.inkLists)for(const vertex of inkLists)bbox[0]=Math.min(bbox[0],vertex.x-borderAdjust),bbox[1]=Math.min(bbox[1],vertex.y-borderAdjust),bbox[2]=Math.max(bbox[2],vertex.x+borderAdjust),bbox[3]=Math.max(bbox[3],vertex.y+borderAdjust);_util.Util.intersect(this.rectangle,bbox)||(this.rectangle=bbox),this._setDefaultAppearance({xref:parameters.xref,extra:`${borderWidth} w`,strokeColor,strokeAlpha,pointsCallback:(buffer,points)=>{for(const inkList of this.data.inkLists){for(let i=0,ii=inkList.length;i<ii;i++)buffer.push(`${inkList[i].x} ${inkList[i].y} ${0===i?"m":"l"}`);buffer.push("S")}return[points[0].x,points[1].x,points[3].y,points[1].y]}})}}static createNewDict(annotation,xref,{apRef,ap}){const{paths,rect,rotation}=annotation,ink=new _primitives.Dict(xref);ink.set("Type",_primitives.Name.get("Annot")),ink.set("Subtype",_primitives.Name.get("Ink")),ink.set("CreationDate",`D:${(0,_util.getModificationDate)()}`),ink.set("Rect",rect),ink.set("InkList",paths.map((p=>p.points))),ink.set("F",4),ink.set("Border",[0,0,0]),ink.set("Rotate",rotation);const n=new _primitives.Dict(xref);return ink.set("AP",n),apRef?n.set("N",apRef):n.set("N",ap),ink}static async createNewAppearanceStream(annotation,xref,params){const{color,rect,rotation,paths,thickness,opacity}=annotation,[x1,y1,x2,y2]=rect;let w=x2-x1,h=y2-y1;rotation%180!=0&&([w,h]=[h,w]);const appearanceBuffer=[`${thickness} w 1 J 1 j`,`${(0,_default_appearance.getPdfColor)(color,!1)}`];1!==opacity&&appearanceBuffer.push("/R0 gs");const buffer=[];for(const{bezier}of paths){buffer.length=0,buffer.push(`${(0,_core_utils.numberToString)(bezier[0])} ${(0,_core_utils.numberToString)(bezier[1])} m`);for(let i=2,ii=bezier.length;i<ii;i+=6){const curve=bezier.slice(i,i+6).map(_core_utils.numberToString).join(" ");buffer.push(`${curve} c`)}buffer.push("S"),appearanceBuffer.push(buffer.join("\n"))}const appearance=appearanceBuffer.join("\n"),appearanceStreamDict=new _primitives.Dict(xref);if(appearanceStreamDict.set("FormType",1),appearanceStreamDict.set("Subtype",_primitives.Name.get("Form")),appearanceStreamDict.set("Type",_primitives.Name.get("XObject")),appearanceStreamDict.set("BBox",[0,0,w,h]),appearanceStreamDict.set("Length",appearance.length),rotation){const matrix=WidgetAnnotation._getRotationMatrix(rotation,w,h);appearanceStreamDict.set("Matrix",matrix)}if(1!==opacity){const resources=new _primitives.Dict(xref),extGState=new _primitives.Dict(xref),r0=new _primitives.Dict(xref);r0.set("CA",opacity),r0.set("Type",_primitives.Name.get("ExtGState")),extGState.set("R0",r0),resources.set("ExtGState",extGState),appearanceStreamDict.set("Resources",resources)}const ap=new _stream.StringStream(appearance);return ap.dict=appearanceStreamDict,ap}}class HighlightAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.HIGHLIGHT;if(this.data.quadPoints=getQuadPoints(parameters.dict,null)){const resources=this.appearance&&this.appearance.dict.get("Resources");if(!this.appearance||!resources||!resources.has("ExtGState")){this.appearance&&(0,_util.warn)("HighlightAnnotation - ignoring built-in appearance stream.");const fillColor=this.color?Array.from(this.color).map((c=>c/255)):[1,1,0],fillAlpha=parameters.dict.get("CA");this._setDefaultAppearance({xref:parameters.xref,fillColor,blendMode:"Multiply",fillAlpha,pointsCallback:(buffer,points)=>(buffer.push(`${points[0].x} ${points[0].y} m`,`${points[1].x} ${points[1].y} l`,`${points[3].x} ${points[3].y} l`,`${points[2].x} ${points[2].y} l`,"f"),[points[0].x,points[1].x,points[3].y,points[1].y])})}}else this.data.hasPopup=!1}}class UnderlineAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.UNDERLINE;if(this.data.quadPoints=getQuadPoints(parameters.dict,null)){if(!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=parameters.dict.get("CA");this._setDefaultAppearance({xref:parameters.xref,extra:"[] 0 d 1 w",strokeColor,strokeAlpha,pointsCallback:(buffer,points)=>(buffer.push(`${points[2].x} ${points[2].y} m`,`${points[3].x} ${points[3].y} l`,"S"),[points[0].x,points[1].x,points[3].y,points[1].y])})}}else this.data.hasPopup=!1}}class SquigglyAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.SQUIGGLY;if(this.data.quadPoints=getQuadPoints(parameters.dict,null)){if(!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=parameters.dict.get("CA");this._setDefaultAppearance({xref:parameters.xref,extra:"[] 0 d 1 w",strokeColor,strokeAlpha,pointsCallback:(buffer,points)=>{const dy=(points[0].y-points[2].y)/6;let shift=dy,x=points[2].x;const y=points[2].y,xEnd=points[3].x;buffer.push(`${x} ${y+shift} m`);do{x+=2,shift=0===shift?dy:0,buffer.push(`${x} ${y+shift} l`)}while(x<xEnd);return buffer.push("S"),[points[2].x,xEnd,y-2*dy,y+2*dy]}})}}else this.data.hasPopup=!1}}class StrikeOutAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.STRIKEOUT;if(this.data.quadPoints=getQuadPoints(parameters.dict,null)){if(!this.appearance){const strokeColor=this.color?Array.from(this.color).map((c=>c/255)):[0,0,0],strokeAlpha=parameters.dict.get("CA");this._setDefaultAppearance({xref:parameters.xref,extra:"[] 0 d 1 w",strokeColor,strokeAlpha,pointsCallback:(buffer,points)=>(buffer.push((points[0].x+points[2].x)/2+" "+(points[0].y+points[2].y)/2+" m",(points[1].x+points[3].x)/2+" "+(points[1].y+points[3].y)/2+" l","S"),[points[0].x,points[1].x,points[3].y,points[1].y])})}}else this.data.hasPopup=!1}}class StampAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters),this.data.annotationType=_util.AnnotationType.STAMP}}class FileAttachmentAnnotation extends MarkupAnnotation{constructor(parameters){super(parameters);const file=new _file_spec.FileSpec(parameters.dict.get("FS"),parameters.xref);this.data.annotationType=_util.AnnotationType.FILEATTACHMENT,this.data.file=file.serializable}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.createDefaultAppearance=function createDefaultAppearance({fontSize,fontName,fontColor}){return`/${(0,_core_utils.escapePDFName)(fontName)} ${fontSize} Tf ${getPdfColor(fontColor,!0)}`},exports.getPdfColor=getPdfColor,exports.parseDefaultAppearance=function parseDefaultAppearance(str){return new DefaultAppearanceEvaluator(str).parse()};var _core_utils=__w_pdfjs_require__(6),_util=__w_pdfjs_require__(2),_colorspace=__w_pdfjs_require__(14),_evaluator=__w_pdfjs_require__(15),_primitives=__w_pdfjs_require__(5),_stream=__w_pdfjs_require__(10);class DefaultAppearanceEvaluator extends _evaluator.EvaluatorPreprocessor{constructor(str){super(new _stream.StringStream(str))}parse(){const operation={fn:0,args:[]},result={fontSize:0,fontName:"",fontColor:new Uint8ClampedArray(3)};try{for(;operation.args.length=0,this.read(operation);){if(0!==this.savedStatesDepth)continue;const{fn,args}=operation;switch(0|fn){case _util.OPS.setFont:const[fontName,fontSize]=args;fontName instanceof _primitives.Name&&(result.fontName=fontName.name),"number"==typeof fontSize&&fontSize>0&&(result.fontSize=fontSize);break;case _util.OPS.setFillRGBColor:_colorspace.ColorSpace.singletons.rgb.getRgbItem(args,0,result.fontColor,0);break;case _util.OPS.setFillGray:_colorspace.ColorSpace.singletons.gray.getRgbItem(args,0,result.fontColor,0);break;case _util.OPS.setFillColorSpace:_colorspace.ColorSpace.singletons.cmyk.getRgbItem(args,0,result.fontColor,0)}}}catch(reason){(0,_util.warn)(`parseDefaultAppearance - ignoring errors: "${reason}".`)}return result}}function getPdfColor(color,isFill){if(color[0]===color[1]&&color[1]===color[2]){const gray=color[0]/255;return`${(0,_core_utils.numberToString)(gray)} ${isFill?"g":"G"}`}return Array.from(color).map((c=>(0,_core_utils.numberToString)(c/255))).join(" ")+" "+(isFill?"rg":"RG")}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ColorSpace=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_base_stream=__w_pdfjs_require__(7),_core_utils=__w_pdfjs_require__(6);class ColorSpace{constructor(name,numComps){this.constructor===ColorSpace&&(0,_util.unreachable)("Cannot initialize ColorSpace."),this.name=name,this.numComps=numComps}getRgb(src,srcOffset){const rgb=new Uint8ClampedArray(3);return this.getRgbItem(src,srcOffset,rgb,0),rgb}getRgbItem(src,srcOffset,dest,destOffset){(0,_util.unreachable)("Should not call ColorSpace.getRgbItem")}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){(0,_util.unreachable)("Should not call ColorSpace.getRgbBuffer")}getOutputLength(inputLength,alpha01){(0,_util.unreachable)("Should not call ColorSpace.getOutputLength")}isPassthrough(bits){return!1}isDefaultDecode(decodeMap,bpc){return ColorSpace.isDefaultDecode(decodeMap,this.numComps)}fillRgb(dest,originalWidth,originalHeight,width,height,actualHeight,bpc,comps,alpha01){const count=originalWidth*originalHeight;let rgbBuf=null;const numComponentColors=1<<bpc,needsResizing=originalHeight!==height||originalWidth!==width;if(this.isPassthrough(bpc))rgbBuf=comps;else if(1===this.numComps&&count>numComponentColors&&"DeviceGray"!==this.name&&"DeviceRGB"!==this.name){const allColors=bpc<=8?new Uint8Array(numComponentColors):new Uint16Array(numComponentColors);for(let i=0;i<numComponentColors;i++)allColors[i]=i;const colorMap=new Uint8ClampedArray(3*numComponentColors);if(this.getRgbBuffer(allColors,0,numComponentColors,colorMap,0,bpc,0),needsResizing){rgbBuf=new Uint8Array(3*count);let rgbPos=0;for(let i=0;i<count;++i){const key=3*comps[i];rgbBuf[rgbPos++]=colorMap[key],rgbBuf[rgbPos++]=colorMap[key+1],rgbBuf[rgbPos++]=colorMap[key+2]}}else{let destPos=0;for(let i=0;i<count;++i){const key=3*comps[i];dest[destPos++]=colorMap[key],dest[destPos++]=colorMap[key+1],dest[destPos++]=colorMap[key+2],destPos+=alpha01}}}else needsResizing?(rgbBuf=new Uint8ClampedArray(3*count),this.getRgbBuffer(comps,0,count,rgbBuf,0,bpc,0)):this.getRgbBuffer(comps,0,width*actualHeight,dest,0,bpc,alpha01);if(rgbBuf)if(needsResizing)!function resizeRgbImage(src,dest,w1,h1,w2,h2,alpha01){alpha01=1!==alpha01?0:alpha01;const xRatio=w1/w2,yRatio=h1/h2;let oldIndex,newIndex=0;const xScaled=new Uint16Array(w2),w1Scanline=3*w1;for(let i=0;i<w2;i++)xScaled[i]=3*Math.floor(i*xRatio);for(let i=0;i<h2;i++){const py=Math.floor(i*yRatio)*w1Scanline;for(let j=0;j<w2;j++)oldIndex=py+xScaled[j],dest[newIndex++]=src[oldIndex++],dest[newIndex++]=src[oldIndex++],dest[newIndex++]=src[oldIndex++],newIndex+=alpha01}}(rgbBuf,dest,originalWidth,originalHeight,width,height,alpha01);else{let destPos=0,rgbPos=0;for(let i=0,ii=width*actualHeight;i<ii;i++)dest[destPos++]=rgbBuf[rgbPos++],dest[destPos++]=rgbBuf[rgbPos++],dest[destPos++]=rgbBuf[rgbPos++],destPos+=alpha01}}get usesZeroToOneRange(){return(0,_util.shadow)(this,"usesZeroToOneRange",!0)}static _cache(cacheKey,xref,localColorSpaceCache,parsedColorSpace){if(!localColorSpaceCache)throw new Error('ColorSpace._cache - expected "localColorSpaceCache" argument.');if(!parsedColorSpace)throw new Error('ColorSpace._cache - expected "parsedColorSpace" argument.');let csName,csRef;cacheKey instanceof _primitives.Ref&&(csRef=cacheKey,cacheKey=xref.fetch(cacheKey)),cacheKey instanceof _primitives.Name&&(csName=cacheKey.name),(csName||csRef)&&localColorSpaceCache.set(csName,csRef,parsedColorSpace)}static getCached(cacheKey,xref,localColorSpaceCache){if(!localColorSpaceCache)throw new Error('ColorSpace.getCached - expected "localColorSpaceCache" argument.');if(cacheKey instanceof _primitives.Ref){const localColorSpace=localColorSpaceCache.getByRef(cacheKey);if(localColorSpace)return localColorSpace;try{cacheKey=xref.fetch(cacheKey)}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex}}if(cacheKey instanceof _primitives.Name){const localColorSpace=localColorSpaceCache.getByName(cacheKey.name);if(localColorSpace)return localColorSpace}return null}static async parseAsync({cs,xref,resources=null,pdfFunctionFactory,localColorSpaceCache}){const parsedColorSpace=this._parse(cs,xref,resources,pdfFunctionFactory);return this._cache(cs,xref,localColorSpaceCache,parsedColorSpace),parsedColorSpace}static parse({cs,xref,resources=null,pdfFunctionFactory,localColorSpaceCache}){const cachedColorSpace=this.getCached(cs,xref,localColorSpaceCache);if(cachedColorSpace)return cachedColorSpace;const parsedColorSpace=this._parse(cs,xref,resources,pdfFunctionFactory);return this._cache(cs,xref,localColorSpaceCache,parsedColorSpace),parsedColorSpace}static _parse(cs,xref,resources=null,pdfFunctionFactory){if((cs=xref.fetchIfRef(cs))instanceof _primitives.Name)switch(cs.name){case"G":case"DeviceGray":return this.singletons.gray;case"RGB":case"DeviceRGB":return this.singletons.rgb;case"CMYK":case"DeviceCMYK":return this.singletons.cmyk;case"Pattern":return new PatternCS(null);default:if(resources instanceof _primitives.Dict){const colorSpaces=resources.get("ColorSpace");if(colorSpaces instanceof _primitives.Dict){const resourcesCS=colorSpaces.get(cs.name);if(resourcesCS){if(resourcesCS instanceof _primitives.Name)return this._parse(resourcesCS,xref,resources,pdfFunctionFactory);cs=resourcesCS;break}}}throw new _util.FormatError(`Unrecognized ColorSpace: ${cs.name}`)}if(Array.isArray(cs)){const mode=xref.fetchIfRef(cs[0]).name;let params,numComps,baseCS,whitePoint,blackPoint,gamma;switch(mode){case"G":case"DeviceGray":return this.singletons.gray;case"RGB":case"DeviceRGB":return this.singletons.rgb;case"CMYK":case"DeviceCMYK":return this.singletons.cmyk;case"CalGray":return params=xref.fetchIfRef(cs[1]),whitePoint=params.getArray("WhitePoint"),blackPoint=params.getArray("BlackPoint"),gamma=params.get("Gamma"),new CalGrayCS(whitePoint,blackPoint,gamma);case"CalRGB":params=xref.fetchIfRef(cs[1]),whitePoint=params.getArray("WhitePoint"),blackPoint=params.getArray("BlackPoint"),gamma=params.getArray("Gamma");const matrix=params.getArray("Matrix");return new CalRGBCS(whitePoint,blackPoint,gamma,matrix);case"ICCBased":const dict=xref.fetchIfRef(cs[1]).dict;numComps=dict.get("N");const alt=dict.get("Alternate");if(alt){const altCS=this._parse(alt,xref,resources,pdfFunctionFactory);if(altCS.numComps===numComps)return altCS;(0,_util.warn)("ICCBased color space: Ignoring incorrect /Alternate entry.")}if(1===numComps)return this.singletons.gray;if(3===numComps)return this.singletons.rgb;if(4===numComps)return this.singletons.cmyk;break;case"Pattern":return baseCS=cs[1]||null,baseCS&&(baseCS=this._parse(baseCS,xref,resources,pdfFunctionFactory)),new PatternCS(baseCS);case"I":case"Indexed":baseCS=this._parse(cs[1],xref,resources,pdfFunctionFactory);const hiVal=xref.fetchIfRef(cs[2])+1,lookup=xref.fetchIfRef(cs[3]);return new IndexedCS(baseCS,hiVal,lookup);case"Separation":case"DeviceN":const name=xref.fetchIfRef(cs[1]);numComps=Array.isArray(name)?name.length:1,baseCS=this._parse(cs[2],xref,resources,pdfFunctionFactory);const tintFn=pdfFunctionFactory.create(cs[3]);return new AlternateCS(numComps,baseCS,tintFn);case"Lab":params=xref.fetchIfRef(cs[1]),whitePoint=params.getArray("WhitePoint"),blackPoint=params.getArray("BlackPoint");const range=params.getArray("Range");return new LabCS(whitePoint,blackPoint,range);default:throw new _util.FormatError(`Unimplemented ColorSpace object: ${mode}`)}}throw new _util.FormatError(`Unrecognized ColorSpace object: ${cs}`)}static isDefaultDecode(decode,numComps){if(!Array.isArray(decode))return!0;if(2*numComps!==decode.length)return(0,_util.warn)("The decode map is not the correct length"),!0;for(let i=0,ii=decode.length;i<ii;i+=2)if(0!==decode[i]||1!==decode[i+1])return!1;return!0}static get singletons(){return(0,_util.shadow)(this,"singletons",{get gray(){return(0,_util.shadow)(this,"gray",new DeviceGrayCS)},get rgb(){return(0,_util.shadow)(this,"rgb",new DeviceRgbCS)},get cmyk(){return(0,_util.shadow)(this,"cmyk",new DeviceCmykCS)}})}}exports.ColorSpace=ColorSpace;class AlternateCS extends ColorSpace{constructor(numComps,base,tintFn){super("Alternate",numComps),this.base=base,this.tintFn=tintFn,this.tmpBuf=new Float32Array(base.numComps)}getRgbItem(src,srcOffset,dest,destOffset){const tmpBuf=this.tmpBuf;this.tintFn(src,srcOffset,tmpBuf,0),this.base.getRgbItem(tmpBuf,0,dest,destOffset)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const tintFn=this.tintFn,base=this.base,scale=1/((1<<bits)-1),baseNumComps=base.numComps,usesZeroToOneRange=base.usesZeroToOneRange,isPassthrough=(base.isPassthrough(8)||!usesZeroToOneRange)&&0===alpha01;let pos=isPassthrough?destOffset:0;const baseBuf=isPassthrough?dest:new Uint8ClampedArray(baseNumComps*count),numComps=this.numComps,scaled=new Float32Array(numComps),tinted=new Float32Array(baseNumComps);let i,j;for(i=0;i<count;i++){for(j=0;j<numComps;j++)scaled[j]=src[srcOffset++]*scale;if(tintFn(scaled,0,tinted,0),usesZeroToOneRange)for(j=0;j<baseNumComps;j++)baseBuf[pos++]=255*tinted[j];else base.getRgbItem(tinted,0,baseBuf,pos),pos+=baseNumComps}isPassthrough||base.getRgbBuffer(baseBuf,0,count,dest,destOffset,8,alpha01)}getOutputLength(inputLength,alpha01){return this.base.getOutputLength(inputLength*this.base.numComps/this.numComps,alpha01)}}class PatternCS extends ColorSpace{constructor(baseCS){super("Pattern",null),this.base=baseCS}isDefaultDecode(decodeMap,bpc){(0,_util.unreachable)("Should not call PatternCS.isDefaultDecode")}}class IndexedCS extends ColorSpace{constructor(base,highVal,lookup){super("Indexed",1),this.base=base,this.highVal=highVal;const length=base.numComps*highVal;if(this.lookup=new Uint8Array(length),lookup instanceof _base_stream.BaseStream){const bytes=lookup.getBytes(length);this.lookup.set(bytes)}else{if("string"!=typeof lookup)throw new _util.FormatError(`IndexedCS - unrecognized lookup table: ${lookup}`);for(let i=0;i<length;++i)this.lookup[i]=255&lookup.charCodeAt(i)}}getRgbItem(src,srcOffset,dest,destOffset){const numComps=this.base.numComps,start=src[srcOffset]*numComps;this.base.getRgbBuffer(this.lookup,start,1,dest,destOffset,8,0)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const base=this.base,numComps=base.numComps,outputDelta=base.getOutputLength(numComps,alpha01),lookup=this.lookup;for(let i=0;i<count;++i){const lookupPos=src[srcOffset++]*numComps;base.getRgbBuffer(lookup,lookupPos,1,dest,destOffset,8,alpha01),destOffset+=outputDelta}}getOutputLength(inputLength,alpha01){return this.base.getOutputLength(inputLength*this.base.numComps,alpha01)}isDefaultDecode(decodeMap,bpc){return!Array.isArray(decodeMap)||(2!==decodeMap.length?((0,_util.warn)("Decode map length is not correct"),!0):!Number.isInteger(bpc)||bpc<1?((0,_util.warn)("Bits per component is not correct"),!0):0===decodeMap[0]&&decodeMap[1]===(1<<bpc)-1)}}class DeviceGrayCS extends ColorSpace{constructor(){super("DeviceGray",1)}getRgbItem(src,srcOffset,dest,destOffset){const c=255*src[srcOffset];dest[destOffset]=dest[destOffset+1]=dest[destOffset+2]=c}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=255/((1<<bits)-1);let j=srcOffset,q=destOffset;for(let i=0;i<count;++i){const c=scale*src[j++];dest[q++]=c,dest[q++]=c,dest[q++]=c,q+=alpha01}}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)}}class DeviceRgbCS extends ColorSpace{constructor(){super("DeviceRGB",3)}getRgbItem(src,srcOffset,dest,destOffset){dest[destOffset]=255*src[srcOffset],dest[destOffset+1]=255*src[srcOffset+1],dest[destOffset+2]=255*src[srcOffset+2]}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){if(8===bits&&0===alpha01)return void dest.set(src.subarray(srcOffset,srcOffset+3*count),destOffset);const scale=255/((1<<bits)-1);let j=srcOffset,q=destOffset;for(let i=0;i<count;++i)dest[q++]=scale*src[j++],dest[q++]=scale*src[j++],dest[q++]=scale*src[j++],q+=alpha01}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0}isPassthrough(bits){return 8===bits}}const DeviceCmykCS=function DeviceCmykCSClosure(){function convertToRgb(src,srcOffset,srcScale,dest,destOffset){const c=src[srcOffset]*srcScale,m=src[srcOffset+1]*srcScale,y=src[srcOffset+2]*srcScale,k=src[srcOffset+3]*srcScale;dest[destOffset]=255+c*(-4.387332384609988*c+54.48615194189176*m+18.82290502165302*y+212.25662451639585*k-285.2331026137004)+m*(1.7149763477362134*m-5.6096736904047315*y+-17.873870861415444*k-5.497006427196366)+y*(-2.5217340131683033*y-21.248923337353073*k+17.5119270841813)+k*(-21.86122147463605*k-189.48180835922747),dest[destOffset+1]=255+c*(8.841041422036149*c+60.118027045597366*m+6.871425592049007*y+31.159100130055922*k-79.2970844816548)+m*(-15.310361306967817*m+17.575251261109482*y+131.35250912493976*k-190.9453302588951)+y*(4.444339102852739*y+9.8632861493405*k-24.86741582555878)+k*(-20.737325471181034*k-187.80453709719578),dest[destOffset+2]=255+c*(.8842522430003296*c+8.078677503112928*m+30.89978309703729*y-.23883238689178934*k-14.183576799673286)+m*(10.49593273432072*m+63.02378494754052*y+50.606957656360734*k-112.23884253719248)+y*(.03296041114873217*y+115.60384449646641*k-193.58209356861505)+k*(-22.33816807309886*k-180.12613974708367)}return class DeviceCmykCS extends ColorSpace{constructor(){super("DeviceCMYK",4)}getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(src,srcOffset,1,dest,destOffset)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=1/((1<<bits)-1);for(let i=0;i<count;i++)convertToRgb(src,srcOffset,scale,dest,destOffset),srcOffset+=4,destOffset+=3+alpha01}getOutputLength(inputLength,alpha01){return inputLength/4*(3+alpha01)|0}}}(),CalGrayCS=function CalGrayCSClosure(){function convertToRgb(cs,src,srcOffset,dest,destOffset,scale){const AG=(src[srcOffset]*scale)**cs.G,L=cs.YW*AG,val=Math.max(295.8*L**.3333333333333333-40.8,0);dest[destOffset]=val,dest[destOffset+1]=val,dest[destOffset+2]=val}return class CalGrayCS extends ColorSpace{constructor(whitePoint,blackPoint,gamma){if(super("CalGray",1),!whitePoint)throw new _util.FormatError("WhitePoint missing - required for color space CalGray");if(blackPoint=blackPoint||[0,0,0],gamma=gamma||1,this.XW=whitePoint[0],this.YW=whitePoint[1],this.ZW=whitePoint[2],this.XB=blackPoint[0],this.YB=blackPoint[1],this.ZB=blackPoint[2],this.G=gamma,this.XW<0||this.ZW<0||1!==this.YW)throw new _util.FormatError(`Invalid WhitePoint components for ${this.name}, no fallback available`);(this.XB<0||this.YB<0||this.ZB<0)&&((0,_util.info)(`Invalid BlackPoint for ${this.name}, falling back to default.`),this.XB=this.YB=this.ZB=0),0===this.XB&&0===this.YB&&0===this.ZB||(0,_util.warn)(`${this.name}, BlackPoint: XB: ${this.XB}, YB: ${this.YB}, ZB: ${this.ZB}, only default values are supported.`),this.G<1&&((0,_util.info)(`Invalid Gamma: ${this.G} for ${this.name}, falling back to default.`),this.G=1)}getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(this,src,srcOffset,dest,destOffset,1)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=1/((1<<bits)-1);for(let i=0;i<count;++i)convertToRgb(this,src,srcOffset,dest,destOffset,scale),srcOffset+=1,destOffset+=3+alpha01}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)}}}(),CalRGBCS=function CalRGBCSClosure(){const BRADFORD_SCALE_MATRIX=new Float32Array([.8951,.2664,-.1614,-.7502,1.7135,.0367,.0389,-.0685,1.0296]),BRADFORD_SCALE_INVERSE_MATRIX=new Float32Array([.9869929,-.1470543,.1599627,.4323053,.5183603,.0492912,-.0085287,.0400428,.9684867]),SRGB_D65_XYZ_TO_RGB_MATRIX=new Float32Array([3.2404542,-1.5371385,-.4985314,-.969266,1.8760108,.041556,.0556434,-.2040259,1.0572252]),FLAT_WHITEPOINT_MATRIX=new Float32Array([1,1,1]),tempNormalizeMatrix=new Float32Array(3),tempConvertMatrix1=new Float32Array(3),tempConvertMatrix2=new Float32Array(3);function matrixProduct(a,b,result){result[0]=a[0]*b[0]+a[1]*b[1]+a[2]*b[2],result[1]=a[3]*b[0]+a[4]*b[1]+a[5]*b[2],result[2]=a[6]*b[0]+a[7]*b[1]+a[8]*b[2]}function sRGBTransferFunction(color){return color<=.0031308?adjustToRange(0,1,12.92*color):color>=.99554525?1:adjustToRange(0,1,1.055*color**(1/2.4)-.055)}function adjustToRange(min,max,value){return Math.max(min,Math.min(max,value))}function decodeL(L){return L<0?-decodeL(-L):L>8?((L+16)/116)**3:.0011070564598794539*L}function convertToRgb(cs,src,srcOffset,dest,destOffset,scale){const A=adjustToRange(0,1,src[srcOffset]*scale),B=adjustToRange(0,1,src[srcOffset+1]*scale),C=adjustToRange(0,1,src[srcOffset+2]*scale),AGR=1===A?1:A**cs.GR,BGG=1===B?1:B**cs.GG,CGB=1===C?1:C**cs.GB,X=cs.MXA*AGR+cs.MXB*BGG+cs.MXC*CGB,Y=cs.MYA*AGR+cs.MYB*BGG+cs.MYC*CGB,Z=cs.MZA*AGR+cs.MZB*BGG+cs.MZC*CGB,XYZ=tempConvertMatrix1;XYZ[0]=X,XYZ[1]=Y,XYZ[2]=Z;const XYZ_Flat=tempConvertMatrix2;!function normalizeWhitePointToFlat(sourceWhitePoint,XYZ_In,result){if(1===sourceWhitePoint[0]&&1===sourceWhitePoint[2])return result[0]=XYZ_In[0],result[1]=XYZ_In[1],void(result[2]=XYZ_In[2]);const LMS=result;matrixProduct(BRADFORD_SCALE_MATRIX,XYZ_In,LMS);const LMS_Flat=tempNormalizeMatrix;!function convertToFlat(sourceWhitePoint,LMS,result){result[0]=1*LMS[0]/sourceWhitePoint[0],result[1]=1*LMS[1]/sourceWhitePoint[1],result[2]=1*LMS[2]/sourceWhitePoint[2]}(sourceWhitePoint,LMS,LMS_Flat),matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX,LMS_Flat,result)}(cs.whitePoint,XYZ,XYZ_Flat);const XYZ_Black=tempConvertMatrix1;!function compensateBlackPoint(sourceBlackPoint,XYZ_Flat,result){if(0===sourceBlackPoint[0]&&0===sourceBlackPoint[1]&&0===sourceBlackPoint[2])return result[0]=XYZ_Flat[0],result[1]=XYZ_Flat[1],void(result[2]=XYZ_Flat[2]);const zeroDecodeL=decodeL(0),X_Scale=(1-zeroDecodeL)/(1-decodeL(sourceBlackPoint[0])),X_Offset=1-X_Scale,Y_Scale=(1-zeroDecodeL)/(1-decodeL(sourceBlackPoint[1])),Y_Offset=1-Y_Scale,Z_Scale=(1-zeroDecodeL)/(1-decodeL(sourceBlackPoint[2])),Z_Offset=1-Z_Scale;result[0]=XYZ_Flat[0]*X_Scale+X_Offset,result[1]=XYZ_Flat[1]*Y_Scale+Y_Offset,result[2]=XYZ_Flat[2]*Z_Scale+Z_Offset}(cs.blackPoint,XYZ_Flat,XYZ_Black);const XYZ_D65=tempConvertMatrix2;!function normalizeWhitePointToD65(sourceWhitePoint,XYZ_In,result){const LMS=result;matrixProduct(BRADFORD_SCALE_MATRIX,XYZ_In,LMS);const LMS_D65=tempNormalizeMatrix;!function convertToD65(sourceWhitePoint,LMS,result){result[0]=.95047*LMS[0]/sourceWhitePoint[0],result[1]=1*LMS[1]/sourceWhitePoint[1],result[2]=1.08883*LMS[2]/sourceWhitePoint[2]}(sourceWhitePoint,LMS,LMS_D65),matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX,LMS_D65,result)}(FLAT_WHITEPOINT_MATRIX,XYZ_Black,XYZ_D65);const SRGB=tempConvertMatrix1;matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX,XYZ_D65,SRGB),dest[destOffset]=255*sRGBTransferFunction(SRGB[0]),dest[destOffset+1]=255*sRGBTransferFunction(SRGB[1]),dest[destOffset+2]=255*sRGBTransferFunction(SRGB[2])}return class CalRGBCS extends ColorSpace{constructor(whitePoint,blackPoint,gamma,matrix){if(super("CalRGB",3),!whitePoint)throw new _util.FormatError("WhitePoint missing - required for color space CalRGB");blackPoint=blackPoint||new Float32Array(3),gamma=gamma||new Float32Array([1,1,1]),matrix=matrix||new Float32Array([1,0,0,0,1,0,0,0,1]);const XW=whitePoint[0],YW=whitePoint[1],ZW=whitePoint[2];this.whitePoint=whitePoint;const XB=blackPoint[0],YB=blackPoint[1],ZB=blackPoint[2];if(this.blackPoint=blackPoint,this.GR=gamma[0],this.GG=gamma[1],this.GB=gamma[2],this.MXA=matrix[0],this.MYA=matrix[1],this.MZA=matrix[2],this.MXB=matrix[3],this.MYB=matrix[4],this.MZB=matrix[5],this.MXC=matrix[6],this.MYC=matrix[7],this.MZC=matrix[8],XW<0||ZW<0||1!==YW)throw new _util.FormatError(`Invalid WhitePoint components for ${this.name}, no fallback available`);(XB<0||YB<0||ZB<0)&&((0,_util.info)(`Invalid BlackPoint for ${this.name} [${XB}, ${YB}, ${ZB}], falling back to default.`),this.blackPoint=new Float32Array(3)),(this.GR<0||this.GG<0||this.GB<0)&&((0,_util.info)(`Invalid Gamma [${this.GR}, ${this.GG}, ${this.GB}] for ${this.name}, falling back to default.`),this.GR=this.GG=this.GB=1)}getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(this,src,srcOffset,dest,destOffset,1)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=1/((1<<bits)-1);for(let i=0;i<count;++i)convertToRgb(this,src,srcOffset,dest,destOffset,scale),srcOffset+=3,destOffset+=3+alpha01}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0}}}(),LabCS=function LabCSClosure(){function fn_g(x){let result;return result=x>=6/29?x**3:108/841*(x-4/29),result}function decode(value,high1,low2,high2){return low2+value*(high2-low2)/high1}function convertToRgb(cs,src,srcOffset,maxVal,dest,destOffset){let Ls=src[srcOffset],as=src[srcOffset+1],bs=src[srcOffset+2];!1!==maxVal&&(Ls=decode(Ls,maxVal,0,100),as=decode(as,maxVal,cs.amin,cs.amax),bs=decode(bs,maxVal,cs.bmin,cs.bmax)),as>cs.amax?as=cs.amax:as<cs.amin&&(as=cs.amin),bs>cs.bmax?bs=cs.bmax:bs<cs.bmin&&(bs=cs.bmin);const M=(Ls+16)/116,L=M+as/500,N=M-bs/200,X=cs.XW*fn_g(L),Y=cs.YW*fn_g(M),Z=cs.ZW*fn_g(N);let r,g,b;cs.ZW<1?(r=3.1339*X+-1.617*Y+-.4906*Z,g=-.9785*X+1.916*Y+.0333*Z,b=.072*X+-.229*Y+1.4057*Z):(r=3.2406*X+-1.5372*Y+-.4986*Z,g=-.9689*X+1.8758*Y+.0415*Z,b=.0557*X+-.204*Y+1.057*Z),dest[destOffset]=255*Math.sqrt(r),dest[destOffset+1]=255*Math.sqrt(g),dest[destOffset+2]=255*Math.sqrt(b)}return class LabCS extends ColorSpace{constructor(whitePoint,blackPoint,range){if(super("Lab",3),!whitePoint)throw new _util.FormatError("WhitePoint missing - required for color space Lab");if(blackPoint=blackPoint||[0,0,0],range=range||[-100,100,-100,100],this.XW=whitePoint[0],this.YW=whitePoint[1],this.ZW=whitePoint[2],this.amin=range[0],this.amax=range[1],this.bmin=range[2],this.bmax=range[3],this.XB=blackPoint[0],this.YB=blackPoint[1],this.ZB=blackPoint[2],this.XW<0||this.ZW<0||1!==this.YW)throw new _util.FormatError("Invalid WhitePoint components, no fallback available");(this.XB<0||this.YB<0||this.ZB<0)&&((0,_util.info)("Invalid BlackPoint, falling back to default"),this.XB=this.YB=this.ZB=0),(this.amin>this.amax||this.bmin>this.bmax)&&((0,_util.info)("Invalid Range, falling back to defaults"),this.amin=-100,this.amax=100,this.bmin=-100,this.bmax=100)}getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(this,src,srcOffset,!1,dest,destOffset)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const maxVal=(1<<bits)-1;for(let i=0;i<count;i++)convertToRgb(this,src,srcOffset,maxVal,dest,destOffset),srcOffset+=3,destOffset+=3+alpha01}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0}isDefaultDecode(decodeMap,bpc){return!0}get usesZeroToOneRange(){return(0,_util.shadow)(this,"usesZeroToOneRange",!1)}}}()},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PartialEvaluator=exports.EvaluatorPreprocessor=void 0;var _util=__w_pdfjs_require__(2),_cmap=__w_pdfjs_require__(16),_primitives=__w_pdfjs_require__(5),_fonts=__w_pdfjs_require__(34),_fonts_utils=__w_pdfjs_require__(38),_encodings=__w_pdfjs_require__(37),_standard_fonts=__w_pdfjs_require__(41),_unicode=__w_pdfjs_require__(40),_pattern=__w_pdfjs_require__(50),_xfa_fonts=__w_pdfjs_require__(51),_to_unicode_map=__w_pdfjs_require__(42),_function=__w_pdfjs_require__(57),_parser=__w_pdfjs_require__(17),_image_utils=__w_pdfjs_require__(59),_stream=__w_pdfjs_require__(10),_base_stream=__w_pdfjs_require__(7),_bidi=__w_pdfjs_require__(60),_colorspace=__w_pdfjs_require__(14),_decode_stream=__w_pdfjs_require__(19),_glyphlist=__w_pdfjs_require__(39),_core_utils=__w_pdfjs_require__(6),_metrics=__w_pdfjs_require__(45),_murmurhash=__w_pdfjs_require__(61),_operator_list=__w_pdfjs_require__(62),_image=__w_pdfjs_require__(63);const DefaultPartialEvaluatorOptions=Object.freeze({maxImageSize:-1,disableFontFace:!1,ignoreErrors:!1,isEvalSupported:!0,fontExtraProperties:!1,useSystemFonts:!0,cMapUrl:null,standardFontDataUrl:null}),PatternType_TILING=1,PatternType_SHADING=2,deferred=Promise.resolve();function normalizeBlendMode(value,parsingArray=!1){if(Array.isArray(value)){for(let i=0,ii=value.length;i<ii;i++){const maybeBM=normalizeBlendMode(value[i],!0);if(maybeBM)return maybeBM}return(0,_util.warn)(`Unsupported blend mode Array: ${value}`),"source-over"}if(!(value instanceof _primitives.Name))return parsingArray?null:"source-over";switch(value.name){case"Normal":case"Compatible":return"source-over";case"Multiply":return"multiply";case"Screen":return"screen";case"Overlay":return"overlay";case"Darken":return"darken";case"Lighten":return"lighten";case"ColorDodge":return"color-dodge";case"ColorBurn":return"color-burn";case"HardLight":return"hard-light";case"SoftLight":return"soft-light";case"Difference":return"difference";case"Exclusion":return"exclusion";case"Hue":return"hue";case"Saturation":return"saturation";case"Color":return"color";case"Luminosity":return"luminosity"}return parsingArray?null:((0,_util.warn)(`Unsupported blend mode: ${value.name}`),"source-over")}function incrementCachedImageMaskCount(data){data.fn===_util.OPS.paintImageMaskXObject&&data.args[0]&&data.args[0].count>0&&data.args[0].count++}class TimeSlotManager{static get TIME_SLOT_DURATION_MS(){return(0,_util.shadow)(this,"TIME_SLOT_DURATION_MS",20)}static get CHECK_TIME_EVERY(){return(0,_util.shadow)(this,"CHECK_TIME_EVERY",100)}constructor(){this.reset()}check(){return!(++this.checked<TimeSlotManager.CHECK_TIME_EVERY)&&(this.checked=0,this.endTime<=Date.now())}reset(){this.endTime=Date.now()+TimeSlotManager.TIME_SLOT_DURATION_MS,this.checked=0}}class PartialEvaluator{constructor({xref,handler,pageIndex,idFactory,fontCache,builtInCMapCache,standardFontDataCache,globalImageCache,options=null}){this.xref=xref,this.handler=handler,this.pageIndex=pageIndex,this.idFactory=idFactory,this.fontCache=fontCache,this.builtInCMapCache=builtInCMapCache,this.standardFontDataCache=standardFontDataCache,this.globalImageCache=globalImageCache,this.options=options||DefaultPartialEvaluatorOptions,this.parsingType3Font=!1,this._fetchBuiltInCMapBound=this.fetchBuiltInCMap.bind(this)}get _pdfFunctionFactory(){const pdfFunctionFactory=new _function.PDFFunctionFactory({xref:this.xref,isEvalSupported:this.options.isEvalSupported});return(0,_util.shadow)(this,"_pdfFunctionFactory",pdfFunctionFactory)}clone(newOptions=null){const newEvaluator=Object.create(this);return newEvaluator.options=Object.assign(Object.create(null),this.options,newOptions),newEvaluator}hasBlendModes(resources,nonBlendModesSet){if(!(resources instanceof _primitives.Dict))return!1;if(resources.objId&&nonBlendModesSet.has(resources.objId))return!1;const processed=new _primitives.RefSet(nonBlendModesSet);resources.objId&&processed.put(resources.objId);const nodes=[resources],xref=this.xref;for(;nodes.length;){const node=nodes.shift(),graphicStates=node.get("ExtGState");if(graphicStates instanceof _primitives.Dict)for(let graphicState of graphicStates.getRawValues()){if(graphicState instanceof _primitives.Ref){if(processed.has(graphicState))continue;try{graphicState=xref.fetch(graphicState)}catch(ex){processed.put(graphicState),(0,_util.info)(`hasBlendModes - ignoring ExtGState: "${ex}".`);continue}}if(!(graphicState instanceof _primitives.Dict))continue;graphicState.objId&&processed.put(graphicState.objId);const bm=graphicState.get("BM");if(bm instanceof _primitives.Name){if("Normal"!==bm.name)return!0}else if(void 0!==bm&&Array.isArray(bm))for(const element of bm)if(element instanceof _primitives.Name&&"Normal"!==element.name)return!0}const xObjects=node.get("XObject");if(xObjects instanceof _primitives.Dict)for(let xObject of xObjects.getRawValues()){if(xObject instanceof _primitives.Ref){if(processed.has(xObject))continue;try{xObject=xref.fetch(xObject)}catch(ex){processed.put(xObject),(0,_util.info)(`hasBlendModes - ignoring XObject: "${ex}".`);continue}}if(!(xObject instanceof _base_stream.BaseStream))continue;xObject.dict.objId&&processed.put(xObject.dict.objId);const xResources=xObject.dict.get("Resources");xResources instanceof _primitives.Dict&&(xResources.objId&&processed.has(xResources.objId)||(nodes.push(xResources),xResources.objId&&processed.put(xResources.objId)))}}for(const ref of processed)nonBlendModesSet.put(ref);return!1}async fetchBuiltInCMap(name){const cachedData=this.builtInCMapCache.get(name);if(cachedData)return cachedData;let data;if(null!==this.options.cMapUrl){const url=`${this.options.cMapUrl}${name}.bcmap`,response=await fetch(url);if(!response.ok)throw new Error(`fetchBuiltInCMap: failed to fetch file "${url}" with "${response.statusText}".`);data={cMapData:new Uint8Array(await response.arrayBuffer()),compressionType:_util.CMapCompressionType.BINARY}}else data=await this.handler.sendWithPromise("FetchBuiltInCMap",{name});return data.compressionType!==_util.CMapCompressionType.NONE&&this.builtInCMapCache.set(name,data),data}async fetchStandardFontData(name){const cachedData=this.standardFontDataCache.get(name);if(cachedData)return new _stream.Stream(cachedData);if(this.options.useSystemFonts&&"Symbol"!==name&&"ZapfDingbats"!==name)return null;const filename=(0,_standard_fonts.getFontNameToFileMap)()[name];let data;if(null!==this.options.standardFontDataUrl){const url=`${this.options.standardFontDataUrl}${filename}`,response=await fetch(url);response.ok?data=await response.arrayBuffer():(0,_util.warn)(`fetchStandardFontData: failed to fetch file "${url}" with "${response.statusText}".`)}else try{data=await this.handler.sendWithPromise("FetchStandardFontData",{filename})}catch(e){(0,_util.warn)(`fetchStandardFontData: failed to fetch file "${filename}" with "${e}".`)}return data?(this.standardFontDataCache.set(name,data),new _stream.Stream(data)):null}async buildFormXObject(resources,xobj,smask,operatorList,task,initialState,localColorSpaceCache){const dict=xobj.dict,matrix=dict.getArray("Matrix");let optionalContent,groupOptions,bbox=dict.getArray("BBox");bbox=Array.isArray(bbox)&&4===bbox.length?_util.Util.normalizeRect(bbox):null,dict.has("OC")&&(optionalContent=await this.parseMarkedContentProps(dict.get("OC"),resources)),void 0!==optionalContent&&operatorList.addOp(_util.OPS.beginMarkedContentProps,["OC",optionalContent]);const group=dict.get("Group");if(group){groupOptions={matrix,bbox,smask,isolated:!1,knockout:!1};const groupSubtype=group.get("S");let colorSpace=null;if((0,_primitives.isName)(groupSubtype,"Transparency")&&(groupOptions.isolated=group.get("I")||!1,groupOptions.knockout=group.get("K")||!1,group.has("CS"))){const cs=group.getRaw("CS"),cachedColorSpace=_colorspace.ColorSpace.getCached(cs,this.xref,localColorSpaceCache);colorSpace=cachedColorSpace||await this.parseColorSpace({cs,resources,localColorSpaceCache})}smask&&smask.backdrop&&(colorSpace=colorSpace||_colorspace.ColorSpace.singletons.rgb,smask.backdrop=colorSpace.getRgb(smask.backdrop,0)),operatorList.addOp(_util.OPS.beginGroup,[groupOptions])}const args=group?[matrix,null]:[matrix,bbox];return operatorList.addOp(_util.OPS.paintFormXObjectBegin,args),this.getOperatorList({stream:xobj,task,resources:dict.get("Resources")||resources,operatorList,initialState}).then((function(){operatorList.addOp(_util.OPS.paintFormXObjectEnd,[]),group&&operatorList.addOp(_util.OPS.endGroup,[groupOptions]),void 0!==optionalContent&&operatorList.addOp(_util.OPS.endMarkedContent,[])}))}_sendImgData(objId,imgData,cacheGlobally=!1){const transfers=imgData?[imgData.bitmap||imgData.data.buffer]:null;return this.parsingType3Font||cacheGlobally?this.handler.send("commonobj",[objId,"Image",imgData],transfers):this.handler.send("obj",[objId,this.pageIndex,"Image",imgData],transfers)}async buildPaintImageXObject({resources,image,isInline=!1,operatorList,cacheKey,localImageCache,localColorSpaceCache}){const dict=image.dict,imageRef=dict.objId,w=dict.get("W","Width"),h=dict.get("H","Height");if(!w||"number"!=typeof w||!h||"number"!=typeof h)return void(0,_util.warn)("Image dimensions are missing, or not numbers.");const maxImageSize=this.options.maxImageSize;if(-1!==maxImageSize&&w*h>maxImageSize){const msg="Image exceeded maximum allowed size and was removed.";if(this.options.ignoreErrors)return void(0,_util.warn)(msg);throw new Error(msg)}let optionalContent;dict.has("OC")&&(optionalContent=await this.parseMarkedContentProps(dict.get("OC"),resources));let imgData,args;if(dict.get("IM","ImageMask")||!1){const interpolate=dict.get("I","Interpolate"),bitStrideLength=w+7>>3,imgArray=image.getBytes(bitStrideLength*h),decode=dict.getArray("D","Decode");if(this.parsingType3Font)return imgData=_image.PDFImage.createRawMask({imgArray,width:w,height:h,imageIsFromDecodeStream:image instanceof _decode_stream.DecodeStream,inverseDecode:!!decode&&decode[0]>0,interpolate}),imgData.cached=!!cacheKey,args=[imgData],operatorList.addImageOps(_util.OPS.paintImageMaskXObject,args,optionalContent),void(cacheKey&&localImageCache.set(cacheKey,imageRef,{fn:_util.OPS.paintImageMaskXObject,args,optionalContent}));if(imgData=_image.PDFImage.createMask({imgArray,width:w,height:h,imageIsFromDecodeStream:image instanceof _decode_stream.DecodeStream,inverseDecode:!!decode&&decode[0]>0,interpolate}),imgData.isSingleOpaquePixel)return operatorList.addImageOps(_util.OPS.paintSolidColorImageMask,[],optionalContent),void(cacheKey&&localImageCache.set(cacheKey,imageRef,{fn:_util.OPS.paintSolidColorImageMask,args:[],optionalContent}));const objId=`mask_${this.idFactory.createObjId()}`;return operatorList.addDependency(objId),this._sendImgData(objId,imgData),args=[{data:objId,width:imgData.width,height:imgData.height,interpolate:imgData.interpolate,count:1}],operatorList.addImageOps(_util.OPS.paintImageMaskXObject,args,optionalContent),void(cacheKey&&localImageCache.set(cacheKey,imageRef,{fn:_util.OPS.paintImageMaskXObject,args,optionalContent}))}const softMask=dict.get("SM","SMask")||!1,mask=dict.get("Mask")||!1;if(isInline&&!softMask&&!mask&&w+h<200){const imageObj=new _image.PDFImage({xref:this.xref,res:resources,image,isInline,pdfFunctionFactory:this._pdfFunctionFactory,localColorSpaceCache});return imgData=imageObj.createImageData(!0),void operatorList.addImageOps(_util.OPS.paintInlineImageXObject,[imgData],optionalContent)}let objId=`img_${this.idFactory.createObjId()}`,cacheGlobally=!1;this.parsingType3Font?objId=`${this.idFactory.getDocId()}_type3_${objId}`:imageRef&&(cacheGlobally=this.globalImageCache.shouldCache(imageRef,this.pageIndex),cacheGlobally&&(objId=`${this.idFactory.getDocId()}_${objId}`)),operatorList.addDependency(objId),args=[objId,w,h],_image.PDFImage.buildImage({xref:this.xref,res:resources,image,isInline,pdfFunctionFactory:this._pdfFunctionFactory,localColorSpaceCache}).then((imageObj=>(imgData=imageObj.createImageData(!1),cacheKey&&imageRef&&cacheGlobally&&this.globalImageCache.addByteSize(imageRef,imgData.data.length),this._sendImgData(objId,imgData,cacheGlobally)))).catch((reason=>((0,_util.warn)(`Unable to decode image "${objId}": "${reason}".`),this._sendImgData(objId,null,cacheGlobally)))),operatorList.addImageOps(_util.OPS.paintImageXObject,args,optionalContent),cacheKey&&(localImageCache.set(cacheKey,imageRef,{fn:_util.OPS.paintImageXObject,args,optionalContent}),imageRef&&((0,_util.assert)(!isInline,"Cannot cache an inline image globally."),this.globalImageCache.addPageIndex(imageRef,this.pageIndex),cacheGlobally&&this.globalImageCache.setData(imageRef,{objId,fn:_util.OPS.paintImageXObject,args,optionalContent,byteSize:0})))}handleSMask(smask,resources,operatorList,task,stateManager,localColorSpaceCache){const smaskContent=smask.get("G"),smaskOptions={subtype:smask.get("S").name,backdrop:smask.get("BC")},transferObj=smask.get("TR");if((0,_function.isPDFFunction)(transferObj)){const transferFn=this._pdfFunctionFactory.create(transferObj),transferMap=new Uint8Array(256),tmp=new Float32Array(1);for(let i=0;i<256;i++)tmp[0]=i/255,transferFn(tmp,0,tmp,0),transferMap[i]=255*tmp[0]|0;smaskOptions.transferMap=transferMap}return this.buildFormXObject(resources,smaskContent,smaskOptions,operatorList,task,stateManager.state.clone(),localColorSpaceCache)}handleTransferFunction(tr){let transferArray;if(Array.isArray(tr))transferArray=tr;else{if(!(0,_function.isPDFFunction)(tr))return null;transferArray=[tr]}const transferMaps=[];let numFns=0,numEffectfulFns=0;for(const entry of transferArray){const transferObj=this.xref.fetchIfRef(entry);if(numFns++,(0,_primitives.isName)(transferObj,"Identity")){transferMaps.push(null);continue}if(!(0,_function.isPDFFunction)(transferObj))return null;const transferFn=this._pdfFunctionFactory.create(transferObj),transferMap=new Uint8Array(256),tmp=new Float32Array(1);for(let j=0;j<256;j++)tmp[0]=j/255,transferFn(tmp,0,tmp,0),transferMap[j]=255*tmp[0]|0;transferMaps.push(transferMap),numEffectfulFns++}return 1!==numFns&&4!==numFns||0===numEffectfulFns?null:transferMaps}handleTilingType(fn,color,resources,pattern,patternDict,operatorList,task,localTilingPatternCache){const tilingOpList=new _operator_list.OperatorList,patternResources=_primitives.Dict.merge({xref:this.xref,dictArray:[patternDict.get("Resources"),resources]});return this.getOperatorList({stream:pattern,task,resources:patternResources,operatorList:tilingOpList}).then((function(){const operatorListIR=tilingOpList.getIR(),tilingPatternIR=(0,_pattern.getTilingPatternIR)(operatorListIR,patternDict,color);operatorList.addDependencies(tilingOpList.dependencies),operatorList.addOp(fn,tilingPatternIR),patternDict.objId&&localTilingPatternCache.set(null,patternDict.objId,{operatorListIR,dict:patternDict})})).catch((reason=>{if(!(reason instanceof _util.AbortException)){if(this.options.ignoreErrors)return this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorTilingPattern}),void(0,_util.warn)(`handleTilingType - ignoring pattern: "${reason}".`);throw reason}}))}handleSetFont(resources,fontArgs,fontRef,operatorList,task,state,fallbackFontDict=null,cssFontInfo=null){const fontName=fontArgs&&fontArgs[0]instanceof _primitives.Name?fontArgs[0].name:null;return this.loadFont(fontName,fontRef,resources,fallbackFontDict,cssFontInfo).then((translated=>translated.font.isType3Font?translated.loadType3Data(this,resources,task).then((function(){return operatorList.addDependencies(translated.type3Dependencies),translated})).catch((reason=>(this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorFontLoadType3}),new TranslatedFont({loadedName:"g_font_error",font:new _fonts.ErrorFont(`Type3 font load error: ${reason}`),dict:translated.font,evaluatorOptions:this.options})))):translated)).then((translated=>(state.font=translated.font,translated.send(this.handler),translated.loadedName)))}handleText(chars,state){const font=state.font,glyphs=font.charsToGlyphs(chars);if(font.data){(!!(state.textRenderingMode&_util.TextRenderingMode.ADD_TO_PATH_FLAG)||"Pattern"===state.fillColorSpace.name||font.disableFontFace||this.options.disableFontFace)&&PartialEvaluator.buildFontPaths(font,glyphs,this.handler,this.options)}return glyphs}ensureStateFont(state){if(state.font)return;const reason=new _util.FormatError("Missing setFont (Tf) operator before text rendering operator.");if(this.options.ignoreErrors)return this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorFontState}),void(0,_util.warn)(`ensureStateFont: "${reason}".`);throw reason}async setGState({resources,gState,operatorList,cacheKey,task,stateManager,localGStateCache,localColorSpaceCache}){const gStateRef=gState.objId;let isSimpleGState=!0;const gStateObj=[],gStateKeys=gState.getKeys();let promise=Promise.resolve();for(let i=0,ii=gStateKeys.length;i<ii;i++){const key=gStateKeys[i],value=gState.get(key);switch(key){case"Type":break;case"LW":case"LC":case"LJ":case"ML":case"D":case"RI":case"FL":case"CA":case"ca":gStateObj.push([key,value]);break;case"Font":isSimpleGState=!1,promise=promise.then((()=>this.handleSetFont(resources,null,value[0],operatorList,task,stateManager.state).then((function(loadedName){operatorList.addDependency(loadedName),gStateObj.push([key,[loadedName,value[1]]])}))));break;case"BM":gStateObj.push([key,normalizeBlendMode(value)]);break;case"SMask":if((0,_primitives.isName)(value,"None")){gStateObj.push([key,!1]);break}value instanceof _primitives.Dict?(isSimpleGState=!1,promise=promise.then((()=>this.handleSMask(value,resources,operatorList,task,stateManager,localColorSpaceCache))),gStateObj.push([key,!0])):(0,_util.warn)("Unsupported SMask type");break;case"TR":const transferMaps=this.handleTransferFunction(value);gStateObj.push([key,transferMaps]);break;case"OP":case"op":case"OPM":case"BG":case"BG2":case"UCR":case"UCR2":case"TR2":case"HT":case"SM":case"SA":case"AIS":case"TK":(0,_util.info)("graphic state operator "+key);break;default:(0,_util.info)("Unknown graphic state operator "+key)}}return promise.then((function(){gStateObj.length>0&&operatorList.addOp(_util.OPS.setGState,[gStateObj]),isSimpleGState&&localGStateCache.set(cacheKey,gStateRef,gStateObj)}))}loadFont(fontName,font,resources,fallbackFontDict=null,cssFontInfo=null){const errorFont=async()=>new TranslatedFont({loadedName:"g_font_error",font:new _fonts.ErrorFont(`Font "${fontName}" is not available.`),dict:font,evaluatorOptions:this.options}),xref=this.xref;let fontRef;if(font)font instanceof _primitives.Ref&&(fontRef=font);else{const fontRes=resources.get("Font");fontRes&&(fontRef=fontRes.getRaw(fontName))}if(!fontRef){const partialMsg=`Font "${fontName||font&&font.toString()}" is not available`;if(!this.options.ignoreErrors&&!this.parsingType3Font)return(0,_util.warn)(`${partialMsg}.`),errorFont();this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorFontMissing}),(0,_util.warn)(`${partialMsg} -- attempting to fallback to a default font.`),fontRef=fallbackFontDict||PartialEvaluator.fallbackFontDict}if(this.parsingType3Font&&this.type3FontRefs.has(fontRef))return errorFont();if(this.fontCache.has(fontRef))return this.fontCache.get(fontRef);if(!((font=xref.fetchIfRef(fontRef))instanceof _primitives.Dict))return errorFont();if(font.cacheKey&&this.fontCache.has(font.cacheKey))return this.fontCache.get(font.cacheKey);const fontCapability=(0,_util.createPromiseCapability)();let preEvaluatedFont;try{preEvaluatedFont=this.preEvaluateFont(font),preEvaluatedFont.cssFontInfo=cssFontInfo}catch(reason){return(0,_util.warn)(`loadFont - preEvaluateFont failed: "${reason}".`),errorFont()}const{descriptor,hash}=preEvaluatedFont,fontRefIsRef=fontRef instanceof _primitives.Ref;let fontID;if(fontRefIsRef&&(fontID=`f${fontRef.toString()}`),hash&&descriptor instanceof _primitives.Dict){descriptor.fontAliases||(descriptor.fontAliases=Object.create(null));const fontAliases=descriptor.fontAliases;if(fontAliases[hash]){const aliasFontRef=fontAliases[hash].aliasRef;if(fontRefIsRef&&aliasFontRef&&this.fontCache.has(aliasFontRef))return this.fontCache.putAlias(fontRef,aliasFontRef),this.fontCache.get(fontRef)}else fontAliases[hash]={fontID:this.idFactory.createFontId()};fontRefIsRef&&(fontAliases[hash].aliasRef=fontRef),fontID=fontAliases[hash].fontID}return fontRefIsRef?this.fontCache.put(fontRef,fontCapability.promise):(fontID||(fontID=this.idFactory.createFontId()),font.cacheKey=`cacheKey_${fontID}`,this.fontCache.put(font.cacheKey,fontCapability.promise)),(0,_util.assert)(fontID&&fontID.startsWith("f"),'The "fontID" must be (correctly) defined.'),font.loadedName=`${this.idFactory.getDocId()}_${fontID}`,this.translateFont(preEvaluatedFont).then((translatedFont=>{void 0!==translatedFont.fontType&&xref.stats.addFontType(translatedFont.fontType),fontCapability.resolve(new TranslatedFont({loadedName:font.loadedName,font:translatedFont,dict:font,evaluatorOptions:this.options}))})).catch((reason=>{this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorFontTranslate}),(0,_util.warn)(`loadFont - translateFont failed: "${reason}".`);try{const fontFile3=descriptor&&descriptor.get("FontFile3"),subtype=fontFile3&&fontFile3.get("Subtype"),fontType=(0,_fonts_utils.getFontType)(preEvaluatedFont.type,subtype&&subtype.name);void 0!==fontType&&xref.stats.addFontType(fontType)}catch(ex){}fontCapability.resolve(new TranslatedFont({loadedName:font.loadedName,font:new _fonts.ErrorFont(reason instanceof Error?reason.message:reason),dict:font,evaluatorOptions:this.options}))})),fontCapability.promise}buildPath(operatorList,fn,args,parsingText=!1){const lastIndex=operatorList.length-1;let minMax;if(args||(args=[]),lastIndex<0||operatorList.fnArray[lastIndex]!==_util.OPS.constructPath)parsingText&&((0,_util.warn)(`Encountered path operator "${fn}" inside of a text object.`),operatorList.addOp(_util.OPS.save,null)),minMax=[1/0,-1/0,1/0,-1/0],operatorList.addOp(_util.OPS.constructPath,[[fn],args,minMax]),parsingText&&operatorList.addOp(_util.OPS.restore,null);else{const opArgs=operatorList.argsArray[lastIndex];opArgs[0].push(fn),Array.prototype.push.apply(opArgs[1],args),minMax=opArgs[2]}switch(fn){case _util.OPS.rectangle:minMax[0]=Math.min(minMax[0],args[0],args[0]+args[2]),minMax[1]=Math.max(minMax[1],args[0],args[0]+args[2]),minMax[2]=Math.min(minMax[2],args[1],args[1]+args[3]),minMax[3]=Math.max(minMax[3],args[1],args[1]+args[3]);break;case _util.OPS.moveTo:case _util.OPS.lineTo:minMax[0]=Math.min(minMax[0],args[0]),minMax[1]=Math.max(minMax[1],args[0]),minMax[2]=Math.min(minMax[2],args[1]),minMax[3]=Math.max(minMax[3],args[1])}}parseColorSpace({cs,resources,localColorSpaceCache}){return _colorspace.ColorSpace.parseAsync({cs,xref:this.xref,resources,pdfFunctionFactory:this._pdfFunctionFactory,localColorSpaceCache}).catch((reason=>{if(reason instanceof _util.AbortException)return null;if(this.options.ignoreErrors)return this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorColorSpace}),(0,_util.warn)(`parseColorSpace - ignoring ColorSpace: "${reason}".`),null;throw reason}))}parseShading({shading,resources,localColorSpaceCache,localShadingPatternCache}){let id=localShadingPatternCache.get(shading);if(!id){const patternIR=_pattern.Pattern.parseShading(shading,this.xref,resources,this.handler,this._pdfFunctionFactory,localColorSpaceCache).getIR();id=`pattern_${this.idFactory.createObjId()}`,localShadingPatternCache.set(shading,id),this.handler.send("obj",[id,this.pageIndex,"Pattern",patternIR])}return id}handleColorN(operatorList,fn,args,cs,patterns,resources,task,localColorSpaceCache,localTilingPatternCache,localShadingPatternCache){const patternName=args.pop();if(patternName instanceof _primitives.Name){const rawPattern=patterns.getRaw(patternName.name),localTilingPattern=rawPattern instanceof _primitives.Ref&&localTilingPatternCache.getByRef(rawPattern);if(localTilingPattern)try{const color=cs.base?cs.base.getRgb(args,0):null,tilingPatternIR=(0,_pattern.getTilingPatternIR)(localTilingPattern.operatorListIR,localTilingPattern.dict,color);return void operatorList.addOp(fn,tilingPatternIR)}catch(ex){}const pattern=this.xref.fetchIfRef(rawPattern);if(pattern){const dict=pattern instanceof _base_stream.BaseStream?pattern.dict:pattern,typeNum=dict.get("PatternType");if(typeNum===PatternType_TILING){const color=cs.base?cs.base.getRgb(args,0):null;return this.handleTilingType(fn,color,resources,pattern,dict,operatorList,task,localTilingPatternCache)}if(typeNum===PatternType_SHADING){const shading=dict.get("Shading"),matrix=dict.getArray("Matrix"),objId=this.parseShading({shading,resources,localColorSpaceCache,localShadingPatternCache});return void operatorList.addOp(fn,["Shading",objId,matrix])}throw new _util.FormatError(`Unknown PatternType: ${typeNum}`)}}throw new _util.FormatError(`Unknown PatternName: ${patternName}`)}_parseVisibilityExpression(array,nestingCounter,currentResult){if(++nestingCounter>10)return void(0,_util.warn)("Visibility expression is too deeply nested");const length=array.length,operator=this.xref.fetchIfRef(array[0]);if(!(length<2)&&operator instanceof _primitives.Name){switch(operator.name){case"And":case"Or":case"Not":currentResult.push(operator.name);break;default:return void(0,_util.warn)(`Invalid operator ${operator.name} in visibility expression`)}for(let i=1;i<length;i++){const raw=array[i],object=this.xref.fetchIfRef(raw);if(Array.isArray(object)){const nestedResult=[];currentResult.push(nestedResult),this._parseVisibilityExpression(object,nestingCounter,nestedResult)}else raw instanceof _primitives.Ref&&currentResult.push(raw.toString())}}else(0,_util.warn)("Invalid visibility expression")}async parseMarkedContentProps(contentProperties,resources){let optionalContent;if(contentProperties instanceof _primitives.Name){optionalContent=resources.get("Properties").get(contentProperties.name)}else{if(!(contentProperties instanceof _primitives.Dict))throw new _util.FormatError("Optional content properties malformed.");optionalContent=contentProperties}const optionalContentType=optionalContent.get("Type").name;if("OCG"===optionalContentType)return{type:optionalContentType,id:optionalContent.objId};if("OCMD"===optionalContentType){const expression=optionalContent.get("VE");if(Array.isArray(expression)){const result=[];if(this._parseVisibilityExpression(expression,0,result),result.length>0)return{type:"OCMD",expression:result}}const optionalContentGroups=optionalContent.get("OCGs");if(Array.isArray(optionalContentGroups)||optionalContentGroups instanceof _primitives.Dict){const groupIds=[];if(Array.isArray(optionalContentGroups))for(const ocg of optionalContentGroups)groupIds.push(ocg.toString());else groupIds.push(optionalContentGroups.objId);return{type:optionalContentType,ids:groupIds,policy:optionalContent.get("P")instanceof _primitives.Name?optionalContent.get("P").name:null,expression:null}}if(optionalContentGroups instanceof _primitives.Ref)return{type:optionalContentType,id:optionalContentGroups.toString()}}return null}getOperatorList({stream,task,resources,operatorList,initialState=null,fallbackFontDict=null}){if(resources=resources||_primitives.Dict.empty,initialState=initialState||new EvalState,!operatorList)throw new Error('getOperatorList: missing "operatorList" parameter');const self=this,xref=this.xref;let parsingText=!1;const localImageCache=new _image_utils.LocalImageCache,localColorSpaceCache=new _image_utils.LocalColorSpaceCache,localGStateCache=new _image_utils.LocalGStateCache,localTilingPatternCache=new _image_utils.LocalTilingPatternCache,localShadingPatternCache=new Map,xobjs=resources.get("XObject")||_primitives.Dict.empty,patterns=resources.get("Pattern")||_primitives.Dict.empty,stateManager=new StateManager(initialState),preprocessor=new EvaluatorPreprocessor(stream,xref,stateManager),timeSlotManager=new TimeSlotManager;function closePendingRestoreOPS(argument){for(let i=0,ii=preprocessor.savedStatesDepth;i<ii;i++)operatorList.addOp(_util.OPS.restore,[])}return new Promise((function promiseBody(resolve,reject){const next=function(promise){Promise.all([promise,operatorList.ready]).then((function(){try{promiseBody(resolve,reject)}catch(ex){reject(ex)}}),reject)};task.ensureNotTerminated(),timeSlotManager.reset();const operation={};let stop,i,ii,cs,name,isValidName;for(;!(stop=timeSlotManager.check())&&(operation.args=null,preprocessor.read(operation));){let args=operation.args,fn=operation.fn;switch(0|fn){case _util.OPS.paintXObject:if(isValidName=args[0]instanceof _primitives.Name,name=args[0].name,isValidName){const localImage=localImageCache.getByName(name);if(localImage){operatorList.addImageOps(localImage.fn,localImage.args,localImage.optionalContent),incrementCachedImageMaskCount(localImage),args=null;continue}}return void next(new Promise((function(resolveXObject,rejectXObject){if(!isValidName)throw new _util.FormatError("XObject must be referred to by name.");let xobj=xobjs.getRaw(name);if(xobj instanceof _primitives.Ref){const localImage=localImageCache.getByRef(xobj);if(localImage)return operatorList.addImageOps(localImage.fn,localImage.args,localImage.optionalContent),incrementCachedImageMaskCount(localImage),void resolveXObject();const globalImage=self.globalImageCache.getData(xobj,self.pageIndex);if(globalImage)return operatorList.addDependency(globalImage.objId),operatorList.addImageOps(globalImage.fn,globalImage.args,globalImage.optionalContent),void resolveXObject();xobj=xref.fetch(xobj)}if(!(xobj instanceof _base_stream.BaseStream))throw new _util.FormatError("XObject should be a stream");const type=xobj.dict.get("Subtype");if(!(type instanceof _primitives.Name))throw new _util.FormatError("XObject should have a Name subtype");if("Form"===type.name)return stateManager.save(),void self.buildFormXObject(resources,xobj,null,operatorList,task,stateManager.state.clone(),localColorSpaceCache).then((function(){stateManager.restore(),resolveXObject()}),rejectXObject);if("Image"!==type.name){if("PS"!==type.name)throw new _util.FormatError(`Unhandled XObject subtype ${type.name}`);(0,_util.info)("Ignored XObject subtype PS"),resolveXObject()}else self.buildPaintImageXObject({resources,image:xobj,operatorList,cacheKey:name,localImageCache,localColorSpaceCache}).then(resolveXObject,rejectXObject)})).catch((function(reason){if(!(reason instanceof _util.AbortException)){if(self.options.ignoreErrors)return self.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorXObject}),void(0,_util.warn)(`getOperatorList - ignoring XObject: "${reason}".`);throw reason}})));case _util.OPS.setFont:var fontSize=args[1];return void next(self.handleSetFont(resources,args,null,operatorList,task,stateManager.state,fallbackFontDict).then((function(loadedName){operatorList.addDependency(loadedName),operatorList.addOp(_util.OPS.setFont,[loadedName,fontSize])})));case _util.OPS.beginText:parsingText=!0;break;case _util.OPS.endText:parsingText=!1;break;case _util.OPS.endInlineImage:var cacheKey=args[0].cacheKey;if(cacheKey){const localImage=localImageCache.getByName(cacheKey);if(localImage){operatorList.addImageOps(localImage.fn,localImage.args,localImage.optionalContent),incrementCachedImageMaskCount(localImage),args=null;continue}}return void next(self.buildPaintImageXObject({resources,image:args[0],isInline:!0,operatorList,cacheKey,localImageCache,localColorSpaceCache}));case _util.OPS.showText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}args[0]=self.handleText(args[0],stateManager.state);break;case _util.OPS.showSpacedText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}var arr=args[0],combinedGlyphs=[],arrLength=arr.length,state=stateManager.state;for(i=0;i<arrLength;++i){const arrItem=arr[i];"string"==typeof arrItem?Array.prototype.push.apply(combinedGlyphs,self.handleText(arrItem,state)):"number"==typeof arrItem&&combinedGlyphs.push(arrItem)}args[0]=combinedGlyphs,fn=_util.OPS.showText;break;case _util.OPS.nextLineShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}operatorList.addOp(_util.OPS.nextLine),args[0]=self.handleText(args[0],stateManager.state),fn=_util.OPS.showText;break;case _util.OPS.nextLineSetSpacingShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}operatorList.addOp(_util.OPS.nextLine),operatorList.addOp(_util.OPS.setWordSpacing,[args.shift()]),operatorList.addOp(_util.OPS.setCharSpacing,[args.shift()]),args[0]=self.handleText(args[0],stateManager.state),fn=_util.OPS.showText;break;case _util.OPS.setTextRenderingMode:stateManager.state.textRenderingMode=args[0];break;case _util.OPS.setFillColorSpace:{const cachedColorSpace=_colorspace.ColorSpace.getCached(args[0],xref,localColorSpaceCache);if(cachedColorSpace){stateManager.state.fillColorSpace=cachedColorSpace;continue}return void next(self.parseColorSpace({cs:args[0],resources,localColorSpaceCache}).then((function(colorSpace){colorSpace&&(stateManager.state.fillColorSpace=colorSpace)})))}case _util.OPS.setStrokeColorSpace:{const cachedColorSpace=_colorspace.ColorSpace.getCached(args[0],xref,localColorSpaceCache);if(cachedColorSpace){stateManager.state.strokeColorSpace=cachedColorSpace;continue}return void next(self.parseColorSpace({cs:args[0],resources,localColorSpaceCache}).then((function(colorSpace){colorSpace&&(stateManager.state.strokeColorSpace=colorSpace)})))}case _util.OPS.setFillColor:cs=stateManager.state.fillColorSpace,args=cs.getRgb(args,0),fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeColor:cs=stateManager.state.strokeColorSpace,args=cs.getRgb(args,0),fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.setFillGray:stateManager.state.fillColorSpace=_colorspace.ColorSpace.singletons.gray,args=_colorspace.ColorSpace.singletons.gray.getRgb(args,0),fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeGray:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.singletons.gray,args=_colorspace.ColorSpace.singletons.gray.getRgb(args,0),fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.setFillCMYKColor:stateManager.state.fillColorSpace=_colorspace.ColorSpace.singletons.cmyk,args=_colorspace.ColorSpace.singletons.cmyk.getRgb(args,0),fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeCMYKColor:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.singletons.cmyk,args=_colorspace.ColorSpace.singletons.cmyk.getRgb(args,0),fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.setFillRGBColor:stateManager.state.fillColorSpace=_colorspace.ColorSpace.singletons.rgb,args=_colorspace.ColorSpace.singletons.rgb.getRgb(args,0);break;case _util.OPS.setStrokeRGBColor:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.singletons.rgb,args=_colorspace.ColorSpace.singletons.rgb.getRgb(args,0);break;case _util.OPS.setFillColorN:if(cs=stateManager.state.fillColorSpace,"Pattern"===cs.name)return void next(self.handleColorN(operatorList,_util.OPS.setFillColorN,args,cs,patterns,resources,task,localColorSpaceCache,localTilingPatternCache,localShadingPatternCache));args=cs.getRgb(args,0),fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeColorN:if(cs=stateManager.state.strokeColorSpace,"Pattern"===cs.name)return void next(self.handleColorN(operatorList,_util.OPS.setStrokeColorN,args,cs,patterns,resources,task,localColorSpaceCache,localTilingPatternCache,localShadingPatternCache));args=cs.getRgb(args,0),fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.shadingFill:var shadingRes=resources.get("Shading");if(!shadingRes)throw new _util.FormatError("No shading resource found");var shading=shadingRes.get(args[0].name);if(!shading)throw new _util.FormatError("No shading object found");args=[self.parseShading({shading,resources,localColorSpaceCache,localShadingPatternCache})],fn=_util.OPS.shadingFill;break;case _util.OPS.setGState:if(isValidName=args[0]instanceof _primitives.Name,name=args[0].name,isValidName){const localGStateObj=localGStateCache.getByName(name);if(localGStateObj){localGStateObj.length>0&&operatorList.addOp(_util.OPS.setGState,[localGStateObj]),args=null;continue}}return void next(new Promise((function(resolveGState,rejectGState){if(!isValidName)throw new _util.FormatError("GState must be referred to by name.");const extGState=resources.get("ExtGState");if(!(extGState instanceof _primitives.Dict))throw new _util.FormatError("ExtGState should be a dictionary.");const gState=extGState.get(name);if(!(gState instanceof _primitives.Dict))throw new _util.FormatError("GState should be a dictionary.");self.setGState({resources,gState,operatorList,cacheKey:name,task,stateManager,localGStateCache,localColorSpaceCache}).then(resolveGState,rejectGState)})).catch((function(reason){if(!(reason instanceof _util.AbortException)){if(self.options.ignoreErrors)return self.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorExtGState}),void(0,_util.warn)(`getOperatorList - ignoring ExtGState: "${reason}".`);throw reason}})));case _util.OPS.moveTo:case _util.OPS.lineTo:case _util.OPS.curveTo:case _util.OPS.curveTo2:case _util.OPS.curveTo3:case _util.OPS.closePath:case _util.OPS.rectangle:self.buildPath(operatorList,fn,args,parsingText);continue;case _util.OPS.markPoint:case _util.OPS.markPointProps:case _util.OPS.beginCompat:case _util.OPS.endCompat:continue;case _util.OPS.beginMarkedContentProps:if(!(args[0]instanceof _primitives.Name)){(0,_util.warn)(`Expected name for beginMarkedContentProps arg0=${args[0]}`);continue}if("OC"===args[0].name)return void next(self.parseMarkedContentProps(args[1],resources).then((data=>{operatorList.addOp(_util.OPS.beginMarkedContentProps,["OC",data])})).catch((reason=>{if(!(reason instanceof _util.AbortException)){if(self.options.ignoreErrors)return self.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorMarkedContent}),void(0,_util.warn)(`getOperatorList - ignoring beginMarkedContentProps: "${reason}".`);throw reason}})));args=[args[0].name,args[1]instanceof _primitives.Dict?args[1].get("MCID"):null];break;case _util.OPS.beginMarkedContent:case _util.OPS.endMarkedContent:default:if(null!==args){for(i=0,ii=args.length;i<ii&&!(args[i]instanceof _primitives.Dict);i++);if(i<ii){(0,_util.warn)("getOperatorList - ignoring operator: "+fn);continue}}}operatorList.addOp(fn,args)}stop?next(deferred):(closePendingRestoreOPS(),resolve())})).catch((reason=>{if(!(reason instanceof _util.AbortException)){if(this.options.ignoreErrors)return this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorOperatorList}),(0,_util.warn)(`getOperatorList - ignoring errors during "${task.name}" task: "${reason}".`),void closePendingRestoreOPS();throw reason}}))}getTextContent({stream,task,resources,stateManager=null,combineTextItems=!1,includeMarkedContent=!1,sink,seenStyles=new Set,viewBox}){resources=resources||_primitives.Dict.empty,stateManager=stateManager||new StateManager(new TextState);const NormalizedUnicodes=(0,_unicode.getNormalizedUnicodes)(),textContent={items:[],styles:Object.create(null)},textContentItem={initialized:!1,str:[],totalWidth:0,totalHeight:0,width:0,height:0,vertical:!1,prevTransform:null,textAdvanceScale:0,spaceInFlowMin:0,spaceInFlowMax:0,trackingSpaceMin:1/0,negativeSpaceMax:-1/0,notASpace:-1/0,transform:null,fontName:null,hasEOL:!1},twoLastChars=[" "," "];let twoLastCharsPos=0;function saveLastChar(char){const nextPos=(twoLastCharsPos+1)%2,ret=" "!==twoLastChars[twoLastCharsPos]&&" "===twoLastChars[nextPos];return twoLastChars[twoLastCharsPos]=char,twoLastCharsPos=nextPos,ret}function resetLastChars(){twoLastChars[0]=twoLastChars[1]=" ",twoLastCharsPos=0}const self=this,xref=this.xref,showSpacedTextBuffer=[];let xobjs=null;const emptyXObjectCache=new _image_utils.LocalImageCache,emptyGStateCache=new _image_utils.LocalGStateCache,preprocessor=new EvaluatorPreprocessor(stream,xref,stateManager);let textState;function getCurrentTextTransform(){const font=textState.font,tsm=[textState.fontSize*textState.textHScale,0,0,textState.fontSize,0,textState.textRise];if(font.isType3Font&&(textState.fontSize<=1||font.isCharBBox)&&!(0,_util.isArrayEqual)(textState.fontMatrix,_util.FONT_IDENTITY_MATRIX)){const glyphHeight=font.bbox[3]-font.bbox[1];glyphHeight>0&&(tsm[3]*=glyphHeight*textState.fontMatrix[3])}return _util.Util.transform(textState.ctm,_util.Util.transform(textState.textMatrix,tsm))}function ensureTextContentItem(){if(textContentItem.initialized)return textContentItem;const font=textState.font,loadedName=font.loadedName;seenStyles.has(loadedName)||(seenStyles.add(loadedName),textContent.styles[loadedName]={fontFamily:font.fallbackName,ascent:font.ascent,descent:font.descent,vertical:font.vertical}),textContentItem.fontName=loadedName;const trm=textContentItem.transform=getCurrentTextTransform();font.vertical?(textContentItem.width=textContentItem.totalWidth=Math.hypot(trm[0],trm[1]),textContentItem.height=textContentItem.totalHeight=0,textContentItem.vertical=!0):(textContentItem.width=textContentItem.totalWidth=0,textContentItem.height=textContentItem.totalHeight=Math.hypot(trm[2],trm[3]),textContentItem.vertical=!1);const scaleLineX=Math.hypot(textState.textLineMatrix[0],textState.textLineMatrix[1]),scaleCtmX=Math.hypot(textState.ctm[0],textState.ctm[1]);return textContentItem.textAdvanceScale=scaleCtmX*scaleLineX,textContentItem.trackingSpaceMin=.1*textState.fontSize,textContentItem.notASpace=.03*textState.fontSize,textContentItem.negativeSpaceMax=-.2*textState.fontSize,textContentItem.spaceInFlowMin=.1*textState.fontSize,textContentItem.spaceInFlowMax=.6*textState.fontSize,textContentItem.hasEOL=!1,textContentItem.initialized=!0,textContentItem}function updateAdvanceScale(){if(!textContentItem.initialized)return;const scaleLineX=Math.hypot(textState.textLineMatrix[0],textState.textLineMatrix[1]),scaleFactor=Math.hypot(textState.ctm[0],textState.ctm[1])*scaleLineX;scaleFactor!==textContentItem.textAdvanceScale&&(textContentItem.vertical?(textContentItem.totalHeight+=textContentItem.height*textContentItem.textAdvanceScale,textContentItem.height=0):(textContentItem.totalWidth+=textContentItem.width*textContentItem.textAdvanceScale,textContentItem.width=0),textContentItem.textAdvanceScale=scaleFactor)}function handleSetFont(fontName,fontRef){return self.loadFont(fontName,fontRef,resources).then((function(translated){return translated.font.isType3Font?translated.loadType3Data(self,resources,task).catch((function(){})).then((function(){return translated})):translated})).then((function(translated){textState.font=translated.font,textState.fontMatrix=translated.font.fontMatrix||_util.FONT_IDENTITY_MATRIX}))}function applyInverseRotation(x,y,matrix){const scale=Math.hypot(matrix[0],matrix[1]);return[(matrix[0]*x+matrix[1]*y)/scale,(matrix[2]*x+matrix[3]*y)/scale]}function compareWithLastPosition(){const currentTransform=getCurrentTextTransform();let posX=currentTransform[4],posY=currentTransform[5];const shiftedX=posX-viewBox[0],shiftedY=posY-viewBox[1];if(shiftedX<0||shiftedX>viewBox[2]||shiftedY<0||shiftedY>viewBox[3])return!1;if(!combineTextItems||!textState.font||!textContentItem.prevTransform)return!0;let lastPosX=textContentItem.prevTransform[4],lastPosY=textContentItem.prevTransform[5];if(lastPosX===posX&&lastPosY===posY)return!0;let rotate=-1;switch(currentTransform[0]&&0===currentTransform[1]&&0===currentTransform[2]?rotate=currentTransform[0]>0?0:180:currentTransform[1]&&0===currentTransform[0]&&0===currentTransform[3]&&(rotate=currentTransform[1]>0?90:270),rotate){case 0:break;case 90:[posX,posY]=[posY,posX],[lastPosX,lastPosY]=[lastPosY,lastPosX];break;case 180:[posX,posY,lastPosX,lastPosY]=[-posX,-posY,-lastPosX,-lastPosY];break;case 270:[posX,posY]=[-posY,-posX],[lastPosX,lastPosY]=[-lastPosY,-lastPosX];break;default:[posX,posY]=applyInverseRotation(posX,posY,currentTransform),[lastPosX,lastPosY]=applyInverseRotation(lastPosX,lastPosY,textContentItem.prevTransform)}if(textState.font.vertical){const advanceY=(lastPosY-posY)/textContentItem.textAdvanceScale,advanceX=posX-lastPosX,textOrientation=Math.sign(textContentItem.height);return advanceY<textOrientation*textContentItem.negativeSpaceMax?Math.abs(advanceX)>.5*textContentItem.width?(appendEOL(),!0):(resetLastChars(),flushTextContentItem(),!0):Math.abs(advanceX)>textContentItem.width?(appendEOL(),!0):(advanceY<=textOrientation*textContentItem.notASpace&&resetLastChars(),advanceY<=textOrientation*textContentItem.trackingSpaceMin?textContentItem.height+=advanceY:addFakeSpaces(advanceY,textContentItem.prevTransform,textOrientation)||(0===textContentItem.str.length?(resetLastChars(),textContent.items.push({str:" ",dir:"ltr",width:0,height:Math.abs(advanceY),transform:textContentItem.prevTransform,fontName:textContentItem.fontName,hasEOL:!1})):textContentItem.height+=advanceY),!0)}const advanceX=(posX-lastPosX)/textContentItem.textAdvanceScale,advanceY=posY-lastPosY,textOrientation=Math.sign(textContentItem.width);return advanceX<textOrientation*textContentItem.negativeSpaceMax?Math.abs(advanceY)>.5*textContentItem.height?(appendEOL(),!0):(resetLastChars(),flushTextContentItem(),!0):Math.abs(advanceY)>textContentItem.height?(appendEOL(),!0):(advanceX<=textOrientation*textContentItem.notASpace&&resetLastChars(),advanceX<=textOrientation*textContentItem.trackingSpaceMin?textContentItem.width+=advanceX:addFakeSpaces(advanceX,textContentItem.prevTransform,textOrientation)||(0===textContentItem.str.length?(resetLastChars(),textContent.items.push({str:" ",dir:"ltr",width:Math.abs(advanceX),height:0,transform:textContentItem.prevTransform,fontName:textContentItem.fontName,hasEOL:!1})):textContentItem.width+=advanceX),!0)}function buildTextContentItem({chars,extraSpacing}){const font=textState.font;if(!chars){const charSpacing=textState.charSpacing+extraSpacing;return void(charSpacing&&(font.vertical?textState.translateTextMatrix(0,-charSpacing):textState.translateTextMatrix(charSpacing*textState.textHScale,0)))}const glyphs=font.charsToGlyphs(chars),scale=textState.fontMatrix[0]*textState.fontSize;for(let i=0,ii=glyphs.length;i<ii;i++){const glyph=glyphs[i];if(glyph.isInvisibleFormatMark)continue;let charSpacing=textState.charSpacing+(i+1===ii?extraSpacing:0),glyphWidth=glyph.width;font.vertical&&(glyphWidth=glyph.vmetric?glyph.vmetric[0]:-glyphWidth);let scaledDim=glyphWidth*scale;if(glyph.isWhitespace){font.vertical?(charSpacing+=-scaledDim+textState.wordSpacing,textState.translateTextMatrix(0,-charSpacing)):(charSpacing+=scaledDim+textState.wordSpacing,textState.translateTextMatrix(charSpacing*textState.textHScale,0)),saveLastChar(" ");continue}if(!compareWithLastPosition())continue;const textChunk=ensureTextContentItem();glyph.isZeroWidthDiacritic&&(scaledDim=0),font.vertical?(textState.translateTextMatrix(0,scaledDim),scaledDim=Math.abs(scaledDim),textChunk.height+=scaledDim):(scaledDim*=textState.textHScale,textState.translateTextMatrix(scaledDim,0),textChunk.width+=scaledDim),scaledDim&&(textChunk.prevTransform=getCurrentTextTransform());let glyphUnicode=glyph.unicode;glyphUnicode=NormalizedUnicodes[glyphUnicode]||glyphUnicode,glyphUnicode=(0,_unicode.reverseIfRtl)(glyphUnicode),saveLastChar(glyphUnicode)&&textChunk.str.push(" "),textChunk.str.push(glyphUnicode),charSpacing&&(font.vertical?textState.translateTextMatrix(0,-charSpacing):textState.translateTextMatrix(charSpacing*textState.textHScale,0))}}function appendEOL(){resetLastChars(),textContentItem.initialized?(textContentItem.hasEOL=!0,flushTextContentItem()):textContent.items.push({str:"",dir:"ltr",width:0,height:0,transform:getCurrentTextTransform(),fontName:textState.font.loadedName,hasEOL:!0})}function addFakeSpaces(width,transf,textOrientation){if(textOrientation*textContentItem.spaceInFlowMin<=width&&width<=textOrientation*textContentItem.spaceInFlowMax)return textContentItem.initialized&&(resetLastChars(),textContentItem.str.push(" ")),!1;const fontName=textContentItem.fontName;let height=0;return textContentItem.vertical&&(height=width,width=0),flushTextContentItem(),resetLastChars(),textContent.items.push({str:" ",dir:"ltr",width:Math.abs(width),height:Math.abs(height),transform:transf||getCurrentTextTransform(),fontName,hasEOL:!1}),!0}function flushTextContentItem(){textContentItem.initialized&&textContentItem.str&&(textContentItem.vertical?textContentItem.totalHeight+=textContentItem.height*textContentItem.textAdvanceScale:textContentItem.totalWidth+=textContentItem.width*textContentItem.textAdvanceScale,textContent.items.push(function runBidiTransform(textChunk){const text=textChunk.str.join(""),bidiResult=(0,_bidi.bidi)(text,-1,textChunk.vertical);return{str:bidiResult.str,dir:bidiResult.dir,width:Math.abs(textChunk.totalWidth),height:Math.abs(textChunk.totalHeight),transform:textChunk.transform,fontName:textChunk.fontName,hasEOL:textChunk.hasEOL}}(textContentItem)),textContentItem.initialized=!1,textContentItem.str.length=0)}function enqueueChunk(batch=!1){const length=textContent.items.length;0!==length&&(batch&&length<10||(sink.enqueue(textContent,length),textContent.items=[],textContent.styles=Object.create(null)))}const timeSlotManager=new TimeSlotManager;return new Promise((function promiseBody(resolve,reject){const next=function(promise){enqueueChunk(!0),Promise.all([promise,sink.ready]).then((function(){try{promiseBody(resolve,reject)}catch(ex){reject(ex)}}),reject)};task.ensureNotTerminated(),timeSlotManager.reset();const operation={};let stop,args=[];for(;!(stop=timeSlotManager.check())&&(args.length=0,operation.args=args,preprocessor.read(operation));){textState=stateManager.state;const fn=operation.fn;switch(args=operation.args,0|fn){case _util.OPS.setFont:var fontNameArg=args[0].name,fontSizeArg=args[1];if(textState.font&&fontNameArg===textState.fontName&&fontSizeArg===textState.fontSize)break;return flushTextContentItem(),textState.fontName=fontNameArg,textState.fontSize=fontSizeArg,void next(handleSetFont(fontNameArg,null));case _util.OPS.setTextRise:textState.textRise=args[0];break;case _util.OPS.setHScale:textState.textHScale=args[0]/100;break;case _util.OPS.setLeading:textState.leading=args[0];break;case _util.OPS.moveText:textState.translateTextLineMatrix(args[0],args[1]),textState.textMatrix=textState.textLineMatrix.slice();break;case _util.OPS.setLeadingMoveText:textState.leading=-args[1],textState.translateTextLineMatrix(args[0],args[1]),textState.textMatrix=textState.textLineMatrix.slice();break;case _util.OPS.nextLine:textState.carriageReturn();break;case _util.OPS.setTextMatrix:textState.setTextMatrix(args[0],args[1],args[2],args[3],args[4],args[5]),textState.setTextLineMatrix(args[0],args[1],args[2],args[3],args[4],args[5]),updateAdvanceScale();break;case _util.OPS.setCharSpacing:textState.charSpacing=args[0];break;case _util.OPS.setWordSpacing:textState.wordSpacing=args[0];break;case _util.OPS.beginText:textState.textMatrix=_util.IDENTITY_MATRIX.slice(),textState.textLineMatrix=_util.IDENTITY_MATRIX.slice();break;case _util.OPS.showSpacedText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}const spaceFactor=(textState.font.vertical?1:-1)*textState.fontSize/1e3,elements=args[0];for(let i=0,ii=elements.length;i<ii-1;i++){const item=elements[i];if("string"==typeof item)showSpacedTextBuffer.push(item);else if("number"==typeof item&&0!==item){const str=showSpacedTextBuffer.join("");showSpacedTextBuffer.length=0,buildTextContentItem({chars:str,extraSpacing:item*spaceFactor})}}const item=elements.at(-1);if("string"==typeof item&&showSpacedTextBuffer.push(item),showSpacedTextBuffer.length>0){const str=showSpacedTextBuffer.join("");showSpacedTextBuffer.length=0,buildTextContentItem({chars:str,extraSpacing:0})}break;case _util.OPS.showText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}buildTextContentItem({chars:args[0],extraSpacing:0});break;case _util.OPS.nextLineShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}textState.carriageReturn(),buildTextContentItem({chars:args[0],extraSpacing:0});break;case _util.OPS.nextLineSetSpacingShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}textState.wordSpacing=args[0],textState.charSpacing=args[1],textState.carriageReturn(),buildTextContentItem({chars:args[2],extraSpacing:0});break;case _util.OPS.paintXObject:flushTextContentItem(),xobjs||(xobjs=resources.get("XObject")||_primitives.Dict.empty);var isValidName=args[0]instanceof _primitives.Name,name=args[0].name;if(isValidName&&emptyXObjectCache.getByName(name))break;return void next(new Promise((function(resolveXObject,rejectXObject){if(!isValidName)throw new _util.FormatError("XObject must be referred to by name.");let xobj=xobjs.getRaw(name);if(xobj instanceof _primitives.Ref){if(emptyXObjectCache.getByRef(xobj))return void resolveXObject();if(self.globalImageCache.getData(xobj,self.pageIndex))return void resolveXObject();xobj=xref.fetch(xobj)}if(!(xobj instanceof _base_stream.BaseStream))throw new _util.FormatError("XObject should be a stream");const type=xobj.dict.get("Subtype");if(!(type instanceof _primitives.Name))throw new _util.FormatError("XObject should have a Name subtype");if("Form"!==type.name)return emptyXObjectCache.set(name,xobj.dict.objId,!0),void resolveXObject();const currentState=stateManager.state.clone(),xObjStateManager=new StateManager(currentState),matrix=xobj.dict.getArray("Matrix");Array.isArray(matrix)&&6===matrix.length&&xObjStateManager.transform(matrix),enqueueChunk();const sinkWrapper={enqueueInvoked:!1,enqueue(chunk,size){this.enqueueInvoked=!0,sink.enqueue(chunk,size)},get desiredSize(){return sink.desiredSize},get ready(){return sink.ready}};self.getTextContent({stream:xobj,task,resources:xobj.dict.get("Resources")||resources,stateManager:xObjStateManager,combineTextItems,includeMarkedContent,sink:sinkWrapper,seenStyles,viewBox}).then((function(){sinkWrapper.enqueueInvoked||emptyXObjectCache.set(name,xobj.dict.objId,!0),resolveXObject()}),rejectXObject)})).catch((function(reason){if(!(reason instanceof _util.AbortException)){if(!self.options.ignoreErrors)throw reason;(0,_util.warn)(`getTextContent - ignoring XObject: "${reason}".`)}})));case _util.OPS.setGState:if(isValidName=args[0]instanceof _primitives.Name,name=args[0].name,isValidName&&emptyGStateCache.getByName(name))break;return void next(new Promise((function(resolveGState,rejectGState){if(!isValidName)throw new _util.FormatError("GState must be referred to by name.");const extGState=resources.get("ExtGState");if(!(extGState instanceof _primitives.Dict))throw new _util.FormatError("ExtGState should be a dictionary.");const gState=extGState.get(name);if(!(gState instanceof _primitives.Dict))throw new _util.FormatError("GState should be a dictionary.");const gStateFont=gState.get("Font");if(!gStateFont)return emptyGStateCache.set(name,gState.objId,!0),void resolveGState();flushTextContentItem(),textState.fontName=null,textState.fontSize=gStateFont[1],handleSetFont(null,gStateFont[0]).then(resolveGState,rejectGState)})).catch((function(reason){if(!(reason instanceof _util.AbortException)){if(!self.options.ignoreErrors)throw reason;(0,_util.warn)(`getTextContent - ignoring ExtGState: "${reason}".`)}})));case _util.OPS.beginMarkedContent:flushTextContentItem(),includeMarkedContent&&textContent.items.push({type:"beginMarkedContent",tag:args[0]instanceof _primitives.Name?args[0].name:null});break;case _util.OPS.beginMarkedContentProps:if(flushTextContentItem(),includeMarkedContent){let mcid=null;args[1]instanceof _primitives.Dict&&(mcid=args[1].get("MCID")),textContent.items.push({type:"beginMarkedContentProps",id:Number.isInteger(mcid)?`${self.idFactory.getPageObjId()}_mcid${mcid}`:null,tag:args[0]instanceof _primitives.Name?args[0].name:null})}break;case _util.OPS.endMarkedContent:flushTextContentItem(),includeMarkedContent&&textContent.items.push({type:"endMarkedContent"})}if(textContent.items.length>=sink.desiredSize){stop=!0;break}}stop?next(deferred):(flushTextContentItem(),enqueueChunk(),resolve())})).catch((reason=>{if(!(reason instanceof _util.AbortException)){if(this.options.ignoreErrors)return(0,_util.warn)(`getTextContent - ignoring errors during "${task.name}" task: "${reason}".`),flushTextContentItem(),void enqueueChunk();throw reason}}))}extractDataStructures(dict,baseDict,properties){const xref=this.xref;let cidToGidBytes;const toUnicodePromise=this.readToUnicode(properties.toUnicode||dict.get("ToUnicode")||baseDict.get("ToUnicode"));if(properties.composite){const cidSystemInfo=dict.get("CIDSystemInfo");cidSystemInfo instanceof _primitives.Dict&&(properties.cidSystemInfo={registry:(0,_util.stringToPDFString)(cidSystemInfo.get("Registry")),ordering:(0,_util.stringToPDFString)(cidSystemInfo.get("Ordering")),supplement:cidSystemInfo.get("Supplement")});try{const cidToGidMap=dict.get("CIDToGIDMap");cidToGidMap instanceof _base_stream.BaseStream&&(cidToGidBytes=cidToGidMap.getBytes())}catch(ex){if(!this.options.ignoreErrors)throw ex;(0,_util.warn)(`extractDataStructures - ignoring CIDToGIDMap data: "${ex}".`)}}const differences=[];let encoding,baseEncodingName=null;if(dict.has("Encoding")){if(encoding=dict.get("Encoding"),encoding instanceof _primitives.Dict){if(baseEncodingName=encoding.get("BaseEncoding"),baseEncodingName=baseEncodingName instanceof _primitives.Name?baseEncodingName.name:null,encoding.has("Differences")){const diffEncoding=encoding.get("Differences");let index=0;for(let j=0,jj=diffEncoding.length;j<jj;j++){const data=xref.fetchIfRef(diffEncoding[j]);if("number"==typeof data)index=data;else{if(!(data instanceof _primitives.Name))throw new _util.FormatError(`Invalid entry in 'Differences' array: ${data}`);differences[index++]=data.name}}}}else if(encoding instanceof _primitives.Name)baseEncodingName=encoding.name;else{const msg="Encoding is not a Name nor a Dict";if(!this.options.ignoreErrors)throw new _util.FormatError(msg);(0,_util.warn)(msg)}"MacRomanEncoding"!==baseEncodingName&&"MacExpertEncoding"!==baseEncodingName&&"WinAnsiEncoding"!==baseEncodingName&&(baseEncodingName=null)}if(baseEncodingName)properties.defaultEncoding=(0,_encodings.getEncoding)(baseEncodingName);else{const isSymbolicFont=!!(properties.flags&_fonts_utils.FontFlags.Symbolic),isNonsymbolicFont=!!(properties.flags&_fonts_utils.FontFlags.Nonsymbolic);encoding=_encodings.StandardEncoding,"TrueType"!==properties.type||isNonsymbolicFont||(encoding=_encodings.WinAnsiEncoding),isSymbolicFont&&(encoding=_encodings.MacRomanEncoding,properties.file&&!properties.isInternalFont||(/Symbol/i.test(properties.name)?encoding=_encodings.SymbolSetEncoding:/Dingbats|Wingdings/i.test(properties.name)&&(encoding=_encodings.ZapfDingbatsEncoding))),properties.defaultEncoding=encoding}return properties.differences=differences,properties.baseEncodingName=baseEncodingName,properties.hasEncoding=!!baseEncodingName||differences.length>0,properties.dict=dict,toUnicodePromise.then((readToUnicode=>(properties.toUnicode=readToUnicode,this.buildToUnicode(properties)))).then((builtToUnicode=>(properties.toUnicode=builtToUnicode,cidToGidBytes&&(properties.cidToGidMap=this.readCidToGidMap(cidToGidBytes,builtToUnicode)),properties)))}_simpleFontToUnicode(properties,forceGlyphs=!1){(0,_util.assert)(!properties.composite,"Must be a simple font.");const toUnicode=[],encoding=properties.defaultEncoding.slice(),baseEncodingName=properties.baseEncodingName,differences=properties.differences;for(const charcode in differences){const glyphName=differences[charcode];".notdef"!==glyphName&&(encoding[charcode]=glyphName)}const glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();for(const charcode in encoding){let glyphName=encoding[charcode];if(""!==glyphName)if(void 0!==glyphsUnicodeMap[glyphName])toUnicode[charcode]=String.fromCharCode(glyphsUnicodeMap[glyphName]);else{let code=0;switch(glyphName[0]){case"G":3===glyphName.length&&(code=parseInt(glyphName.substring(1),16));break;case"g":5===glyphName.length&&(code=parseInt(glyphName.substring(1),16));break;case"C":case"c":if(glyphName.length>=3&&glyphName.length<=4){const codeStr=glyphName.substring(1);if(forceGlyphs){code=parseInt(codeStr,16);break}if(code=+codeStr,Number.isNaN(code)&&Number.isInteger(parseInt(codeStr,16)))return this._simpleFontToUnicode(properties,!0)}break;default:const unicode=(0,_unicode.getUnicodeForGlyph)(glyphName,glyphsUnicodeMap);-1!==unicode&&(code=unicode)}if(code>0&&code<=1114111&&Number.isInteger(code)){if(baseEncodingName&&code===+charcode){const baseEncoding=(0,_encodings.getEncoding)(baseEncodingName);if(baseEncoding&&(glyphName=baseEncoding[charcode])){toUnicode[charcode]=String.fromCharCode(glyphsUnicodeMap[glyphName]);continue}}toUnicode[charcode]=String.fromCodePoint(code)}}}return toUnicode}async buildToUnicode(properties){if(properties.hasIncludedToUnicodeMap=!!properties.toUnicode&&properties.toUnicode.length>0,properties.hasIncludedToUnicodeMap)return!properties.composite&&properties.hasEncoding&&(properties.fallbackToUnicode=this._simpleFontToUnicode(properties)),properties.toUnicode;if(!properties.composite)return new _to_unicode_map.ToUnicodeMap(this._simpleFontToUnicode(properties));if(properties.composite&&(properties.cMap.builtInCMap&&!(properties.cMap instanceof _cmap.IdentityCMap)||"Adobe"===properties.cidSystemInfo.registry&&("GB1"===properties.cidSystemInfo.ordering||"CNS1"===properties.cidSystemInfo.ordering||"Japan1"===properties.cidSystemInfo.ordering||"Korea1"===properties.cidSystemInfo.ordering))){const{registry,ordering}=properties.cidSystemInfo,ucs2CMapName=_primitives.Name.get(`${registry}-${ordering}-UCS2`),ucs2CMap=await _cmap.CMapFactory.create({encoding:ucs2CMapName,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}),toUnicode=[];return properties.cMap.forEach((function(charcode,cid){if(cid>65535)throw new _util.FormatError("Max size of CID is 65,535");const ucs2=ucs2CMap.lookup(cid);ucs2&&(toUnicode[charcode]=String.fromCharCode((ucs2.charCodeAt(0)<<8)+ucs2.charCodeAt(1)))})),new _to_unicode_map.ToUnicodeMap(toUnicode)}return new _to_unicode_map.IdentityToUnicodeMap(properties.firstChar,properties.lastChar)}readToUnicode(cmapObj){return cmapObj?cmapObj instanceof _primitives.Name?_cmap.CMapFactory.create({encoding:cmapObj,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}).then((function(cmap){return cmap instanceof _cmap.IdentityCMap?new _to_unicode_map.IdentityToUnicodeMap(0,65535):new _to_unicode_map.ToUnicodeMap(cmap.getMap())})):cmapObj instanceof _base_stream.BaseStream?_cmap.CMapFactory.create({encoding:cmapObj,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}).then((function(cmap){if(cmap instanceof _cmap.IdentityCMap)return new _to_unicode_map.IdentityToUnicodeMap(0,65535);const map=new Array(cmap.length);return cmap.forEach((function(charCode,token){if("number"==typeof token)return void(map[charCode]=String.fromCodePoint(token));const str=[];for(let k=0;k<token.length;k+=2){const w1=token.charCodeAt(k)<<8|token.charCodeAt(k+1);if(55296!=(63488&w1)){str.push(w1);continue}k+=2;const w2=token.charCodeAt(k)<<8|token.charCodeAt(k+1);str.push(((1023&w1)<<10)+(1023&w2)+65536)}map[charCode]=String.fromCodePoint(...str)})),new _to_unicode_map.ToUnicodeMap(map)}),(reason=>{if(reason instanceof _util.AbortException)return null;if(this.options.ignoreErrors)return this.handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorFontToUnicode}),(0,_util.warn)(`readToUnicode - ignoring ToUnicode data: "${reason}".`),null;throw reason})):Promise.resolve(null):Promise.resolve(null)}readCidToGidMap(glyphsData,toUnicode){const result=[];for(let j=0,jj=glyphsData.length;j<jj;j++){const glyphID=glyphsData[j++]<<8|glyphsData[j],code=j>>1;(0!==glyphID||toUnicode.has(code))&&(result[code]=glyphID)}return result}extractWidths(dict,descriptor,properties){const xref=this.xref;let glyphsWidths=[],defaultWidth=0;const glyphsVMetrics=[];let defaultVMetrics,i,ii,j,jj,start,code,widths;if(properties.composite){if(defaultWidth=dict.has("DW")?dict.get("DW"):1e3,widths=dict.get("W"),widths)for(i=0,ii=widths.length;i<ii;i++)if(start=xref.fetchIfRef(widths[i++]),code=xref.fetchIfRef(widths[i]),Array.isArray(code))for(j=0,jj=code.length;j<jj;j++)glyphsWidths[start++]=xref.fetchIfRef(code[j]);else{const width=xref.fetchIfRef(widths[++i]);for(j=start;j<=code;j++)glyphsWidths[j]=width}if(properties.vertical){let vmetrics=dict.getArray("DW2")||[880,-1e3];if(defaultVMetrics=[vmetrics[1],.5*defaultWidth,vmetrics[0]],vmetrics=dict.get("W2"),vmetrics)for(i=0,ii=vmetrics.length;i<ii;i++)if(start=xref.fetchIfRef(vmetrics[i++]),code=xref.fetchIfRef(vmetrics[i]),Array.isArray(code))for(j=0,jj=code.length;j<jj;j++)glyphsVMetrics[start++]=[xref.fetchIfRef(code[j++]),xref.fetchIfRef(code[j++]),xref.fetchIfRef(code[j])];else{const vmetric=[xref.fetchIfRef(vmetrics[++i]),xref.fetchIfRef(vmetrics[++i]),xref.fetchIfRef(vmetrics[++i])];for(j=start;j<=code;j++)glyphsVMetrics[j]=vmetric}}}else{const firstChar=properties.firstChar;if(widths=dict.get("Widths"),widths){for(j=firstChar,i=0,ii=widths.length;i<ii;i++)glyphsWidths[j++]=xref.fetchIfRef(widths[i]);defaultWidth=parseFloat(descriptor.get("MissingWidth"))||0}else{const baseFontName=dict.get("BaseFont");if(baseFontName instanceof _primitives.Name){const metrics=this.getBaseFontMetrics(baseFontName.name);glyphsWidths=this.buildCharCodeToWidth(metrics.widths,properties),defaultWidth=metrics.defaultWidth}}}let isMonospace=!0,firstWidth=defaultWidth;for(const glyph in glyphsWidths){const glyphWidth=glyphsWidths[glyph];if(glyphWidth)if(firstWidth){if(firstWidth!==glyphWidth){isMonospace=!1;break}}else firstWidth=glyphWidth}isMonospace&&(properties.flags|=_fonts_utils.FontFlags.FixedPitch),properties.defaultWidth=defaultWidth,properties.widths=glyphsWidths,properties.defaultVMetrics=defaultVMetrics,properties.vmetrics=glyphsVMetrics}isSerifFont(baseFontName){const fontNameWoStyle=baseFontName.split("-")[0];return fontNameWoStyle in(0,_standard_fonts.getSerifFonts)()||-1!==fontNameWoStyle.search(/serif/gi)}getBaseFontMetrics(name){let defaultWidth=0,widths=Object.create(null),monospace=!1;let lookupName=(0,_standard_fonts.getStdFontMap)()[name]||name;const Metrics=(0,_metrics.getMetrics)();lookupName in Metrics||(lookupName=this.isSerifFont(name)?"Times-Roman":"Helvetica");const glyphWidths=Metrics[lookupName];return"number"==typeof glyphWidths?(defaultWidth=glyphWidths,monospace=!0):widths=glyphWidths(),{defaultWidth,monospace,widths}}buildCharCodeToWidth(widthsByGlyphName,properties){const widths=Object.create(null),differences=properties.differences,encoding=properties.defaultEncoding;for(let charCode=0;charCode<256;charCode++)charCode in differences&&widthsByGlyphName[differences[charCode]]?widths[charCode]=widthsByGlyphName[differences[charCode]]:charCode in encoding&&widthsByGlyphName[encoding[charCode]]&&(widths[charCode]=widthsByGlyphName[encoding[charCode]]);return widths}preEvaluateFont(dict){const baseDict=dict;let type=dict.get("Subtype");if(!(type instanceof _primitives.Name))throw new _util.FormatError("invalid font Subtype");let hash,toUnicode,composite=!1;if("Type0"===type.name){const df=dict.get("DescendantFonts");if(!df)throw new _util.FormatError("Descendant fonts are not specified");if(!((dict=Array.isArray(df)?this.xref.fetchIfRef(df[0]):df)instanceof _primitives.Dict))throw new _util.FormatError("Descendant font is not a dictionary.");if(type=dict.get("Subtype"),!(type instanceof _primitives.Name))throw new _util.FormatError("invalid font Subtype");composite=!0}const firstChar=dict.get("FirstChar")||0,lastChar=dict.get("LastChar")||(composite?65535:255),descriptor=dict.get("FontDescriptor");if(descriptor){hash=new _murmurhash.MurmurHash3_64;const encoding=baseDict.getRaw("Encoding");if(encoding instanceof _primitives.Name)hash.update(encoding.name);else if(encoding instanceof _primitives.Ref)hash.update(encoding.toString());else if(encoding instanceof _primitives.Dict)for(const entry of encoding.getRawValues())if(entry instanceof _primitives.Name)hash.update(entry.name);else if(entry instanceof _primitives.Ref)hash.update(entry.toString());else if(Array.isArray(entry)){const diffLength=entry.length,diffBuf=new Array(diffLength);for(let j=0;j<diffLength;j++){const diffEntry=entry[j];diffEntry instanceof _primitives.Name?diffBuf[j]=diffEntry.name:("number"==typeof diffEntry||diffEntry instanceof _primitives.Ref)&&(diffBuf[j]=diffEntry.toString())}hash.update(diffBuf.join())}if(hash.update(`${firstChar}-${lastChar}`),toUnicode=dict.get("ToUnicode")||baseDict.get("ToUnicode"),toUnicode instanceof _base_stream.BaseStream){const stream=toUnicode.str||toUnicode,uint8array=stream.buffer?new Uint8Array(stream.buffer.buffer,0,stream.bufferLength):new Uint8Array(stream.bytes.buffer,stream.start,stream.end-stream.start);hash.update(uint8array)}else toUnicode instanceof _primitives.Name&&hash.update(toUnicode.name);const widths=dict.get("Widths")||baseDict.get("Widths");if(Array.isArray(widths)){const widthsBuf=[];for(const entry of widths)("number"==typeof entry||entry instanceof _primitives.Ref)&&widthsBuf.push(entry.toString());hash.update(widthsBuf.join())}if(composite){hash.update("compositeFont");const compositeWidths=dict.get("W")||baseDict.get("W");if(Array.isArray(compositeWidths)){const widthsBuf=[];for(const entry of compositeWidths)if("number"==typeof entry||entry instanceof _primitives.Ref)widthsBuf.push(entry.toString());else if(Array.isArray(entry)){const subWidthsBuf=[];for(const element of entry)("number"==typeof element||element instanceof _primitives.Ref)&&subWidthsBuf.push(element.toString());widthsBuf.push(`[${subWidthsBuf.join()}]`)}hash.update(widthsBuf.join())}const cidToGidMap=dict.getRaw("CIDToGIDMap")||baseDict.getRaw("CIDToGIDMap");cidToGidMap instanceof _primitives.Name?hash.update(cidToGidMap.name):cidToGidMap instanceof _primitives.Ref?hash.update(cidToGidMap.toString()):cidToGidMap instanceof _base_stream.BaseStream&&hash.update(cidToGidMap.peekBytes())}}return{descriptor,dict,baseDict,composite,type:type.name,firstChar,lastChar,toUnicode,hash:hash?hash.hexdigest():""}}async translateFont({descriptor,dict,baseDict,composite,type,firstChar,lastChar,toUnicode,cssFontInfo}){const isType3Font="Type3"===type;let properties;if(!descriptor){if(!isType3Font){let baseFontName=dict.get("BaseFont");if(!(baseFontName instanceof _primitives.Name))throw new _util.FormatError("Base font is not specified");baseFontName=baseFontName.name.replace(/[,_]/g,"-");const metrics=this.getBaseFontMetrics(baseFontName),fontNameWoStyle=baseFontName.split("-")[0],flags=(this.isSerifFont(fontNameWoStyle)?_fonts_utils.FontFlags.Serif:0)|(metrics.monospace?_fonts_utils.FontFlags.FixedPitch:0)|((0,_standard_fonts.getSymbolsFonts)()[fontNameWoStyle]?_fonts_utils.FontFlags.Symbolic:_fonts_utils.FontFlags.Nonsymbolic);properties={type,name:baseFontName,loadedName:baseDict.loadedName,widths:metrics.widths,defaultWidth:metrics.defaultWidth,isSimulatedFlags:!0,flags,firstChar,lastChar,toUnicode,xHeight:0,capHeight:0,italicAngle:0,isType3Font};const widths=dict.get("Widths"),standardFontName=(0,_standard_fonts.getStandardFontName)(baseFontName);let file=null;return standardFontName&&(properties.isStandardFont=!0,file=await this.fetchStandardFontData(standardFontName),properties.isInternalFont=!!file),this.extractDataStructures(dict,dict,properties).then((newProperties=>{if(widths){const glyphWidths=[];let j=firstChar;for(let i=0,ii=widths.length;i<ii;i++)glyphWidths[j++]=this.xref.fetchIfRef(widths[i]);newProperties.widths=glyphWidths}else newProperties.widths=this.buildCharCodeToWidth(metrics.widths,newProperties);return new _fonts.Font(baseFontName,file,newProperties)}))}(descriptor=new _primitives.Dict(null)).set("FontName",_primitives.Name.get(type)),descriptor.set("FontBBox",dict.getArray("FontBBox")||[0,0,0,0])}let fontFile,subtype,length1,length2,length3,fontName=descriptor.get("FontName"),baseFont=dict.get("BaseFont");if("string"==typeof fontName&&(fontName=_primitives.Name.get(fontName)),"string"==typeof baseFont&&(baseFont=_primitives.Name.get(baseFont)),!isType3Font){const fontNameStr=fontName&&fontName.name,baseFontStr=baseFont&&baseFont.name;fontNameStr!==baseFontStr&&((0,_util.info)(`The FontDescriptor's FontName is "${fontNameStr}" but should be the same as the Font's BaseFont "${baseFontStr}".`),fontNameStr&&baseFontStr&&baseFontStr.startsWith(fontNameStr)&&(fontName=baseFont))}if(fontName=fontName||baseFont,!(fontName instanceof _primitives.Name))throw new _util.FormatError("invalid font name");try{fontFile=descriptor.get("FontFile","FontFile2","FontFile3")}catch(ex){if(!this.options.ignoreErrors)throw ex;(0,_util.warn)(`translateFont - fetching "${fontName.name}" font file: "${ex}".`),fontFile=new _stream.NullStream}let isStandardFont=!1,isInternalFont=!1,glyphScaleFactors=null;if(fontFile){if(fontFile.dict){const subtypeEntry=fontFile.dict.get("Subtype");subtypeEntry instanceof _primitives.Name&&(subtype=subtypeEntry.name),length1=fontFile.dict.get("Length1"),length2=fontFile.dict.get("Length2"),length3=fontFile.dict.get("Length3")}}else if(cssFontInfo){const standardFontName=(0,_xfa_fonts.getXfaFontName)(fontName.name);standardFontName&&(cssFontInfo.fontFamily=`${cssFontInfo.fontFamily}-PdfJS-XFA`,cssFontInfo.metrics=standardFontName.metrics||null,glyphScaleFactors=standardFontName.factors||null,fontFile=await this.fetchStandardFontData(standardFontName.name),isInternalFont=!!fontFile,baseDict=dict=(0,_xfa_fonts.getXfaFontDict)(fontName.name),composite=!0)}else if(!isType3Font){const standardFontName=(0,_standard_fonts.getStandardFontName)(fontName.name);standardFontName&&(isStandardFont=!0,fontFile=await this.fetchStandardFontData(standardFontName),isInternalFont=!!fontFile)}if(properties={type,name:fontName.name,subtype,file:fontFile,length1,length2,length3,isStandardFont,isInternalFont,loadedName:baseDict.loadedName,composite,fixedPitch:!1,fontMatrix:dict.getArray("FontMatrix")||_util.FONT_IDENTITY_MATRIX,firstChar,lastChar,toUnicode,bbox:descriptor.getArray("FontBBox")||dict.getArray("FontBBox"),ascent:descriptor.get("Ascent"),descent:descriptor.get("Descent"),xHeight:descriptor.get("XHeight")||0,capHeight:descriptor.get("CapHeight")||0,flags:descriptor.get("Flags"),italicAngle:descriptor.get("ItalicAngle")||0,isType3Font,cssFontInfo,scaleFactors:glyphScaleFactors},composite){const cidEncoding=baseDict.get("Encoding");cidEncoding instanceof _primitives.Name&&(properties.cidEncoding=cidEncoding.name);const cMap=await _cmap.CMapFactory.create({encoding:cidEncoding,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null});properties.cMap=cMap,properties.vertical=properties.cMap.vertical}return this.extractDataStructures(dict,baseDict,properties).then((newProperties=>(this.extractWidths(dict,descriptor,newProperties),new _fonts.Font(fontName.name,fontFile,newProperties))))}static buildFontPaths(font,glyphs,handler,evaluatorOptions){function buildPath(fontChar){const glyphName=`${font.loadedName}_path_${fontChar}`;try{if(font.renderer.hasBuiltPath(fontChar))return;handler.send("commonobj",[glyphName,"FontPath",font.renderer.getPathJs(fontChar)])}catch(reason){if(evaluatorOptions.ignoreErrors)return handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.errorFontBuildPath}),void(0,_util.warn)(`buildFontPaths - ignoring ${glyphName} glyph: "${reason}".`);throw reason}}for(const glyph of glyphs){buildPath(glyph.fontChar);const accent=glyph.accent;accent&&accent.fontChar&&buildPath(accent.fontChar)}}static get fallbackFontDict(){const dict=new _primitives.Dict;return dict.set("BaseFont",_primitives.Name.get("PDFJS-FallbackFont")),dict.set("Type",_primitives.Name.get("FallbackType")),dict.set("Subtype",_primitives.Name.get("FallbackType")),dict.set("Encoding",_primitives.Name.get("WinAnsiEncoding")),(0,_util.shadow)(this,"fallbackFontDict",dict)}}exports.PartialEvaluator=PartialEvaluator;class TranslatedFont{constructor({loadedName,font,dict,evaluatorOptions}){this.loadedName=loadedName,this.font=font,this.dict=dict,this._evaluatorOptions=evaluatorOptions||DefaultPartialEvaluatorOptions,this.type3Loaded=null,this.type3Dependencies=font.isType3Font?new Set:null,this.sent=!1}send(handler){this.sent||(this.sent=!0,handler.send("commonobj",[this.loadedName,"Font",this.font.exportData(this._evaluatorOptions.fontExtraProperties)]))}fallback(handler){this.font.data&&(this.font.disableFontFace=!0,PartialEvaluator.buildFontPaths(this.font,this.font.glyphCacheValues,handler,this._evaluatorOptions))}loadType3Data(evaluator,resources,task){if(this.type3Loaded)return this.type3Loaded;if(!this.font.isType3Font)throw new Error("Must be a Type3 font.");const type3Evaluator=evaluator.clone({ignoreErrors:!1});type3Evaluator.parsingType3Font=!0;const type3FontRefs=new _primitives.RefSet(evaluator.type3FontRefs);this.dict.objId&&!type3FontRefs.has(this.dict.objId)&&type3FontRefs.put(this.dict.objId),type3Evaluator.type3FontRefs=type3FontRefs;const translatedFont=this.font,type3Dependencies=this.type3Dependencies;let loadCharProcsPromise=Promise.resolve();const charProcs=this.dict.get("CharProcs"),fontResources=this.dict.get("Resources")||resources,charProcOperatorList=Object.create(null),fontBBox=_util.Util.normalizeRect(translatedFont.bbox||[0,0,0,0]),width=fontBBox[2]-fontBBox[0],height=fontBBox[3]-fontBBox[1],fontBBoxSize=Math.hypot(width,height);for(const key of charProcs.getKeys())loadCharProcsPromise=loadCharProcsPromise.then((()=>{const glyphStream=charProcs.get(key),operatorList=new _operator_list.OperatorList;return type3Evaluator.getOperatorList({stream:glyphStream,task,resources:fontResources,operatorList}).then((()=>{operatorList.fnArray[0]===_util.OPS.setCharWidthAndBounds&&this._removeType3ColorOperators(operatorList,fontBBoxSize),charProcOperatorList[key]=operatorList.getIR();for(const dependency of operatorList.dependencies)type3Dependencies.add(dependency)})).catch((function(reason){(0,_util.warn)(`Type3 font resource "${key}" is not available.`);const dummyOperatorList=new _operator_list.OperatorList;charProcOperatorList[key]=dummyOperatorList.getIR()}))}));return this.type3Loaded=loadCharProcsPromise.then((()=>{translatedFont.charProcOperatorList=charProcOperatorList,this._bbox&&(translatedFont.isCharBBox=!0,translatedFont.bbox=this._bbox)})),this.type3Loaded}_removeType3ColorOperators(operatorList,fontBBoxSize=NaN){const charBBox=_util.Util.normalizeRect(operatorList.argsArray[0].slice(2)),width=charBBox[2]-charBBox[0],height=charBBox[3]-charBBox[1],charBBoxSize=Math.hypot(width,height);0===width||0===height?(operatorList.fnArray.splice(0,1),operatorList.argsArray.splice(0,1)):(0===fontBBoxSize||Math.round(charBBoxSize/fontBBoxSize)>=10)&&(this._bbox||(this._bbox=[1/0,1/0,-1/0,-1/0]),this._bbox[0]=Math.min(this._bbox[0],charBBox[0]),this._bbox[1]=Math.min(this._bbox[1],charBBox[1]),this._bbox[2]=Math.max(this._bbox[2],charBBox[2]),this._bbox[3]=Math.max(this._bbox[3],charBBox[3]));let i=0,ii=operatorList.length;for(;i<ii;){switch(operatorList.fnArray[i]){case _util.OPS.setCharWidthAndBounds:break;case _util.OPS.setStrokeColorSpace:case _util.OPS.setFillColorSpace:case _util.OPS.setStrokeColor:case _util.OPS.setStrokeColorN:case _util.OPS.setFillColor:case _util.OPS.setFillColorN:case _util.OPS.setStrokeGray:case _util.OPS.setFillGray:case _util.OPS.setStrokeRGBColor:case _util.OPS.setFillRGBColor:case _util.OPS.setStrokeCMYKColor:case _util.OPS.setFillCMYKColor:case _util.OPS.shadingFill:case _util.OPS.setRenderingIntent:operatorList.fnArray.splice(i,1),operatorList.argsArray.splice(i,1),ii--;continue;case _util.OPS.setGState:const[gStateObj]=operatorList.argsArray[i];let j=0,jj=gStateObj.length;for(;j<jj;){const[gStateKey]=gStateObj[j];switch(gStateKey){case"TR":case"TR2":case"HT":case"BG":case"BG2":case"UCR":case"UCR2":gStateObj.splice(j,1),jj--;continue}j++}}i++}}}class StateManager{constructor(initialState=new EvalState){this.state=initialState,this.stateStack=[]}save(){const old=this.state;this.stateStack.push(this.state),this.state=old.clone()}restore(){const prev=this.stateStack.pop();prev&&(this.state=prev)}transform(args){this.state.ctm=_util.Util.transform(this.state.ctm,args)}}class TextState{constructor(){this.ctm=new Float32Array(_util.IDENTITY_MATRIX),this.fontName=null,this.fontSize=0,this.font=null,this.fontMatrix=_util.FONT_IDENTITY_MATRIX,this.textMatrix=_util.IDENTITY_MATRIX.slice(),this.textLineMatrix=_util.IDENTITY_MATRIX.slice(),this.charSpacing=0,this.wordSpacing=0,this.leading=0,this.textHScale=1,this.textRise=0}setTextMatrix(a,b,c,d,e,f){const m=this.textMatrix;m[0]=a,m[1]=b,m[2]=c,m[3]=d,m[4]=e,m[5]=f}setTextLineMatrix(a,b,c,d,e,f){const m=this.textLineMatrix;m[0]=a,m[1]=b,m[2]=c,m[3]=d,m[4]=e,m[5]=f}translateTextMatrix(x,y){const m=this.textMatrix;m[4]=m[0]*x+m[2]*y+m[4],m[5]=m[1]*x+m[3]*y+m[5]}translateTextLineMatrix(x,y){const m=this.textLineMatrix;m[4]=m[0]*x+m[2]*y+m[4],m[5]=m[1]*x+m[3]*y+m[5]}carriageReturn(){this.translateTextLineMatrix(0,-this.leading),this.textMatrix=this.textLineMatrix.slice()}clone(){const clone=Object.create(this);return clone.textMatrix=this.textMatrix.slice(),clone.textLineMatrix=this.textLineMatrix.slice(),clone.fontMatrix=this.fontMatrix.slice(),clone}}class EvalState{constructor(){this.ctm=new Float32Array(_util.IDENTITY_MATRIX),this.font=null,this.textRenderingMode=_util.TextRenderingMode.FILL,this.fillColorSpace=_colorspace.ColorSpace.singletons.gray,this.strokeColorSpace=_colorspace.ColorSpace.singletons.gray}clone(){return Object.create(this)}}class EvaluatorPreprocessor{static get opMap(){const getOPMap=(0,_core_utils.getLookupTableFactory)((function(t){t.w={id:_util.OPS.setLineWidth,numArgs:1,variableArgs:!1},t.J={id:_util.OPS.setLineCap,numArgs:1,variableArgs:!1},t.j={id:_util.OPS.setLineJoin,numArgs:1,variableArgs:!1},t.M={id:_util.OPS.setMiterLimit,numArgs:1,variableArgs:!1},t.d={id:_util.OPS.setDash,numArgs:2,variableArgs:!1},t.ri={id:_util.OPS.setRenderingIntent,numArgs:1,variableArgs:!1},t.i={id:_util.OPS.setFlatness,numArgs:1,variableArgs:!1},t.gs={id:_util.OPS.setGState,numArgs:1,variableArgs:!1},t.q={id:_util.OPS.save,numArgs:0,variableArgs:!1},t.Q={id:_util.OPS.restore,numArgs:0,variableArgs:!1},t.cm={id:_util.OPS.transform,numArgs:6,variableArgs:!1},t.m={id:_util.OPS.moveTo,numArgs:2,variableArgs:!1},t.l={id:_util.OPS.lineTo,numArgs:2,variableArgs:!1},t.c={id:_util.OPS.curveTo,numArgs:6,variableArgs:!1},t.v={id:_util.OPS.curveTo2,numArgs:4,variableArgs:!1},t.y={id:_util.OPS.curveTo3,numArgs:4,variableArgs:!1},t.h={id:_util.OPS.closePath,numArgs:0,variableArgs:!1},t.re={id:_util.OPS.rectangle,numArgs:4,variableArgs:!1},t.S={id:_util.OPS.stroke,numArgs:0,variableArgs:!1},t.s={id:_util.OPS.closeStroke,numArgs:0,variableArgs:!1},t.f={id:_util.OPS.fill,numArgs:0,variableArgs:!1},t.F={id:_util.OPS.fill,numArgs:0,variableArgs:!1},t["f*"]={id:_util.OPS.eoFill,numArgs:0,variableArgs:!1},t.B={id:_util.OPS.fillStroke,numArgs:0,variableArgs:!1},t["B*"]={id:_util.OPS.eoFillStroke,numArgs:0,variableArgs:!1},t.b={id:_util.OPS.closeFillStroke,numArgs:0,variableArgs:!1},t["b*"]={id:_util.OPS.closeEOFillStroke,numArgs:0,variableArgs:!1},t.n={id:_util.OPS.endPath,numArgs:0,variableArgs:!1},t.W={id:_util.OPS.clip,numArgs:0,variableArgs:!1},t["W*"]={id:_util.OPS.eoClip,numArgs:0,variableArgs:!1},t.BT={id:_util.OPS.beginText,numArgs:0,variableArgs:!1},t.ET={id:_util.OPS.endText,numArgs:0,variableArgs:!1},t.Tc={id:_util.OPS.setCharSpacing,numArgs:1,variableArgs:!1},t.Tw={id:_util.OPS.setWordSpacing,numArgs:1,variableArgs:!1},t.Tz={id:_util.OPS.setHScale,numArgs:1,variableArgs:!1},t.TL={id:_util.OPS.setLeading,numArgs:1,variableArgs:!1},t.Tf={id:_util.OPS.setFont,numArgs:2,variableArgs:!1},t.Tr={id:_util.OPS.setTextRenderingMode,numArgs:1,variableArgs:!1},t.Ts={id:_util.OPS.setTextRise,numArgs:1,variableArgs:!1},t.Td={id:_util.OPS.moveText,numArgs:2,variableArgs:!1},t.TD={id:_util.OPS.setLeadingMoveText,numArgs:2,variableArgs:!1},t.Tm={id:_util.OPS.setTextMatrix,numArgs:6,variableArgs:!1},t["T*"]={id:_util.OPS.nextLine,numArgs:0,variableArgs:!1},t.Tj={id:_util.OPS.showText,numArgs:1,variableArgs:!1},t.TJ={id:_util.OPS.showSpacedText,numArgs:1,variableArgs:!1},t["'"]={id:_util.OPS.nextLineShowText,numArgs:1,variableArgs:!1},t['"']={id:_util.OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:!1},t.d0={id:_util.OPS.setCharWidth,numArgs:2,variableArgs:!1},t.d1={id:_util.OPS.setCharWidthAndBounds,numArgs:6,variableArgs:!1},t.CS={id:_util.OPS.setStrokeColorSpace,numArgs:1,variableArgs:!1},t.cs={id:_util.OPS.setFillColorSpace,numArgs:1,variableArgs:!1},t.SC={id:_util.OPS.setStrokeColor,numArgs:4,variableArgs:!0},t.SCN={id:_util.OPS.setStrokeColorN,numArgs:33,variableArgs:!0},t.sc={id:_util.OPS.setFillColor,numArgs:4,variableArgs:!0},t.scn={id:_util.OPS.setFillColorN,numArgs:33,variableArgs:!0},t.G={id:_util.OPS.setStrokeGray,numArgs:1,variableArgs:!1},t.g={id:_util.OPS.setFillGray,numArgs:1,variableArgs:!1},t.RG={id:_util.OPS.setStrokeRGBColor,numArgs:3,variableArgs:!1},t.rg={id:_util.OPS.setFillRGBColor,numArgs:3,variableArgs:!1},t.K={id:_util.OPS.setStrokeCMYKColor,numArgs:4,variableArgs:!1},t.k={id:_util.OPS.setFillCMYKColor,numArgs:4,variableArgs:!1},t.sh={id:_util.OPS.shadingFill,numArgs:1,variableArgs:!1},t.BI={id:_util.OPS.beginInlineImage,numArgs:0,variableArgs:!1},t.ID={id:_util.OPS.beginImageData,numArgs:0,variableArgs:!1},t.EI={id:_util.OPS.endInlineImage,numArgs:1,variableArgs:!1},t.Do={id:_util.OPS.paintXObject,numArgs:1,variableArgs:!1},t.MP={id:_util.OPS.markPoint,numArgs:1,variableArgs:!1},t.DP={id:_util.OPS.markPointProps,numArgs:2,variableArgs:!1},t.BMC={id:_util.OPS.beginMarkedContent,numArgs:1,variableArgs:!1},t.BDC={id:_util.OPS.beginMarkedContentProps,numArgs:2,variableArgs:!1},t.EMC={id:_util.OPS.endMarkedContent,numArgs:0,variableArgs:!1},t.BX={id:_util.OPS.beginCompat,numArgs:0,variableArgs:!1},t.EX={id:_util.OPS.endCompat,numArgs:0,variableArgs:!1},t.BM=null,t.BD=null,t.true=null,t.fa=null,t.fal=null,t.fals=null,t.false=null,t.nu=null,t.nul=null,t.null=null}));return(0,_util.shadow)(this,"opMap",getOPMap())}static get MAX_INVALID_PATH_OPS(){return(0,_util.shadow)(this,"MAX_INVALID_PATH_OPS",10)}constructor(stream,xref,stateManager=new StateManager){this.parser=new _parser.Parser({lexer:new _parser.Lexer(stream,EvaluatorPreprocessor.opMap),xref}),this.stateManager=stateManager,this.nonProcessedArgs=[],this._isPathOp=!1,this._numInvalidPathOPS=0}get savedStatesDepth(){return this.stateManager.stateStack.length}read(operation){let args=operation.args;for(;;){const obj=this.parser.getObj();if(obj instanceof _primitives.Cmd){const cmd=obj.cmd,opSpec=EvaluatorPreprocessor.opMap[cmd];if(!opSpec){(0,_util.warn)(`Unknown command "${cmd}".`);continue}const fn=opSpec.id,numArgs=opSpec.numArgs;let argsLength=null!==args?args.length:0;if(this._isPathOp||(this._numInvalidPathOPS=0),this._isPathOp=fn>=_util.OPS.moveTo&&fn<=_util.OPS.endPath,opSpec.variableArgs)argsLength>numArgs&&(0,_util.info)(`Command ${cmd}: expected [0, ${numArgs}] args, but received ${argsLength} args.`);else{if(argsLength!==numArgs){const nonProcessedArgs=this.nonProcessedArgs;for(;argsLength>numArgs;)nonProcessedArgs.push(args.shift()),argsLength--;for(;argsLength<numArgs&&0!==nonProcessedArgs.length;)null===args&&(args=[]),args.unshift(nonProcessedArgs.pop()),argsLength++}if(argsLength<numArgs){const partialMsg=`command ${cmd}: expected ${numArgs} args, but received ${argsLength} args.`;if(this._isPathOp&&++this._numInvalidPathOPS>EvaluatorPreprocessor.MAX_INVALID_PATH_OPS)throw new _util.FormatError(`Invalid ${partialMsg}`);(0,_util.warn)(`Skipping ${partialMsg}`),null!==args&&(args.length=0);continue}}return this.preprocessCommand(fn,args),operation.fn=fn,operation.args=args,!0}if(obj===_primitives.EOF)return!1;if(null!==obj&&(null===args&&(args=[]),args.push(obj),args.length>33))throw new _util.FormatError("Too many arguments")}}preprocessCommand(fn,args){switch(0|fn){case _util.OPS.save:this.stateManager.save();break;case _util.OPS.restore:this.stateManager.restore();break;case _util.OPS.transform:this.stateManager.transform(args)}}}exports.EvaluatorPreprocessor=EvaluatorPreprocessor},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.IdentityCMap=exports.CMapFactory=exports.CMap=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_base_stream=__w_pdfjs_require__(7),_parser=__w_pdfjs_require__(17),_core_utils=__w_pdfjs_require__(6),_stream=__w_pdfjs_require__(10);const BUILT_IN_CMAPS=["Adobe-GB1-UCS2","Adobe-CNS1-UCS2","Adobe-Japan1-UCS2","Adobe-Korea1-UCS2","78-EUC-H","78-EUC-V","78-H","78-RKSJ-H","78-RKSJ-V","78-V","78ms-RKSJ-H","78ms-RKSJ-V","83pv-RKSJ-H","90ms-RKSJ-H","90ms-RKSJ-V","90msp-RKSJ-H","90msp-RKSJ-V","90pv-RKSJ-H","90pv-RKSJ-V","Add-H","Add-RKSJ-H","Add-RKSJ-V","Add-V","Adobe-CNS1-0","Adobe-CNS1-1","Adobe-CNS1-2","Adobe-CNS1-3","Adobe-CNS1-4","Adobe-CNS1-5","Adobe-CNS1-6","Adobe-GB1-0","Adobe-GB1-1","Adobe-GB1-2","Adobe-GB1-3","Adobe-GB1-4","Adobe-GB1-5","Adobe-Japan1-0","Adobe-Japan1-1","Adobe-Japan1-2","Adobe-Japan1-3","Adobe-Japan1-4","Adobe-Japan1-5","Adobe-Japan1-6","Adobe-Korea1-0","Adobe-Korea1-1","Adobe-Korea1-2","B5-H","B5-V","B5pc-H","B5pc-V","CNS-EUC-H","CNS-EUC-V","CNS1-H","CNS1-V","CNS2-H","CNS2-V","ETHK-B5-H","ETHK-B5-V","ETen-B5-H","ETen-B5-V","ETenms-B5-H","ETenms-B5-V","EUC-H","EUC-V","Ext-H","Ext-RKSJ-H","Ext-RKSJ-V","Ext-V","GB-EUC-H","GB-EUC-V","GB-H","GB-V","GBK-EUC-H","GBK-EUC-V","GBK2K-H","GBK2K-V","GBKp-EUC-H","GBKp-EUC-V","GBT-EUC-H","GBT-EUC-V","GBT-H","GBT-V","GBTpc-EUC-H","GBTpc-EUC-V","GBpc-EUC-H","GBpc-EUC-V","H","HKdla-B5-H","HKdla-B5-V","HKdlb-B5-H","HKdlb-B5-V","HKgccs-B5-H","HKgccs-B5-V","HKm314-B5-H","HKm314-B5-V","HKm471-B5-H","HKm471-B5-V","HKscs-B5-H","HKscs-B5-V","Hankaku","Hiragana","KSC-EUC-H","KSC-EUC-V","KSC-H","KSC-Johab-H","KSC-Johab-V","KSC-V","KSCms-UHC-H","KSCms-UHC-HW-H","KSCms-UHC-HW-V","KSCms-UHC-V","KSCpc-EUC-H","KSCpc-EUC-V","Katakana","NWP-H","NWP-V","RKSJ-H","RKSJ-V","Roman","UniCNS-UCS2-H","UniCNS-UCS2-V","UniCNS-UTF16-H","UniCNS-UTF16-V","UniCNS-UTF32-H","UniCNS-UTF32-V","UniCNS-UTF8-H","UniCNS-UTF8-V","UniGB-UCS2-H","UniGB-UCS2-V","UniGB-UTF16-H","UniGB-UTF16-V","UniGB-UTF32-H","UniGB-UTF32-V","UniGB-UTF8-H","UniGB-UTF8-V","UniJIS-UCS2-H","UniJIS-UCS2-HW-H","UniJIS-UCS2-HW-V","UniJIS-UCS2-V","UniJIS-UTF16-H","UniJIS-UTF16-V","UniJIS-UTF32-H","UniJIS-UTF32-V","UniJIS-UTF8-H","UniJIS-UTF8-V","UniJIS2004-UTF16-H","UniJIS2004-UTF16-V","UniJIS2004-UTF32-H","UniJIS2004-UTF32-V","UniJIS2004-UTF8-H","UniJIS2004-UTF8-V","UniJISPro-UCS2-HW-V","UniJISPro-UCS2-V","UniJISPro-UTF8-V","UniJISX0213-UTF32-H","UniJISX0213-UTF32-V","UniJISX02132004-UTF32-H","UniJISX02132004-UTF32-V","UniKS-UCS2-H","UniKS-UCS2-V","UniKS-UTF16-H","UniKS-UTF16-V","UniKS-UTF32-H","UniKS-UTF32-V","UniKS-UTF8-H","UniKS-UTF8-V","V","WP-Symbol"];class CMap{constructor(builtInCMap=!1){this.codespaceRanges=[[],[],[],[]],this.numCodespaceRanges=0,this._map=[],this.name="",this.vertical=!1,this.useCMap=null,this.builtInCMap=builtInCMap}addCodespaceRange(n,low,high){this.codespaceRanges[n-1].push(low,high),this.numCodespaceRanges++}mapCidRange(low,high,dstLow){if(high-low>16777215)throw new Error("mapCidRange - ignoring data above MAX_MAP_RANGE.");for(;low<=high;)this._map[low++]=dstLow++}mapBfRange(low,high,dstLow){if(high-low>16777215)throw new Error("mapBfRange - ignoring data above MAX_MAP_RANGE.");const lastByte=dstLow.length-1;for(;low<=high;){this._map[low++]=dstLow;const nextCharCode=dstLow.charCodeAt(lastByte)+1;nextCharCode>255?dstLow=dstLow.substring(0,lastByte-1)+String.fromCharCode(dstLow.charCodeAt(lastByte-1)+1)+"\0":dstLow=dstLow.substring(0,lastByte)+String.fromCharCode(nextCharCode)}}mapBfRangeToArray(low,high,array){if(high-low>16777215)throw new Error("mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.");const ii=array.length;let i=0;for(;low<=high&&i<ii;)this._map[low]=array[i++],++low}mapOne(src,dst){this._map[src]=dst}lookup(code){return this._map[code]}contains(code){return void 0!==this._map[code]}forEach(callback){const map=this._map,length=map.length;if(length<=65536)for(let i=0;i<length;i++)void 0!==map[i]&&callback(i,map[i]);else for(const i in map)callback(i,map[i])}charCodeOf(value){const map=this._map;if(map.length<=65536)return map.indexOf(value);for(const charCode in map)if(map[charCode]===value)return 0|charCode;return-1}getMap(){return this._map}readCharCode(str,offset,out){let c=0;const codespaceRanges=this.codespaceRanges;for(let n=0,nn=codespaceRanges.length;n<nn;n++){c=(c<<8|str.charCodeAt(offset+n))>>>0;const codespaceRange=codespaceRanges[n];for(let k=0,kk=codespaceRange.length;k<kk;){const low=codespaceRange[k++],high=codespaceRange[k++];if(c>=low&&c<=high)return out.charcode=c,void(out.length=n+1)}}out.charcode=0,out.length=1}getCharCodeLength(charCode){const codespaceRanges=this.codespaceRanges;for(let n=0,nn=codespaceRanges.length;n<nn;n++){const codespaceRange=codespaceRanges[n];for(let k=0,kk=codespaceRange.length;k<kk;){const low=codespaceRange[k++],high=codespaceRange[k++];if(charCode>=low&&charCode<=high)return n+1}}return 1}get length(){return this._map.length}get isIdentityCMap(){if("Identity-H"!==this.name&&"Identity-V"!==this.name)return!1;if(65536!==this._map.length)return!1;for(let i=0;i<65536;i++)if(this._map[i]!==i)return!1;return!0}}exports.CMap=CMap;class IdentityCMap extends CMap{constructor(vertical,n){super(),this.vertical=vertical,this.addCodespaceRange(n,0,65535)}mapCidRange(low,high,dstLow){(0,_util.unreachable)("should not call mapCidRange")}mapBfRange(low,high,dstLow){(0,_util.unreachable)("should not call mapBfRange")}mapBfRangeToArray(low,high,array){(0,_util.unreachable)("should not call mapBfRangeToArray")}mapOne(src,dst){(0,_util.unreachable)("should not call mapCidOne")}lookup(code){return Number.isInteger(code)&&code<=65535?code:void 0}contains(code){return Number.isInteger(code)&&code<=65535}forEach(callback){for(let i=0;i<=65535;i++)callback(i,i)}charCodeOf(value){return Number.isInteger(value)&&value<=65535?value:-1}getMap(){const map=new Array(65536);for(let i=0;i<=65535;i++)map[i]=i;return map}get length(){return 65536}get isIdentityCMap(){(0,_util.unreachable)("should not access .isIdentityCMap")}}exports.IdentityCMap=IdentityCMap;const BinaryCMapReader=function BinaryCMapReaderClosure(){function hexToInt(a,size){let n=0;for(let i=0;i<=size;i++)n=n<<8|a[i];return n>>>0}function hexToStr(a,size){return 1===size?String.fromCharCode(a[0],a[1]):3===size?String.fromCharCode(a[0],a[1],a[2],a[3]):String.fromCharCode.apply(null,a.subarray(0,size+1))}function addHex(a,b,size){let c=0;for(let i=size;i>=0;i--)c+=a[i]+b[i],a[i]=255&c,c>>=8}function incHex(a,size){let c=1;for(let i=size;i>=0&&c>0;i--)c+=a[i],a[i]=255&c,c>>=8}class BinaryCMapStream{constructor(data){this.buffer=data,this.pos=0,this.end=data.length,this.tmpBuf=new Uint8Array(19)}readByte(){return this.pos>=this.end?-1:this.buffer[this.pos++]}readNumber(){let last,n=0;do{const b=this.readByte();if(b<0)throw new _util.FormatError("unexpected EOF in bcmap");last=!(128&b),n=n<<7|127&b}while(!last);return n}readSigned(){const n=this.readNumber();return 1&n?~(n>>>1):n>>>1}readHex(num,size){num.set(this.buffer.subarray(this.pos,this.pos+size+1)),this.pos+=size+1}readHexNumber(num,size){let last;const stack=this.tmpBuf;let sp=0;do{const b=this.readByte();if(b<0)throw new _util.FormatError("unexpected EOF in bcmap");last=!(128&b),stack[sp++]=127&b}while(!last);let i=size,buffer=0,bufferSize=0;for(;i>=0;){for(;bufferSize<8&&stack.length>0;)buffer|=stack[--sp]<<bufferSize,bufferSize+=7;num[i]=255&buffer,i--,buffer>>=8,bufferSize-=8}}readHexSigned(num,size){this.readHexNumber(num,size);const sign=1&num[size]?255:0;let c=0;for(let i=0;i<=size;i++)c=(1&c)<<8|num[i],num[i]=c>>1^sign}readString(){const len=this.readNumber();let s="";for(let i=0;i<len;i++)s+=String.fromCharCode(this.readNumber());return s}}return class BinaryCMapReader{async process(data,cMap,extend){const stream=new BinaryCMapStream(data),header=stream.readByte();cMap.vertical=!!(1&header);let useCMap=null;const start=new Uint8Array(16),end=new Uint8Array(16),char=new Uint8Array(16),charCode=new Uint8Array(16),tmp=new Uint8Array(16);let code,b;for(;(b=stream.readByte())>=0;){const type=b>>5;if(7===type){switch(31&b){case 0:stream.readString();break;case 1:useCMap=stream.readString()}continue}const sequence=!!(16&b),dataSize=15&b;if(dataSize+1>16)throw new Error("BinaryCMapReader.process: Invalid dataSize.");const ucs2DataSize=1,subitemsCount=stream.readNumber();switch(type){case 0:stream.readHex(start,dataSize),stream.readHexNumber(end,dataSize),addHex(end,start,dataSize),cMap.addCodespaceRange(dataSize+1,hexToInt(start,dataSize),hexToInt(end,dataSize));for(let i=1;i<subitemsCount;i++)incHex(end,dataSize),stream.readHexNumber(start,dataSize),addHex(start,end,dataSize),stream.readHexNumber(end,dataSize),addHex(end,start,dataSize),cMap.addCodespaceRange(dataSize+1,hexToInt(start,dataSize),hexToInt(end,dataSize));break;case 1:stream.readHex(start,dataSize),stream.readHexNumber(end,dataSize),addHex(end,start,dataSize),stream.readNumber();for(let i=1;i<subitemsCount;i++)incHex(end,dataSize),stream.readHexNumber(start,dataSize),addHex(start,end,dataSize),stream.readHexNumber(end,dataSize),addHex(end,start,dataSize),stream.readNumber();break;case 2:stream.readHex(char,dataSize),code=stream.readNumber(),cMap.mapOne(hexToInt(char,dataSize),code);for(let i=1;i<subitemsCount;i++)incHex(char,dataSize),sequence||(stream.readHexNumber(tmp,dataSize),addHex(char,tmp,dataSize)),code=stream.readSigned()+(code+1),cMap.mapOne(hexToInt(char,dataSize),code);break;case 3:stream.readHex(start,dataSize),stream.readHexNumber(end,dataSize),addHex(end,start,dataSize),code=stream.readNumber(),cMap.mapCidRange(hexToInt(start,dataSize),hexToInt(end,dataSize),code);for(let i=1;i<subitemsCount;i++)incHex(end,dataSize),sequence?start.set(end):(stream.readHexNumber(start,dataSize),addHex(start,end,dataSize)),stream.readHexNumber(end,dataSize),addHex(end,start,dataSize),code=stream.readNumber(),cMap.mapCidRange(hexToInt(start,dataSize),hexToInt(end,dataSize),code);break;case 4:stream.readHex(char,ucs2DataSize),stream.readHex(charCode,dataSize),cMap.mapOne(hexToInt(char,ucs2DataSize),hexToStr(charCode,dataSize));for(let i=1;i<subitemsCount;i++)incHex(char,ucs2DataSize),sequence||(stream.readHexNumber(tmp,ucs2DataSize),addHex(char,tmp,ucs2DataSize)),incHex(charCode,dataSize),stream.readHexSigned(tmp,dataSize),addHex(charCode,tmp,dataSize),cMap.mapOne(hexToInt(char,ucs2DataSize),hexToStr(charCode,dataSize));break;case 5:stream.readHex(start,ucs2DataSize),stream.readHexNumber(end,ucs2DataSize),addHex(end,start,ucs2DataSize),stream.readHex(charCode,dataSize),cMap.mapBfRange(hexToInt(start,ucs2DataSize),hexToInt(end,ucs2DataSize),hexToStr(charCode,dataSize));for(let i=1;i<subitemsCount;i++)incHex(end,ucs2DataSize),sequence?start.set(end):(stream.readHexNumber(start,ucs2DataSize),addHex(start,end,ucs2DataSize)),stream.readHexNumber(end,ucs2DataSize),addHex(end,start,ucs2DataSize),stream.readHex(charCode,dataSize),cMap.mapBfRange(hexToInt(start,ucs2DataSize),hexToInt(end,ucs2DataSize),hexToStr(charCode,dataSize));break;default:throw new Error(`BinaryCMapReader.process - unknown type: ${type}`)}}return useCMap?extend(useCMap):cMap}}}(),CMapFactory=function CMapFactoryClosure(){function strToInt(str){let a=0;for(let i=0;i<str.length;i++)a=a<<8|str.charCodeAt(i);return a>>>0}function expectString(obj){if("string"!=typeof obj)throw new _util.FormatError("Malformed CMap: expected string.")}function expectInt(obj){if(!Number.isInteger(obj))throw new _util.FormatError("Malformed CMap: expected int.")}function parseBfChar(cMap,lexer){for(;;){let obj=lexer.getObj();if(obj===_primitives.EOF)break;if((0,_primitives.isCmd)(obj,"endbfchar"))return;expectString(obj);const src=strToInt(obj);obj=lexer.getObj(),expectString(obj);const dst=obj;cMap.mapOne(src,dst)}}function parseBfRange(cMap,lexer){for(;;){let obj=lexer.getObj();if(obj===_primitives.EOF)break;if((0,_primitives.isCmd)(obj,"endbfrange"))return;expectString(obj);const low=strToInt(obj);obj=lexer.getObj(),expectString(obj);const high=strToInt(obj);if(obj=lexer.getObj(),Number.isInteger(obj)||"string"==typeof obj){const dstLow=Number.isInteger(obj)?String.fromCharCode(obj):obj;cMap.mapBfRange(low,high,dstLow)}else{if(!(0,_primitives.isCmd)(obj,"["))break;{obj=lexer.getObj();const array=[];for(;!(0,_primitives.isCmd)(obj,"]")&&obj!==_primitives.EOF;)array.push(obj),obj=lexer.getObj();cMap.mapBfRangeToArray(low,high,array)}}}throw new _util.FormatError("Invalid bf range.")}function parseCidChar(cMap,lexer){for(;;){let obj=lexer.getObj();if(obj===_primitives.EOF)break;if((0,_primitives.isCmd)(obj,"endcidchar"))return;expectString(obj);const src=strToInt(obj);obj=lexer.getObj(),expectInt(obj);const dst=obj;cMap.mapOne(src,dst)}}function parseCidRange(cMap,lexer){for(;;){let obj=lexer.getObj();if(obj===_primitives.EOF)break;if((0,_primitives.isCmd)(obj,"endcidrange"))return;expectString(obj);const low=strToInt(obj);obj=lexer.getObj(),expectString(obj);const high=strToInt(obj);obj=lexer.getObj(),expectInt(obj);const dstLow=obj;cMap.mapCidRange(low,high,dstLow)}}function parseCodespaceRange(cMap,lexer){for(;;){let obj=lexer.getObj();if(obj===_primitives.EOF)break;if((0,_primitives.isCmd)(obj,"endcodespacerange"))return;if("string"!=typeof obj)break;const low=strToInt(obj);if(obj=lexer.getObj(),"string"!=typeof obj)break;const high=strToInt(obj);cMap.addCodespaceRange(obj.length,low,high)}throw new _util.FormatError("Invalid codespace range.")}function parseWMode(cMap,lexer){const obj=lexer.getObj();Number.isInteger(obj)&&(cMap.vertical=!!obj)}function parseCMapName(cMap,lexer){const obj=lexer.getObj();obj instanceof _primitives.Name&&(cMap.name=obj.name)}async function parseCMap(cMap,lexer,fetchBuiltInCMap,useCMap){let previous,embeddedUseCMap;objLoop:for(;;)try{const obj=lexer.getObj();if(obj===_primitives.EOF)break;if(obj instanceof _primitives.Name)"WMode"===obj.name?parseWMode(cMap,lexer):"CMapName"===obj.name&&parseCMapName(cMap,lexer),previous=obj;else if(obj instanceof _primitives.Cmd)switch(obj.cmd){case"endcmap":break objLoop;case"usecmap":previous instanceof _primitives.Name&&(embeddedUseCMap=previous.name);break;case"begincodespacerange":parseCodespaceRange(cMap,lexer);break;case"beginbfchar":parseBfChar(cMap,lexer);break;case"begincidchar":parseCidChar(cMap,lexer);break;case"beginbfrange":parseBfRange(cMap,lexer);break;case"begincidrange":parseCidRange(cMap,lexer)}}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)("Invalid cMap data: "+ex);continue}return!useCMap&&embeddedUseCMap&&(useCMap=embeddedUseCMap),useCMap?extendCMap(cMap,fetchBuiltInCMap,useCMap):cMap}async function extendCMap(cMap,fetchBuiltInCMap,useCMap){if(cMap.useCMap=await createBuiltInCMap(useCMap,fetchBuiltInCMap),0===cMap.numCodespaceRanges){const useCodespaceRanges=cMap.useCMap.codespaceRanges;for(let i=0;i<useCodespaceRanges.length;i++)cMap.codespaceRanges[i]=useCodespaceRanges[i].slice();cMap.numCodespaceRanges=cMap.useCMap.numCodespaceRanges}return cMap.useCMap.forEach((function(key,value){cMap.contains(key)||cMap.mapOne(key,cMap.useCMap.lookup(key))})),cMap}async function createBuiltInCMap(name,fetchBuiltInCMap){if("Identity-H"===name)return new IdentityCMap(!1,2);if("Identity-V"===name)return new IdentityCMap(!0,2);if(!BUILT_IN_CMAPS.includes(name))throw new Error("Unknown CMap name: "+name);if(!fetchBuiltInCMap)throw new Error("Built-in CMap parameters are not provided.");const{cMapData,compressionType}=await fetchBuiltInCMap(name),cMap=new CMap(!0);if(compressionType===_util.CMapCompressionType.BINARY)return(new BinaryCMapReader).process(cMapData,cMap,(useCMap=>extendCMap(cMap,fetchBuiltInCMap,useCMap)));if(compressionType===_util.CMapCompressionType.NONE){const lexer=new _parser.Lexer(new _stream.Stream(cMapData));return parseCMap(cMap,lexer,fetchBuiltInCMap,null)}throw new Error("TODO: Only BINARY/NONE CMap compression is currently supported.")}return{async create(params){const encoding=params.encoding,fetchBuiltInCMap=params.fetchBuiltInCMap,useCMap=params.useCMap;if(encoding instanceof _primitives.Name)return createBuiltInCMap(encoding.name,fetchBuiltInCMap);if(encoding instanceof _base_stream.BaseStream){const parsedCMap=await parseCMap(new CMap,new _parser.Lexer(encoding),fetchBuiltInCMap,useCMap);return parsedCMap.isIdentityCMap?createBuiltInCMap(parsedCMap.name,fetchBuiltInCMap):parsedCMap}throw new Error("Encoding required.")}}}();exports.CMapFactory=CMapFactory},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Parser=exports.Linearization=exports.Lexer=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_core_utils=__w_pdfjs_require__(6),_ascii_85_stream=__w_pdfjs_require__(18),_ascii_hex_stream=__w_pdfjs_require__(20),_ccitt_stream=__w_pdfjs_require__(21),_flate_stream=__w_pdfjs_require__(23),_jbig2_stream=__w_pdfjs_require__(24),_jpeg_stream=__w_pdfjs_require__(27),_jpx_stream=__w_pdfjs_require__(29),_lzw_stream=__w_pdfjs_require__(31),_stream=__w_pdfjs_require__(10),_predictor_stream=__w_pdfjs_require__(32),_run_length_stream=__w_pdfjs_require__(33);function computeAdler32(bytes){const bytesLength=bytes.length;let a=1,b=0;for(let i=0;i<bytesLength;++i)a+=255&bytes[i],b+=a;return b%65521<<16|a%65521}class Parser{constructor({lexer,xref,allowStreams=!1,recoveryMode=!1}){this.lexer=lexer,this.xref=xref,this.allowStreams=allowStreams,this.recoveryMode=recoveryMode,this.imageCache=Object.create(null),this.refill()}refill(){this.buf1=this.lexer.getObj(),this.buf2=this.lexer.getObj()}shift(){this.buf2 instanceof _primitives.Cmd&&"ID"===this.buf2.cmd?(this.buf1=this.buf2,this.buf2=null):(this.buf1=this.buf2,this.buf2=this.lexer.getObj())}tryShift(){try{return this.shift(),!0}catch(e){if(e instanceof _core_utils.MissingDataException)throw e;return!1}}getObj(cipherTransform=null){const buf1=this.buf1;if(this.shift(),buf1 instanceof _primitives.Cmd)switch(buf1.cmd){case"BI":return this.makeInlineImage(cipherTransform);case"[":const array=[];for(;!(0,_primitives.isCmd)(this.buf1,"]")&&this.buf1!==_primitives.EOF;)array.push(this.getObj(cipherTransform));if(this.buf1===_primitives.EOF){if(this.recoveryMode)return array;throw new _core_utils.ParserEOFException("End of file inside array.")}return this.shift(),array;case"<<":const dict=new _primitives.Dict(this.xref);for(;!(0,_primitives.isCmd)(this.buf1,">>")&&this.buf1!==_primitives.EOF;){if(!(this.buf1 instanceof _primitives.Name)){(0,_util.info)("Malformed dictionary: key must be a name object"),this.shift();continue}const key=this.buf1.name;if(this.shift(),this.buf1===_primitives.EOF)break;dict.set(key,this.getObj(cipherTransform))}if(this.buf1===_primitives.EOF){if(this.recoveryMode)return dict;throw new _core_utils.ParserEOFException("End of file inside dictionary.")}return(0,_primitives.isCmd)(this.buf2,"stream")?this.allowStreams?this.makeStream(dict,cipherTransform):dict:(this.shift(),dict);default:return buf1}if(Number.isInteger(buf1)){if(Number.isInteger(this.buf1)&&(0,_primitives.isCmd)(this.buf2,"R")){const ref=_primitives.Ref.get(buf1,this.buf1);return this.shift(),this.shift(),ref}return buf1}return"string"==typeof buf1&&cipherTransform?cipherTransform.decryptString(buf1):buf1}findDefaultInlineStreamEnd(stream){const lexer=this.lexer,startPos=stream.pos;let ch,maybeEIPos,state=0;for(;-1!==(ch=stream.getByte());)if(0===state)state=69===ch?1:0;else if(1===state)state=73===ch?2:0;else if((0,_util.assert)(2===state,"findDefaultInlineStreamEnd - invalid state."),32===ch||10===ch||13===ch){maybeEIPos=stream.pos;const followingBytes=stream.peekBytes(10);for(let i=0,ii=followingBytes.length;i<ii;i++)if(ch=followingBytes[i],(0!==ch||0===followingBytes[i+1])&&10!==ch&&13!==ch&&(ch<32||ch>127)){state=0;break}if(2!==state)continue;if(lexer.knownCommands){const nextObj=lexer.peekObj();nextObj instanceof _primitives.Cmd&&!lexer.knownCommands[nextObj.cmd]&&(state=0)}else(0,_util.warn)("findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.");if(2===state)break}else state=0;-1===ch&&((0,_util.warn)("findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker"),maybeEIPos&&((0,_util.warn)('... trying to recover by using the last "EI" occurrence.'),stream.skip(-(stream.pos-maybeEIPos))));let endOffset=4;return stream.skip(-endOffset),ch=stream.peekByte(),stream.skip(endOffset),(0,_core_utils.isWhiteSpace)(ch)||endOffset--,stream.pos-endOffset-startPos}findDCTDecodeInlineStreamEnd(stream){const startPos=stream.pos;let b,markerLength,foundEOI=!1;for(;-1!==(b=stream.getByte());)if(255===b){switch(stream.getByte()){case 0:break;case 255:stream.skip(-1);break;case 217:foundEOI=!0;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:markerLength=stream.getUint16(),markerLength>2?stream.skip(markerLength-2):stream.skip(-2)}if(foundEOI)break}const length=stream.pos-startPos;return-1===b?((0,_util.warn)("Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead."),stream.skip(-length),this.findDefaultInlineStreamEnd(stream)):(this.inlineStreamSkipEI(stream),length)}findASCII85DecodeInlineStreamEnd(stream){const startPos=stream.pos;let ch;for(;-1!==(ch=stream.getByte());)if(126===ch){const tildePos=stream.pos;for(ch=stream.peekByte();(0,_core_utils.isWhiteSpace)(ch);)stream.skip(),ch=stream.peekByte();if(62===ch){stream.skip();break}if(stream.pos>tildePos){const maybeEI=stream.peekBytes(2);if(69===maybeEI[0]&&73===maybeEI[1])break}}const length=stream.pos-startPos;return-1===ch?((0,_util.warn)("Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead."),stream.skip(-length),this.findDefaultInlineStreamEnd(stream)):(this.inlineStreamSkipEI(stream),length)}findASCIIHexDecodeInlineStreamEnd(stream){const startPos=stream.pos;let ch;for(;-1!==(ch=stream.getByte())&&62!==ch;);const length=stream.pos-startPos;return-1===ch?((0,_util.warn)("Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead."),stream.skip(-length),this.findDefaultInlineStreamEnd(stream)):(this.inlineStreamSkipEI(stream),length)}inlineStreamSkipEI(stream){let ch,state=0;for(;-1!==(ch=stream.getByte());)if(0===state)state=69===ch?1:0;else if(1===state)state=73===ch?2:0;else if(2===state)break}makeInlineImage(cipherTransform){const lexer=this.lexer,stream=lexer.stream,dict=new _primitives.Dict(this.xref);let dictLength;for(;!(0,_primitives.isCmd)(this.buf1,"ID")&&this.buf1!==_primitives.EOF;){if(!(this.buf1 instanceof _primitives.Name))throw new _util.FormatError("Dictionary key must be a name object");const key=this.buf1.name;if(this.shift(),this.buf1===_primitives.EOF)break;dict.set(key,this.getObj(cipherTransform))}-1!==lexer.beginInlineImagePos&&(dictLength=stream.pos-lexer.beginInlineImagePos);const filter=dict.get("F","Filter");let filterName;if(filter instanceof _primitives.Name)filterName=filter.name;else if(Array.isArray(filter)){const filterZero=this.xref.fetchIfRef(filter[0]);filterZero instanceof _primitives.Name&&(filterName=filterZero.name)}const startPos=stream.pos;let length;switch(filterName){case"DCT":case"DCTDecode":length=this.findDCTDecodeInlineStreamEnd(stream);break;case"A85":case"ASCII85Decode":length=this.findASCII85DecodeInlineStreamEnd(stream);break;case"AHx":case"ASCIIHexDecode":length=this.findASCIIHexDecodeInlineStreamEnd(stream);break;default:length=this.findDefaultInlineStreamEnd(stream)}let cacheKey,imageStream=stream.makeSubStream(startPos,length,dict);if(length<1e3&&dictLength<5552){const imageBytes=imageStream.getBytes();imageStream.reset();const initialStreamPos=stream.pos;stream.pos=lexer.beginInlineImagePos;const dictBytes=stream.getBytes(dictLength);stream.pos=initialStreamPos,cacheKey=computeAdler32(imageBytes)+"_"+computeAdler32(dictBytes);const cacheEntry=this.imageCache[cacheKey];if(void 0!==cacheEntry)return this.buf2=_primitives.Cmd.get("EI"),this.shift(),cacheEntry.reset(),cacheEntry}return cipherTransform&&(imageStream=cipherTransform.createStream(imageStream,length)),imageStream=this.filter(imageStream,dict,length),imageStream.dict=dict,void 0!==cacheKey&&(imageStream.cacheKey=`inline_${length}_${cacheKey}`,this.imageCache[cacheKey]=imageStream),this.buf2=_primitives.Cmd.get("EI"),this.shift(),imageStream}_findStreamLength(startPos,signature){const{stream}=this.lexer;stream.pos=startPos;const signatureLength=signature.length;for(;stream.pos<stream.end;){const scanBytes=stream.peekBytes(2048),scanLength=scanBytes.length-signatureLength;if(scanLength<=0)break;let pos=0;for(;pos<scanLength;){let j=0;for(;j<signatureLength&&scanBytes[pos+j]===signature[j];)j++;if(j>=signatureLength)return stream.pos+=pos,stream.pos-startPos;pos++}stream.pos+=scanLength}return-1}makeStream(dict,cipherTransform){const lexer=this.lexer;let stream=lexer.stream;lexer.skipToNextLine();const startPos=stream.pos-1;let length=dict.get("Length");if(Number.isInteger(length)||((0,_util.info)(`Bad length "${length&&length.toString()}" in stream.`),length=0),stream.pos=startPos+length,lexer.nextChar(),this.tryShift()&&(0,_primitives.isCmd)(this.buf2,"endstream"))this.shift();else{const ENDSTREAM_SIGNATURE=new Uint8Array([101,110,100,115,116,114,101,97,109]);let actualLength=this._findStreamLength(startPos,ENDSTREAM_SIGNATURE);if(actualLength<0){const MAX_TRUNCATION=1;for(let i=1;i<=MAX_TRUNCATION;i++){const end=ENDSTREAM_SIGNATURE.length-i,TRUNCATED_SIGNATURE=ENDSTREAM_SIGNATURE.slice(0,end),maybeLength=this._findStreamLength(startPos,TRUNCATED_SIGNATURE);if(maybeLength>=0){const lastByte=stream.peekBytes(end+1)[end];if(!(0,_core_utils.isWhiteSpace)(lastByte))break;(0,_util.info)(`Found "${(0,_util.bytesToString)(TRUNCATED_SIGNATURE)}" when searching for endstream command.`),actualLength=maybeLength;break}}if(actualLength<0)throw new _util.FormatError("Missing endstream command.")}length=actualLength,lexer.nextChar(),this.shift(),this.shift()}return this.shift(),stream=stream.makeSubStream(startPos,length,dict),cipherTransform&&(stream=cipherTransform.createStream(stream,length)),stream=this.filter(stream,dict,length),stream.dict=dict,stream}filter(stream,dict,length){let filter=dict.get("F","Filter"),params=dict.get("DP","DecodeParms");if(filter instanceof _primitives.Name)return Array.isArray(params)&&(0,_util.warn)("/DecodeParms should not be an Array, when /Filter is a Name."),this.makeFilter(stream,filter.name,length,params);let maybeLength=length;if(Array.isArray(filter)){const filterArray=filter,paramsArray=params;for(let i=0,ii=filterArray.length;i<ii;++i){if(filter=this.xref.fetchIfRef(filterArray[i]),!(filter instanceof _primitives.Name))throw new _util.FormatError(`Bad filter name "${filter}"`);params=null,Array.isArray(paramsArray)&&i in paramsArray&&(params=this.xref.fetchIfRef(paramsArray[i])),stream=this.makeFilter(stream,filter.name,maybeLength,params),maybeLength=null}}return stream}makeFilter(stream,name,maybeLength,params){if(0===maybeLength)return(0,_util.warn)(`Empty "${name}" stream.`),new _stream.NullStream;const xrefStats=this.xref.stats;try{switch(name){case"Fl":case"FlateDecode":return xrefStats.addStreamType(_util.StreamType.FLATE),params?new _predictor_stream.PredictorStream(new _flate_stream.FlateStream(stream,maybeLength),maybeLength,params):new _flate_stream.FlateStream(stream,maybeLength);case"LZW":case"LZWDecode":xrefStats.addStreamType(_util.StreamType.LZW);let earlyChange=1;return params?(params.has("EarlyChange")&&(earlyChange=params.get("EarlyChange")),new _predictor_stream.PredictorStream(new _lzw_stream.LZWStream(stream,maybeLength,earlyChange),maybeLength,params)):new _lzw_stream.LZWStream(stream,maybeLength,earlyChange);case"DCT":case"DCTDecode":return xrefStats.addStreamType(_util.StreamType.DCT),new _jpeg_stream.JpegStream(stream,maybeLength,params);case"JPX":case"JPXDecode":return xrefStats.addStreamType(_util.StreamType.JPX),new _jpx_stream.JpxStream(stream,maybeLength,params);case"A85":case"ASCII85Decode":return xrefStats.addStreamType(_util.StreamType.A85),new _ascii_85_stream.Ascii85Stream(stream,maybeLength);case"AHx":case"ASCIIHexDecode":return xrefStats.addStreamType(_util.StreamType.AHX),new _ascii_hex_stream.AsciiHexStream(stream,maybeLength);case"CCF":case"CCITTFaxDecode":return xrefStats.addStreamType(_util.StreamType.CCF),new _ccitt_stream.CCITTFaxStream(stream,maybeLength,params);case"RL":case"RunLengthDecode":return xrefStats.addStreamType(_util.StreamType.RLX),new _run_length_stream.RunLengthStream(stream,maybeLength);case"JBIG2Decode":return xrefStats.addStreamType(_util.StreamType.JBIG),new _jbig2_stream.Jbig2Stream(stream,maybeLength,params)}return(0,_util.warn)(`Filter "${name}" is not supported.`),stream}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;return(0,_util.warn)(`Invalid stream: "${ex}"`),new _stream.NullStream}}}exports.Parser=Parser;const specialChars=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function toHexDigit(ch){return ch>=48&&ch<=57?15&ch:ch>=65&&ch<=70||ch>=97&&ch<=102?9+(15&ch):-1}class Lexer{constructor(stream,knownCommands=null){this.stream=stream,this.nextChar(),this.strBuf=[],this.knownCommands=knownCommands,this._hexStringNumWarn=0,this.beginInlineImagePos=-1}nextChar(){return this.currentChar=this.stream.getByte()}peekChar(){return this.stream.peekByte()}getNumber(){let ch=this.currentChar,eNotation=!1,divideBy=0,sign=0;if(45===ch?(sign=-1,ch=this.nextChar(),45===ch&&(ch=this.nextChar())):43===ch&&(sign=1,ch=this.nextChar()),10===ch||13===ch)do{ch=this.nextChar()}while(10===ch||13===ch);if(46===ch&&(divideBy=10,ch=this.nextChar()),ch<48||ch>57){if((0,_core_utils.isWhiteSpace)(ch)||-1===ch){if(10===divideBy&&0===sign)return(0,_util.warn)("Lexer.getNumber - treating a single decimal point as zero."),0;if(0===divideBy&&-1===sign)return(0,_util.warn)("Lexer.getNumber - treating a single minus sign as zero."),0}throw new _util.FormatError(`Invalid number: ${String.fromCharCode(ch)} (charCode ${ch})`)}sign=sign||1;let baseValue=ch-48,powerValue=0,powerValueSign=1;for(;(ch=this.nextChar())>=0;)if(ch>=48&&ch<=57){const currentDigit=ch-48;eNotation?powerValue=10*powerValue+currentDigit:(0!==divideBy&&(divideBy*=10),baseValue=10*baseValue+currentDigit)}else if(46===ch){if(0!==divideBy)break;divideBy=1}else if(45===ch)(0,_util.warn)("Badly formatted number: minus sign in the middle");else{if(69!==ch&&101!==ch)break;if(ch=this.peekChar(),43===ch||45===ch)powerValueSign=45===ch?-1:1,this.nextChar();else if(ch<48||ch>57)break;eNotation=!0}return 0!==divideBy&&(baseValue/=divideBy),eNotation&&(baseValue*=10**(powerValueSign*powerValue)),sign*baseValue}getString(){let numParen=1,done=!1;const strBuf=this.strBuf;strBuf.length=0;let ch=this.nextChar();for(;;){let charBuffered=!1;switch(0|ch){case-1:(0,_util.warn)("Unterminated string"),done=!0;break;case 40:++numParen,strBuf.push("(");break;case 41:0==--numParen?(this.nextChar(),done=!0):strBuf.push(")");break;case 92:switch(ch=this.nextChar(),ch){case-1:(0,_util.warn)("Unterminated string"),done=!0;break;case 110:strBuf.push("\n");break;case 114:strBuf.push("\r");break;case 116:strBuf.push("\t");break;case 98:strBuf.push("\b");break;case 102:strBuf.push("\f");break;case 92:case 40:case 41:strBuf.push(String.fromCharCode(ch));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:let x=15&ch;ch=this.nextChar(),charBuffered=!0,ch>=48&&ch<=55&&(x=(x<<3)+(15&ch),ch=this.nextChar(),ch>=48&&ch<=55&&(charBuffered=!1,x=(x<<3)+(15&ch))),strBuf.push(String.fromCharCode(x));break;case 13:10===this.peekChar()&&this.nextChar();break;case 10:break;default:strBuf.push(String.fromCharCode(ch))}break;default:strBuf.push(String.fromCharCode(ch))}if(done)break;charBuffered||(ch=this.nextChar())}return strBuf.join("")}getName(){let ch,previousCh;const strBuf=this.strBuf;for(strBuf.length=0;(ch=this.nextChar())>=0&&!specialChars[ch];)if(35===ch){if(ch=this.nextChar(),specialChars[ch]){(0,_util.warn)("Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number."),strBuf.push("#");break}const x=toHexDigit(ch);if(-1!==x){previousCh=ch,ch=this.nextChar();const x2=toHexDigit(ch);if(-1===x2){if((0,_util.warn)(`Lexer_getName: Illegal digit (${String.fromCharCode(ch)}) in hexadecimal number.`),strBuf.push("#",String.fromCharCode(previousCh)),specialChars[ch])break;strBuf.push(String.fromCharCode(ch));continue}strBuf.push(String.fromCharCode(x<<4|x2))}else strBuf.push("#",String.fromCharCode(ch))}else strBuf.push(String.fromCharCode(ch));return strBuf.length>127&&(0,_util.warn)(`Name token is longer than allowed by the spec: ${strBuf.length}`),_primitives.Name.get(strBuf.join(""))}_hexStringWarn(ch){5!=this._hexStringNumWarn++?this._hexStringNumWarn>5||(0,_util.warn)(`getHexString - ignoring invalid character: ${ch}`):(0,_util.warn)("getHexString - ignoring additional invalid characters.")}getHexString(){const strBuf=this.strBuf;strBuf.length=0;let firstDigit,secondDigit,ch=this.currentChar,isFirstHex=!0;for(this._hexStringNumWarn=0;;){if(ch<0){(0,_util.warn)("Unterminated hex string");break}if(62===ch){this.nextChar();break}if(1!==specialChars[ch]){if(isFirstHex){if(firstDigit=toHexDigit(ch),-1===firstDigit){this._hexStringWarn(ch),ch=this.nextChar();continue}}else{if(secondDigit=toHexDigit(ch),-1===secondDigit){this._hexStringWarn(ch),ch=this.nextChar();continue}strBuf.push(String.fromCharCode(firstDigit<<4|secondDigit))}isFirstHex=!isFirstHex,ch=this.nextChar()}else ch=this.nextChar()}return strBuf.join("")}getObj(){let comment=!1,ch=this.currentChar;for(;;){if(ch<0)return _primitives.EOF;if(comment)10!==ch&&13!==ch||(comment=!1);else if(37===ch)comment=!0;else if(1!==specialChars[ch])break;ch=this.nextChar()}switch(0|ch){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:return this.nextChar(),_primitives.Cmd.get("[");case 93:return this.nextChar(),_primitives.Cmd.get("]");case 60:return ch=this.nextChar(),60===ch?(this.nextChar(),_primitives.Cmd.get("<<")):this.getHexString();case 62:return ch=this.nextChar(),62===ch?(this.nextChar(),_primitives.Cmd.get(">>")):_primitives.Cmd.get(">");case 123:return this.nextChar(),_primitives.Cmd.get("{");case 125:return this.nextChar(),_primitives.Cmd.get("}");case 41:throw this.nextChar(),new _util.FormatError(`Illegal character: ${ch}`)}let str=String.fromCharCode(ch);if(ch<32||ch>127){const nextCh=this.peekChar();if(nextCh>=32&&nextCh<=127)return this.nextChar(),_primitives.Cmd.get(str)}const knownCommands=this.knownCommands;let knownCommandFound=knownCommands&&void 0!==knownCommands[str];for(;(ch=this.nextChar())>=0&&!specialChars[ch];){const possibleCommand=str+String.fromCharCode(ch);if(knownCommandFound&&void 0===knownCommands[possibleCommand])break;if(128===str.length)throw new _util.FormatError(`Command token too long: ${str.length}`);str=possibleCommand,knownCommandFound=knownCommands&&void 0!==knownCommands[str]}return"true"===str||"false"!==str&&("null"===str?null:("BI"===str&&(this.beginInlineImagePos=this.stream.pos),_primitives.Cmd.get(str)))}peekObj(){const streamPos=this.stream.pos,currentChar=this.currentChar,beginInlineImagePos=this.beginInlineImagePos;let nextObj;try{nextObj=this.getObj()}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)(`peekObj: ${ex}`)}return this.stream.pos=streamPos,this.currentChar=currentChar,this.beginInlineImagePos=beginInlineImagePos,nextObj}skipToNextLine(){let ch=this.currentChar;for(;ch>=0;){if(13===ch){ch=this.nextChar(),10===ch&&this.nextChar();break}if(10===ch){this.nextChar();break}ch=this.nextChar()}}}exports.Lexer=Lexer;exports.Linearization=class Linearization{static create(stream){function getInt(linDict,name,allowZeroValue=!1){const obj=linDict.get(name);if(Number.isInteger(obj)&&(allowZeroValue?obj>=0:obj>0))return obj;throw new Error(`The "${name}" parameter in the linearization dictionary is invalid.`)}const parser=new Parser({lexer:new Lexer(stream),xref:null}),obj1=parser.getObj(),obj2=parser.getObj(),obj3=parser.getObj(),linDict=parser.getObj();let obj,length;if(!(Number.isInteger(obj1)&&Number.isInteger(obj2)&&(0,_primitives.isCmd)(obj3,"obj")&&linDict instanceof _primitives.Dict&&"number"==typeof(obj=linDict.get("Linearized"))&&obj>0))return null;if((length=getInt(linDict,"L"))!==stream.length)throw new Error('The "L" parameter in the linearization dictionary does not equal the stream length.');return{length,hints:function getHints(linDict){const hints=linDict.get("H");let hintsLength;if(Array.isArray(hints)&&(2===(hintsLength=hints.length)||4===hintsLength)){for(let index=0;index<hintsLength;index++){const hint=hints[index];if(!(Number.isInteger(hint)&&hint>0))throw new Error(`Hint (${index}) in the linearization dictionary is invalid.`)}return hints}throw new Error("Hint array in the linearization dictionary is invalid.")}(linDict),objectNumberFirst:getInt(linDict,"O"),endFirst:getInt(linDict,"E"),numPages:getInt(linDict,"N"),mainXRefEntriesOffset:getInt(linDict,"T"),pageFirst:linDict.has("P")?getInt(linDict,"P",!0):0}}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Ascii85Stream=void 0;var _decode_stream=__w_pdfjs_require__(19),_core_utils=__w_pdfjs_require__(6);class Ascii85Stream extends _decode_stream.DecodeStream{constructor(str,maybeLength){maybeLength&&(maybeLength*=.8),super(maybeLength),this.str=str,this.dict=str.dict,this.input=new Uint8Array(5)}readBlock(){const str=this.str;let c=str.getByte();for(;(0,_core_utils.isWhiteSpace)(c);)c=str.getByte();if(-1===c||126===c)return void(this.eof=!0);const bufferLength=this.bufferLength;let buffer,i;if(122===c){for(buffer=this.ensureBuffer(bufferLength+4),i=0;i<4;++i)buffer[bufferLength+i]=0;this.bufferLength+=4}else{const input=this.input;for(input[0]=c,i=1;i<5;++i){for(c=str.getByte();(0,_core_utils.isWhiteSpace)(c);)c=str.getByte();if(input[i]=c,-1===c||126===c)break}if(buffer=this.ensureBuffer(bufferLength+i-1),this.bufferLength+=i-1,i<5){for(;i<5;++i)input[i]=117;this.eof=!0}let t=0;for(i=0;i<5;++i)t=85*t+(input[i]-33);for(i=3;i>=0;--i)buffer[bufferLength+i]=255&t,t>>=8}}}exports.Ascii85Stream=Ascii85Stream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StreamsSequenceStream=exports.DecodeStream=void 0;var _base_stream=__w_pdfjs_require__(7),_stream=__w_pdfjs_require__(10);const emptyBuffer=new Uint8Array(0);class DecodeStream extends _base_stream.BaseStream{constructor(maybeMinBufferLength){if(super(),this._rawMinBufferLength=maybeMinBufferLength||0,this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=emptyBuffer,this.minBufferLength=512,maybeMinBufferLength)for(;this.minBufferLength<maybeMinBufferLength;)this.minBufferLength*=2}get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength}ensureBuffer(requested){const buffer=this.buffer;if(requested<=buffer.byteLength)return buffer;let size=this.minBufferLength;for(;size<requested;)size*=2;const buffer2=new Uint8Array(size);return buffer2.set(buffer),this.buffer=buffer2}getByte(){const pos=this.pos;for(;this.bufferLength<=pos;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]}getBytes(length){const pos=this.pos;let end;if(length){for(this.ensureBuffer(pos+length),end=pos+length;!this.eof&&this.bufferLength<end;)this.readBlock();const bufEnd=this.bufferLength;end>bufEnd&&(end=bufEnd)}else{for(;!this.eof;)this.readBlock();end=this.bufferLength}return this.pos=end,this.buffer.subarray(pos,end)}reset(){this.pos=0}makeSubStream(start,length,dict=null){if(void 0===length)for(;!this.eof;)this.readBlock();else{const end=start+length;for(;this.bufferLength<=end&&!this.eof;)this.readBlock()}return new _stream.Stream(this.buffer,start,length,dict)}getBaseStreams(){return this.str?this.str.getBaseStreams():null}}exports.DecodeStream=DecodeStream;exports.StreamsSequenceStream=class StreamsSequenceStream extends DecodeStream{constructor(streams,onError=null){let maybeLength=0;for(const stream of streams)maybeLength+=stream instanceof DecodeStream?stream._rawMinBufferLength:stream.length;super(maybeLength),this.streams=streams,this._onError=onError}readBlock(){const streams=this.streams;if(0===streams.length)return void(this.eof=!0);const stream=streams.shift();let chunk;try{chunk=stream.getBytes()}catch(reason){if(this._onError)return void this._onError(reason,stream.dict&&stream.dict.objId);throw reason}const bufferLength=this.bufferLength,newLength=bufferLength+chunk.length;this.ensureBuffer(newLength).set(chunk,bufferLength),this.bufferLength=newLength}getBaseStreams(){const baseStreamsBuf=[];for(const stream of this.streams){const baseStreams=stream.getBaseStreams();baseStreams&&baseStreamsBuf.push(...baseStreams)}return baseStreamsBuf.length>0?baseStreamsBuf:null}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AsciiHexStream=void 0;var _decode_stream=__w_pdfjs_require__(19);class AsciiHexStream extends _decode_stream.DecodeStream{constructor(str,maybeLength){maybeLength&&(maybeLength*=.5),super(maybeLength),this.str=str,this.dict=str.dict,this.firstDigit=-1}readBlock(){const bytes=this.str.getBytes(8e3);if(!bytes.length)return void(this.eof=!0);const maxDecodeLength=bytes.length+1>>1,buffer=this.ensureBuffer(this.bufferLength+maxDecodeLength);let bufferLength=this.bufferLength,firstDigit=this.firstDigit;for(const ch of bytes){let digit;if(ch>=48&&ch<=57)digit=15&ch;else{if(!(ch>=65&&ch<=70||ch>=97&&ch<=102)){if(62===ch){this.eof=!0;break}continue}digit=9+(15&ch)}firstDigit<0?firstDigit=digit:(buffer[bufferLength++]=firstDigit<<4|digit,firstDigit=-1)}firstDigit>=0&&this.eof&&(buffer[bufferLength++]=firstDigit<<4,firstDigit=-1),this.firstDigit=firstDigit,this.bufferLength=bufferLength}}exports.AsciiHexStream=AsciiHexStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CCITTFaxStream=void 0;var _ccitt=__w_pdfjs_require__(22),_decode_stream=__w_pdfjs_require__(19),_primitives=__w_pdfjs_require__(5);class CCITTFaxStream extends _decode_stream.DecodeStream{constructor(str,maybeLength,params){super(maybeLength),this.str=str,this.dict=str.dict,params instanceof _primitives.Dict||(params=_primitives.Dict.empty);const source={next:()=>str.getByte()};this.ccittFaxDecoder=new _ccitt.CCITTFaxDecoder(source,{K:params.get("K"),EndOfLine:params.get("EndOfLine"),EncodedByteAlign:params.get("EncodedByteAlign"),Columns:params.get("Columns"),Rows:params.get("Rows"),EndOfBlock:params.get("EndOfBlock"),BlackIs1:params.get("BlackIs1")})}readBlock(){for(;!this.eof;){const c=this.ccittFaxDecoder.readNextChar();if(-1===c)return void(this.eof=!0);this.ensureBuffer(this.bufferLength+1),this.buffer[this.bufferLength++]=c}}}exports.CCITTFaxStream=CCITTFaxStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CCITTFaxDecoder=void 0;var _util=__w_pdfjs_require__(2);const twoDimTable=[[-1,-1],[-1,-1],[7,8],[7,7],[6,6],[6,6],[6,5],[6,5],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2]],whiteTable1=[[-1,-1],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],whiteTable2=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]],blackTable1=[[-1,-1],[-1,-1],[12,-2],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],blackTable2=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],blackTable3=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];exports.CCITTFaxDecoder=class CCITTFaxDecoder{constructor(source,options={}){if(!source||"function"!=typeof source.next)throw new Error('CCITTFaxDecoder - invalid "source" parameter.');this.source=source,this.eof=!1,this.encoding=options.K||0,this.eoline=options.EndOfLine||!1,this.byteAlign=options.EncodedByteAlign||!1,this.columns=options.Columns||1728,this.rows=options.Rows||0;let code1,eoblock=options.EndOfBlock;for(null==eoblock&&(eoblock=!0),this.eoblock=eoblock,this.black=options.BlackIs1||!1,this.codingLine=new Uint32Array(this.columns+1),this.refLine=new Uint32Array(this.columns+2),this.codingLine[0]=this.columns,this.codingPos=0,this.row=0,this.nextLine2D=this.encoding<0,this.inputBits=0,this.inputBuf=0,this.outputBits=0,this.rowsDone=!1;0===(code1=this._lookBits(12));)this._eatBits(1);1===code1&&this._eatBits(12),this.encoding>0&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1))}readNextChar(){if(this.eof)return-1;const refLine=this.refLine,codingLine=this.codingLine,columns=this.columns;let refPos,blackPixels,bits,i,c;if(0===this.outputBits){if(this.rowsDone&&(this.eof=!0),this.eof)return-1;let code1,code2,code3;if(this.err=!1,this.nextLine2D){for(i=0;codingLine[i]<columns;++i)refLine[i]=codingLine[i];for(refLine[i++]=columns,refLine[i]=columns,codingLine[0]=0,this.codingPos=0,refPos=0,blackPixels=0;codingLine[this.codingPos]<columns;)switch(code1=this._getTwoDimCode(),code1){case 0:this._addPixels(refLine[refPos+1],blackPixels),refLine[refPos+1]<columns&&(refPos+=2);break;case 1:if(code1=code2=0,blackPixels){do{code1+=code3=this._getBlackCode()}while(code3>=64);do{code2+=code3=this._getWhiteCode()}while(code3>=64)}else{do{code1+=code3=this._getWhiteCode()}while(code3>=64);do{code2+=code3=this._getBlackCode()}while(code3>=64)}for(this._addPixels(codingLine[this.codingPos]+code1,blackPixels),codingLine[this.codingPos]<columns&&this._addPixels(codingLine[this.codingPos]+code2,1^blackPixels);refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 7:if(this._addPixels(refLine[refPos]+3,blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 5:if(this._addPixels(refLine[refPos]+2,blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 3:if(this._addPixels(refLine[refPos]+1,blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 2:if(this._addPixels(refLine[refPos],blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 8:if(this._addPixelsNeg(refLine[refPos]-3,blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(refPos>0?--refPos:++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 6:if(this._addPixelsNeg(refLine[refPos]-2,blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(refPos>0?--refPos:++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case 4:if(this._addPixelsNeg(refLine[refPos]-1,blackPixels),blackPixels^=1,codingLine[this.codingPos]<columns)for(refPos>0?--refPos:++refPos;refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns;)refPos+=2;break;case-1:this._addPixels(columns,0),this.eof=!0;break;default:(0,_util.info)("bad 2d code"),this._addPixels(columns,0),this.err=!0}}else for(codingLine[0]=0,this.codingPos=0,blackPixels=0;codingLine[this.codingPos]<columns;){if(code1=0,blackPixels)do{code1+=code3=this._getBlackCode()}while(code3>=64);else do{code1+=code3=this._getWhiteCode()}while(code3>=64);this._addPixels(codingLine[this.codingPos]+code1,blackPixels),blackPixels^=1}let gotEOL=!1;if(this.byteAlign&&(this.inputBits&=-8),this.eoblock||this.row!==this.rows-1){if(code1=this._lookBits(12),this.eoline)for(;-1!==code1&&1!==code1;)this._eatBits(1),code1=this._lookBits(12);else for(;0===code1;)this._eatBits(1),code1=this._lookBits(12);1===code1?(this._eatBits(12),gotEOL=!0):-1===code1&&(this.eof=!0)}else this.rowsDone=!0;if(!this.eof&&this.encoding>0&&!this.rowsDone&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1)),this.eoblock&&gotEOL&&this.byteAlign){if(code1=this._lookBits(12),1===code1){if(this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1)),this.encoding>=0)for(i=0;i<4;++i)code1=this._lookBits(12),1!==code1&&(0,_util.info)("bad rtc code: "+code1),this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1));this.eof=!0}}else if(this.err&&this.eoline){for(;;){if(code1=this._lookBits(13),-1===code1)return this.eof=!0,-1;if(code1>>1==1)break;this._eatBits(1)}this._eatBits(12),this.encoding>0&&(this._eatBits(1),this.nextLine2D=!(1&code1))}codingLine[0]>0?this.outputBits=codingLine[this.codingPos=0]:this.outputBits=codingLine[this.codingPos=1],this.row++}if(this.outputBits>=8)c=1&this.codingPos?0:255,this.outputBits-=8,0===this.outputBits&&codingLine[this.codingPos]<columns&&(this.codingPos++,this.outputBits=codingLine[this.codingPos]-codingLine[this.codingPos-1]);else{bits=8,c=0;do{if("number"!=typeof this.outputBits)throw new _util.FormatError('Invalid /CCITTFaxDecode data, "outputBits" must be a number.');this.outputBits>bits?(c<<=bits,1&this.codingPos||(c|=255>>8-bits),this.outputBits-=bits,bits=0):(c<<=this.outputBits,1&this.codingPos||(c|=255>>8-this.outputBits),bits-=this.outputBits,this.outputBits=0,codingLine[this.codingPos]<columns?(this.codingPos++,this.outputBits=codingLine[this.codingPos]-codingLine[this.codingPos-1]):bits>0&&(c<<=bits,bits=0))}while(bits)}return this.black&&(c^=255),c}_addPixels(a1,blackPixels){const codingLine=this.codingLine;let codingPos=this.codingPos;a1>codingLine[codingPos]&&(a1>this.columns&&((0,_util.info)("row is wrong length"),this.err=!0,a1=this.columns),1&codingPos^blackPixels&&++codingPos,codingLine[codingPos]=a1),this.codingPos=codingPos}_addPixelsNeg(a1,blackPixels){const codingLine=this.codingLine;let codingPos=this.codingPos;if(a1>codingLine[codingPos])a1>this.columns&&((0,_util.info)("row is wrong length"),this.err=!0,a1=this.columns),1&codingPos^blackPixels&&++codingPos,codingLine[codingPos]=a1;else if(a1<codingLine[codingPos]){for(a1<0&&((0,_util.info)("invalid code"),this.err=!0,a1=0);codingPos>0&&a1<codingLine[codingPos-1];)--codingPos;codingLine[codingPos]=a1}this.codingPos=codingPos}_findTableCode(start,end,table,limit){const limitValue=limit||0;for(let i=start;i<=end;++i){let code=this._lookBits(i);if(-1===code)return[!0,1,!1];if(i<end&&(code<<=end-i),!limitValue||code>=limitValue){const p=table[code-limitValue];if(p[0]===i)return this._eatBits(i),[!0,p[1],!0]}}return[!1,0,!1]}_getTwoDimCode(){let p,code=0;if(this.eoblock){if(code=this._lookBits(7),p=twoDimTable[code],p&&p[0]>0)return this._eatBits(p[0]),p[1]}else{const result=this._findTableCode(1,7,twoDimTable);if(result[0]&&result[2])return result[1]}return(0,_util.info)("Bad two dim code"),-1}_getWhiteCode(){let p,code=0;if(this.eoblock){if(code=this._lookBits(12),-1===code)return 1;if(p=code>>5==0?whiteTable1[code]:whiteTable2[code>>3],p[0]>0)return this._eatBits(p[0]),p[1]}else{let result=this._findTableCode(1,9,whiteTable2);if(result[0])return result[1];if(result=this._findTableCode(11,12,whiteTable1),result[0])return result[1]}return(0,_util.info)("bad white code"),this._eatBits(1),1}_getBlackCode(){let code,p;if(this.eoblock){if(code=this._lookBits(13),-1===code)return 1;if(p=code>>7==0?blackTable1[code]:code>>9==0&&code>>7!=0?blackTable2[(code>>1)-64]:blackTable3[code>>7],p[0]>0)return this._eatBits(p[0]),p[1]}else{let result=this._findTableCode(2,6,blackTable3);if(result[0])return result[1];if(result=this._findTableCode(7,12,blackTable2,64),result[0])return result[1];if(result=this._findTableCode(10,13,blackTable1),result[0])return result[1]}return(0,_util.info)("bad black code"),this._eatBits(1),1}_lookBits(n){let c;for(;this.inputBits<n;){if(-1===(c=this.source.next()))return 0===this.inputBits?-1:this.inputBuf<<n-this.inputBits&65535>>16-n;this.inputBuf=this.inputBuf<<8|c,this.inputBits+=8}return this.inputBuf>>this.inputBits-n&65535>>16-n}_eatBits(n){(this.inputBits-=n)<0&&(this.inputBits=0)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FlateStream=void 0;var _decode_stream=__w_pdfjs_require__(19),_util=__w_pdfjs_require__(2);const codeLenCodeMap=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),lengthDecode=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),distDecode=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),fixedLitCodeTab=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],fixedDistCodeTab=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];class FlateStream extends _decode_stream.DecodeStream{constructor(str,maybeLength){super(maybeLength),this.str=str,this.dict=str.dict;const cmf=str.getByte(),flg=str.getByte();if(-1===cmf||-1===flg)throw new _util.FormatError(`Invalid header in flate stream: ${cmf}, ${flg}`);if(8!=(15&cmf))throw new _util.FormatError(`Unknown compression method in flate stream: ${cmf}, ${flg}`);if(((cmf<<8)+flg)%31!=0)throw new _util.FormatError(`Bad FCHECK in flate stream: ${cmf}, ${flg}`);if(32&flg)throw new _util.FormatError(`FDICT bit set in flate stream: ${cmf}, ${flg}`);this.codeSize=0,this.codeBuf=0}getBits(bits){const str=this.str;let b,codeSize=this.codeSize,codeBuf=this.codeBuf;for(;codeSize<bits;){if(-1===(b=str.getByte()))throw new _util.FormatError("Bad encoding in flate stream");codeBuf|=b<<codeSize,codeSize+=8}return b=codeBuf&(1<<bits)-1,this.codeBuf=codeBuf>>bits,this.codeSize=codeSize-=bits,b}getCode(table){const str=this.str,codes=table[0],maxLen=table[1];let b,codeSize=this.codeSize,codeBuf=this.codeBuf;for(;codeSize<maxLen&&-1!==(b=str.getByte());)codeBuf|=b<<codeSize,codeSize+=8;const code=codes[codeBuf&(1<<maxLen)-1],codeLen=code>>16,codeVal=65535&code;if(codeLen<1||codeSize<codeLen)throw new _util.FormatError("Bad encoding in flate stream");return this.codeBuf=codeBuf>>codeLen,this.codeSize=codeSize-codeLen,codeVal}generateHuffmanTable(lengths){const n=lengths.length;let i,maxLen=0;for(i=0;i<n;++i)lengths[i]>maxLen&&(maxLen=lengths[i]);const size=1<<maxLen,codes=new Int32Array(size);for(let len=1,code=0,skip=2;len<=maxLen;++len,code<<=1,skip<<=1)for(let val=0;val<n;++val)if(lengths[val]===len){let code2=0,t=code;for(i=0;i<len;++i)code2=code2<<1|1&t,t>>=1;for(i=code2;i<size;i+=skip)codes[i]=len<<16|val;++code}return[codes,maxLen]}readBlock(){let buffer,len;const str=this.str;let litCodeTable,distCodeTable,hdr=this.getBits(3);if(1&hdr&&(this.eof=!0),hdr>>=1,0===hdr){let b;if(-1===(b=str.getByte()))throw new _util.FormatError("Bad block header in flate stream");let blockLen=b;if(-1===(b=str.getByte()))throw new _util.FormatError("Bad block header in flate stream");if(blockLen|=b<<8,-1===(b=str.getByte()))throw new _util.FormatError("Bad block header in flate stream");let check=b;if(-1===(b=str.getByte()))throw new _util.FormatError("Bad block header in flate stream");if(check|=b<<8,check!==(65535&~blockLen)&&(0!==blockLen||0!==check))throw new _util.FormatError("Bad uncompressed block length in flate stream");this.codeBuf=0,this.codeSize=0;const bufferLength=this.bufferLength,end=bufferLength+blockLen;if(buffer=this.ensureBuffer(end),this.bufferLength=end,0===blockLen)-1===str.peekByte()&&(this.eof=!0);else{const block=str.getBytes(blockLen);buffer.set(block,bufferLength),block.length<blockLen&&(this.eof=!0)}return}if(1===hdr)litCodeTable=fixedLitCodeTab,distCodeTable=fixedDistCodeTab;else{if(2!==hdr)throw new _util.FormatError("Unknown block type in flate stream");{const numLitCodes=this.getBits(5)+257,numDistCodes=this.getBits(5)+1,numCodeLenCodes=this.getBits(4)+4,codeLenCodeLengths=new Uint8Array(codeLenCodeMap.length);let i;for(i=0;i<numCodeLenCodes;++i)codeLenCodeLengths[codeLenCodeMap[i]]=this.getBits(3);const codeLenCodeTab=this.generateHuffmanTable(codeLenCodeLengths);len=0,i=0;const codes=numLitCodes+numDistCodes,codeLengths=new Uint8Array(codes);let bitsLength,bitsOffset,what;for(;i<codes;){const code=this.getCode(codeLenCodeTab);if(16===code)bitsLength=2,bitsOffset=3,what=len;else if(17===code)bitsLength=3,bitsOffset=3,what=len=0;else{if(18!==code){codeLengths[i++]=len=code;continue}bitsLength=7,bitsOffset=11,what=len=0}let repeatLength=this.getBits(bitsLength)+bitsOffset;for(;repeatLength-- >0;)codeLengths[i++]=what}litCodeTable=this.generateHuffmanTable(codeLengths.subarray(0,numLitCodes)),distCodeTable=this.generateHuffmanTable(codeLengths.subarray(numLitCodes,codes))}}buffer=this.buffer;let limit=buffer?buffer.length:0,pos=this.bufferLength;for(;;){let code1=this.getCode(litCodeTable);if(code1<256){pos+1>=limit&&(buffer=this.ensureBuffer(pos+1),limit=buffer.length),buffer[pos++]=code1;continue}if(256===code1)return void(this.bufferLength=pos);code1-=257,code1=lengthDecode[code1];let code2=code1>>16;code2>0&&(code2=this.getBits(code2)),len=(65535&code1)+code2,code1=this.getCode(distCodeTable),code1=distDecode[code1],code2=code1>>16,code2>0&&(code2=this.getBits(code2));const dist=(65535&code1)+code2;pos+len>=limit&&(buffer=this.ensureBuffer(pos+len),limit=buffer.length);for(let k=0;k<len;++k,++pos)buffer[pos]=buffer[pos-dist]}}}exports.FlateStream=FlateStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Jbig2Stream=void 0;var _base_stream=__w_pdfjs_require__(7),_decode_stream=__w_pdfjs_require__(19),_primitives=__w_pdfjs_require__(5),_jbig=__w_pdfjs_require__(25),_util=__w_pdfjs_require__(2);class Jbig2Stream extends _decode_stream.DecodeStream{constructor(stream,maybeLength,params){super(maybeLength),this.stream=stream,this.dict=stream.dict,this.maybeLength=maybeLength,this.params=params}get bytes(){return(0,_util.shadow)(this,"bytes",this.stream.getBytes(this.maybeLength))}ensureBuffer(requested){}readBlock(){if(this.eof)return;const jbig2Image=new _jbig.Jbig2Image,chunks=[];if(this.params instanceof _primitives.Dict){const globalsStream=this.params.get("JBIG2Globals");if(globalsStream instanceof _base_stream.BaseStream){const globals=globalsStream.getBytes();chunks.push({data:globals,start:0,end:globals.length})}}chunks.push({data:this.bytes,start:0,end:this.bytes.length});const data=jbig2Image.parseChunks(chunks),dataLength=data.length;for(let i=0;i<dataLength;i++)data[i]^=255;this.buffer=data,this.bufferLength=dataLength,this.eof=!0}}exports.Jbig2Stream=Jbig2Stream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Jbig2Image=void 0;var _util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_arithmetic_decoder=__w_pdfjs_require__(26),_ccitt=__w_pdfjs_require__(22);class Jbig2Error extends _util.BaseException{constructor(msg){super(`JBIG2 error: ${msg}`,"Jbig2Error")}}class ContextCache{getContexts(id){return id in this?this[id]:this[id]=new Int8Array(65536)}}class DecodingContext{constructor(data,start,end){this.data=data,this.start=start,this.end=end}get decoder(){const decoder=new _arithmetic_decoder.ArithmeticDecoder(this.data,this.start,this.end);return(0,_util.shadow)(this,"decoder",decoder)}get contextCache(){const cache=new ContextCache;return(0,_util.shadow)(this,"contextCache",cache)}}function decodeInteger(contextCache,procedure,decoder){const contexts=contextCache.getContexts(procedure);let prev=1;function readBits(length){let v=0;for(let i=0;i<length;i++){const bit=decoder.readBit(contexts,prev);prev=prev<256?prev<<1|bit:511&(prev<<1|bit)|256,v=v<<1|bit}return v>>>0}const sign=readBits(1),value=readBits(1)?readBits(1)?readBits(1)?readBits(1)?readBits(1)?readBits(32)+4436:readBits(12)+340:readBits(8)+84:readBits(6)+20:readBits(4)+4:readBits(2);return 0===sign?value:value>0?-value:null}function decodeIAID(contextCache,decoder,codeLength){const contexts=contextCache.getContexts("IAID");let prev=1;for(let i=0;i<codeLength;i++){prev=prev<<1|decoder.readBit(contexts,prev)}return codeLength<31?prev&(1<<codeLength)-1:2147483647&prev}const SegmentTypes=["SymbolDictionary",null,null,null,"IntermediateTextRegion",null,"ImmediateTextRegion","ImmediateLosslessTextRegion",null,null,null,null,null,null,null,null,"PatternDictionary",null,null,null,"IntermediateHalftoneRegion",null,"ImmediateHalftoneRegion","ImmediateLosslessHalftoneRegion",null,null,null,null,null,null,null,null,null,null,null,null,"IntermediateGenericRegion",null,"ImmediateGenericRegion","ImmediateLosslessGenericRegion","IntermediateGenericRefinementRegion",null,"ImmediateGenericRefinementRegion","ImmediateLosslessGenericRefinementRegion",null,null,null,null,"PageInformation","EndOfPage","EndOfStripe","EndOfFile","Profiles","Tables",null,null,null,null,null,null,null,null,"Extension"],CodingTemplates=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]],RefinementTemplates=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}],ReusedContexts=[39717,1941,229,405],RefinementReusedContexts=[32,8];function decodeBitmap(mmr,width,height,templateIndex,prediction,skip,at,decodingContext){if(mmr){return decodeMMRBitmap(new Reader(decodingContext.data,decodingContext.start,decodingContext.end),width,height,!1)}if(0===templateIndex&&!skip&&!prediction&&4===at.length&&3===at[0].x&&-1===at[0].y&&-3===at[1].x&&-1===at[1].y&&2===at[2].x&&-2===at[2].y&&-2===at[3].x&&-2===at[3].y)return function decodeBitmapTemplate0(width,height,decodingContext){const decoder=decodingContext.decoder,contexts=decodingContext.contextCache.getContexts("GB"),bitmap=[];let contextLabel,i,j,pixel,row,row1,row2;for(i=0;i<height;i++)for(row=bitmap[i]=new Uint8Array(width),row1=i<1?row:bitmap[i-1],row2=i<2?row:bitmap[i-2],contextLabel=row2[0]<<13|row2[1]<<12|row2[2]<<11|row1[0]<<7|row1[1]<<6|row1[2]<<5|row1[3]<<4,j=0;j<width;j++)row[j]=pixel=decoder.readBit(contexts,contextLabel),contextLabel=(31735&contextLabel)<<1|(j+3<width?row2[j+3]<<11:0)|(j+4<width?row1[j+4]<<4:0)|pixel;return bitmap}(width,height,decodingContext);const useskip=!!skip,template=CodingTemplates[templateIndex].concat(at);template.sort((function(a,b){return a.y-b.y||a.x-b.x}));const templateLength=template.length,templateX=new Int8Array(templateLength),templateY=new Int8Array(templateLength),changingTemplateEntries=[];let c,k,reuseMask=0,minX=0,maxX=0,minY=0;for(k=0;k<templateLength;k++)templateX[k]=template[k].x,templateY[k]=template[k].y,minX=Math.min(minX,template[k].x),maxX=Math.max(maxX,template[k].x),minY=Math.min(minY,template[k].y),k<templateLength-1&&template[k].y===template[k+1].y&&template[k].x===template[k+1].x-1?reuseMask|=1<<templateLength-1-k:changingTemplateEntries.push(k);const changingEntriesLength=changingTemplateEntries.length,changingTemplateX=new Int8Array(changingEntriesLength),changingTemplateY=new Int8Array(changingEntriesLength),changingTemplateBit=new Uint16Array(changingEntriesLength);for(c=0;c<changingEntriesLength;c++)k=changingTemplateEntries[c],changingTemplateX[c]=template[k].x,changingTemplateY[c]=template[k].y,changingTemplateBit[c]=1<<templateLength-1-k;const sbb_left=-minX,sbb_top=-minY,sbb_right=width-maxX,pseudoPixelContext=ReusedContexts[templateIndex];let row=new Uint8Array(width);const bitmap=[],decoder=decodingContext.decoder,contexts=decodingContext.contextCache.getContexts("GB");let j,i0,j0,bit,shift,ltp=0,contextLabel=0;for(let i=0;i<height;i++){if(prediction){if(ltp^=decoder.readBit(contexts,pseudoPixelContext),ltp){bitmap.push(row);continue}}for(row=new Uint8Array(row),bitmap.push(row),j=0;j<width;j++){if(useskip&&skip[i][j]){row[j]=0;continue}if(j>=sbb_left&&j<sbb_right&&i>=sbb_top)for(contextLabel=contextLabel<<1&reuseMask,k=0;k<changingEntriesLength;k++)i0=i+changingTemplateY[k],j0=j+changingTemplateX[k],bit=bitmap[i0][j0],bit&&(bit=changingTemplateBit[k],contextLabel|=bit);else for(contextLabel=0,shift=templateLength-1,k=0;k<templateLength;k++,shift--)j0=j+templateX[k],j0>=0&&j0<width&&(i0=i+templateY[k],i0>=0&&(bit=bitmap[i0][j0],bit&&(contextLabel|=bit<<shift)));const pixel=decoder.readBit(contexts,contextLabel);row[j]=pixel}}return bitmap}function decodeRefinement(width,height,templateIndex,referenceBitmap,offsetX,offsetY,prediction,at,decodingContext){let codingTemplate=RefinementTemplates[templateIndex].coding;0===templateIndex&&(codingTemplate=codingTemplate.concat([at[0]]));const codingTemplateLength=codingTemplate.length,codingTemplateX=new Int32Array(codingTemplateLength),codingTemplateY=new Int32Array(codingTemplateLength);let k;for(k=0;k<codingTemplateLength;k++)codingTemplateX[k]=codingTemplate[k].x,codingTemplateY[k]=codingTemplate[k].y;let referenceTemplate=RefinementTemplates[templateIndex].reference;0===templateIndex&&(referenceTemplate=referenceTemplate.concat([at[1]]));const referenceTemplateLength=referenceTemplate.length,referenceTemplateX=new Int32Array(referenceTemplateLength),referenceTemplateY=new Int32Array(referenceTemplateLength);for(k=0;k<referenceTemplateLength;k++)referenceTemplateX[k]=referenceTemplate[k].x,referenceTemplateY[k]=referenceTemplate[k].y;const referenceWidth=referenceBitmap[0].length,referenceHeight=referenceBitmap.length,pseudoPixelContext=RefinementReusedContexts[templateIndex],bitmap=[],decoder=decodingContext.decoder,contexts=decodingContext.contextCache.getContexts("GR");let ltp=0;for(let i=0;i<height;i++){if(prediction){if(ltp^=decoder.readBit(contexts,pseudoPixelContext),ltp)throw new Jbig2Error("prediction is not supported")}const row=new Uint8Array(width);bitmap.push(row);for(let j=0;j<width;j++){let i0,j0,contextLabel=0;for(k=0;k<codingTemplateLength;k++)i0=i+codingTemplateY[k],j0=j+codingTemplateX[k],i0<0||j0<0||j0>=width?contextLabel<<=1:contextLabel=contextLabel<<1|bitmap[i0][j0];for(k=0;k<referenceTemplateLength;k++)i0=i+referenceTemplateY[k]-offsetY,j0=j+referenceTemplateX[k]-offsetX,i0<0||i0>=referenceHeight||j0<0||j0>=referenceWidth?contextLabel<<=1:contextLabel=contextLabel<<1|referenceBitmap[i0][j0];const pixel=decoder.readBit(contexts,contextLabel);row[j]=pixel}}return bitmap}function decodeTextRegion(huffman,refinement,width,height,defaultPixelValue,numberOfSymbolInstances,stripSize,inputSymbols,symbolCodeLength,transposed,dsOffset,referenceCorner,combinationOperator,huffmanTables,refinementTemplateIndex,refinementAt,decodingContext,logStripSize,huffmanInput){if(huffman&&refinement)throw new Jbig2Error("refinement with Huffman is not supported");const bitmap=[];let i,row;for(i=0;i<height;i++){if(row=new Uint8Array(width),defaultPixelValue)for(let j=0;j<width;j++)row[j]=defaultPixelValue;bitmap.push(row)}const decoder=decodingContext.decoder,contextCache=decodingContext.contextCache;let stripT=huffman?-huffmanTables.tableDeltaT.decode(huffmanInput):-decodeInteger(contextCache,"IADT",decoder),firstS=0;for(i=0;i<numberOfSymbolInstances;){stripT+=huffman?huffmanTables.tableDeltaT.decode(huffmanInput):decodeInteger(contextCache,"IADT",decoder);firstS+=huffman?huffmanTables.tableFirstS.decode(huffmanInput):decodeInteger(contextCache,"IAFS",decoder);let currentS=firstS;for(;;){let currentT=0;stripSize>1&&(currentT=huffman?huffmanInput.readBits(logStripSize):decodeInteger(contextCache,"IAIT",decoder));const t=stripSize*stripT+currentT,symbolId=huffman?huffmanTables.symbolIDTable.decode(huffmanInput):decodeIAID(contextCache,decoder,symbolCodeLength),applyRefinement=refinement&&(huffman?huffmanInput.readBit():decodeInteger(contextCache,"IARI",decoder));let symbolBitmap=inputSymbols[symbolId],symbolWidth=symbolBitmap[0].length,symbolHeight=symbolBitmap.length;if(applyRefinement){const rdw=decodeInteger(contextCache,"IARDW",decoder),rdh=decodeInteger(contextCache,"IARDH",decoder),rdx=decodeInteger(contextCache,"IARDX",decoder),rdy=decodeInteger(contextCache,"IARDY",decoder);symbolWidth+=rdw,symbolHeight+=rdh,symbolBitmap=decodeRefinement(symbolWidth,symbolHeight,refinementTemplateIndex,symbolBitmap,(rdw>>1)+rdx,(rdh>>1)+rdy,!1,refinementAt,decodingContext)}const offsetT=t-(1&referenceCorner?0:symbolHeight-1),offsetS=currentS-(2&referenceCorner?symbolWidth-1:0);let s2,t2,symbolRow;if(transposed){for(s2=0;s2<symbolHeight;s2++){if(row=bitmap[offsetS+s2],!row)continue;symbolRow=symbolBitmap[s2];const maxWidth=Math.min(width-offsetT,symbolWidth);switch(combinationOperator){case 0:for(t2=0;t2<maxWidth;t2++)row[offsetT+t2]|=symbolRow[t2];break;case 2:for(t2=0;t2<maxWidth;t2++)row[offsetT+t2]^=symbolRow[t2];break;default:throw new Jbig2Error(`operator ${combinationOperator} is not supported`)}}currentS+=symbolHeight-1}else{for(t2=0;t2<symbolHeight;t2++)if(row=bitmap[offsetT+t2],row)switch(symbolRow=symbolBitmap[t2],combinationOperator){case 0:for(s2=0;s2<symbolWidth;s2++)row[offsetS+s2]|=symbolRow[s2];break;case 2:for(s2=0;s2<symbolWidth;s2++)row[offsetS+s2]^=symbolRow[s2];break;default:throw new Jbig2Error(`operator ${combinationOperator} is not supported`)}currentS+=symbolWidth-1}i++;const deltaS=huffman?huffmanTables.tableDeltaS.decode(huffmanInput):decodeInteger(contextCache,"IADS",decoder);if(null===deltaS)break;currentS+=deltaS+dsOffset}}return bitmap}function readSegmentHeader(data,start){const segmentHeader={};segmentHeader.number=(0,_core_utils.readUint32)(data,start);const flags=data[start+4],segmentType=63&flags;if(!SegmentTypes[segmentType])throw new Jbig2Error("invalid segment type: "+segmentType);segmentHeader.type=segmentType,segmentHeader.typeName=SegmentTypes[segmentType],segmentHeader.deferredNonRetain=!!(128&flags);const pageAssociationFieldSize=!!(64&flags),referredFlags=data[start+5];let referredToCount=referredFlags>>5&7;const retainBits=[31&referredFlags];let position=start+6;if(7===referredFlags){referredToCount=536870911&(0,_core_utils.readUint32)(data,position-1),position+=3;let bytes=referredToCount+7>>3;for(retainBits[0]=data[position++];--bytes>0;)retainBits.push(data[position++])}else if(5===referredFlags||6===referredFlags)throw new Jbig2Error("invalid referred-to flags");segmentHeader.retainBits=retainBits;let referredToSegmentNumberSize=4;segmentHeader.number<=256?referredToSegmentNumberSize=1:segmentHeader.number<=65536&&(referredToSegmentNumberSize=2);const referredTo=[];let i,ii;for(i=0;i<referredToCount;i++){let number;number=1===referredToSegmentNumberSize?data[position]:2===referredToSegmentNumberSize?(0,_core_utils.readUint16)(data,position):(0,_core_utils.readUint32)(data,position),referredTo.push(number),position+=referredToSegmentNumberSize}if(segmentHeader.referredTo=referredTo,pageAssociationFieldSize?(segmentHeader.pageAssociation=(0,_core_utils.readUint32)(data,position),position+=4):segmentHeader.pageAssociation=data[position++],segmentHeader.length=(0,_core_utils.readUint32)(data,position),position+=4,4294967295===segmentHeader.length){if(38!==segmentType)throw new Jbig2Error("invalid unknown segment length");{const genericRegionInfo=readRegionSegmentInformation(data,position),genericRegionMmr=!!(1&data[position+RegionSegmentInformationFieldLength]),searchPatternLength=6,searchPattern=new Uint8Array(searchPatternLength);for(genericRegionMmr||(searchPattern[0]=255,searchPattern[1]=172),searchPattern[2]=genericRegionInfo.height>>>24&255,searchPattern[3]=genericRegionInfo.height>>16&255,searchPattern[4]=genericRegionInfo.height>>8&255,searchPattern[5]=255&genericRegionInfo.height,i=position,ii=data.length;i<ii;i++){let j=0;for(;j<searchPatternLength&&searchPattern[j]===data[i+j];)j++;if(j===searchPatternLength){segmentHeader.length=i+searchPatternLength;break}}if(4294967295===segmentHeader.length)throw new Jbig2Error("segment end was not found")}}return segmentHeader.headerEnd=position,segmentHeader}function readSegments(header,data,start,end){const segments=[];let position=start;for(;position<end;){const segmentHeader=readSegmentHeader(data,position);position=segmentHeader.headerEnd;const segment={header:segmentHeader,data};if(header.randomAccess||(segment.start=position,position+=segmentHeader.length,segment.end=position),segments.push(segment),51===segmentHeader.type)break}if(header.randomAccess)for(let i=0,ii=segments.length;i<ii;i++)segments[i].start=position,position+=segments[i].header.length,segments[i].end=position;return segments}function readRegionSegmentInformation(data,start){return{width:(0,_core_utils.readUint32)(data,start),height:(0,_core_utils.readUint32)(data,start+4),x:(0,_core_utils.readUint32)(data,start+8),y:(0,_core_utils.readUint32)(data,start+12),combinationOperator:7&data[start+16]}}const RegionSegmentInformationFieldLength=17;function processSegment(segment,visitor){const header=segment.header,data=segment.data,end=segment.end;let args,at,i,atLength,position=segment.start;switch(header.type){case 0:const dictionary={},dictionaryFlags=(0,_core_utils.readUint16)(data,position);if(dictionary.huffman=!!(1&dictionaryFlags),dictionary.refinement=!!(2&dictionaryFlags),dictionary.huffmanDHSelector=dictionaryFlags>>2&3,dictionary.huffmanDWSelector=dictionaryFlags>>4&3,dictionary.bitmapSizeSelector=dictionaryFlags>>6&1,dictionary.aggregationInstancesSelector=dictionaryFlags>>7&1,dictionary.bitmapCodingContextUsed=!!(256&dictionaryFlags),dictionary.bitmapCodingContextRetained=!!(512&dictionaryFlags),dictionary.template=dictionaryFlags>>10&3,dictionary.refinementTemplate=dictionaryFlags>>12&1,position+=2,!dictionary.huffman){for(atLength=0===dictionary.template?4:1,at=[],i=0;i<atLength;i++)at.push({x:(0,_core_utils.readInt8)(data,position),y:(0,_core_utils.readInt8)(data,position+1)}),position+=2;dictionary.at=at}if(dictionary.refinement&&!dictionary.refinementTemplate){for(at=[],i=0;i<2;i++)at.push({x:(0,_core_utils.readInt8)(data,position),y:(0,_core_utils.readInt8)(data,position+1)}),position+=2;dictionary.refinementAt=at}dictionary.numberOfExportedSymbols=(0,_core_utils.readUint32)(data,position),position+=4,dictionary.numberOfNewSymbols=(0,_core_utils.readUint32)(data,position),position+=4,args=[dictionary,header.number,header.referredTo,data,position,end];break;case 6:case 7:const textRegion={};textRegion.info=readRegionSegmentInformation(data,position),position+=RegionSegmentInformationFieldLength;const textRegionSegmentFlags=(0,_core_utils.readUint16)(data,position);if(position+=2,textRegion.huffman=!!(1&textRegionSegmentFlags),textRegion.refinement=!!(2&textRegionSegmentFlags),textRegion.logStripSize=textRegionSegmentFlags>>2&3,textRegion.stripSize=1<<textRegion.logStripSize,textRegion.referenceCorner=textRegionSegmentFlags>>4&3,textRegion.transposed=!!(64&textRegionSegmentFlags),textRegion.combinationOperator=textRegionSegmentFlags>>7&3,textRegion.defaultPixelValue=textRegionSegmentFlags>>9&1,textRegion.dsOffset=textRegionSegmentFlags<<17>>27,textRegion.refinementTemplate=textRegionSegmentFlags>>15&1,textRegion.huffman){const textRegionHuffmanFlags=(0,_core_utils.readUint16)(data,position);position+=2,textRegion.huffmanFS=3&textRegionHuffmanFlags,textRegion.huffmanDS=textRegionHuffmanFlags>>2&3,textRegion.huffmanDT=textRegionHuffmanFlags>>4&3,textRegion.huffmanRefinementDW=textRegionHuffmanFlags>>6&3,textRegion.huffmanRefinementDH=textRegionHuffmanFlags>>8&3,textRegion.huffmanRefinementDX=textRegionHuffmanFlags>>10&3,textRegion.huffmanRefinementDY=textRegionHuffmanFlags>>12&3,textRegion.huffmanRefinementSizeSelector=!!(16384&textRegionHuffmanFlags)}if(textRegion.refinement&&!textRegion.refinementTemplate){for(at=[],i=0;i<2;i++)at.push({x:(0,_core_utils.readInt8)(data,position),y:(0,_core_utils.readInt8)(data,position+1)}),position+=2;textRegion.refinementAt=at}textRegion.numberOfSymbolInstances=(0,_core_utils.readUint32)(data,position),position+=4,args=[textRegion,header.referredTo,data,position,end];break;case 16:const patternDictionary={},patternDictionaryFlags=data[position++];patternDictionary.mmr=!!(1&patternDictionaryFlags),patternDictionary.template=patternDictionaryFlags>>1&3,patternDictionary.patternWidth=data[position++],patternDictionary.patternHeight=data[position++],patternDictionary.maxPatternIndex=(0,_core_utils.readUint32)(data,position),position+=4,args=[patternDictionary,header.number,data,position,end];break;case 22:case 23:const halftoneRegion={};halftoneRegion.info=readRegionSegmentInformation(data,position),position+=RegionSegmentInformationFieldLength;const halftoneRegionFlags=data[position++];halftoneRegion.mmr=!!(1&halftoneRegionFlags),halftoneRegion.template=halftoneRegionFlags>>1&3,halftoneRegion.enableSkip=!!(8&halftoneRegionFlags),halftoneRegion.combinationOperator=halftoneRegionFlags>>4&7,halftoneRegion.defaultPixelValue=halftoneRegionFlags>>7&1,halftoneRegion.gridWidth=(0,_core_utils.readUint32)(data,position),position+=4,halftoneRegion.gridHeight=(0,_core_utils.readUint32)(data,position),position+=4,halftoneRegion.gridOffsetX=4294967295&(0,_core_utils.readUint32)(data,position),position+=4,halftoneRegion.gridOffsetY=4294967295&(0,_core_utils.readUint32)(data,position),position+=4,halftoneRegion.gridVectorX=(0,_core_utils.readUint16)(data,position),position+=2,halftoneRegion.gridVectorY=(0,_core_utils.readUint16)(data,position),position+=2,args=[halftoneRegion,header.referredTo,data,position,end];break;case 38:case 39:const genericRegion={};genericRegion.info=readRegionSegmentInformation(data,position),position+=RegionSegmentInformationFieldLength;const genericRegionSegmentFlags=data[position++];if(genericRegion.mmr=!!(1&genericRegionSegmentFlags),genericRegion.template=genericRegionSegmentFlags>>1&3,genericRegion.prediction=!!(8&genericRegionSegmentFlags),!genericRegion.mmr){for(atLength=0===genericRegion.template?4:1,at=[],i=0;i<atLength;i++)at.push({x:(0,_core_utils.readInt8)(data,position),y:(0,_core_utils.readInt8)(data,position+1)}),position+=2;genericRegion.at=at}args=[genericRegion,data,position,end];break;case 48:const pageInfo={width:(0,_core_utils.readUint32)(data,position),height:(0,_core_utils.readUint32)(data,position+4),resolutionX:(0,_core_utils.readUint32)(data,position+8),resolutionY:(0,_core_utils.readUint32)(data,position+12)};4294967295===pageInfo.height&&delete pageInfo.height;const pageSegmentFlags=data[position+16];(0,_core_utils.readUint16)(data,position+17),pageInfo.lossless=!!(1&pageSegmentFlags),pageInfo.refinement=!!(2&pageSegmentFlags),pageInfo.defaultPixelValue=pageSegmentFlags>>2&1,pageInfo.combinationOperator=pageSegmentFlags>>3&3,pageInfo.requiresBuffer=!!(32&pageSegmentFlags),pageInfo.combinationOperatorOverride=!!(64&pageSegmentFlags),args=[pageInfo];break;case 49:case 50:case 51:case 62:break;case 53:args=[header.number,data,position,end];break;default:throw new Jbig2Error(`segment type ${header.typeName}(${header.type}) is not implemented`)}const callbackName="on"+header.typeName;callbackName in visitor&&visitor[callbackName].apply(visitor,args)}function processSegments(segments,visitor){for(let i=0,ii=segments.length;i<ii;i++)processSegment(segments[i],visitor)}class SimpleSegmentVisitor{onPageInformation(info){this.currentPageInfo=info;const rowSize=info.width+7>>3,buffer=new Uint8ClampedArray(rowSize*info.height);info.defaultPixelValue&&buffer.fill(255),this.buffer=buffer}drawBitmap(regionInfo,bitmap){const pageInfo=this.currentPageInfo,width=regionInfo.width,height=regionInfo.height,rowSize=pageInfo.width+7>>3,combinationOperator=pageInfo.combinationOperatorOverride?regionInfo.combinationOperator:pageInfo.combinationOperator,buffer=this.buffer,mask0=128>>(7&regionInfo.x);let i,j,mask,offset,offset0=regionInfo.y*rowSize+(regionInfo.x>>3);switch(combinationOperator){case 0:for(i=0;i<height;i++){for(mask=mask0,offset=offset0,j=0;j<width;j++)bitmap[i][j]&&(buffer[offset]|=mask),mask>>=1,mask||(mask=128,offset++);offset0+=rowSize}break;case 2:for(i=0;i<height;i++){for(mask=mask0,offset=offset0,j=0;j<width;j++)bitmap[i][j]&&(buffer[offset]^=mask),mask>>=1,mask||(mask=128,offset++);offset0+=rowSize}break;default:throw new Jbig2Error(`operator ${combinationOperator} is not supported`)}}onImmediateGenericRegion(region,data,start,end){const regionInfo=region.info,decodingContext=new DecodingContext(data,start,end),bitmap=decodeBitmap(region.mmr,regionInfo.width,regionInfo.height,region.template,region.prediction,null,region.at,decodingContext);this.drawBitmap(regionInfo,bitmap)}onImmediateLosslessGenericRegion(){this.onImmediateGenericRegion(...arguments)}onSymbolDictionary(dictionary,currentSegment,referredSegments,data,start,end){let huffmanTables,huffmanInput;dictionary.huffman&&(huffmanTables=function getSymbolDictionaryHuffmanTables(dictionary,referredTo,customTables){let tableDeltaHeight,tableDeltaWidth,tableBitmapSize,tableAggregateInstances,customIndex=0;switch(dictionary.huffmanDHSelector){case 0:case 1:tableDeltaHeight=getStandardTable(dictionary.huffmanDHSelector+4);break;case 3:tableDeltaHeight=getCustomHuffmanTable(customIndex,referredTo,customTables),customIndex++;break;default:throw new Jbig2Error("invalid Huffman DH selector")}switch(dictionary.huffmanDWSelector){case 0:case 1:tableDeltaWidth=getStandardTable(dictionary.huffmanDWSelector+2);break;case 3:tableDeltaWidth=getCustomHuffmanTable(customIndex,referredTo,customTables),customIndex++;break;default:throw new Jbig2Error("invalid Huffman DW selector")}dictionary.bitmapSizeSelector?(tableBitmapSize=getCustomHuffmanTable(customIndex,referredTo,customTables),customIndex++):tableBitmapSize=getStandardTable(1);tableAggregateInstances=dictionary.aggregationInstancesSelector?getCustomHuffmanTable(customIndex,referredTo,customTables):getStandardTable(1);return{tableDeltaHeight,tableDeltaWidth,tableBitmapSize,tableAggregateInstances}}(dictionary,referredSegments,this.customTables),huffmanInput=new Reader(data,start,end));let symbols=this.symbols;symbols||(this.symbols=symbols={});const inputSymbols=[];for(const referredSegment of referredSegments){const referredSymbols=symbols[referredSegment];referredSymbols&&inputSymbols.push(...referredSymbols)}const decodingContext=new DecodingContext(data,start,end);symbols[currentSegment]=function decodeSymbolDictionary(huffman,refinement,symbols,numberOfNewSymbols,numberOfExportedSymbols,huffmanTables,templateIndex,at,refinementTemplateIndex,refinementAt,decodingContext,huffmanInput){if(huffman&&refinement)throw new Jbig2Error("symbol refinement with Huffman is not supported");const newSymbols=[];let currentHeight=0,symbolCodeLength=(0,_core_utils.log2)(symbols.length+numberOfNewSymbols);const decoder=decodingContext.decoder,contextCache=decodingContext.contextCache;let tableB1,symbolWidths;for(huffman&&(tableB1=getStandardTable(1),symbolWidths=[],symbolCodeLength=Math.max(symbolCodeLength,1));newSymbols.length<numberOfNewSymbols;){currentHeight+=huffman?huffmanTables.tableDeltaHeight.decode(huffmanInput):decodeInteger(contextCache,"IADH",decoder);let currentWidth=0,totalWidth=0;const firstSymbol=huffman?symbolWidths.length:0;for(;;){const deltaWidth=huffman?huffmanTables.tableDeltaWidth.decode(huffmanInput):decodeInteger(contextCache,"IADW",decoder);if(null===deltaWidth)break;let bitmap;if(currentWidth+=deltaWidth,totalWidth+=currentWidth,refinement){const numberOfInstances=decodeInteger(contextCache,"IAAI",decoder);if(numberOfInstances>1)bitmap=decodeTextRegion(huffman,refinement,currentWidth,currentHeight,0,numberOfInstances,1,symbols.concat(newSymbols),symbolCodeLength,0,0,1,0,huffmanTables,refinementTemplateIndex,refinementAt,decodingContext,0,huffmanInput);else{const symbolId=decodeIAID(contextCache,decoder,symbolCodeLength),rdx=decodeInteger(contextCache,"IARDX",decoder),rdy=decodeInteger(contextCache,"IARDY",decoder);bitmap=decodeRefinement(currentWidth,currentHeight,refinementTemplateIndex,symbolId<symbols.length?symbols[symbolId]:newSymbols[symbolId-symbols.length],rdx,rdy,!1,refinementAt,decodingContext)}newSymbols.push(bitmap)}else huffman?symbolWidths.push(currentWidth):(bitmap=decodeBitmap(!1,currentWidth,currentHeight,templateIndex,!1,null,at,decodingContext),newSymbols.push(bitmap))}if(huffman&&!refinement){const bitmapSize=huffmanTables.tableBitmapSize.decode(huffmanInput);let collectiveBitmap;if(huffmanInput.byteAlign(),0===bitmapSize)collectiveBitmap=readUncompressedBitmap(huffmanInput,totalWidth,currentHeight);else{const originalEnd=huffmanInput.end,bitmapEnd=huffmanInput.position+bitmapSize;huffmanInput.end=bitmapEnd,collectiveBitmap=decodeMMRBitmap(huffmanInput,totalWidth,currentHeight,!1),huffmanInput.end=originalEnd,huffmanInput.position=bitmapEnd}const numberOfSymbolsDecoded=symbolWidths.length;if(firstSymbol===numberOfSymbolsDecoded-1)newSymbols.push(collectiveBitmap);else{let i,y,xMax,bitmapWidth,symbolBitmap,xMin=0;for(i=firstSymbol;i<numberOfSymbolsDecoded;i++){for(bitmapWidth=symbolWidths[i],xMax=xMin+bitmapWidth,symbolBitmap=[],y=0;y<currentHeight;y++)symbolBitmap.push(collectiveBitmap[y].subarray(xMin,xMax));newSymbols.push(symbolBitmap),xMin=xMax}}}}const exportedSymbols=[],flags=[];let i,ii,currentFlag=!1;const totalSymbolsLength=symbols.length+numberOfNewSymbols;for(;flags.length<totalSymbolsLength;){let runLength=huffman?tableB1.decode(huffmanInput):decodeInteger(contextCache,"IAEX",decoder);for(;runLength--;)flags.push(currentFlag);currentFlag=!currentFlag}for(i=0,ii=symbols.length;i<ii;i++)flags[i]&&exportedSymbols.push(symbols[i]);for(let j=0;j<numberOfNewSymbols;i++,j++)flags[i]&&exportedSymbols.push(newSymbols[j]);return exportedSymbols}(dictionary.huffman,dictionary.refinement,inputSymbols,dictionary.numberOfNewSymbols,dictionary.numberOfExportedSymbols,huffmanTables,dictionary.template,dictionary.at,dictionary.refinementTemplate,dictionary.refinementAt,decodingContext,huffmanInput)}onImmediateTextRegion(region,referredSegments,data,start,end){const regionInfo=region.info;let huffmanTables,huffmanInput;const symbols=this.symbols,inputSymbols=[];for(const referredSegment of referredSegments){const referredSymbols=symbols[referredSegment];referredSymbols&&inputSymbols.push(...referredSymbols)}const symbolCodeLength=(0,_core_utils.log2)(inputSymbols.length);region.huffman&&(huffmanInput=new Reader(data,start,end),huffmanTables=function getTextRegionHuffmanTables(textRegion,referredTo,customTables,numberOfSymbols,reader){const codes=[];for(let i=0;i<=34;i++){const codeLength=reader.readBits(4);codes.push(new HuffmanLine([i,codeLength,0,0]))}const runCodesTable=new HuffmanTable(codes,!1);codes.length=0;for(let i=0;i<numberOfSymbols;){const codeLength=runCodesTable.decode(reader);if(codeLength>=32){let repeatedLength,numberOfRepeats,j;switch(codeLength){case 32:if(0===i)throw new Jbig2Error("no previous value in symbol ID table");numberOfRepeats=reader.readBits(2)+3,repeatedLength=codes[i-1].prefixLength;break;case 33:numberOfRepeats=reader.readBits(3)+3,repeatedLength=0;break;case 34:numberOfRepeats=reader.readBits(7)+11,repeatedLength=0;break;default:throw new Jbig2Error("invalid code length in symbol ID table")}for(j=0;j<numberOfRepeats;j++)codes.push(new HuffmanLine([i,repeatedLength,0,0])),i++}else codes.push(new HuffmanLine([i,codeLength,0,0])),i++}reader.byteAlign();const symbolIDTable=new HuffmanTable(codes,!1);let tableFirstS,tableDeltaS,tableDeltaT,customIndex=0;switch(textRegion.huffmanFS){case 0:case 1:tableFirstS=getStandardTable(textRegion.huffmanFS+6);break;case 3:tableFirstS=getCustomHuffmanTable(customIndex,referredTo,customTables),customIndex++;break;default:throw new Jbig2Error("invalid Huffman FS selector")}switch(textRegion.huffmanDS){case 0:case 1:case 2:tableDeltaS=getStandardTable(textRegion.huffmanDS+8);break;case 3:tableDeltaS=getCustomHuffmanTable(customIndex,referredTo,customTables),customIndex++;break;default:throw new Jbig2Error("invalid Huffman DS selector")}switch(textRegion.huffmanDT){case 0:case 1:case 2:tableDeltaT=getStandardTable(textRegion.huffmanDT+11);break;case 3:tableDeltaT=getCustomHuffmanTable(customIndex,referredTo,customTables),customIndex++;break;default:throw new Jbig2Error("invalid Huffman DT selector")}if(textRegion.refinement)throw new Jbig2Error("refinement with Huffman is not supported");return{symbolIDTable,tableFirstS,tableDeltaS,tableDeltaT}}(region,referredSegments,this.customTables,inputSymbols.length,huffmanInput));const decodingContext=new DecodingContext(data,start,end),bitmap=decodeTextRegion(region.huffman,region.refinement,regionInfo.width,regionInfo.height,region.defaultPixelValue,region.numberOfSymbolInstances,region.stripSize,inputSymbols,symbolCodeLength,region.transposed,region.dsOffset,region.referenceCorner,region.combinationOperator,huffmanTables,region.refinementTemplate,region.refinementAt,decodingContext,region.logStripSize,huffmanInput);this.drawBitmap(regionInfo,bitmap)}onImmediateLosslessTextRegion(){this.onImmediateTextRegion(...arguments)}onPatternDictionary(dictionary,currentSegment,data,start,end){let patterns=this.patterns;patterns||(this.patterns=patterns={});const decodingContext=new DecodingContext(data,start,end);patterns[currentSegment]=function decodePatternDictionary(mmr,patternWidth,patternHeight,maxPatternIndex,template,decodingContext){const at=[];mmr||(at.push({x:-patternWidth,y:0}),0===template&&at.push({x:-3,y:-1},{x:2,y:-2},{x:-2,y:-2}));const collectiveBitmap=decodeBitmap(mmr,(maxPatternIndex+1)*patternWidth,patternHeight,template,!1,null,at,decodingContext),patterns=[];for(let i=0;i<=maxPatternIndex;i++){const patternBitmap=[],xMin=patternWidth*i,xMax=xMin+patternWidth;for(let y=0;y<patternHeight;y++)patternBitmap.push(collectiveBitmap[y].subarray(xMin,xMax));patterns.push(patternBitmap)}return patterns}(dictionary.mmr,dictionary.patternWidth,dictionary.patternHeight,dictionary.maxPatternIndex,dictionary.template,decodingContext)}onImmediateHalftoneRegion(region,referredSegments,data,start,end){const patterns=this.patterns[referredSegments[0]],regionInfo=region.info,decodingContext=new DecodingContext(data,start,end),bitmap=function decodeHalftoneRegion(mmr,patterns,template,regionWidth,regionHeight,defaultPixelValue,enableSkip,combinationOperator,gridWidth,gridHeight,gridOffsetX,gridOffsetY,gridVectorX,gridVectorY,decodingContext){if(enableSkip)throw new Jbig2Error("skip is not supported");if(0!==combinationOperator)throw new Jbig2Error(`operator "${combinationOperator}" is not supported in halftone region`);const regionBitmap=[];let i,j,row;for(i=0;i<regionHeight;i++){if(row=new Uint8Array(regionWidth),defaultPixelValue)for(j=0;j<regionWidth;j++)row[j]=defaultPixelValue;regionBitmap.push(row)}const numberOfPatterns=patterns.length,pattern0=patterns[0],patternWidth=pattern0[0].length,patternHeight=pattern0.length,bitsPerValue=(0,_core_utils.log2)(numberOfPatterns),at=[];mmr||(at.push({x:template<=1?3:2,y:-1}),0===template&&at.push({x:-3,y:-1},{x:2,y:-2},{x:-2,y:-2}));const grayScaleBitPlanes=[];let mmrInput,bitmap,mg,ng,bit,patternIndex,patternBitmap,x,y,patternRow,regionRow;for(mmr&&(mmrInput=new Reader(decodingContext.data,decodingContext.start,decodingContext.end)),i=bitsPerValue-1;i>=0;i--)bitmap=mmr?decodeMMRBitmap(mmrInput,gridWidth,gridHeight,!0):decodeBitmap(!1,gridWidth,gridHeight,template,!1,null,at,decodingContext),grayScaleBitPlanes[i]=bitmap;for(mg=0;mg<gridHeight;mg++)for(ng=0;ng<gridWidth;ng++){for(bit=0,patternIndex=0,j=bitsPerValue-1;j>=0;j--)bit^=grayScaleBitPlanes[j][mg][ng],patternIndex|=bit<<j;if(patternBitmap=patterns[patternIndex],x=gridOffsetX+mg*gridVectorY+ng*gridVectorX>>8,y=gridOffsetY+mg*gridVectorX-ng*gridVectorY>>8,x>=0&&x+patternWidth<=regionWidth&&y>=0&&y+patternHeight<=regionHeight)for(i=0;i<patternHeight;i++)for(regionRow=regionBitmap[y+i],patternRow=patternBitmap[i],j=0;j<patternWidth;j++)regionRow[x+j]|=patternRow[j];else{let regionX,regionY;for(i=0;i<patternHeight;i++)if(regionY=y+i,!(regionY<0||regionY>=regionHeight))for(regionRow=regionBitmap[regionY],patternRow=patternBitmap[i],j=0;j<patternWidth;j++)regionX=x+j,regionX>=0&&regionX<regionWidth&&(regionRow[regionX]|=patternRow[j])}}return regionBitmap}(region.mmr,patterns,region.template,regionInfo.width,regionInfo.height,region.defaultPixelValue,region.enableSkip,region.combinationOperator,region.gridWidth,region.gridHeight,region.gridOffsetX,region.gridOffsetY,region.gridVectorX,region.gridVectorY,decodingContext);this.drawBitmap(regionInfo,bitmap)}onImmediateLosslessHalftoneRegion(){this.onImmediateHalftoneRegion(...arguments)}onTables(currentSegment,data,start,end){let customTables=this.customTables;customTables||(this.customTables=customTables={}),customTables[currentSegment]=function decodeTablesSegment(data,start,end){const flags=data[start],lowestValue=4294967295&(0,_core_utils.readUint32)(data,start+1),highestValue=4294967295&(0,_core_utils.readUint32)(data,start+5),reader=new Reader(data,start+9,end),prefixSizeBits=1+(flags>>1&7),rangeSizeBits=1+(flags>>4&7),lines=[];let prefixLength,rangeLength,currentRangeLow=lowestValue;do{prefixLength=reader.readBits(prefixSizeBits),rangeLength=reader.readBits(rangeSizeBits),lines.push(new HuffmanLine([currentRangeLow,prefixLength,rangeLength,0])),currentRangeLow+=1<<rangeLength}while(currentRangeLow<highestValue);prefixLength=reader.readBits(prefixSizeBits),lines.push(new HuffmanLine([lowestValue-1,prefixLength,32,0,"lower"])),prefixLength=reader.readBits(prefixSizeBits),lines.push(new HuffmanLine([highestValue,prefixLength,32,0])),1&flags&&(prefixLength=reader.readBits(prefixSizeBits),lines.push(new HuffmanLine([prefixLength,0])));return new HuffmanTable(lines,!1)}(data,start,end)}}class HuffmanLine{constructor(lineData){2===lineData.length?(this.isOOB=!0,this.rangeLow=0,this.prefixLength=lineData[0],this.rangeLength=0,this.prefixCode=lineData[1],this.isLowerRange=!1):(this.isOOB=!1,this.rangeLow=lineData[0],this.prefixLength=lineData[1],this.rangeLength=lineData[2],this.prefixCode=lineData[3],this.isLowerRange="lower"===lineData[4])}}class HuffmanTreeNode{constructor(line){this.children=[],line?(this.isLeaf=!0,this.rangeLength=line.rangeLength,this.rangeLow=line.rangeLow,this.isLowerRange=line.isLowerRange,this.isOOB=line.isOOB):this.isLeaf=!1}buildTree(line,shift){const bit=line.prefixCode>>shift&1;if(shift<=0)this.children[bit]=new HuffmanTreeNode(line);else{let node=this.children[bit];node||(this.children[bit]=node=new HuffmanTreeNode(null)),node.buildTree(line,shift-1)}}decodeNode(reader){if(this.isLeaf){if(this.isOOB)return null;const htOffset=reader.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-htOffset:htOffset)}const node=this.children[reader.readBit()];if(!node)throw new Jbig2Error("invalid Huffman data");return node.decodeNode(reader)}}class HuffmanTable{constructor(lines,prefixCodesDone){prefixCodesDone||this.assignPrefixCodes(lines),this.rootNode=new HuffmanTreeNode(null);for(let i=0,ii=lines.length;i<ii;i++){const line=lines[i];line.prefixLength>0&&this.rootNode.buildTree(line,line.prefixLength-1)}}decode(reader){return this.rootNode.decodeNode(reader)}assignPrefixCodes(lines){const linesLength=lines.length;let prefixLengthMax=0;for(let i=0;i<linesLength;i++)prefixLengthMax=Math.max(prefixLengthMax,lines[i].prefixLength);const histogram=new Uint32Array(prefixLengthMax+1);for(let i=0;i<linesLength;i++)histogram[lines[i].prefixLength]++;let currentCode,currentTemp,line,currentLength=1,firstCode=0;for(histogram[0]=0;currentLength<=prefixLengthMax;){for(firstCode=firstCode+histogram[currentLength-1]<<1,currentCode=firstCode,currentTemp=0;currentTemp<linesLength;)line=lines[currentTemp],line.prefixLength===currentLength&&(line.prefixCode=currentCode,currentCode++),currentTemp++;currentLength++}}}const standardTablesCache={};function getStandardTable(number){let lines,table=standardTablesCache[number];if(table)return table;switch(number){case 1:lines=[[0,1,4,0],[16,2,8,2],[272,3,16,6],[65808,3,32,7]];break;case 2:lines=[[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[75,6,32,62],[6,63]];break;case 3:lines=[[-256,8,8,254],[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[-257,8,32,255,"lower"],[75,7,32,126],[6,62]];break;case 4:lines=[[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[76,5,32,31]];break;case 5:lines=[[-255,7,8,126],[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[-256,7,32,127,"lower"],[76,6,32,62]];break;case 6:lines=[[-2048,5,10,28],[-1024,4,9,8],[-512,4,8,9],[-256,4,7,10],[-128,5,6,29],[-64,5,5,30],[-32,4,5,11],[0,2,7,0],[128,3,7,2],[256,3,8,3],[512,4,9,12],[1024,4,10,13],[-2049,6,32,62,"lower"],[2048,6,32,63]];break;case 7:lines=[[-1024,4,9,8],[-512,3,8,0],[-256,4,7,9],[-128,5,6,26],[-64,5,5,27],[-32,4,5,10],[0,4,5,11],[32,5,5,28],[64,5,6,29],[128,4,7,12],[256,3,8,1],[512,3,9,2],[1024,3,10,3],[-1025,5,32,30,"lower"],[2048,5,32,31]];break;case 8:lines=[[-15,8,3,252],[-7,9,1,508],[-5,8,1,253],[-3,9,0,509],[-2,7,0,124],[-1,4,0,10],[0,2,1,0],[2,5,0,26],[3,6,0,58],[4,3,4,4],[20,6,1,59],[22,4,4,11],[38,4,5,12],[70,5,6,27],[134,5,7,28],[262,6,7,60],[390,7,8,125],[646,6,10,61],[-16,9,32,510,"lower"],[1670,9,32,511],[2,1]];break;case 9:lines=[[-31,8,4,252],[-15,9,2,508],[-11,8,2,253],[-7,9,1,509],[-5,7,1,124],[-3,4,1,10],[-1,3,1,2],[1,3,1,3],[3,5,1,26],[5,6,1,58],[7,3,5,4],[39,6,2,59],[43,4,5,11],[75,4,6,12],[139,5,7,27],[267,5,8,28],[523,6,8,60],[779,7,9,125],[1291,6,11,61],[-32,9,32,510,"lower"],[3339,9,32,511],[2,0]];break;case 10:lines=[[-21,7,4,122],[-5,8,0,252],[-4,7,0,123],[-3,5,0,24],[-2,2,2,0],[2,5,0,25],[3,6,0,54],[4,7,0,124],[5,8,0,253],[6,2,6,1],[70,5,5,26],[102,6,5,55],[134,6,6,56],[198,6,7,57],[326,6,8,58],[582,6,9,59],[1094,6,10,60],[2118,7,11,125],[-22,8,32,254,"lower"],[4166,8,32,255],[2,2]];break;case 11:lines=[[1,1,0,0],[2,2,1,2],[4,4,0,12],[5,4,1,13],[7,5,1,28],[9,5,2,29],[13,6,2,60],[17,7,2,122],[21,7,3,123],[29,7,4,124],[45,7,5,125],[77,7,6,126],[141,7,32,127]];break;case 12:lines=[[1,1,0,0],[2,2,0,2],[3,3,1,6],[5,5,0,28],[6,5,1,29],[8,6,1,60],[10,7,0,122],[11,7,1,123],[13,7,2,124],[17,7,3,125],[25,7,4,126],[41,8,5,254],[73,8,32,255]];break;case 13:lines=[[1,1,0,0],[2,3,0,4],[3,4,0,12],[4,5,0,28],[5,4,1,13],[7,3,3,5],[15,6,1,58],[17,6,2,59],[21,6,3,60],[29,6,4,61],[45,6,5,62],[77,7,6,126],[141,7,32,127]];break;case 14:lines=[[-2,3,0,4],[-1,3,0,5],[0,1,0,0],[1,3,0,6],[2,3,0,7]];break;case 15:lines=[[-24,7,4,124],[-8,6,2,60],[-4,5,1,28],[-2,4,0,12],[-1,3,0,4],[0,1,0,0],[1,3,0,5],[2,4,0,13],[3,5,1,29],[5,6,2,61],[9,7,4,125],[-25,7,32,126,"lower"],[25,7,32,127]];break;default:throw new Jbig2Error(`standard table B.${number} does not exist`)}for(let i=0,ii=lines.length;i<ii;i++)lines[i]=new HuffmanLine(lines[i]);return table=new HuffmanTable(lines,!0),standardTablesCache[number]=table,table}class Reader{constructor(data,start,end){this.data=data,this.start=start,this.end=end,this.position=start,this.shift=-1,this.currentByte=0}readBit(){if(this.shift<0){if(this.position>=this.end)throw new Jbig2Error("end of data while reading bit");this.currentByte=this.data[this.position++],this.shift=7}const bit=this.currentByte>>this.shift&1;return this.shift--,bit}readBits(numBits){let i,result=0;for(i=numBits-1;i>=0;i--)result|=this.readBit()<<i;return result}byteAlign(){this.shift=-1}next(){return this.position>=this.end?-1:this.data[this.position++]}}function getCustomHuffmanTable(index,referredTo,customTables){let currentIndex=0;for(let i=0,ii=referredTo.length;i<ii;i++){const table=customTables[referredTo[i]];if(table){if(index===currentIndex)return table;currentIndex++}}throw new Jbig2Error("can't find custom Huffman table")}function readUncompressedBitmap(reader,width,height){const bitmap=[];for(let y=0;y<height;y++){const row=new Uint8Array(width);bitmap.push(row);for(let x=0;x<width;x++)row[x]=reader.readBit();reader.byteAlign()}return bitmap}function decodeMMRBitmap(input,width,height,endOfBlock){const params={K:-1,Columns:width,Rows:height,BlackIs1:!0,EndOfBlock:endOfBlock},decoder=new _ccitt.CCITTFaxDecoder(input,params),bitmap=[];let currentByte,eof=!1;for(let y=0;y<height;y++){const row=new Uint8Array(width);bitmap.push(row);let shift=-1;for(let x=0;x<width;x++)shift<0&&(currentByte=decoder.readNextChar(),-1===currentByte&&(currentByte=0,eof=!0),shift=7),row[x]=currentByte>>shift&1,shift--}if(endOfBlock&&!eof){const lookForEOFLimit=5;for(let i=0;i<lookForEOFLimit&&-1!==decoder.readNextChar();i++);}return bitmap}exports.Jbig2Image=class Jbig2Image{parseChunks(chunks){return function parseJbig2Chunks(chunks){const visitor=new SimpleSegmentVisitor;for(let i=0,ii=chunks.length;i<ii;i++){const chunk=chunks[i];processSegments(readSegments({},chunk.data,chunk.start,chunk.end),visitor)}return visitor.buffer}(chunks)}parse(data){throw new Error("Not implemented: Jbig2Image.parse")}}},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArithmeticDecoder=void 0;const QeTable=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}];exports.ArithmeticDecoder=class ArithmeticDecoder{constructor(data,start,end){this.data=data,this.bp=start,this.dataEnd=end,this.chigh=data[start],this.clow=0,this.byteIn(),this.chigh=this.chigh<<7&65535|this.clow>>9&127,this.clow=this.clow<<7&65535,this.ct-=7,this.a=32768}byteIn(){const data=this.data;let bp=this.bp;255===data[bp]?data[bp+1]>143?(this.clow+=65280,this.ct=8):(bp++,this.clow+=data[bp]<<9,this.ct=7,this.bp=bp):(bp++,this.clow+=bp<this.dataEnd?data[bp]<<8:65280,this.ct=8,this.bp=bp),this.clow>65535&&(this.chigh+=this.clow>>16,this.clow&=65535)}readBit(contexts,pos){let cx_index=contexts[pos]>>1,cx_mps=1&contexts[pos];const qeTableIcx=QeTable[cx_index],qeIcx=qeTableIcx.qe;let d,a=this.a-qeIcx;if(this.chigh<qeIcx)a<qeIcx?(a=qeIcx,d=cx_mps,cx_index=qeTableIcx.nmps):(a=qeIcx,d=1^cx_mps,1===qeTableIcx.switchFlag&&(cx_mps=d),cx_index=qeTableIcx.nlps);else{if(this.chigh-=qeIcx,0!=(32768&a))return this.a=a,cx_mps;a<qeIcx?(d=1^cx_mps,1===qeTableIcx.switchFlag&&(cx_mps=d),cx_index=qeTableIcx.nlps):(d=cx_mps,cx_index=qeTableIcx.nmps)}do{0===this.ct&&this.byteIn(),a<<=1,this.chigh=this.chigh<<1&65535|this.clow>>15&1,this.clow=this.clow<<1&65535,this.ct--}while(0==(32768&a));return this.a=a,contexts[pos]=cx_index<<1|cx_mps,d}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.JpegStream=void 0;var _decode_stream=__w_pdfjs_require__(19),_primitives=__w_pdfjs_require__(5),_jpg=__w_pdfjs_require__(28),_util=__w_pdfjs_require__(2);class JpegStream extends _decode_stream.DecodeStream{constructor(stream,maybeLength,params){let ch;for(;-1!==(ch=stream.getByte());)if(255===ch){stream.skip(-1);break}super(maybeLength),this.stream=stream,this.dict=stream.dict,this.maybeLength=maybeLength,this.params=params}get bytes(){return(0,_util.shadow)(this,"bytes",this.stream.getBytes(this.maybeLength))}ensureBuffer(requested){}readBlock(){if(this.eof)return;const jpegOptions={decodeTransform:void 0,colorTransform:void 0},decodeArr=this.dict.getArray("D","Decode");if(this.forceRGB&&Array.isArray(decodeArr)){const bitsPerComponent=this.dict.get("BPC","BitsPerComponent")||8,decodeArrLength=decodeArr.length,transform=new Int32Array(decodeArrLength);let transformNeeded=!1;const maxValue=(1<<bitsPerComponent)-1;for(let i=0;i<decodeArrLength;i+=2)transform[i]=256*(decodeArr[i+1]-decodeArr[i])|0,transform[i+1]=decodeArr[i]*maxValue|0,256===transform[i]&&0===transform[i+1]||(transformNeeded=!0);transformNeeded&&(jpegOptions.decodeTransform=transform)}if(this.params instanceof _primitives.Dict){const colorTransform=this.params.get("ColorTransform");Number.isInteger(colorTransform)&&(jpegOptions.colorTransform=colorTransform)}const jpegImage=new _jpg.JpegImage(jpegOptions);jpegImage.parse(this.bytes);const data=jpegImage.getData({width:this.drawWidth,height:this.drawHeight,forceRGB:this.forceRGB,isSourcePDF:!0});this.buffer=data,this.bufferLength=data.length,this.eof=!0}}exports.JpegStream=JpegStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.JpegImage=void 0;var _util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6);class JpegError extends _util.BaseException{constructor(msg){super(`JPEG error: ${msg}`,"JpegError")}}class DNLMarkerError extends _util.BaseException{constructor(message,scanLines){super(message,"DNLMarkerError"),this.scanLines=scanLines}}class EOIMarkerError extends _util.BaseException{constructor(msg){super(msg,"EOIMarkerError")}}const dctZigZag=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);function buildHuffmanTable(codeLengths,values){let i,j,k=0,length=16;for(;length>0&&!codeLengths[length-1];)length--;const code=[{children:[],index:0}];let q,p=code[0];for(i=0;i<length;i++){for(j=0;j<codeLengths[i];j++){for(p=code.pop(),p.children[p.index]=values[k];p.index>0;)p=code.pop();for(p.index++,code.push(p);code.length<=i;)code.push(q={children:[],index:0}),p.children[p.index]=q.children,p=q;k++}i+1<length&&(code.push(q={children:[],index:0}),p.children[p.index]=q.children,p=q)}return code[0].children}function getBlockBufferOffset(component,row,col){return 64*((component.blocksPerLine+1)*row+col)}function decodeScan(data,offset,frame,components,resetInterval,spectralStart,spectralEnd,successivePrev,successive,parseDNLMarker=!1){const mcusPerLine=frame.mcusPerLine,progressive=frame.progressive,startOffset=offset;let bitsData=0,bitsCount=0;function readBit(){if(bitsCount>0)return bitsCount--,bitsData>>bitsCount&1;if(bitsData=data[offset++],255===bitsData){const nextByte=data[offset++];if(nextByte){if(220===nextByte&&parseDNLMarker){offset+=2;const scanLines=(0,_core_utils.readUint16)(data,offset);if(offset+=2,scanLines>0&&scanLines!==frame.scanLines)throw new DNLMarkerError("Found DNL marker (0xFFDC) while parsing scan data",scanLines)}else if(217===nextByte){if(parseDNLMarker){const maybeScanLines=blockRow*(8===frame.precision?8:0);if(maybeScanLines>0&&Math.round(frame.scanLines/maybeScanLines)>=10)throw new DNLMarkerError("Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter",maybeScanLines)}throw new EOIMarkerError("Found EOI marker (0xFFD9) while parsing scan data")}throw new JpegError(`unexpected marker ${(bitsData<<8|nextByte).toString(16)}`)}}return bitsCount=7,bitsData>>>7}function decodeHuffman(tree){let node=tree;for(;;){switch(node=node[readBit()],typeof node){case"number":return node;case"object":continue}throw new JpegError("invalid huffman sequence")}}function receive(length){let n=0;for(;length>0;)n=n<<1|readBit(),length--;return n}function receiveAndExtend(length){if(1===length)return 1===readBit()?1:-1;const n=receive(length);return n>=1<<length-1?n:n+(-1<<length)+1}let eobrun=0;let successiveACNextValue,successiveACState=0;let blockRow=0;function decodeMcu(component,decode,mcu,row,col){const mcuCol=mcu%mcusPerLine;blockRow=(mcu/mcusPerLine|0)*component.v+row;const blockCol=mcuCol*component.h+col;decode(component,getBlockBufferOffset(component,blockRow,blockCol))}function decodeBlock(component,decode,mcu){blockRow=mcu/component.blocksPerLine|0;const blockCol=mcu%component.blocksPerLine;decode(component,getBlockBufferOffset(component,blockRow,blockCol))}const componentsLength=components.length;let component,i,j,k,n,decodeFn;decodeFn=progressive?0===spectralStart?0===successivePrev?function decodeDCFirst(component,blockOffset){const t=decodeHuffman(component.huffmanTableDC),diff=0===t?0:receiveAndExtend(t)<<successive;component.blockData[blockOffset]=component.pred+=diff}:function decodeDCSuccessive(component,blockOffset){component.blockData[blockOffset]|=readBit()<<successive}:0===successivePrev?function decodeACFirst(component,blockOffset){if(eobrun>0)return void eobrun--;let k=spectralStart;const e=spectralEnd;for(;k<=e;){const rs=decodeHuffman(component.huffmanTableAC),s=15&rs,r=rs>>4;if(0===s){if(r<15){eobrun=receive(r)+(1<<r)-1;break}k+=16;continue}k+=r;const z=dctZigZag[k];component.blockData[blockOffset+z]=receiveAndExtend(s)*(1<<successive),k++}}:function decodeACSuccessive(component,blockOffset){let k=spectralStart;const e=spectralEnd;let s,rs,r=0;for(;k<=e;){const offsetZ=blockOffset+dctZigZag[k],sign=component.blockData[offsetZ]<0?-1:1;switch(successiveACState){case 0:if(rs=decodeHuffman(component.huffmanTableAC),s=15&rs,r=rs>>4,0===s)r<15?(eobrun=receive(r)+(1<<r),successiveACState=4):(r=16,successiveACState=1);else{if(1!==s)throw new JpegError("invalid ACn encoding");successiveACNextValue=receiveAndExtend(s),successiveACState=r?2:3}continue;case 1:case 2:component.blockData[offsetZ]?component.blockData[offsetZ]+=sign*(readBit()<<successive):(r--,0===r&&(successiveACState=2===successiveACState?3:0));break;case 3:component.blockData[offsetZ]?component.blockData[offsetZ]+=sign*(readBit()<<successive):(component.blockData[offsetZ]=successiveACNextValue<<successive,successiveACState=0);break;case 4:component.blockData[offsetZ]&&(component.blockData[offsetZ]+=sign*(readBit()<<successive))}k++}4===successiveACState&&(eobrun--,0===eobrun&&(successiveACState=0))}:function decodeBaseline(component,blockOffset){const t=decodeHuffman(component.huffmanTableDC),diff=0===t?0:receiveAndExtend(t);component.blockData[blockOffset]=component.pred+=diff;let k=1;for(;k<64;){const rs=decodeHuffman(component.huffmanTableAC),s=15&rs,r=rs>>4;if(0===s){if(r<15)break;k+=16;continue}k+=r;const z=dctZigZag[k];component.blockData[blockOffset+z]=receiveAndExtend(s),k++}};let fileMarker,mcuExpected,h,v,mcu=0;for(mcuExpected=1===componentsLength?components[0].blocksPerLine*components[0].blocksPerColumn:mcusPerLine*frame.mcusPerColumn;mcu<=mcuExpected;){const mcuToRead=resetInterval?Math.min(mcuExpected-mcu,resetInterval):mcuExpected;if(mcuToRead>0){for(i=0;i<componentsLength;i++)components[i].pred=0;if(eobrun=0,1===componentsLength)for(component=components[0],n=0;n<mcuToRead;n++)decodeBlock(component,decodeFn,mcu),mcu++;else for(n=0;n<mcuToRead;n++){for(i=0;i<componentsLength;i++)for(component=components[i],h=component.h,v=component.v,j=0;j<v;j++)for(k=0;k<h;k++)decodeMcu(component,decodeFn,mcu,j,k);mcu++}}if(bitsCount=0,fileMarker=findNextFileMarker(data,offset),!fileMarker)break;if(fileMarker.invalid){const partialMsg=mcuToRead>0?"unexpected":"excessive";(0,_util.warn)(`decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`),offset=fileMarker.offset}if(!(fileMarker.marker>=65488&&fileMarker.marker<=65495))break;offset+=2}return offset-startOffset}function quantizeAndInverse(component,blockBufferOffset,p){const qt=component.quantizationTable,blockData=component.blockData;let v0,v1,v2,v3,v4,v5,v6,v7,p0,p1,p2,p3,p4,p5,p6,p7,t;if(!qt)throw new JpegError("missing required Quantization Table.");for(let row=0;row<64;row+=8)p0=blockData[blockBufferOffset+row],p1=blockData[blockBufferOffset+row+1],p2=blockData[blockBufferOffset+row+2],p3=blockData[blockBufferOffset+row+3],p4=blockData[blockBufferOffset+row+4],p5=blockData[blockBufferOffset+row+5],p6=blockData[blockBufferOffset+row+6],p7=blockData[blockBufferOffset+row+7],p0*=qt[row],0!=(p1|p2|p3|p4|p5|p6|p7)?(p1*=qt[row+1],p2*=qt[row+2],p3*=qt[row+3],p4*=qt[row+4],p5*=qt[row+5],p6*=qt[row+6],p7*=qt[row+7],v0=5793*p0+128>>8,v1=5793*p4+128>>8,v2=p2,v3=p6,v4=2896*(p1-p7)+128>>8,v7=2896*(p1+p7)+128>>8,v5=p3<<4,v6=p5<<4,v0=v0+v1+1>>1,v1=v0-v1,t=3784*v2+1567*v3+128>>8,v2=1567*v2-3784*v3+128>>8,v3=t,v4=v4+v6+1>>1,v6=v4-v6,v7=v7+v5+1>>1,v5=v7-v5,v0=v0+v3+1>>1,v3=v0-v3,v1=v1+v2+1>>1,v2=v1-v2,t=2276*v4+3406*v7+2048>>12,v4=3406*v4-2276*v7+2048>>12,v7=t,t=799*v5+4017*v6+2048>>12,v5=4017*v5-799*v6+2048>>12,v6=t,p[row]=v0+v7,p[row+7]=v0-v7,p[row+1]=v1+v6,p[row+6]=v1-v6,p[row+2]=v2+v5,p[row+5]=v2-v5,p[row+3]=v3+v4,p[row+4]=v3-v4):(t=5793*p0+512>>10,p[row]=t,p[row+1]=t,p[row+2]=t,p[row+3]=t,p[row+4]=t,p[row+5]=t,p[row+6]=t,p[row+7]=t);for(let col=0;col<8;++col)p0=p[col],p1=p[col+8],p2=p[col+16],p3=p[col+24],p4=p[col+32],p5=p[col+40],p6=p[col+48],p7=p[col+56],0!=(p1|p2|p3|p4|p5|p6|p7)?(v0=5793*p0+2048>>12,v1=5793*p4+2048>>12,v2=p2,v3=p6,v4=2896*(p1-p7)+2048>>12,v7=2896*(p1+p7)+2048>>12,v5=p3,v6=p5,v0=4112+(v0+v1+1>>1),v1=v0-v1,t=3784*v2+1567*v3+2048>>12,v2=1567*v2-3784*v3+2048>>12,v3=t,v4=v4+v6+1>>1,v6=v4-v6,v7=v7+v5+1>>1,v5=v7-v5,v0=v0+v3+1>>1,v3=v0-v3,v1=v1+v2+1>>1,v2=v1-v2,t=2276*v4+3406*v7+2048>>12,v4=3406*v4-2276*v7+2048>>12,v7=t,t=799*v5+4017*v6+2048>>12,v5=4017*v5-799*v6+2048>>12,v6=t,p0=v0+v7,p7=v0-v7,p1=v1+v6,p6=v1-v6,p2=v2+v5,p5=v2-v5,p3=v3+v4,p4=v3-v4,p0<16?p0=0:p0>=4080?p0=255:p0>>=4,p1<16?p1=0:p1>=4080?p1=255:p1>>=4,p2<16?p2=0:p2>=4080?p2=255:p2>>=4,p3<16?p3=0:p3>=4080?p3=255:p3>>=4,p4<16?p4=0:p4>=4080?p4=255:p4>>=4,p5<16?p5=0:p5>=4080?p5=255:p5>>=4,p6<16?p6=0:p6>=4080?p6=255:p6>>=4,p7<16?p7=0:p7>=4080?p7=255:p7>>=4,blockData[blockBufferOffset+col]=p0,blockData[blockBufferOffset+col+8]=p1,blockData[blockBufferOffset+col+16]=p2,blockData[blockBufferOffset+col+24]=p3,blockData[blockBufferOffset+col+32]=p4,blockData[blockBufferOffset+col+40]=p5,blockData[blockBufferOffset+col+48]=p6,blockData[blockBufferOffset+col+56]=p7):(t=5793*p0+8192>>14,t=t<-2040?0:t>=2024?255:t+2056>>4,blockData[blockBufferOffset+col]=t,blockData[blockBufferOffset+col+8]=t,blockData[blockBufferOffset+col+16]=t,blockData[blockBufferOffset+col+24]=t,blockData[blockBufferOffset+col+32]=t,blockData[blockBufferOffset+col+40]=t,blockData[blockBufferOffset+col+48]=t,blockData[blockBufferOffset+col+56]=t)}function buildComponentData(frame,component){const blocksPerLine=component.blocksPerLine,blocksPerColumn=component.blocksPerColumn,computationBuffer=new Int16Array(64);for(let blockRow=0;blockRow<blocksPerColumn;blockRow++)for(let blockCol=0;blockCol<blocksPerLine;blockCol++){quantizeAndInverse(component,getBlockBufferOffset(component,blockRow,blockCol),computationBuffer)}return component.blockData}function findNextFileMarker(data,currentPos,startPos=currentPos){const maxPos=data.length-1;let newPos=startPos<currentPos?startPos:currentPos;if(currentPos>=maxPos)return null;const currentMarker=(0,_core_utils.readUint16)(data,currentPos);if(currentMarker>=65472&&currentMarker<=65534)return{invalid:null,marker:currentMarker,offset:currentPos};let newMarker=(0,_core_utils.readUint16)(data,newPos);for(;!(newMarker>=65472&&newMarker<=65534);){if(++newPos>=maxPos)return null;newMarker=(0,_core_utils.readUint16)(data,newPos)}return{invalid:currentMarker.toString(16),marker:newMarker,offset:newPos}}exports.JpegImage=class JpegImage{constructor({decodeTransform=null,colorTransform=-1}={}){this._decodeTransform=decodeTransform,this._colorTransform=colorTransform}parse(data,{dnlScanLines=null}={}){function readDataBlock(){const length=(0,_core_utils.readUint16)(data,offset);offset+=2;let endOffset=offset+length-2;const fileMarker=findNextFileMarker(data,endOffset,offset);fileMarker&&fileMarker.invalid&&((0,_util.warn)("readDataBlock - incorrect length, current marker is: "+fileMarker.invalid),endOffset=fileMarker.offset);const array=data.subarray(offset,endOffset);return offset+=array.length,array}function prepareComponents(frame){const mcusPerLine=Math.ceil(frame.samplesPerLine/8/frame.maxH),mcusPerColumn=Math.ceil(frame.scanLines/8/frame.maxV);for(let i=0,ii=frame.components.length;i<ii;i++){const component=frame.components[i],blocksPerLine=Math.ceil(Math.ceil(frame.samplesPerLine/8)*component.h/frame.maxH),blocksPerColumn=Math.ceil(Math.ceil(frame.scanLines/8)*component.v/frame.maxV),blocksPerLineForMcu=mcusPerLine*component.h,blocksBufferSize=64*(mcusPerColumn*component.v)*(blocksPerLineForMcu+1);component.blockData=new Int16Array(blocksBufferSize),component.blocksPerLine=blocksPerLine,component.blocksPerColumn=blocksPerColumn}frame.mcusPerLine=mcusPerLine,frame.mcusPerColumn=mcusPerColumn}let frame,resetInterval,offset=0,jfif=null,adobe=null,numSOSMarkers=0;const quantizationTables=[],huffmanTablesAC=[],huffmanTablesDC=[];let fileMarker=(0,_core_utils.readUint16)(data,offset);if(offset+=2,65496!==fileMarker)throw new JpegError("SOI not found");fileMarker=(0,_core_utils.readUint16)(data,offset),offset+=2;markerLoop:for(;65497!==fileMarker;){let i,j,l;switch(fileMarker){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:const appData=readDataBlock();65504===fileMarker&&74===appData[0]&&70===appData[1]&&73===appData[2]&&70===appData[3]&&0===appData[4]&&(jfif={version:{major:appData[5],minor:appData[6]},densityUnits:appData[7],xDensity:appData[8]<<8|appData[9],yDensity:appData[10]<<8|appData[11],thumbWidth:appData[12],thumbHeight:appData[13],thumbData:appData.subarray(14,14+3*appData[12]*appData[13])}),65518===fileMarker&&65===appData[0]&&100===appData[1]&&111===appData[2]&&98===appData[3]&&101===appData[4]&&(adobe={version:appData[5]<<8|appData[6],flags0:appData[7]<<8|appData[8],flags1:appData[9]<<8|appData[10],transformCode:appData[11]});break;case 65499:const quantizationTablesLength=(0,_core_utils.readUint16)(data,offset);offset+=2;const quantizationTablesEnd=quantizationTablesLength+offset-2;let z;for(;offset<quantizationTablesEnd;){const quantizationTableSpec=data[offset++],tableData=new Uint16Array(64);if(quantizationTableSpec>>4==0)for(j=0;j<64;j++)z=dctZigZag[j],tableData[z]=data[offset++];else{if(quantizationTableSpec>>4!=1)throw new JpegError("DQT - invalid table spec");for(j=0;j<64;j++)z=dctZigZag[j],tableData[z]=(0,_core_utils.readUint16)(data,offset),offset+=2}quantizationTables[15&quantizationTableSpec]=tableData}break;case 65472:case 65473:case 65474:if(frame)throw new JpegError("Only single frame JPEGs supported");offset+=2,frame={},frame.extended=65473===fileMarker,frame.progressive=65474===fileMarker,frame.precision=data[offset++];const sofScanLines=(0,_core_utils.readUint16)(data,offset);offset+=2,frame.scanLines=dnlScanLines||sofScanLines,frame.samplesPerLine=(0,_core_utils.readUint16)(data,offset),offset+=2,frame.components=[],frame.componentIds={};const componentsCount=data[offset++];let maxH=0,maxV=0;for(i=0;i<componentsCount;i++){const componentId=data[offset],h=data[offset+1]>>4,v=15&data[offset+1];maxH<h&&(maxH=h),maxV<v&&(maxV=v);const qId=data[offset+2];l=frame.components.push({h,v,quantizationId:qId,quantizationTable:null}),frame.componentIds[componentId]=l-1,offset+=3}frame.maxH=maxH,frame.maxV=maxV,prepareComponents(frame);break;case 65476:const huffmanLength=(0,_core_utils.readUint16)(data,offset);for(offset+=2,i=2;i<huffmanLength;){const huffmanTableSpec=data[offset++],codeLengths=new Uint8Array(16);let codeLengthSum=0;for(j=0;j<16;j++,offset++)codeLengthSum+=codeLengths[j]=data[offset];const huffmanValues=new Uint8Array(codeLengthSum);for(j=0;j<codeLengthSum;j++,offset++)huffmanValues[j]=data[offset];i+=17+codeLengthSum,(huffmanTableSpec>>4==0?huffmanTablesDC:huffmanTablesAC)[15&huffmanTableSpec]=buildHuffmanTable(codeLengths,huffmanValues)}break;case 65501:offset+=2,resetInterval=(0,_core_utils.readUint16)(data,offset),offset+=2;break;case 65498:const parseDNLMarker=1==++numSOSMarkers&&!dnlScanLines;offset+=2;const selectorsCount=data[offset++],components=[];for(i=0;i<selectorsCount;i++){const index=data[offset++],componentIndex=frame.componentIds[index],component=frame.components[componentIndex];component.index=index;const tableSpec=data[offset++];component.huffmanTableDC=huffmanTablesDC[tableSpec>>4],component.huffmanTableAC=huffmanTablesAC[15&tableSpec],components.push(component)}const spectralStart=data[offset++],spectralEnd=data[offset++],successiveApproximation=data[offset++];try{const processed=decodeScan(data,offset,frame,components,resetInterval,spectralStart,spectralEnd,successiveApproximation>>4,15&successiveApproximation,parseDNLMarker);offset+=processed}catch(ex){if(ex instanceof DNLMarkerError)return(0,_util.warn)(`${ex.message} -- attempting to re-parse the JPEG image.`),this.parse(data,{dnlScanLines:ex.scanLines});if(ex instanceof EOIMarkerError){(0,_util.warn)(`${ex.message} -- ignoring the rest of the image data.`);break markerLoop}throw ex}break;case 65500:offset+=4;break;case 65535:255!==data[offset]&&offset--;break;default:const nextFileMarker=findNextFileMarker(data,offset-2,offset-3);if(nextFileMarker&&nextFileMarker.invalid){(0,_util.warn)("JpegImage.parse - unexpected data, current marker is: "+nextFileMarker.invalid),offset=nextFileMarker.offset;break}if(!nextFileMarker||offset>=data.length-1){(0,_util.warn)("JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9).");break markerLoop}throw new JpegError("JpegImage.parse - unknown marker: "+fileMarker.toString(16))}fileMarker=(0,_core_utils.readUint16)(data,offset),offset+=2}this.width=frame.samplesPerLine,this.height=frame.scanLines,this.jfif=jfif,this.adobe=adobe,this.components=[];for(let i=0,ii=frame.components.length;i<ii;i++){const component=frame.components[i],quantizationTable=quantizationTables[component.quantizationId];quantizationTable&&(component.quantizationTable=quantizationTable),this.components.push({index:component.index,output:buildComponentData(0,component),scaleX:component.h/frame.maxH,scaleY:component.v/frame.maxV,blocksPerLine:component.blocksPerLine,blocksPerColumn:component.blocksPerColumn})}this.numComponents=this.components.length}_getLinearizedBlockData(width,height,isSourcePDF=!1){const scaleX=this.width/width,scaleY=this.height/height;let component,componentScaleX,componentScaleY,blocksPerScanline,x,y,i,j,k,index,output,offset=0;const numComponents=this.components.length,dataLength=width*height*numComponents,data=new Uint8ClampedArray(dataLength),xScaleBlockOffset=new Uint32Array(width);let lastComponentScaleX;for(i=0;i<numComponents;i++){if(component=this.components[i],componentScaleX=component.scaleX*scaleX,componentScaleY=component.scaleY*scaleY,offset=i,output=component.output,blocksPerScanline=component.blocksPerLine+1<<3,componentScaleX!==lastComponentScaleX){for(x=0;x<width;x++)j=0|x*componentScaleX,xScaleBlockOffset[x]=(4294967288&j)<<3|7&j;lastComponentScaleX=componentScaleX}for(y=0;y<height;y++)for(j=0|y*componentScaleY,index=blocksPerScanline*(4294967288&j)|(7&j)<<3,x=0;x<width;x++)data[offset]=output[index+xScaleBlockOffset[x]],offset+=numComponents}let transform=this._decodeTransform;if(isSourcePDF||4!==numComponents||transform||(transform=new Int32Array([-256,255,-256,255,-256,255,-256,255])),transform)for(i=0;i<dataLength;)for(j=0,k=0;j<numComponents;j++,i++,k+=2)data[i]=(data[i]*transform[k]>>8)+transform[k+1];return data}get _isColorConversionNeeded(){return this.adobe?!!this.adobe.transformCode:3===this.numComponents?0!==this._colorTransform&&(82!==this.components[0].index||71!==this.components[1].index||66!==this.components[2].index):1===this._colorTransform}_convertYccToRgb(data){let Y,Cb,Cr;for(let i=0,length=data.length;i<length;i+=3)Y=data[i],Cb=data[i+1],Cr=data[i+2],data[i]=Y-179.456+1.402*Cr,data[i+1]=Y+135.459-.344*Cb-.714*Cr,data[i+2]=Y-226.816+1.772*Cb;return data}_convertYcckToRgb(data){let Y,Cb,Cr,k,offset=0;for(let i=0,length=data.length;i<length;i+=4)Y=data[i],Cb=data[i+1],Cr=data[i+2],k=data[i+3],data[offset++]=Cb*(-660635669420364e-19*Cb+.000437130475926232*Cr-54080610064599e-18*Y+.00048449797120281*k-.154362151871126)-122.67195406894+Cr*(-.000957964378445773*Cr+.000817076911346625*Y-.00477271405408747*k+1.53380253221734)+Y*(.000961250184130688*Y-.00266257332283933*k+.48357088451265)+k*(-.000336197177618394*k+.484791561490776),data[offset++]=107.268039397724+Cb*(219927104525741e-19*Cb-.000640992018297945*Cr+.000659397001245577*Y+.000426105652938837*k-.176491792462875)+Cr*(-.000778269941513683*Cr+.00130872261408275*Y+.000770482631801132*k-.151051492775562)+Y*(.00126935368114843*Y-.00265090189010898*k+.25802910206845)+k*(-.000318913117588328*k-.213742400323665),data[offset++]=Cb*(-.000570115196973677*Cb-263409051004589e-19*Cr+.0020741088115012*Y-.00288260236853442*k+.814272968359295)-20.810012546947+Cr*(-153496057440975e-19*Cr-.000132689043961446*Y+.000560833691242812*k-.195152027534049)+Y*(.00174418132927582*Y-.00255243321439347*k+.116935020465145)+k*(-.000343531996510555*k+.24165260232407);return data.subarray(0,offset)}_convertYcckToCmyk(data){let Y,Cb,Cr;for(let i=0,length=data.length;i<length;i+=4)Y=data[i],Cb=data[i+1],Cr=data[i+2],data[i]=434.456-Y-1.402*Cr,data[i+1]=119.541-Y+.344*Cb+.714*Cr,data[i+2]=481.816-Y-1.772*Cb;return data}_convertCmykToRgb(data){let c,m,y,k,offset=0;for(let i=0,length=data.length;i<length;i+=4)c=data[i],m=data[i+1],y=data[i+2],k=data[i+3],data[offset++]=255+c*(-6747147073602441e-20*c+.0008379262121013727*m+.0002894718188643294*y+.003264231057537806*k-1.1185611867203937)+m*(26374107616089405e-21*m-8626949158638572e-20*y-.0002748769067499491*k-.02155688794978967)+y*(-3878099212869363e-20*y-.0003267808279485286*k+.0686742238595345)-k*(.0003361971776183937*k+.7430659151342254),data[offset++]=255+c*(.00013596372813588848*c+.000924537132573585*m+.00010567359618683593*y+.0004791864687436512*k-.3109689587515875)+m*(-.00023545346108370344*m+.0002702845253534714*y+.0020200308977307156*k-.7488052167015494)+y*(6834815998235662e-20*y+.00015168452363460973*k-.09751927774728933)-k*(.0003189131175883281*k+.7364883807733168),data[offset++]=255+c*(13598650411385307e-21*c+.00012423956175490851*m+.0004751985097583589*y-36729317476630422e-22*k-.05562186980264034)+m*(.00016141380598724676*m+.0009692239130725186*y+.0007782692450036253*k-.44015232367526463)+y*(5.068882914068769e-7*y+.0017778369011375071*k-.7591454649749609)-k*(.0003435319965105553*k+.7063770186160144);return data.subarray(0,offset)}getData({width,height,forceRGB=!1,isSourcePDF=!1}){if(this.numComponents>4)throw new JpegError("Unsupported color mode");const data=this._getLinearizedBlockData(width,height,isSourcePDF);if(1===this.numComponents&&forceRGB){const dataLength=data.length,rgbData=new Uint8ClampedArray(3*dataLength);let offset=0;for(let i=0;i<dataLength;i++){const grayColor=data[i];rgbData[offset++]=grayColor,rgbData[offset++]=grayColor,rgbData[offset++]=grayColor}return rgbData}if(3===this.numComponents&&this._isColorConversionNeeded)return this._convertYccToRgb(data);if(4===this.numComponents){if(this._isColorConversionNeeded)return forceRGB?this._convertYcckToRgb(data):this._convertYcckToCmyk(data);if(forceRGB)return this._convertCmykToRgb(data)}return data}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.JpxStream=void 0;var _decode_stream=__w_pdfjs_require__(19),_jpx=__w_pdfjs_require__(30),_util=__w_pdfjs_require__(2);class JpxStream extends _decode_stream.DecodeStream{constructor(stream,maybeLength,params){super(maybeLength),this.stream=stream,this.dict=stream.dict,this.maybeLength=maybeLength,this.params=params}get bytes(){return(0,_util.shadow)(this,"bytes",this.stream.getBytes(this.maybeLength))}ensureBuffer(requested){}readBlock(){if(this.eof)return;const jpxImage=new _jpx.JpxImage;jpxImage.parse(this.bytes);const width=jpxImage.width,height=jpxImage.height,componentsCount=jpxImage.componentsCount,tileCount=jpxImage.tiles.length;if(1===tileCount)this.buffer=jpxImage.tiles[0].items;else{const data=new Uint8ClampedArray(width*height*componentsCount);for(let k=0;k<tileCount;k++){const tileComponents=jpxImage.tiles[k],tileWidth=tileComponents.width,tileHeight=tileComponents.height,tileLeft=tileComponents.left,tileTop=tileComponents.top,src=tileComponents.items;let srcPosition=0,dataPosition=(width*tileTop+tileLeft)*componentsCount;const imgRowSize=width*componentsCount,tileRowSize=tileWidth*componentsCount;for(let j=0;j<tileHeight;j++){const rowBytes=src.subarray(srcPosition,srcPosition+tileRowSize);data.set(rowBytes,dataPosition),srcPosition+=tileRowSize,dataPosition+=imgRowSize}}this.buffer=data}this.bufferLength=this.buffer.length,this.eof=!0}}exports.JpxStream=JpxStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.JpxImage=void 0;var _util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_arithmetic_decoder=__w_pdfjs_require__(26);class JpxError extends _util.BaseException{constructor(msg){super(`JPX error: ${msg}`,"JpxError")}}const SubbandsGainLog2={LL:0,LH:1,HL:1,HH:2};function calculateComponentDimensions(component,siz){component.x0=Math.ceil(siz.XOsiz/component.XRsiz),component.x1=Math.ceil(siz.Xsiz/component.XRsiz),component.y0=Math.ceil(siz.YOsiz/component.YRsiz),component.y1=Math.ceil(siz.Ysiz/component.YRsiz),component.width=component.x1-component.x0,component.height=component.y1-component.y0}function calculateTileGrids(context,components){const siz=context.SIZ,tiles=[];let tile;const numXtiles=Math.ceil((siz.Xsiz-siz.XTOsiz)/siz.XTsiz),numYtiles=Math.ceil((siz.Ysiz-siz.YTOsiz)/siz.YTsiz);for(let q=0;q<numYtiles;q++)for(let p=0;p<numXtiles;p++)tile={},tile.tx0=Math.max(siz.XTOsiz+p*siz.XTsiz,siz.XOsiz),tile.ty0=Math.max(siz.YTOsiz+q*siz.YTsiz,siz.YOsiz),tile.tx1=Math.min(siz.XTOsiz+(p+1)*siz.XTsiz,siz.Xsiz),tile.ty1=Math.min(siz.YTOsiz+(q+1)*siz.YTsiz,siz.Ysiz),tile.width=tile.tx1-tile.tx0,tile.height=tile.ty1-tile.ty0,tile.components=[],tiles.push(tile);context.tiles=tiles;for(let i=0,ii=siz.Csiz;i<ii;i++){const component=components[i];for(let j=0,jj=tiles.length;j<jj;j++){const tileComponent={};tile=tiles[j],tileComponent.tcx0=Math.ceil(tile.tx0/component.XRsiz),tileComponent.tcy0=Math.ceil(tile.ty0/component.YRsiz),tileComponent.tcx1=Math.ceil(tile.tx1/component.XRsiz),tileComponent.tcy1=Math.ceil(tile.ty1/component.YRsiz),tileComponent.width=tileComponent.tcx1-tileComponent.tcx0,tileComponent.height=tileComponent.tcy1-tileComponent.tcy0,tile.components[i]=tileComponent}}}function getBlocksDimensions(context,component,r){const codOrCoc=component.codingStyleParameters,result={};return codOrCoc.entropyCoderWithCustomPrecincts?(result.PPx=codOrCoc.precinctsSizes[r].PPx,result.PPy=codOrCoc.precinctsSizes[r].PPy):(result.PPx=15,result.PPy=15),result.xcb_=r>0?Math.min(codOrCoc.xcb,result.PPx-1):Math.min(codOrCoc.xcb,result.PPx),result.ycb_=r>0?Math.min(codOrCoc.ycb,result.PPy-1):Math.min(codOrCoc.ycb,result.PPy),result}function buildPrecincts(context,resolution,dimensions){const precinctWidth=1<<dimensions.PPx,precinctHeight=1<<dimensions.PPy,isZeroRes=0===resolution.resLevel,precinctWidthInSubband=1<<dimensions.PPx+(isZeroRes?0:-1),precinctHeightInSubband=1<<dimensions.PPy+(isZeroRes?0:-1),numprecinctswide=resolution.trx1>resolution.trx0?Math.ceil(resolution.trx1/precinctWidth)-Math.floor(resolution.trx0/precinctWidth):0,numprecinctshigh=resolution.try1>resolution.try0?Math.ceil(resolution.try1/precinctHeight)-Math.floor(resolution.try0/precinctHeight):0,numprecincts=numprecinctswide*numprecinctshigh;resolution.precinctParameters={precinctWidth,precinctHeight,numprecinctswide,numprecinctshigh,numprecincts,precinctWidthInSubband,precinctHeightInSubband}}function buildCodeblocks(context,subband,dimensions){const xcb_=dimensions.xcb_,ycb_=dimensions.ycb_,codeblockWidth=1<<xcb_,codeblockHeight=1<<ycb_,cbx0=subband.tbx0>>xcb_,cby0=subband.tby0>>ycb_,cbx1=subband.tbx1+codeblockWidth-1>>xcb_,cby1=subband.tby1+codeblockHeight-1>>ycb_,precinctParameters=subband.resolution.precinctParameters,codeblocks=[],precincts=[];let i,j,codeblock,precinctNumber;for(j=cby0;j<cby1;j++)for(i=cbx0;i<cbx1;i++){codeblock={cbx:i,cby:j,tbx0:codeblockWidth*i,tby0:codeblockHeight*j,tbx1:codeblockWidth*(i+1),tby1:codeblockHeight*(j+1)},codeblock.tbx0_=Math.max(subband.tbx0,codeblock.tbx0),codeblock.tby0_=Math.max(subband.tby0,codeblock.tby0),codeblock.tbx1_=Math.min(subband.tbx1,codeblock.tbx1),codeblock.tby1_=Math.min(subband.tby1,codeblock.tby1);if(precinctNumber=Math.floor((codeblock.tbx0_-subband.tbx0)/precinctParameters.precinctWidthInSubband)+Math.floor((codeblock.tby0_-subband.tby0)/precinctParameters.precinctHeightInSubband)*precinctParameters.numprecinctswide,codeblock.precinctNumber=precinctNumber,codeblock.subbandType=subband.type,codeblock.Lblock=3,codeblock.tbx1_<=codeblock.tbx0_||codeblock.tby1_<=codeblock.tby0_)continue;codeblocks.push(codeblock);let precinct=precincts[precinctNumber];void 0!==precinct?(i<precinct.cbxMin?precinct.cbxMin=i:i>precinct.cbxMax&&(precinct.cbxMax=i),j<precinct.cbyMin?precinct.cbxMin=j:j>precinct.cbyMax&&(precinct.cbyMax=j)):precincts[precinctNumber]=precinct={cbxMin:i,cbyMin:j,cbxMax:i,cbyMax:j},codeblock.precinct=precinct}subband.codeblockParameters={codeblockWidth:xcb_,codeblockHeight:ycb_,numcodeblockwide:cbx1-cbx0+1,numcodeblockhigh:cby1-cby0+1},subband.codeblocks=codeblocks,subband.precincts=precincts}function createPacket(resolution,precinctNumber,layerNumber){const precinctCodeblocks=[],subbands=resolution.subbands;for(let i=0,ii=subbands.length;i<ii;i++){const codeblocks=subbands[i].codeblocks;for(let j=0,jj=codeblocks.length;j<jj;j++){const codeblock=codeblocks[j];codeblock.precinctNumber===precinctNumber&&precinctCodeblocks.push(codeblock)}}return{layerNumber,codeblocks:precinctCodeblocks}}function LayerResolutionComponentPositionIterator(context){const siz=context.SIZ,tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz;let maxDecompositionLevelsCount=0;for(let q=0;q<componentsCount;q++)maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,tile.components[q].codingStyleParameters.decompositionLevelsCount);let l=0,r=0,i=0,k=0;this.nextPacket=function JpxImage_nextPacket(){for(;l<layersCount;l++){for(;r<=maxDecompositionLevelsCount;r++){for(;i<componentsCount;i++){const component=tile.components[i];if(r>component.codingStyleParameters.decompositionLevelsCount)continue;const resolution=component.resolutions[r],numprecincts=resolution.precinctParameters.numprecincts;for(;k<numprecincts;){const packet=createPacket(resolution,k,l);return k++,packet}k=0}i=0}r=0}throw new JpxError("Out of packets")}}function ResolutionLayerComponentPositionIterator(context){const siz=context.SIZ,tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz;let maxDecompositionLevelsCount=0;for(let q=0;q<componentsCount;q++)maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,tile.components[q].codingStyleParameters.decompositionLevelsCount);let r=0,l=0,i=0,k=0;this.nextPacket=function JpxImage_nextPacket(){for(;r<=maxDecompositionLevelsCount;r++){for(;l<layersCount;l++){for(;i<componentsCount;i++){const component=tile.components[i];if(r>component.codingStyleParameters.decompositionLevelsCount)continue;const resolution=component.resolutions[r],numprecincts=resolution.precinctParameters.numprecincts;for(;k<numprecincts;){const packet=createPacket(resolution,k,l);return k++,packet}k=0}i=0}l=0}throw new JpxError("Out of packets")}}function ResolutionPositionComponentLayerIterator(context){const siz=context.SIZ,tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz;let l,r,c,p,maxDecompositionLevelsCount=0;for(c=0;c<componentsCount;c++){const component=tile.components[c];maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,component.codingStyleParameters.decompositionLevelsCount)}const maxNumPrecinctsInLevel=new Int32Array(maxDecompositionLevelsCount+1);for(r=0;r<=maxDecompositionLevelsCount;++r){let maxNumPrecincts=0;for(c=0;c<componentsCount;++c){const resolutions=tile.components[c].resolutions;r<resolutions.length&&(maxNumPrecincts=Math.max(maxNumPrecincts,resolutions[r].precinctParameters.numprecincts))}maxNumPrecinctsInLevel[r]=maxNumPrecincts}l=0,r=0,c=0,p=0,this.nextPacket=function JpxImage_nextPacket(){for(;r<=maxDecompositionLevelsCount;r++){for(;p<maxNumPrecinctsInLevel[r];p++){for(;c<componentsCount;c++){const component=tile.components[c];if(r>component.codingStyleParameters.decompositionLevelsCount)continue;const resolution=component.resolutions[r],numprecincts=resolution.precinctParameters.numprecincts;if(!(p>=numprecincts)){for(;l<layersCount;){const packet=createPacket(resolution,p,l);return l++,packet}l=0}}c=0}p=0}throw new JpxError("Out of packets")}}function PositionComponentResolutionLayerIterator(context){const siz=context.SIZ,tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz,precinctsSizes=getPrecinctSizesInImageScale(tile),precinctsIterationSizes=precinctsSizes;let l=0,r=0,c=0,px=0,py=0;this.nextPacket=function JpxImage_nextPacket(){for(;py<precinctsIterationSizes.maxNumHigh;py++){for(;px<precinctsIterationSizes.maxNumWide;px++){for(;c<componentsCount;c++){const component=tile.components[c],decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount;for(;r<=decompositionLevelsCount;r++){const resolution=component.resolutions[r],sizeInImageScale=precinctsSizes.components[c].resolutions[r],k=getPrecinctIndexIfExist(px,py,sizeInImageScale,precinctsIterationSizes,resolution);if(null!==k){for(;l<layersCount;){const packet=createPacket(resolution,k,l);return l++,packet}l=0}}r=0}c=0}px=0}throw new JpxError("Out of packets")}}function ComponentPositionResolutionLayerIterator(context){const siz=context.SIZ,tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz,precinctsSizes=getPrecinctSizesInImageScale(tile);let l=0,r=0,c=0,px=0,py=0;this.nextPacket=function JpxImage_nextPacket(){for(;c<componentsCount;++c){const component=tile.components[c],precinctsIterationSizes=precinctsSizes.components[c],decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount;for(;py<precinctsIterationSizes.maxNumHigh;py++){for(;px<precinctsIterationSizes.maxNumWide;px++){for(;r<=decompositionLevelsCount;r++){const resolution=component.resolutions[r],sizeInImageScale=precinctsIterationSizes.resolutions[r],k=getPrecinctIndexIfExist(px,py,sizeInImageScale,precinctsIterationSizes,resolution);if(null!==k){for(;l<layersCount;){const packet=createPacket(resolution,k,l);return l++,packet}l=0}}r=0}px=0}py=0}throw new JpxError("Out of packets")}}function getPrecinctIndexIfExist(pxIndex,pyIndex,sizeInImageScale,precinctIterationSizes,resolution){const posX=pxIndex*precinctIterationSizes.minWidth,posY=pyIndex*precinctIterationSizes.minHeight;if(posX%sizeInImageScale.width!=0||posY%sizeInImageScale.height!=0)return null;const startPrecinctRowIndex=posY/sizeInImageScale.width*resolution.precinctParameters.numprecinctswide;return posX/sizeInImageScale.height+startPrecinctRowIndex}function getPrecinctSizesInImageScale(tile){const componentsCount=tile.components.length;let minWidth=Number.MAX_VALUE,minHeight=Number.MAX_VALUE,maxNumWide=0,maxNumHigh=0;const sizePerComponent=new Array(componentsCount);for(let c=0;c<componentsCount;c++){const component=tile.components[c],decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount,sizePerResolution=new Array(decompositionLevelsCount+1);let minWidthCurrentComponent=Number.MAX_VALUE,minHeightCurrentComponent=Number.MAX_VALUE,maxNumWideCurrentComponent=0,maxNumHighCurrentComponent=0,scale=1;for(let r=decompositionLevelsCount;r>=0;--r){const resolution=component.resolutions[r],widthCurrentResolution=scale*resolution.precinctParameters.precinctWidth,heightCurrentResolution=scale*resolution.precinctParameters.precinctHeight;minWidthCurrentComponent=Math.min(minWidthCurrentComponent,widthCurrentResolution),minHeightCurrentComponent=Math.min(minHeightCurrentComponent,heightCurrentResolution),maxNumWideCurrentComponent=Math.max(maxNumWideCurrentComponent,resolution.precinctParameters.numprecinctswide),maxNumHighCurrentComponent=Math.max(maxNumHighCurrentComponent,resolution.precinctParameters.numprecinctshigh),sizePerResolution[r]={width:widthCurrentResolution,height:heightCurrentResolution},scale<<=1}minWidth=Math.min(minWidth,minWidthCurrentComponent),minHeight=Math.min(minHeight,minHeightCurrentComponent),maxNumWide=Math.max(maxNumWide,maxNumWideCurrentComponent),maxNumHigh=Math.max(maxNumHigh,maxNumHighCurrentComponent),sizePerComponent[c]={resolutions:sizePerResolution,minWidth:minWidthCurrentComponent,minHeight:minHeightCurrentComponent,maxNumWide:maxNumWideCurrentComponent,maxNumHigh:maxNumHighCurrentComponent}}return{components:sizePerComponent,minWidth,minHeight,maxNumWide,maxNumHigh}}function buildPackets(context){const siz=context.SIZ,tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],componentsCount=siz.Csiz;for(let c=0;c<componentsCount;c++){const component=tile.components[c],decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount,resolutions=[],subbands=[];for(let r=0;r<=decompositionLevelsCount;r++){const blocksDimensions=getBlocksDimensions(0,component,r),resolution={},scale=1<<decompositionLevelsCount-r;let subband;if(resolution.trx0=Math.ceil(component.tcx0/scale),resolution.try0=Math.ceil(component.tcy0/scale),resolution.trx1=Math.ceil(component.tcx1/scale),resolution.try1=Math.ceil(component.tcy1/scale),resolution.resLevel=r,buildPrecincts(0,resolution,blocksDimensions),resolutions.push(resolution),0===r)subband={},subband.type="LL",subband.tbx0=Math.ceil(component.tcx0/scale),subband.tby0=Math.ceil(component.tcy0/scale),subband.tbx1=Math.ceil(component.tcx1/scale),subband.tby1=Math.ceil(component.tcy1/scale),subband.resolution=resolution,buildCodeblocks(0,subband,blocksDimensions),subbands.push(subband),resolution.subbands=[subband];else{const bscale=1<<decompositionLevelsCount-r+1,resolutionSubbands=[];subband={},subband.type="HL",subband.tbx0=Math.ceil(component.tcx0/bscale-.5),subband.tby0=Math.ceil(component.tcy0/bscale),subband.tbx1=Math.ceil(component.tcx1/bscale-.5),subband.tby1=Math.ceil(component.tcy1/bscale),subband.resolution=resolution,buildCodeblocks(0,subband,blocksDimensions),subbands.push(subband),resolutionSubbands.push(subband),subband={},subband.type="LH",subband.tbx0=Math.ceil(component.tcx0/bscale),subband.tby0=Math.ceil(component.tcy0/bscale-.5),subband.tbx1=Math.ceil(component.tcx1/bscale),subband.tby1=Math.ceil(component.tcy1/bscale-.5),subband.resolution=resolution,buildCodeblocks(0,subband,blocksDimensions),subbands.push(subband),resolutionSubbands.push(subband),subband={},subband.type="HH",subband.tbx0=Math.ceil(component.tcx0/bscale-.5),subband.tby0=Math.ceil(component.tcy0/bscale-.5),subband.tbx1=Math.ceil(component.tcx1/bscale-.5),subband.tby1=Math.ceil(component.tcy1/bscale-.5),subband.resolution=resolution,buildCodeblocks(0,subband,blocksDimensions),subbands.push(subband),resolutionSubbands.push(subband),resolution.subbands=resolutionSubbands}}component.resolutions=resolutions,component.subbands=subbands}const progressionOrder=tile.codingStyleDefaultParameters.progressionOrder;switch(progressionOrder){case 0:tile.packetsIterator=new LayerResolutionComponentPositionIterator(context);break;case 1:tile.packetsIterator=new ResolutionLayerComponentPositionIterator(context);break;case 2:tile.packetsIterator=new ResolutionPositionComponentLayerIterator(context);break;case 3:tile.packetsIterator=new PositionComponentResolutionLayerIterator(context);break;case 4:tile.packetsIterator=new ComponentPositionResolutionLayerIterator(context);break;default:throw new JpxError(`Unsupported progression order ${progressionOrder}`)}}function parseTilePackets(context,data,offset,dataLength){let buffer,position=0,bufferSize=0,skipNextBit=!1;function readBits(count){for(;bufferSize<count;){const b=data[offset+position];position++,skipNextBit?(buffer=buffer<<7|b,bufferSize+=7,skipNextBit=!1):(buffer=buffer<<8|b,bufferSize+=8),255===b&&(skipNextBit=!0)}return bufferSize-=count,buffer>>>bufferSize&(1<<count)-1}function skipMarkerIfEqual(value){return 255===data[offset+position-1]&&data[offset+position]===value?(skipBytes(1),!0):255===data[offset+position]&&data[offset+position+1]===value&&(skipBytes(2),!0)}function skipBytes(count){position+=count}function alignToByte(){bufferSize=0,skipNextBit&&(position++,skipNextBit=!1)}function readCodingpasses(){if(0===readBits(1))return 1;if(0===readBits(1))return 2;let value=readBits(2);return value<3?value+3:(value=readBits(5),value<31?value+6:(value=readBits(7),value+37))}const tileIndex=context.currentTile.index,tile=context.tiles[tileIndex],sopMarkerUsed=context.COD.sopMarkerUsed,ephMarkerUsed=context.COD.ephMarkerUsed,packetsIterator=tile.packetsIterator;for(;position<dataLength;){alignToByte(),sopMarkerUsed&&skipMarkerIfEqual(145)&&skipBytes(4);const packet=packetsIterator.nextPacket();if(!readBits(1))continue;const layerNumber=packet.layerNumber,queue=[];let codeblock;for(let i=0,ii=packet.codeblocks.length;i<ii;i++){codeblock=packet.codeblocks[i];let precinct=codeblock.precinct;const codeblockColumn=codeblock.cbx-precinct.cbxMin,codeblockRow=codeblock.cby-precinct.cbyMin;let valueReady,zeroBitPlanesTree,codeblockIncluded=!1,firstTimeInclusion=!1;if(void 0!==codeblock.included)codeblockIncluded=!!readBits(1);else{let inclusionTree;if(precinct=codeblock.precinct,void 0!==precinct.inclusionTree)inclusionTree=precinct.inclusionTree;else{const width=precinct.cbxMax-precinct.cbxMin+1,height=precinct.cbyMax-precinct.cbyMin+1;inclusionTree=new InclusionTree(width,height,layerNumber),zeroBitPlanesTree=new TagTree(width,height),precinct.inclusionTree=inclusionTree,precinct.zeroBitPlanesTree=zeroBitPlanesTree;for(let l=0;l<layerNumber;l++)if(0!==readBits(1))throw new JpxError("Invalid tag tree")}if(inclusionTree.reset(codeblockColumn,codeblockRow,layerNumber))for(;;){if(!readBits(1)){inclusionTree.incrementValue(layerNumber);break}if(valueReady=!inclusionTree.nextLevel(),valueReady){codeblock.included=!0,codeblockIncluded=firstTimeInclusion=!0;break}}}if(!codeblockIncluded)continue;if(firstTimeInclusion){for(zeroBitPlanesTree=precinct.zeroBitPlanesTree,zeroBitPlanesTree.reset(codeblockColumn,codeblockRow);;)if(readBits(1)){if(valueReady=!zeroBitPlanesTree.nextLevel(),valueReady)break}else zeroBitPlanesTree.incrementValue();codeblock.zeroBitPlanes=zeroBitPlanesTree.value}const codingpasses=readCodingpasses();for(;readBits(1);)codeblock.Lblock++;const codingpassesLog2=(0,_core_utils.log2)(codingpasses),codedDataLength=readBits((codingpasses<1<<codingpassesLog2?codingpassesLog2-1:codingpassesLog2)+codeblock.Lblock);queue.push({codeblock,codingpasses,dataLength:codedDataLength})}for(alignToByte(),ephMarkerUsed&&skipMarkerIfEqual(146);queue.length>0;){const packetItem=queue.shift();codeblock=packetItem.codeblock,void 0===codeblock.data&&(codeblock.data=[]),codeblock.data.push({data,start:offset+position,end:offset+position+packetItem.dataLength,codingpasses:packetItem.codingpasses}),position+=packetItem.dataLength}}return position}function copyCoefficients(coefficients,levelWidth,levelHeight,subband,delta,mb,reversible,segmentationSymbolUsed,resetContextProbabilities){const x0=subband.tbx0,y0=subband.tby0,width=subband.tbx1-subband.tbx0,codeblocks=subband.codeblocks,right="H"===subband.type.charAt(0)?1:0,bottom="H"===subband.type.charAt(1)?levelWidth:0;for(let i=0,ii=codeblocks.length;i<ii;++i){const codeblock=codeblocks[i],blockWidth=codeblock.tbx1_-codeblock.tbx0_,blockHeight=codeblock.tby1_-codeblock.tby0_;if(0===blockWidth||0===blockHeight)continue;if(void 0===codeblock.data)continue;const bitModel=new BitModel(blockWidth,blockHeight,codeblock.subbandType,codeblock.zeroBitPlanes,mb);let currentCodingpassType=2;const data=codeblock.data;let j,jj,dataItem,totalLength=0,codingpasses=0;for(j=0,jj=data.length;j<jj;j++)dataItem=data[j],totalLength+=dataItem.end-dataItem.start,codingpasses+=dataItem.codingpasses;const encodedData=new Uint8Array(totalLength);let position=0;for(j=0,jj=data.length;j<jj;j++){dataItem=data[j];const chunk=dataItem.data.subarray(dataItem.start,dataItem.end);encodedData.set(chunk,position),position+=chunk.length}const decoder=new _arithmetic_decoder.ArithmeticDecoder(encodedData,0,totalLength);for(bitModel.setDecoder(decoder),j=0;j<codingpasses;j++){switch(currentCodingpassType){case 0:bitModel.runSignificancePropagationPass();break;case 1:bitModel.runMagnitudeRefinementPass();break;case 2:bitModel.runCleanupPass(),segmentationSymbolUsed&&bitModel.checkSegmentationSymbol()}resetContextProbabilities&&bitModel.reset(),currentCodingpassType=(currentCodingpassType+1)%3}let offset=codeblock.tbx0_-x0+(codeblock.tby0_-y0)*width;const sign=bitModel.coefficentsSign,magnitude=bitModel.coefficentsMagnitude,bitsDecoded=bitModel.bitsDecoded,magnitudeCorrection=reversible?0:.5;let k,n,nb;position=0;const interleave="LL"!==subband.type;for(j=0;j<blockHeight;j++){const levelOffset=2*(offset/width|0)*(levelWidth-width)+right+bottom;for(k=0;k<blockWidth;k++){if(n=magnitude[position],0!==n){n=(n+magnitudeCorrection)*delta,0!==sign[position]&&(n=-n),nb=bitsDecoded[position];const pos=interleave?levelOffset+(offset<<1):offset;coefficients[pos]=reversible&&nb>=mb?n:n*(1<<mb-nb)}offset++,position++}offset+=width-blockWidth}}}function transformTile(context,tile,c){const component=tile.components[c],codingStyleParameters=component.codingStyleParameters,quantizationParameters=component.quantizationParameters,decompositionLevelsCount=codingStyleParameters.decompositionLevelsCount,spqcds=quantizationParameters.SPqcds,scalarExpounded=quantizationParameters.scalarExpounded,guardBits=quantizationParameters.guardBits,segmentationSymbolUsed=codingStyleParameters.segmentationSymbolUsed,resetContextProbabilities=codingStyleParameters.resetContextProbabilities,precision=context.components[c].precision,reversible=codingStyleParameters.reversibleTransformation,transform=reversible?new ReversibleTransform:new IrreversibleTransform,subbandCoefficients=[];let b=0;for(let i=0;i<=decompositionLevelsCount;i++){const resolution=component.resolutions[i],width=resolution.trx1-resolution.trx0,height=resolution.try1-resolution.try0,coefficients=new Float32Array(width*height);for(let j=0,jj=resolution.subbands.length;j<jj;j++){let mu,epsilon;scalarExpounded?(mu=spqcds[b].mu,epsilon=spqcds[b].epsilon,b++):(mu=spqcds[0].mu,epsilon=spqcds[0].epsilon+(i>0?1-i:0));const subband=resolution.subbands[j],gainLog2=SubbandsGainLog2[subband.type];copyCoefficients(coefficients,width,0,subband,reversible?1:2**(precision+gainLog2-epsilon)*(1+mu/2048),guardBits+epsilon-1,reversible,segmentationSymbolUsed,resetContextProbabilities)}subbandCoefficients.push({width,height,items:coefficients})}const result=transform.calculate(subbandCoefficients,component.tcx0,component.tcy0);return{left:component.tcx0,top:component.tcy0,width:result.width,height:result.height,items:result.items}}function initializeTile(context,tileIndex){const componentsCount=context.SIZ.Csiz,tile=context.tiles[tileIndex];for(let c=0;c<componentsCount;c++){const component=tile.components[c],qcdOrQcc=void 0!==context.currentTile.QCC[c]?context.currentTile.QCC[c]:context.currentTile.QCD;component.quantizationParameters=qcdOrQcc;const codOrCoc=void 0!==context.currentTile.COC[c]?context.currentTile.COC[c]:context.currentTile.COD;component.codingStyleParameters=codOrCoc}tile.codingStyleDefaultParameters=context.currentTile.COD}exports.JpxImage=class JpxImage{constructor(){this.failOnCorruptedImage=!1}parse(data){if(65359===(0,_core_utils.readUint16)(data,0))return void this.parseCodestream(data,0,data.length);const length=data.length;let position=0;for(;position<length;){let headerSize=8,lbox=(0,_core_utils.readUint32)(data,position);const tbox=(0,_core_utils.readUint32)(data,position+4);if(position+=headerSize,1===lbox&&(lbox=4294967296*(0,_core_utils.readUint32)(data,position)+(0,_core_utils.readUint32)(data,position+4),position+=8,headerSize+=8),0===lbox&&(lbox=length-position+headerSize),lbox<headerSize)throw new JpxError("Invalid box field size");const dataLength=lbox-headerSize;let jumpDataLength=!0;switch(tbox){case 1785737832:jumpDataLength=!1;break;case 1668246642:const method=data[position];if(1===method){const colorspace=(0,_core_utils.readUint32)(data,position+3);switch(colorspace){case 16:case 17:case 18:break;default:(0,_util.warn)("Unknown colorspace "+colorspace)}}else 2===method&&(0,_util.info)("ICC profile not supported");break;case 1785737827:this.parseCodestream(data,position,position+dataLength);break;case 1783636e3:218793738!==(0,_core_utils.readUint32)(data,position)&&(0,_util.warn)("Invalid JP2 signature");break;case 1783634458:case 1718909296:case 1920099697:case 1919251232:case 1768449138:break;default:const headerType=String.fromCharCode(tbox>>24&255,tbox>>16&255,tbox>>8&255,255&tbox);(0,_util.warn)(`Unsupported header type ${tbox} (${headerType}).`)}jumpDataLength&&(position+=dataLength)}}parseImageProperties(stream){let newByte=stream.getByte();for(;newByte>=0;){const oldByte=newByte;newByte=stream.getByte();if(65361===(oldByte<<8|newByte)){stream.skip(4);const Xsiz=stream.getInt32()>>>0,Ysiz=stream.getInt32()>>>0,XOsiz=stream.getInt32()>>>0,YOsiz=stream.getInt32()>>>0;stream.skip(16);const Csiz=stream.getUint16();return this.width=Xsiz-XOsiz,this.height=Ysiz-YOsiz,this.componentsCount=Csiz,void(this.bitsPerComponent=8)}}throw new JpxError("No size marker found in JPX stream")}parseCodestream(data,start,end){const context={};let doNotRecover=!1;try{let position=start;for(;position+1<end;){const code=(0,_core_utils.readUint16)(data,position);position+=2;let j,sqcd,spqcds,spqcdSize,scalarExpounded,tile,length=0;switch(code){case 65359:context.mainHeader=!0;break;case 65497:break;case 65361:length=(0,_core_utils.readUint16)(data,position);const siz={};siz.Xsiz=(0,_core_utils.readUint32)(data,position+4),siz.Ysiz=(0,_core_utils.readUint32)(data,position+8),siz.XOsiz=(0,_core_utils.readUint32)(data,position+12),siz.YOsiz=(0,_core_utils.readUint32)(data,position+16),siz.XTsiz=(0,_core_utils.readUint32)(data,position+20),siz.YTsiz=(0,_core_utils.readUint32)(data,position+24),siz.XTOsiz=(0,_core_utils.readUint32)(data,position+28),siz.YTOsiz=(0,_core_utils.readUint32)(data,position+32);const componentsCount=(0,_core_utils.readUint16)(data,position+36);siz.Csiz=componentsCount;const components=[];j=position+38;for(let i=0;i<componentsCount;i++){const component={precision:1+(127&data[j]),isSigned:!!(128&data[j]),XRsiz:data[j+1],YRsiz:data[j+2]};j+=3,calculateComponentDimensions(component,siz),components.push(component)}context.SIZ=siz,context.components=components,calculateTileGrids(context,components),context.QCC=[],context.COC=[];break;case 65372:length=(0,_core_utils.readUint16)(data,position);const qcd={};switch(j=position+2,sqcd=data[j++],31&sqcd){case 0:spqcdSize=8,scalarExpounded=!0;break;case 1:spqcdSize=16,scalarExpounded=!1;break;case 2:spqcdSize=16,scalarExpounded=!0;break;default:throw new Error("Invalid SQcd value "+sqcd)}for(qcd.noQuantization=8===spqcdSize,qcd.scalarExpounded=scalarExpounded,qcd.guardBits=sqcd>>5,spqcds=[];j<length+position;){const spqcd={};8===spqcdSize?(spqcd.epsilon=data[j++]>>3,spqcd.mu=0):(spqcd.epsilon=data[j]>>3,spqcd.mu=(7&data[j])<<8|data[j+1],j+=2),spqcds.push(spqcd)}qcd.SPqcds=spqcds,context.mainHeader?context.QCD=qcd:(context.currentTile.QCD=qcd,context.currentTile.QCC=[]);break;case 65373:length=(0,_core_utils.readUint16)(data,position);const qcc={};let cqcc;switch(j=position+2,context.SIZ.Csiz<257?cqcc=data[j++]:(cqcc=(0,_core_utils.readUint16)(data,j),j+=2),sqcd=data[j++],31&sqcd){case 0:spqcdSize=8,scalarExpounded=!0;break;case 1:spqcdSize=16,scalarExpounded=!1;break;case 2:spqcdSize=16,scalarExpounded=!0;break;default:throw new Error("Invalid SQcd value "+sqcd)}for(qcc.noQuantization=8===spqcdSize,qcc.scalarExpounded=scalarExpounded,qcc.guardBits=sqcd>>5,spqcds=[];j<length+position;){const spqcd={};8===spqcdSize?(spqcd.epsilon=data[j++]>>3,spqcd.mu=0):(spqcd.epsilon=data[j]>>3,spqcd.mu=(7&data[j])<<8|data[j+1],j+=2),spqcds.push(spqcd)}qcc.SPqcds=spqcds,context.mainHeader?context.QCC[cqcc]=qcc:context.currentTile.QCC[cqcc]=qcc;break;case 65362:length=(0,_core_utils.readUint16)(data,position);const cod={};j=position+2;const scod=data[j++];cod.entropyCoderWithCustomPrecincts=!!(1&scod),cod.sopMarkerUsed=!!(2&scod),cod.ephMarkerUsed=!!(4&scod),cod.progressionOrder=data[j++],cod.layersCount=(0,_core_utils.readUint16)(data,j),j+=2,cod.multipleComponentTransform=data[j++],cod.decompositionLevelsCount=data[j++],cod.xcb=2+(15&data[j++]),cod.ycb=2+(15&data[j++]);const blockStyle=data[j++];if(cod.selectiveArithmeticCodingBypass=!!(1&blockStyle),cod.resetContextProbabilities=!!(2&blockStyle),cod.terminationOnEachCodingPass=!!(4&blockStyle),cod.verticallyStripe=!!(8&blockStyle),cod.predictableTermination=!!(16&blockStyle),cod.segmentationSymbolUsed=!!(32&blockStyle),cod.reversibleTransformation=data[j++],cod.entropyCoderWithCustomPrecincts){const precinctsSizes=[];for(;j<length+position;){const precinctsSize=data[j++];precinctsSizes.push({PPx:15&precinctsSize,PPy:precinctsSize>>4})}cod.precinctsSizes=precinctsSizes}const unsupported=[];cod.selectiveArithmeticCodingBypass&&unsupported.push("selectiveArithmeticCodingBypass"),cod.terminationOnEachCodingPass&&unsupported.push("terminationOnEachCodingPass"),cod.verticallyStripe&&unsupported.push("verticallyStripe"),cod.predictableTermination&&unsupported.push("predictableTermination"),unsupported.length>0&&(doNotRecover=!0,(0,_util.warn)(`JPX: Unsupported COD options (${unsupported.join(", ")}).`)),context.mainHeader?context.COD=cod:(context.currentTile.COD=cod,context.currentTile.COC=[]);break;case 65424:length=(0,_core_utils.readUint16)(data,position),tile={},tile.index=(0,_core_utils.readUint16)(data,position+2),tile.length=(0,_core_utils.readUint32)(data,position+4),tile.dataEnd=tile.length+position-2,tile.partIndex=data[position+8],tile.partsCount=data[position+9],context.mainHeader=!1,0===tile.partIndex&&(tile.COD=context.COD,tile.COC=context.COC.slice(0),tile.QCD=context.QCD,tile.QCC=context.QCC.slice(0)),context.currentTile=tile;break;case 65427:tile=context.currentTile,0===tile.partIndex&&(initializeTile(context,tile.index),buildPackets(context)),length=tile.dataEnd-position,parseTilePackets(context,data,position,length);break;case 65363:(0,_util.warn)("JPX: Codestream code 0xFF53 (COC) is not implemented.");case 65365:case 65367:case 65368:case 65380:length=(0,_core_utils.readUint16)(data,position);break;default:throw new Error("Unknown codestream code: "+code.toString(16))}position+=length}}catch(e){if(doNotRecover||this.failOnCorruptedImage)throw new JpxError(e.message);(0,_util.warn)(`JPX: Trying to recover from: "${e.message}".`)}this.tiles=function transformComponents(context){const siz=context.SIZ,components=context.components,componentsCount=siz.Csiz,resultImages=[];for(let i=0,ii=context.tiles.length;i<ii;i++){const tile=context.tiles[i],transformedTiles=[];for(let c=0;c<componentsCount;c++)transformedTiles[c]=transformTile(context,tile,c);const tile0=transformedTiles[0],out=new Uint8ClampedArray(tile0.items.length*componentsCount),result={left:tile0.left,top:tile0.top,width:tile0.width,height:tile0.height,items:out};let shift,offset,j,jj,y0,y1,y2,pos=0;if(tile.codingStyleDefaultParameters.multipleComponentTransform){const fourComponents=4===componentsCount,y0items=transformedTiles[0].items,y1items=transformedTiles[1].items,y2items=transformedTiles[2].items,y3items=fourComponents?transformedTiles[3].items:null;shift=components[0].precision-8,offset=.5+(128<<shift);const component0=tile.components[0],alpha01=componentsCount-3;if(jj=y0items.length,component0.codingStyleParameters.reversibleTransformation)for(j=0;j<jj;j++,pos+=alpha01){y0=y0items[j]+offset,y1=y1items[j],y2=y2items[j];const g=y0-(y2+y1>>2);out[pos++]=g+y2>>shift,out[pos++]=g>>shift,out[pos++]=g+y1>>shift}else for(j=0;j<jj;j++,pos+=alpha01)y0=y0items[j]+offset,y1=y1items[j],y2=y2items[j],out[pos++]=y0+1.402*y2>>shift,out[pos++]=y0-.34413*y1-.71414*y2>>shift,out[pos++]=y0+1.772*y1>>shift;if(fourComponents)for(j=0,pos=3;j<jj;j++,pos+=4)out[pos]=y3items[j]+offset>>shift}else for(let c=0;c<componentsCount;c++){const items=transformedTiles[c].items;for(shift=components[c].precision-8,offset=.5+(128<<shift),pos=c,j=0,jj=items.length;j<jj;j++)out[pos]=items[j]+offset>>shift,pos+=componentsCount}resultImages.push(result)}return resultImages}(context),this.width=context.SIZ.Xsiz-context.SIZ.XOsiz,this.height=context.SIZ.Ysiz-context.SIZ.YOsiz,this.componentsCount=context.SIZ.Csiz}};class TagTree{constructor(width,height){const levelsLength=(0,_core_utils.log2)(Math.max(width,height))+1;this.levels=[];for(let i=0;i<levelsLength;i++){const level={width,height,items:[]};this.levels.push(level),width=Math.ceil(width/2),height=Math.ceil(height/2)}}reset(i,j){let level,currentLevel=0,value=0;for(;currentLevel<this.levels.length;){level=this.levels[currentLevel];const index=i+j*level.width;if(void 0!==level.items[index]){value=level.items[index];break}level.index=index,i>>=1,j>>=1,currentLevel++}currentLevel--,level=this.levels[currentLevel],level.items[level.index]=value,this.currentLevel=currentLevel,delete this.value}incrementValue(){const level=this.levels[this.currentLevel];level.items[level.index]++}nextLevel(){let currentLevel=this.currentLevel,level=this.levels[currentLevel];const value=level.items[level.index];return currentLevel--,currentLevel<0?(this.value=value,!1):(this.currentLevel=currentLevel,level=this.levels[currentLevel],level.items[level.index]=value,!0)}}class InclusionTree{constructor(width,height,defaultValue){const levelsLength=(0,_core_utils.log2)(Math.max(width,height))+1;this.levels=[];for(let i=0;i<levelsLength;i++){const items=new Uint8Array(width*height);for(let j=0,jj=items.length;j<jj;j++)items[j]=defaultValue;const level={width,height,items};this.levels.push(level),width=Math.ceil(width/2),height=Math.ceil(height/2)}}reset(i,j,stopValue){let currentLevel=0;for(;currentLevel<this.levels.length;){const level=this.levels[currentLevel],index=i+j*level.width;level.index=index;const value=level.items[index];if(255===value)break;if(value>stopValue)return this.currentLevel=currentLevel,this.propagateValues(),!1;i>>=1,j>>=1,currentLevel++}return this.currentLevel=currentLevel-1,!0}incrementValue(stopValue){const level=this.levels[this.currentLevel];level.items[level.index]=stopValue+1,this.propagateValues()}propagateValues(){let levelIndex=this.currentLevel,level=this.levels[levelIndex];const currentValue=level.items[level.index];for(;--levelIndex>=0;)level=this.levels[levelIndex],level.items[level.index]=currentValue}nextLevel(){let currentLevel=this.currentLevel,level=this.levels[currentLevel];const value=level.items[level.index];return level.items[level.index]=255,currentLevel--,!(currentLevel<0)&&(this.currentLevel=currentLevel,level=this.levels[currentLevel],level.items[level.index]=value,!0)}}const BitModel=function BitModelClosure(){const LLAndLHContextsLabel=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8]),HLContextLabel=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]),HHContextLabel=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]);return class BitModel{constructor(width,height,subband,zeroBitPlanes,mb){let contextLabelTable;this.width=width,this.height=height,contextLabelTable="HH"===subband?HHContextLabel:"HL"===subband?HLContextLabel:LLAndLHContextsLabel,this.contextLabelTable=contextLabelTable;const coefficientCount=width*height;let coefficentsMagnitude;this.neighborsSignificance=new Uint8Array(coefficientCount),this.coefficentsSign=new Uint8Array(coefficientCount),coefficentsMagnitude=mb>14?new Uint32Array(coefficientCount):mb>6?new Uint16Array(coefficientCount):new Uint8Array(coefficientCount),this.coefficentsMagnitude=coefficentsMagnitude,this.processingFlags=new Uint8Array(coefficientCount);const bitsDecoded=new Uint8Array(coefficientCount);if(0!==zeroBitPlanes)for(let i=0;i<coefficientCount;i++)bitsDecoded[i]=zeroBitPlanes;this.bitsDecoded=bitsDecoded,this.reset()}setDecoder(decoder){this.decoder=decoder}reset(){this.contexts=new Int8Array(19),this.contexts[0]=8,this.contexts[17]=92,this.contexts[18]=6}setNeighborsSignificance(row,column,index){const neighborsSignificance=this.neighborsSignificance,width=this.width,height=this.height,left=column>0,right=column+1<width;let i;row>0&&(i=index-width,left&&(neighborsSignificance[i-1]+=16),right&&(neighborsSignificance[i+1]+=16),neighborsSignificance[i]+=4),row+1<height&&(i=index+width,left&&(neighborsSignificance[i-1]+=16),right&&(neighborsSignificance[i+1]+=16),neighborsSignificance[i]+=4),left&&(neighborsSignificance[index-1]+=1),right&&(neighborsSignificance[index+1]+=1),neighborsSignificance[index]|=128}runSignificancePropagationPass(){const decoder=this.decoder,width=this.width,height=this.height,coefficentsMagnitude=this.coefficentsMagnitude,coefficentsSign=this.coefficentsSign,neighborsSignificance=this.neighborsSignificance,processingFlags=this.processingFlags,contexts=this.contexts,labels=this.contextLabelTable,bitsDecoded=this.bitsDecoded;for(let i0=0;i0<height;i0+=4)for(let j=0;j<width;j++){let index=i0*width+j;for(let i1=0;i1<4;i1++,index+=width){const i=i0+i1;if(i>=height)break;if(processingFlags[index]&=-2,coefficentsMagnitude[index]||!neighborsSignificance[index])continue;const contextLabel=labels[neighborsSignificance[index]];if(decoder.readBit(contexts,contextLabel)){const sign=this.decodeSignBit(i,j,index);coefficentsSign[index]=sign,coefficentsMagnitude[index]=1,this.setNeighborsSignificance(i,j,index),processingFlags[index]|=2}bitsDecoded[index]++,processingFlags[index]|=1}}}decodeSignBit(row,column,index){const width=this.width,height=this.height,coefficentsMagnitude=this.coefficentsMagnitude,coefficentsSign=this.coefficentsSign;let contribution,sign0,sign1,significance1,contextLabel,decoded;significance1=column>0&&0!==coefficentsMagnitude[index-1],column+1<width&&0!==coefficentsMagnitude[index+1]?(sign1=coefficentsSign[index+1],significance1?(sign0=coefficentsSign[index-1],contribution=1-sign1-sign0):contribution=1-sign1-sign1):significance1?(sign0=coefficentsSign[index-1],contribution=1-sign0-sign0):contribution=0;const horizontalContribution=3*contribution;return significance1=row>0&&0!==coefficentsMagnitude[index-width],row+1<height&&0!==coefficentsMagnitude[index+width]?(sign1=coefficentsSign[index+width],significance1?(sign0=coefficentsSign[index-width],contribution=1-sign1-sign0+horizontalContribution):contribution=1-sign1-sign1+horizontalContribution):significance1?(sign0=coefficentsSign[index-width],contribution=1-sign0-sign0+horizontalContribution):contribution=horizontalContribution,contribution>=0?(contextLabel=9+contribution,decoded=this.decoder.readBit(this.contexts,contextLabel)):(contextLabel=9-contribution,decoded=1^this.decoder.readBit(this.contexts,contextLabel)),decoded}runMagnitudeRefinementPass(){const decoder=this.decoder,width=this.width,height=this.height,coefficentsMagnitude=this.coefficentsMagnitude,neighborsSignificance=this.neighborsSignificance,contexts=this.contexts,bitsDecoded=this.bitsDecoded,processingFlags=this.processingFlags,length=width*height,width4=4*width;for(let indexNext,index0=0;index0<length;index0=indexNext){indexNext=Math.min(length,index0+width4);for(let j=0;j<width;j++)for(let index=index0+j;index<indexNext;index+=width){if(!coefficentsMagnitude[index]||0!=(1&processingFlags[index]))continue;let contextLabel=16;if(0!=(2&processingFlags[index])){processingFlags[index]^=2;contextLabel=0===(127&neighborsSignificance[index])?15:14}const bit=decoder.readBit(contexts,contextLabel);coefficentsMagnitude[index]=coefficentsMagnitude[index]<<1|bit,bitsDecoded[index]++,processingFlags[index]|=1}}}runCleanupPass(){const decoder=this.decoder,width=this.width,height=this.height,neighborsSignificance=this.neighborsSignificance,coefficentsMagnitude=this.coefficentsMagnitude,coefficentsSign=this.coefficentsSign,contexts=this.contexts,labels=this.contextLabelTable,bitsDecoded=this.bitsDecoded,processingFlags=this.processingFlags,oneRowDown=width,twoRowsDown=2*width,threeRowsDown=3*width;let iNext;for(let i0=0;i0<height;i0=iNext){iNext=Math.min(i0+4,height);const indexBase=i0*width,checkAllEmpty=i0+3<height;for(let j=0;j<width;j++){const index0=indexBase+j;let sign,i1=0,index=index0,i=i0;if(checkAllEmpty&&0===processingFlags[index0]&&0===processingFlags[index0+oneRowDown]&&0===processingFlags[index0+twoRowsDown]&&0===processingFlags[index0+threeRowsDown]&&0===neighborsSignificance[index0]&&0===neighborsSignificance[index0+oneRowDown]&&0===neighborsSignificance[index0+twoRowsDown]&&0===neighborsSignificance[index0+threeRowsDown]){if(!decoder.readBit(contexts,18)){bitsDecoded[index0]++,bitsDecoded[index0+oneRowDown]++,bitsDecoded[index0+twoRowsDown]++,bitsDecoded[index0+threeRowsDown]++;continue}i1=decoder.readBit(contexts,17)<<1|decoder.readBit(contexts,17),0!==i1&&(i=i0+i1,index+=i1*width),sign=this.decodeSignBit(i,j,index),coefficentsSign[index]=sign,coefficentsMagnitude[index]=1,this.setNeighborsSignificance(i,j,index),processingFlags[index]|=2,index=index0;for(let i2=i0;i2<=i;i2++,index+=width)bitsDecoded[index]++;i1++}for(i=i0+i1;i<iNext;i++,index+=width){if(coefficentsMagnitude[index]||0!=(1&processingFlags[index]))continue;const contextLabel=labels[neighborsSignificance[index]];1===decoder.readBit(contexts,contextLabel)&&(sign=this.decodeSignBit(i,j,index),coefficentsSign[index]=sign,coefficentsMagnitude[index]=1,this.setNeighborsSignificance(i,j,index),processingFlags[index]|=2),bitsDecoded[index]++}}}}checkSegmentationSymbol(){const decoder=this.decoder,contexts=this.contexts;if(10!==(decoder.readBit(contexts,17)<<3|decoder.readBit(contexts,17)<<2|decoder.readBit(contexts,17)<<1|decoder.readBit(contexts,17)))throw new JpxError("Invalid segmentation symbol")}}}();class Transform{constructor(){this.constructor===Transform&&(0,_util.unreachable)("Cannot initialize Transform.")}calculate(subbands,u0,v0){let ll=subbands[0];for(let i=1,ii=subbands.length;i<ii;i++)ll=this.iterate(ll,subbands[i],u0,v0);return ll}extend(buffer,offset,size){let i1=offset-1,j1=offset+1,i2=offset+size-2,j2=offset+size;buffer[i1--]=buffer[j1++],buffer[j2++]=buffer[i2--],buffer[i1--]=buffer[j1++],buffer[j2++]=buffer[i2--],buffer[i1--]=buffer[j1++],buffer[j2++]=buffer[i2--],buffer[i1]=buffer[j1],buffer[j2]=buffer[i2]}filter(x,offset,length){(0,_util.unreachable)("Abstract method `filter` called")}iterate(ll,hl_lh_hh,u0,v0){const llWidth=ll.width,llHeight=ll.height;let llItems=ll.items;const width=hl_lh_hh.width,height=hl_lh_hh.height,items=hl_lh_hh.items;let i,j,k,l,u,v;for(k=0,i=0;i<llHeight;i++)for(l=2*i*width,j=0;j<llWidth;j++,k++,l+=2)items[l]=llItems[k];llItems=ll.items=null;const rowBuffer=new Float32Array(width+8);if(1===width){if(0!=(1&u0))for(v=0,k=0;v<height;v++,k+=width)items[k]*=.5}else for(v=0,k=0;v<height;v++,k+=width)rowBuffer.set(items.subarray(k,k+width),4),this.extend(rowBuffer,4,width),this.filter(rowBuffer,4,width),items.set(rowBuffer.subarray(4,4+width),k);let numBuffers=16;const colBuffers=[];for(i=0;i<numBuffers;i++)colBuffers.push(new Float32Array(height+8));let b,currentBuffer=0;if(ll=4+height,1===height){if(0!=(1&v0))for(u=0;u<width;u++)items[u]*=.5}else for(u=0;u<width;u++){if(0===currentBuffer){for(numBuffers=Math.min(width-u,numBuffers),k=u,l=4;l<ll;k+=width,l++)for(b=0;b<numBuffers;b++)colBuffers[b][l]=items[k+b];currentBuffer=numBuffers}currentBuffer--;const buffer=colBuffers[currentBuffer];if(this.extend(buffer,4,height),this.filter(buffer,4,height),0===currentBuffer)for(k=u-numBuffers+1,l=4;l<ll;k+=width,l++)for(b=0;b<numBuffers;b++)items[k+b]=colBuffers[b][l]}return{width,height,items}}}class IrreversibleTransform extends Transform{filter(x,offset,length){const len=length>>1;let j,n,current,next;const alpha=-1.586134342059924,beta=-.052980118572961,gamma=.882911075530934,delta=.443506852043971,K=1.230174104914001;for(j=(offset|=0)-3,n=len+4;n--;j+=2)x[j]*=.8128930661159609;for(j=offset-2,current=delta*x[j-1],n=len+3;n--&&(next=delta*x[j+1],x[j]=K*x[j]-current-next,n--);j+=2)j+=2,current=delta*x[j+1],x[j]=K*x[j]-current-next;for(j=offset-1,current=gamma*x[j-1],n=len+2;n--&&(next=gamma*x[j+1],x[j]-=current+next,n--);j+=2)j+=2,current=gamma*x[j+1],x[j]-=current+next;for(j=offset,current=beta*x[j-1],n=len+1;n--&&(next=beta*x[j+1],x[j]-=current+next,n--);j+=2)j+=2,current=beta*x[j+1],x[j]-=current+next;if(0!==len)for(j=offset+1,current=alpha*x[j-1],n=len;n--&&(next=alpha*x[j+1],x[j]-=current+next,n--);j+=2)j+=2,current=alpha*x[j+1],x[j]-=current+next}}class ReversibleTransform extends Transform{filter(x,offset,length){const len=length>>1;let j,n;for(j=offset|=0,n=len+1;n--;j+=2)x[j]-=x[j-1]+x[j+1]+2>>2;for(j=offset+1,n=len;n--;j+=2)x[j]+=x[j-1]+x[j+1]>>1}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LZWStream=void 0;var _decode_stream=__w_pdfjs_require__(19);class LZWStream extends _decode_stream.DecodeStream{constructor(str,maybeLength,earlyChange){super(maybeLength),this.str=str,this.dict=str.dict,this.cachedData=0,this.bitsCached=0;const lzwState={earlyChange,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(4096),dictionaryLengths:new Uint16Array(4096),dictionaryPrevCodes:new Uint16Array(4096),currentSequence:new Uint8Array(4096),currentSequenceLength:0};for(let i=0;i<256;++i)lzwState.dictionaryValues[i]=i,lzwState.dictionaryLengths[i]=1;this.lzwState=lzwState}readBits(n){let bitsCached=this.bitsCached,cachedData=this.cachedData;for(;bitsCached<n;){const c=this.str.getByte();if(-1===c)return this.eof=!0,null;cachedData=cachedData<<8|c,bitsCached+=8}return this.bitsCached=bitsCached-=n,this.cachedData=cachedData,this.lastCode=null,cachedData>>>bitsCached&(1<<n)-1}readBlock(){let i,j,q,estimatedDecodedSize=1024;const lzwState=this.lzwState;if(!lzwState)return;const earlyChange=lzwState.earlyChange;let nextCode=lzwState.nextCode;const dictionaryValues=lzwState.dictionaryValues,dictionaryLengths=lzwState.dictionaryLengths,dictionaryPrevCodes=lzwState.dictionaryPrevCodes;let codeLength=lzwState.codeLength,prevCode=lzwState.prevCode;const currentSequence=lzwState.currentSequence;let currentSequenceLength=lzwState.currentSequenceLength,decodedLength=0,currentBufferLength=this.bufferLength,buffer=this.ensureBuffer(this.bufferLength+estimatedDecodedSize);for(i=0;i<512;i++){const code=this.readBits(codeLength),hasPrev=currentSequenceLength>0;if(code<256)currentSequence[0]=code,currentSequenceLength=1;else{if(!(code>=258)){if(256===code){codeLength=9,nextCode=258,currentSequenceLength=0;continue}this.eof=!0,delete this.lzwState;break}if(code<nextCode)for(currentSequenceLength=dictionaryLengths[code],j=currentSequenceLength-1,q=code;j>=0;j--)currentSequence[j]=dictionaryValues[q],q=dictionaryPrevCodes[q];else currentSequence[currentSequenceLength++]=currentSequence[0]}if(hasPrev&&(dictionaryPrevCodes[nextCode]=prevCode,dictionaryLengths[nextCode]=dictionaryLengths[prevCode]+1,dictionaryValues[nextCode]=currentSequence[0],nextCode++,codeLength=nextCode+earlyChange&nextCode+earlyChange-1?codeLength:0|Math.min(Math.log(nextCode+earlyChange)/.6931471805599453+1,12)),prevCode=code,decodedLength+=currentSequenceLength,estimatedDecodedSize<decodedLength){do{estimatedDecodedSize+=512}while(estimatedDecodedSize<decodedLength);buffer=this.ensureBuffer(this.bufferLength+estimatedDecodedSize)}for(j=0;j<currentSequenceLength;j++)buffer[currentBufferLength++]=currentSequence[j]}lzwState.nextCode=nextCode,lzwState.codeLength=codeLength,lzwState.prevCode=prevCode,lzwState.currentSequenceLength=currentSequenceLength,this.bufferLength=currentBufferLength}}exports.LZWStream=LZWStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PredictorStream=void 0;var _decode_stream=__w_pdfjs_require__(19),_primitives=__w_pdfjs_require__(5),_util=__w_pdfjs_require__(2);class PredictorStream extends _decode_stream.DecodeStream{constructor(str,maybeLength,params){if(super(maybeLength),!(params instanceof _primitives.Dict))return str;const predictor=this.predictor=params.get("Predictor")||1;if(predictor<=1)return str;if(2!==predictor&&(predictor<10||predictor>15))throw new _util.FormatError(`Unsupported predictor: ${predictor}`);this.readBlock=2===predictor?this.readBlockTiff:this.readBlockPng,this.str=str,this.dict=str.dict;const colors=this.colors=params.get("Colors")||1,bits=this.bits=params.get("BPC","BitsPerComponent")||8,columns=this.columns=params.get("Columns")||1;return this.pixBytes=colors*bits+7>>3,this.rowBytes=columns*colors*bits+7>>3,this}readBlockTiff(){const rowBytes=this.rowBytes,bufferLength=this.bufferLength,buffer=this.ensureBuffer(bufferLength+rowBytes),bits=this.bits,colors=this.colors,rawBytes=this.str.getBytes(rowBytes);if(this.eof=!rawBytes.length,this.eof)return;let i,inbuf=0,outbuf=0,inbits=0,outbits=0,pos=bufferLength;if(1===bits&&1===colors)for(i=0;i<rowBytes;++i){let c=rawBytes[i]^inbuf;c^=c>>1,c^=c>>2,c^=c>>4,inbuf=(1&c)<<7,buffer[pos++]=c}else if(8===bits){for(i=0;i<colors;++i)buffer[pos++]=rawBytes[i];for(;i<rowBytes;++i)buffer[pos]=buffer[pos-colors]+rawBytes[i],pos++}else if(16===bits){const bytesPerPixel=2*colors;for(i=0;i<bytesPerPixel;++i)buffer[pos++]=rawBytes[i];for(;i<rowBytes;i+=2){const sum=((255&rawBytes[i])<<8)+(255&rawBytes[i+1])+((255&buffer[pos-bytesPerPixel])<<8)+(255&buffer[pos-bytesPerPixel+1]);buffer[pos++]=sum>>8&255,buffer[pos++]=255&sum}}else{const compArray=new Uint8Array(colors+1),bitMask=(1<<bits)-1;let j=0,k=bufferLength;const columns=this.columns;for(i=0;i<columns;++i)for(let kk=0;kk<colors;++kk)inbits<bits&&(inbuf=inbuf<<8|255&rawBytes[j++],inbits+=8),compArray[kk]=compArray[kk]+(inbuf>>inbits-bits)&bitMask,inbits-=bits,outbuf=outbuf<<bits|compArray[kk],outbits+=bits,outbits>=8&&(buffer[k++]=outbuf>>outbits-8&255,outbits-=8);outbits>0&&(buffer[k++]=(outbuf<<8-outbits)+(inbuf&(1<<8-outbits)-1))}this.bufferLength+=rowBytes}readBlockPng(){const rowBytes=this.rowBytes,pixBytes=this.pixBytes,predictor=this.str.getByte(),rawBytes=this.str.getBytes(rowBytes);if(this.eof=!rawBytes.length,this.eof)return;const bufferLength=this.bufferLength,buffer=this.ensureBuffer(bufferLength+rowBytes);let prevRow=buffer.subarray(bufferLength-rowBytes,bufferLength);0===prevRow.length&&(prevRow=new Uint8Array(rowBytes));let i,up,c,j=bufferLength;switch(predictor){case 0:for(i=0;i<rowBytes;++i)buffer[j++]=rawBytes[i];break;case 1:for(i=0;i<pixBytes;++i)buffer[j++]=rawBytes[i];for(;i<rowBytes;++i)buffer[j]=buffer[j-pixBytes]+rawBytes[i]&255,j++;break;case 2:for(i=0;i<rowBytes;++i)buffer[j++]=prevRow[i]+rawBytes[i]&255;break;case 3:for(i=0;i<pixBytes;++i)buffer[j++]=(prevRow[i]>>1)+rawBytes[i];for(;i<rowBytes;++i)buffer[j]=(prevRow[i]+buffer[j-pixBytes]>>1)+rawBytes[i]&255,j++;break;case 4:for(i=0;i<pixBytes;++i)up=prevRow[i],c=rawBytes[i],buffer[j++]=up+c;for(;i<rowBytes;++i){up=prevRow[i];const upLeft=prevRow[i-pixBytes],left=buffer[j-pixBytes],p=left+up-upLeft;let pa=p-left;pa<0&&(pa=-pa);let pb=p-up;pb<0&&(pb=-pb);let pc=p-upLeft;pc<0&&(pc=-pc),c=rawBytes[i],buffer[j++]=pa<=pb&&pa<=pc?left+c:pb<=pc?up+c:upLeft+c}break;default:throw new _util.FormatError(`Unsupported predictor: ${predictor}`)}this.bufferLength+=rowBytes}}exports.PredictorStream=PredictorStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RunLengthStream=void 0;var _decode_stream=__w_pdfjs_require__(19);class RunLengthStream extends _decode_stream.DecodeStream{constructor(str,maybeLength){super(maybeLength),this.str=str,this.dict=str.dict}readBlock(){const repeatHeader=this.str.getBytes(2);if(!repeatHeader||repeatHeader.length<2||128===repeatHeader[0])return void(this.eof=!0);let buffer,bufferLength=this.bufferLength,n=repeatHeader[0];if(n<128){if(buffer=this.ensureBuffer(bufferLength+n+1),buffer[bufferLength++]=repeatHeader[1],n>0){const source=this.str.getBytes(n);buffer.set(source,bufferLength),bufferLength+=n}}else{n=257-n;const b=repeatHeader[1];buffer=this.ensureBuffer(bufferLength+n+1);for(let i=0;i<n;i++)buffer[bufferLength++]=b}this.bufferLength=bufferLength}}exports.RunLengthStream=RunLengthStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Font=exports.ErrorFont=void 0;var _util=__w_pdfjs_require__(2),_cff_parser=__w_pdfjs_require__(35),_fonts_utils=__w_pdfjs_require__(38),_unicode=__w_pdfjs_require__(40),_glyphlist=__w_pdfjs_require__(39),_encodings=__w_pdfjs_require__(37),_standard_fonts=__w_pdfjs_require__(41),_to_unicode_map=__w_pdfjs_require__(42),_cff_font=__w_pdfjs_require__(43),_font_renderer=__w_pdfjs_require__(44),_metrics=__w_pdfjs_require__(45),_glyf=__w_pdfjs_require__(46),_cmap=__w_pdfjs_require__(16),_opentype_file_builder=__w_pdfjs_require__(47),_core_utils=__w_pdfjs_require__(6),_stream=__w_pdfjs_require__(10),_type1_font=__w_pdfjs_require__(48);const PRIVATE_USE_AREAS=[[57344,63743],[1048576,1114109]],EXPORT_DATA_PROPERTIES=["ascent","bbox","black","bold","charProcOperatorList","composite","cssFontInfo","data","defaultVMetrics","defaultWidth","descent","fallbackName","fontMatrix","fontType","isType3Font","italic","loadedName","mimetype","missingFile","name","remeasure","subtype","type","vertical"],EXPORT_DATA_EXTRA_PROPERTIES=["cMap","defaultEncoding","differences","isMonospace","isSerifFont","isSymbolicFont","seacMap","toFontChar","toUnicode","vmetrics","widths"];function adjustWidths(properties){if(!properties.fontMatrix)return;if(properties.fontMatrix[0]===_util.FONT_IDENTITY_MATRIX[0])return;const scale=.001/properties.fontMatrix[0],glyphsWidths=properties.widths;for(const glyph in glyphsWidths)glyphsWidths[glyph]*=scale;properties.defaultWidth*=scale}function amendFallbackToUnicode(properties){if(!properties.fallbackToUnicode)return;if(properties.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap)return;const toUnicode=[];for(const charCode in properties.fallbackToUnicode)properties.toUnicode.has(charCode)||(toUnicode[charCode]=properties.fallbackToUnicode[charCode]);toUnicode.length>0&&properties.toUnicode.amend(toUnicode)}class Glyph{constructor(originalCharCode,fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont){this.originalCharCode=originalCharCode,this.fontChar=fontChar,this.unicode=unicode,this.accent=accent,this.width=width,this.vmetric=vmetric,this.operatorListId=operatorListId,this.isSpace=isSpace,this.isInFont=isInFont;const category=(0,_unicode.getCharUnicodeCategory)(unicode);this.isWhitespace=category.isWhitespace,this.isZeroWidthDiacritic=category.isZeroWidthDiacritic,this.isInvisibleFormatMark=category.isInvisibleFormatMark}matchesForCache(originalCharCode,fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont){return this.originalCharCode===originalCharCode&&this.fontChar===fontChar&&this.unicode===unicode&&this.accent===accent&&this.width===width&&this.vmetric===vmetric&&this.operatorListId===operatorListId&&this.isSpace===isSpace&&this.isInFont===isInFont}}function int16(b0,b1){return(b0<<8)+b1}function writeSignedInt16(bytes,index,value){bytes[index+1]=value,bytes[index]=value>>>8}function signedInt16(b0,b1){const value=(b0<<8)+b1;return 32768&value?value-65536:value}function string16(value){return String.fromCharCode(value>>8&255,255&value)}function safeString16(value){return value>32767?value=32767:value<-32768&&(value=-32768),String.fromCharCode(value>>8&255,255&value)}function isTrueTypeCollectionFile(file){const header=file.peekBytes(4);return"ttcf"===(0,_util.bytesToString)(header)}function getFontFileType(file,{type,subtype,composite}){let fileType,fileSubtype;return function isTrueTypeFile(file){const header=file.peekBytes(4);return 65536===(0,_core_utils.readUint32)(header,0)||"true"===(0,_util.bytesToString)(header)}(file)||isTrueTypeCollectionFile(file)?fileType=composite?"CIDFontType2":"TrueType":!function isOpenTypeFile(file){const header=file.peekBytes(4);return"OTTO"===(0,_util.bytesToString)(header)}(file)?!function isType1File(file){const header=file.peekBytes(2);return 37===header[0]&&33===header[1]||128===header[0]&&1===header[1]}(file)?!function isCFFFile(file){const header=file.peekBytes(4);return header[0]>=1&&header[3]>=1&&header[3]<=4}(file)?((0,_util.warn)("getFontFileType: Unable to detect correct font file Type/Subtype."),fileType=type,fileSubtype=subtype):composite?(fileType="CIDFontType0",fileSubtype="CIDFontType0C"):(fileType="MMType1"===type?"MMType1":"Type1",fileSubtype="Type1C"):fileType=composite?"CIDFontType0":"MMType1"===type?"MMType1":"Type1":fileType=composite?"CIDFontType2":"OpenType",[fileType,fileSubtype]}function applyStandardFontGlyphMap(map,glyphMap){for(const charCode in glyphMap)map[+charCode]=glyphMap[charCode]}function buildToFontChar(encoding,glyphsUnicodeMap,differences){const toFontChar=[];let unicode;for(let i=0,ii=encoding.length;i<ii;i++)unicode=(0,_unicode.getUnicodeForGlyph)(encoding[i],glyphsUnicodeMap),-1!==unicode&&(toFontChar[i]=unicode);for(const charCode in differences)unicode=(0,_unicode.getUnicodeForGlyph)(differences[charCode],glyphsUnicodeMap),-1!==unicode&&(toFontChar[+charCode]=unicode);return toFontChar}function convertCidString(charCode,cid,shouldThrow=!1){switch(cid.length){case 1:return cid.charCodeAt(0);case 2:return cid.charCodeAt(0)<<8|cid.charCodeAt(1)}const msg=`Unsupported CID string (charCode ${charCode}): "${cid}".`;if(shouldThrow)throw new _util.FormatError(msg);return(0,_util.warn)(msg),cid}function adjustMapping(charCodeToGlyphId,hasGlyph,newGlyphZeroId,toUnicode){const newMap=Object.create(null),toUnicodeExtraMap=new Map,toFontChar=[],usedGlyphIds=new Set;let privateUseAreaIndex=0;const privateUseOffetStart=PRIVATE_USE_AREAS[privateUseAreaIndex][0];let nextAvailableFontCharCode=privateUseOffetStart,privateUseOffetEnd=PRIVATE_USE_AREAS[privateUseAreaIndex][1];for(let originalCharCode in charCodeToGlyphId){originalCharCode|=0;let glyphId=charCodeToGlyphId[originalCharCode];if(!hasGlyph(glyphId))continue;if(nextAvailableFontCharCode>privateUseOffetEnd){if(privateUseAreaIndex++,privateUseAreaIndex>=PRIVATE_USE_AREAS.length){(0,_util.warn)("Ran out of space in font private use area.");break}nextAvailableFontCharCode=PRIVATE_USE_AREAS[privateUseAreaIndex][0],privateUseOffetEnd=PRIVATE_USE_AREAS[privateUseAreaIndex][1]}const fontCharCode=nextAvailableFontCharCode++;0===glyphId&&(glyphId=newGlyphZeroId);let unicode=toUnicode.get(originalCharCode);"string"==typeof unicode&&(unicode=unicode.codePointAt(0)),unicode&&unicode<privateUseOffetStart&&!usedGlyphIds.has(glyphId)&&(toUnicodeExtraMap.set(unicode,glyphId),usedGlyphIds.add(glyphId)),newMap[fontCharCode]=glyphId,toFontChar[originalCharCode]=fontCharCode}return{toFontChar,charCodeToGlyphId:newMap,toUnicodeExtraMap,nextAvailableFontCharCode}}function createCmapTable(glyphs,toUnicodeExtraMap,numGlyphs){const ranges=function getRanges(glyphs,toUnicodeExtraMap,numGlyphs){const codes=[];for(const charCode in glyphs)glyphs[charCode]>=numGlyphs||codes.push({fontCharCode:0|charCode,glyphId:glyphs[charCode]});if(toUnicodeExtraMap)for(const[unicode,glyphId]of toUnicodeExtraMap)glyphId>=numGlyphs||codes.push({fontCharCode:unicode,glyphId});0===codes.length&&codes.push({fontCharCode:0,glyphId:0}),codes.sort((function fontGetRangesSort(a,b){return a.fontCharCode-b.fontCharCode}));const ranges=[],length=codes.length;for(let n=0;n<length;){const start=codes[n].fontCharCode,codeIndices=[codes[n].glyphId];++n;let end=start;for(;n<length&&end+1===codes[n].fontCharCode&&(codeIndices.push(codes[n].glyphId),++end,++n,65535!==end););ranges.push([start,end,codeIndices])}return ranges}(glyphs,toUnicodeExtraMap,numGlyphs),numTables=ranges.at(-1)[1]>65535?2:1;let i,ii,j,jj,cmap="\0\0"+string16(numTables)+"\0\0"+(0,_util.string32)(4+8*numTables);for(i=ranges.length-1;i>=0&&!(ranges[i][0]<=65535);--i);const bmpLength=i+1;ranges[i][0]<65535&&65535===ranges[i][1]&&(ranges[i][1]=65534);const trailingRangesCount=ranges[i][1]<65535?1:0,segCount=bmpLength+trailingRangesCount,searchParams=_opentype_file_builder.OpenTypeFileBuilder.getSearchParams(segCount,2);let range,start,end,codes,startCount="",endCount="",idDeltas="",idRangeOffsets="",glyphsIds="",bias=0;for(i=0,ii=bmpLength;i<ii;i++){range=ranges[i],start=range[0],end=range[1],startCount+=string16(start),endCount+=string16(end),codes=range[2];let contiguous=!0;for(j=1,jj=codes.length;j<jj;++j)if(codes[j]!==codes[j-1]+1){contiguous=!1;break}if(contiguous){idDeltas+=string16(codes[0]-start&65535),idRangeOffsets+=string16(0)}else{const offset=2*(segCount-i)+2*bias;for(bias+=end-start+1,idDeltas+=string16(0),idRangeOffsets+=string16(offset),j=0,jj=codes.length;j<jj;++j)glyphsIds+=string16(codes[j])}}trailingRangesCount>0&&(endCount+="ÿÿ",startCount+="ÿÿ",idDeltas+="\0",idRangeOffsets+="\0\0");const format314="\0\0"+string16(2*segCount)+string16(searchParams.range)+string16(searchParams.entry)+string16(searchParams.rangeShift)+endCount+"\0\0"+startCount+idDeltas+idRangeOffsets+glyphsIds;let format31012="",header31012="";if(numTables>1){for(cmap+="\0\0\n"+(0,_util.string32)(4+8*numTables+4+format314.length),format31012="",i=0,ii=ranges.length;i<ii;i++){range=ranges[i],start=range[0],codes=range[2];let code=codes[0];for(j=1,jj=codes.length;j<jj;++j)codes[j]!==codes[j-1]+1&&(end=range[0]+j-1,format31012+=(0,_util.string32)(start)+(0,_util.string32)(end)+(0,_util.string32)(code),start=end+1,code=codes[j]);format31012+=(0,_util.string32)(start)+(0,_util.string32)(range[1])+(0,_util.string32)(code)}header31012="\0\f\0\0"+(0,_util.string32)(format31012.length+16)+"\0\0\0\0"+(0,_util.string32)(format31012.length/12)}return cmap+"\0"+string16(format314.length+4)+format314+header31012+format31012}function createOS2Table(properties,charstrings,override){override=override||{unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};let ulUnicodeRange1=0,ulUnicodeRange2=0,ulUnicodeRange3=0,ulUnicodeRange4=0,firstCharIndex=null,lastCharIndex=0;if(charstrings){for(let code in charstrings){code|=0,(firstCharIndex>code||!firstCharIndex)&&(firstCharIndex=code),lastCharIndex<code&&(lastCharIndex=code);const position=(0,_unicode.getUnicodeRangeFor)(code);if(position<32)ulUnicodeRange1|=1<<position;else if(position<64)ulUnicodeRange2|=1<<position-32;else if(position<96)ulUnicodeRange3|=1<<position-64;else{if(!(position<123))throw new _util.FormatError("Unicode ranges Bits > 123 are reserved for internal usage");ulUnicodeRange4|=1<<position-96}}lastCharIndex>65535&&(lastCharIndex=65535)}else firstCharIndex=0,lastCharIndex=255;const bbox=properties.bbox||[0,0,0,0],unitsPerEm=override.unitsPerEm||1/(properties.fontMatrix||_util.FONT_IDENTITY_MATRIX)[0],scale=properties.ascentScaled?1:unitsPerEm/1e3,typoAscent=override.ascent||Math.round(scale*(properties.ascent||bbox[3]));let typoDescent=override.descent||Math.round(scale*(properties.descent||bbox[1]));typoDescent>0&&properties.descent>0&&bbox[1]<0&&(typoDescent=-typoDescent);const winAscent=override.yMax||typoAscent,winDescent=-override.yMin||-typoDescent;return"\0$ô\0\0\0»\0\0\0»\0\0ß\x001\0\0\0\0"+String.fromCharCode(properties.fixedPitch?9:0)+"\0\0\0\0\0\0"+(0,_util.string32)(ulUnicodeRange1)+(0,_util.string32)(ulUnicodeRange2)+(0,_util.string32)(ulUnicodeRange3)+(0,_util.string32)(ulUnicodeRange4)+"*21*"+string16(properties.italicAngle?1:0)+string16(firstCharIndex||properties.firstChar)+string16(lastCharIndex||properties.lastChar)+string16(typoAscent)+string16(typoDescent)+"\0d"+string16(winAscent)+string16(winDescent)+"\0\0\0\0\0\0\0\0"+string16(properties.xHeight)+string16(properties.capHeight)+string16(0)+string16(firstCharIndex||properties.firstChar)+"\0"}function createPostTable(properties){const angle=Math.floor(65536*properties.italicAngle);return"\0\0\0"+(0,_util.string32)(angle)+"\0\0\0\0"+(0,_util.string32)(properties.fixedPitch?1:0)+"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"}function createPostscriptName(name){return name.replace(/[^\x21-\x7E]|[[\](){}<>/%]/g,"").slice(0,63)}function createNameTable(name,proto){proto||(proto=[[],[]]);const strings=[proto[0][0]||"Original licence",proto[0][1]||name,proto[0][2]||"Unknown",proto[0][3]||"uniqueID",proto[0][4]||name,proto[0][5]||"Version 0.11",proto[0][6]||createPostscriptName(name),proto[0][7]||"Unknown",proto[0][8]||"Unknown",proto[0][9]||"Unknown"],stringsUnicode=[];let i,ii,j,jj,str;for(i=0,ii=strings.length;i<ii;i++){str=proto[1][i]||strings[i];const strBufUnicode=[];for(j=0,jj=str.length;j<jj;j++)strBufUnicode.push(string16(str.charCodeAt(j)));stringsUnicode.push(strBufUnicode.join(""))}const names=[strings,stringsUnicode],platforms=["\0","\0"],encodings=["\0\0","\0"],languages=["\0\0","\t"],namesRecordCount=strings.length*platforms.length;let nameTable="\0\0"+string16(namesRecordCount)+string16(12*namesRecordCount+6),strOffset=0;for(i=0,ii=platforms.length;i<ii;i++){const strs=names[i];for(j=0,jj=strs.length;j<jj;j++){str=strs[j];nameTable+=platforms[i]+encodings[i]+languages[i]+string16(j)+string16(str.length)+string16(strOffset),strOffset+=str.length}}return nameTable+=strings.join("")+stringsUnicode.join(""),nameTable}exports.Font=class Font{constructor(name,file,properties){this.name=name,this.psName=null,this.mimetype=null,this.disableFontFace=!1,this.loadedName=properties.loadedName,this.isType3Font=properties.isType3Font,this.missingFile=!1,this.cssFontInfo=properties.cssFontInfo,this._charsCache=Object.create(null),this._glyphCache=Object.create(null);let isSerifFont=!!(properties.flags&_fonts_utils.FontFlags.Serif);if(!isSerifFont&&!properties.isSimulatedFlags){const baseName=name.replace(/[,_]/g,"-").split("-")[0],serifFonts=(0,_standard_fonts.getSerifFonts)();for(const namePart of baseName.split("+"))if(serifFonts[namePart]){isSerifFont=!0;break}}this.isSerifFont=isSerifFont,this.isSymbolicFont=!!(properties.flags&_fonts_utils.FontFlags.Symbolic),this.isMonospace=!!(properties.flags&_fonts_utils.FontFlags.FixedPitch);let type=properties.type,subtype=properties.subtype;this.type=type,this.subtype=subtype;let data,fallbackName="sans-serif";if(this.isMonospace?fallbackName="monospace":this.isSerifFont&&(fallbackName="serif"),this.fallbackName=fallbackName,this.differences=properties.differences,this.widths=properties.widths,this.defaultWidth=properties.defaultWidth,this.composite=properties.composite,this.cMap=properties.cMap,this.capHeight=properties.capHeight/1e3,this.ascent=properties.ascent/1e3,this.descent=properties.descent/1e3,this.lineHeight=this.ascent-this.descent,this.fontMatrix=properties.fontMatrix,this.bbox=properties.bbox,this.defaultEncoding=properties.defaultEncoding,this.toUnicode=properties.toUnicode,this.toFontChar=[],"Type3"!==properties.type){if(this.cidEncoding=properties.cidEncoding||"",this.vertical=!!properties.vertical,this.vertical&&(this.vmetrics=properties.vmetrics,this.defaultVMetrics=properties.defaultVMetrics),!file||file.isEmpty)return file&&(0,_util.warn)('Font file is empty in "'+name+'" ('+this.loadedName+")"),void this.fallbackToSystemFont(properties);[type,subtype]=getFontFileType(file,properties),type===this.type&&subtype===this.subtype||(0,_util.info)(`Inconsistent font file Type/SubType, expected: ${this.type}/${this.subtype} but found: ${type}/${subtype}.`);try{switch(type){case"MMType1":(0,_util.info)("MMType1 font ("+name+"), falling back to Type1.");case"Type1":case"CIDFontType0":this.mimetype="font/opentype";const cff="Type1C"===subtype||"CIDFontType0C"===subtype?new _cff_font.CFFFont(file,properties):new _type1_font.Type1Font(name,file,properties);adjustWidths(properties),data=this.convert(name,cff,properties);break;case"OpenType":case"TrueType":case"CIDFontType2":this.mimetype="font/opentype",data=this.checkAndRepair(name,file,properties),this.isOpenType&&(adjustWidths(properties),type="OpenType");break;default:throw new _util.FormatError(`Font ${type} is not supported`)}}catch(e){return(0,_util.warn)(e),void this.fallbackToSystemFont(properties)}amendFallbackToUnicode(properties),this.data=data,this.fontType=(0,_fonts_utils.getFontType)(type,subtype,properties.isStandardFont),this.fontMatrix=properties.fontMatrix,this.widths=properties.widths,this.defaultWidth=properties.defaultWidth,this.toUnicode=properties.toUnicode,this.seacMap=properties.seacMap}else{for(let charCode=0;charCode<256;charCode++)this.toFontChar[charCode]=this.differences[charCode]||properties.defaultEncoding[charCode];this.fontType=_util.FontType.TYPE3}}get renderer(){const renderer=_font_renderer.FontRendererFactory.create(this,_fonts_utils.SEAC_ANALYSIS_ENABLED);return(0,_util.shadow)(this,"renderer",renderer)}exportData(extraProperties=!1){const exportDataProperties=extraProperties?[...EXPORT_DATA_PROPERTIES,...EXPORT_DATA_EXTRA_PROPERTIES]:EXPORT_DATA_PROPERTIES,data=Object.create(null);let property,value;for(property of exportDataProperties)value=this[property],void 0!==value&&(data[property]=value);return data}fallbackToSystemFont(properties){this.missingFile=!0;const name=this.name,type=this.type,subtype=this.subtype;let fontName=(0,_fonts_utils.normalizeFontName)(name);const stdFontMap=(0,_standard_fonts.getStdFontMap)(),nonStdFontMap=(0,_standard_fonts.getNonStdFontMap)(),isStandardFont=!!stdFontMap[fontName],isMappedToStandardFont=!(!nonStdFontMap[fontName]||!stdFontMap[nonStdFontMap[fontName]]);fontName=stdFontMap[fontName]||nonStdFontMap[fontName]||fontName;const metrics=(0,_metrics.getFontBasicMetrics)()[fontName];metrics&&(isNaN(this.ascent)&&(this.ascent=metrics.ascent/1e3),isNaN(this.descent)&&(this.descent=metrics.descent/1e3),isNaN(this.capHeight)&&(this.capHeight=metrics.capHeight/1e3)),this.bold=-1!==fontName.search(/bold/gi),this.italic=-1!==fontName.search(/oblique/gi)||-1!==fontName.search(/italic/gi),this.black=-1!==name.search(/Black/g);const isNarrow=-1!==name.search(/Narrow/g);if(this.remeasure=(!isStandardFont||isNarrow)&&Object.keys(this.widths).length>0,(isStandardFont||isMappedToStandardFont)&&"CIDFontType2"===type&&this.cidEncoding.startsWith("Identity-")){const cidToGidMap=properties.cidToGidMap,map=[];if(applyStandardFontGlyphMap(map,(0,_standard_fonts.getGlyphMapForStandardFonts)()),/Arial-?Black/i.test(name)?applyStandardFontGlyphMap(map,(0,_standard_fonts.getSupplementalGlyphMapForArialBlack)()):/Calibri/i.test(name)&&applyStandardFontGlyphMap(map,(0,_standard_fonts.getSupplementalGlyphMapForCalibri)()),cidToGidMap){for(const charCode in map){const cid=map[charCode];void 0!==cidToGidMap[cid]&&(map[+charCode]=cidToGidMap[cid])}cidToGidMap.length!==this.toUnicode.length&&properties.hasIncludedToUnicodeMap&&this.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap&&this.toUnicode.forEach((function(charCode,unicodeCharCode){const cid=map[charCode];void 0===cidToGidMap[cid]&&(map[+charCode]=unicodeCharCode)}))}this.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap||this.toUnicode.forEach((function(charCode,unicodeCharCode){map[+charCode]=unicodeCharCode})),this.toFontChar=map,this.toUnicode=new _to_unicode_map.ToUnicodeMap(map)}else if(/Symbol/i.test(fontName))this.toFontChar=buildToFontChar(_encodings.SymbolSetEncoding,(0,_glyphlist.getGlyphsUnicode)(),this.differences);else if(/Dingbats/i.test(fontName))/Wingdings/i.test(name)&&(0,_util.warn)("Non-embedded Wingdings font, falling back to ZapfDingbats."),this.toFontChar=buildToFontChar(_encodings.ZapfDingbatsEncoding,(0,_glyphlist.getDingbatsGlyphsUnicode)(),this.differences);else if(isStandardFont){const map=buildToFontChar(this.defaultEncoding,(0,_glyphlist.getGlyphsUnicode)(),this.differences);"CIDFontType2"!==type||this.cidEncoding.startsWith("Identity-")||this.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap||this.toUnicode.forEach((function(charCode,unicodeCharCode){map[+charCode]=unicodeCharCode})),this.toFontChar=map}else{const glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)(),map=[];this.toUnicode.forEach(((charCode,unicodeCharCode)=>{if(!this.composite){const glyphName=this.differences[charCode]||this.defaultEncoding[charCode],unicode=(0,_unicode.getUnicodeForGlyph)(glyphName,glyphsUnicodeMap);-1!==unicode&&(unicodeCharCode=unicode)}map[+charCode]=unicodeCharCode})),this.composite&&this.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap&&/Verdana/i.test(name)&&applyStandardFontGlyphMap(map,(0,_standard_fonts.getGlyphMapForStandardFonts)()),this.toFontChar=map}amendFallbackToUnicode(properties),this.loadedName=fontName.split("-")[0],this.fontType=(0,_fonts_utils.getFontType)(type,subtype,properties.isStandardFont)}checkAndRepair(name,font,properties){const VALID_TABLES=["OS/2","cmap","head","hhea","hmtx","maxp","name","post","loca","glyf","fpgm","prep","cvt ","CFF "];function readTables(file,numTables){const tables=Object.create(null);tables["OS/2"]=null,tables.cmap=null,tables.head=null,tables.hhea=null,tables.hmtx=null,tables.maxp=null,tables.name=null,tables.post=null;for(let i=0;i<numTables;i++){const table=readTableEntry(file);VALID_TABLES.includes(table.tag)&&(0!==table.length&&(tables[table.tag]=table))}return tables}function readTableEntry(file){const tag=file.getString(4),checksum=file.getInt32()>>>0,offset=file.getInt32()>>>0,length=file.getInt32()>>>0,previousPosition=file.pos;file.pos=file.start||0,file.skip(offset);const data=file.getBytes(length);return file.pos=previousPosition,"head"===tag&&(data[8]=data[9]=data[10]=data[11]=0,data[17]|=32),{tag,checksum,length,offset,data}}function readOpenTypeHeader(ttf){return{version:ttf.getString(4),numTables:ttf.getUint16(),searchRange:ttf.getUint16(),entrySelector:ttf.getUint16(),rangeShift:ttf.getUint16()}}function sanitizeGlyph(source,sourceStart,sourceEnd,dest,destStart,hintsValid){const glyphProfile={length:0,sizeOfInstructions:0};if(sourceEnd-sourceStart<=12)return glyphProfile;const glyf=source.subarray(sourceStart,sourceEnd);let contoursCount=signedInt16(glyf[0],glyf[1]);if(contoursCount<0)return contoursCount=-1,writeSignedInt16(glyf,0,contoursCount),dest.set(glyf,destStart),glyphProfile.length=glyf.length,glyphProfile;let i,j=10,flagsCount=0;for(i=0;i<contoursCount;i++){flagsCount=(glyf[j]<<8|glyf[j+1])+1,j+=2}const instructionsStart=j,instructionsLength=glyf[j]<<8|glyf[j+1];glyphProfile.sizeOfInstructions=instructionsLength,j+=2+instructionsLength;const instructionsEnd=j;let coordinatesLength=0;for(i=0;i<flagsCount;i++){const flag=glyf[j++];192&flag&&(glyf[j-1]=63&flag);let xLength=2;2&flag?xLength=1:16&flag&&(xLength=0);let yLength=2;4&flag?yLength=1:32&flag&&(yLength=0);const xyLength=xLength+yLength;if(coordinatesLength+=xyLength,8&flag){const repeat=glyf[j++];i+=repeat,coordinatesLength+=repeat*xyLength}}if(0===coordinatesLength)return glyphProfile;let glyphDataLength=j+coordinatesLength;return glyphDataLength>glyf.length?glyphProfile:!hintsValid&&instructionsLength>0?(dest.set(glyf.subarray(0,instructionsStart),destStart),dest.set([0,0],destStart+instructionsStart),dest.set(glyf.subarray(instructionsEnd,glyphDataLength),destStart+instructionsStart+2),glyphDataLength-=instructionsLength,glyf.length-glyphDataLength>3&&(glyphDataLength=glyphDataLength+3&-4),glyphProfile.length=glyphDataLength,glyphProfile):glyf.length-glyphDataLength>3?(glyphDataLength=glyphDataLength+3&-4,dest.set(glyf.subarray(0,glyphDataLength),destStart),glyphProfile.length=glyphDataLength,glyphProfile):(dest.set(glyf,destStart),glyphProfile.length=glyf.length,glyphProfile)}function readNameTable(nameTable){const start=(font.start||0)+nameTable.offset;font.pos=start;const names=[[],[]],length=nameTable.length,end=start+length;if(0!==font.getUint16()||length<6)return names;const numRecords=font.getUint16(),stringsStart=font.getUint16(),records=[];let i,ii;for(i=0;i<numRecords&&font.pos+12<=end;i++){const r={platform:font.getUint16(),encoding:font.getUint16(),language:font.getUint16(),name:font.getUint16(),length:font.getUint16(),offset:font.getUint16()};(1===r.platform&&0===r.encoding&&0===r.language||3===r.platform&&1===r.encoding&&1033===r.language)&&records.push(r)}for(i=0,ii=records.length;i<ii;i++){const record=records[i];if(record.length<=0)continue;const pos=start+stringsStart+record.offset;if(pos+record.length>end)continue;font.pos=pos;const nameIndex=record.name;if(record.encoding){let str="";for(let j=0,jj=record.length;j<jj;j+=2)str+=String.fromCharCode(font.getUint16());names[1][nameIndex]=str}else names[0][nameIndex]=font.getString(record.length)}return names}const TTOpsStackDeltas=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function sanitizeTTProgram(table,ttContext){let j,n,b,funcId,pc,data=table.data,i=0,lastEndf=0,lastDeff=0;const stack=[],callstack=[],functionsCalled=[];let tooComplexToFollowFunctions=ttContext.tooComplexToFollowFunctions,inFDEF=!1,ifLevel=0,inELSE=0;for(let ii=data.length;i<ii;){const op=data[i++];if(64===op)if(n=data[i++],inFDEF||inELSE)i+=n;else for(j=0;j<n;j++)stack.push(data[i++]);else if(65===op)if(n=data[i++],inFDEF||inELSE)i+=2*n;else for(j=0;j<n;j++)b=data[i++],stack.push(b<<8|data[i++]);else if(176==(248&op))if(n=op-176+1,inFDEF||inELSE)i+=n;else for(j=0;j<n;j++)stack.push(data[i++]);else if(184==(248&op))if(n=op-184+1,inFDEF||inELSE)i+=2*n;else for(j=0;j<n;j++)b=data[i++],stack.push(b<<8|data[i++]);else if(43!==op||tooComplexToFollowFunctions)if(44!==op||tooComplexToFollowFunctions){if(45===op)if(inFDEF)inFDEF=!1,lastEndf=i;else{if(pc=callstack.pop(),!pc)return(0,_util.warn)("TT: ENDF bad stack"),void(ttContext.hintsValid=!1);funcId=functionsCalled.pop(),data=pc.data,i=pc.i,ttContext.functionsStackDeltas[funcId]=stack.length-pc.stackTop}else if(137===op)(inFDEF||inELSE)&&((0,_util.warn)("TT: nested IDEFs not allowed"),tooComplexToFollowFunctions=!0),inFDEF=!0,lastDeff=i;else if(88===op)++ifLevel;else if(27===op)inELSE=ifLevel;else if(89===op)inELSE===ifLevel&&(inELSE=0),--ifLevel;else if(28===op&&!inFDEF&&!inELSE){const offset=stack.at(-1);offset>0&&(i+=offset-1)}}else(inFDEF||inELSE)&&((0,_util.warn)("TT: nested FDEFs not allowed"),tooComplexToFollowFunctions=!0),inFDEF=!0,lastDeff=i,funcId=stack.pop(),ttContext.functionsDefined[funcId]={data,i};else if(!inFDEF&&!inELSE)if(funcId=stack.at(-1),isNaN(funcId))(0,_util.info)("TT: CALL empty stack (or invalid entry).");else if(ttContext.functionsUsed[funcId]=!0,funcId in ttContext.functionsStackDeltas){const newStackLength=stack.length+ttContext.functionsStackDeltas[funcId];if(newStackLength<0)return(0,_util.warn)("TT: CALL invalid functions stack delta."),void(ttContext.hintsValid=!1);stack.length=newStackLength}else if(funcId in ttContext.functionsDefined&&!functionsCalled.includes(funcId)){if(callstack.push({data,i,stackTop:stack.length-1}),functionsCalled.push(funcId),pc=ttContext.functionsDefined[funcId],!pc)return(0,_util.warn)("TT: CALL non-existent function"),void(ttContext.hintsValid=!1);data=pc.data,i=pc.i}if(!inFDEF&&!inELSE){let stackDelta=0;for(op<=142?stackDelta=TTOpsStackDeltas[op]:op>=192&&op<=223?stackDelta=-1:op>=224&&(stackDelta=-2),op>=113&&op<=117&&(n=stack.pop(),isNaN(n)||(stackDelta=2*-n));stackDelta<0&&stack.length>0;)stack.pop(),stackDelta++;for(;stackDelta>0;)stack.push(NaN),stackDelta--}}ttContext.tooComplexToFollowFunctions=tooComplexToFollowFunctions;const content=[data];i>data.length&&content.push(new Uint8Array(i-data.length)),lastDeff>lastEndf&&((0,_util.warn)("TT: complementing a missing function tail"),content.push(new Uint8Array([34,45]))),function foldTTTable(table,content){if(content.length>1){let j,jj,newLength=0;for(j=0,jj=content.length;j<jj;j++)newLength+=content[j].length;newLength=newLength+3&-4;const result=new Uint8Array(newLength);let pos=0;for(j=0,jj=content.length;j<jj;j++)result.set(content[j],pos),pos+=content[j].length;table.data=result,table.length=newLength}}(table,content)}let header,tables,cff,cffFile;if(isTrueTypeCollectionFile(font=new _stream.Stream(new Uint8Array(font.getBytes())))){const ttcData=function readTrueTypeCollectionData(ttc,fontName){const{numFonts,offsetTable}=function readTrueTypeCollectionHeader(ttc){const ttcTag=ttc.getString(4);(0,_util.assert)("ttcf"===ttcTag,"Must be a TrueType Collection font.");const majorVersion=ttc.getUint16(),minorVersion=ttc.getUint16(),numFonts=ttc.getInt32()>>>0,offsetTable=[];for(let i=0;i<numFonts;i++)offsetTable.push(ttc.getInt32()>>>0);const header={ttcTag,majorVersion,minorVersion,numFonts,offsetTable};switch(majorVersion){case 1:return header;case 2:return header.dsigTag=ttc.getInt32()>>>0,header.dsigLength=ttc.getInt32()>>>0,header.dsigOffset=ttc.getInt32()>>>0,header}throw new _util.FormatError(`Invalid TrueType Collection majorVersion: ${majorVersion}.`)}(ttc),fontNameParts=fontName.split("+");let fallbackData;for(let i=0;i<numFonts;i++){ttc.pos=(ttc.start||0)+offsetTable[i];const potentialHeader=readOpenTypeHeader(ttc),potentialTables=readTables(ttc,potentialHeader.numTables);if(!potentialTables.name)throw new _util.FormatError('TrueType Collection font must contain a "name" table.');const nameTable=readNameTable(potentialTables.name);for(let j=0,jj=nameTable.length;j<jj;j++)for(let k=0,kk=nameTable[j].length;k<kk;k++){const nameEntry=nameTable[j][k]&&nameTable[j][k].replace(/\s/g,"");if(nameEntry){if(nameEntry===fontName)return{header:potentialHeader,tables:potentialTables};if(!(fontNameParts.length<2))for(const part of fontNameParts)nameEntry===part&&(fallbackData={name:part,header:potentialHeader,tables:potentialTables})}}}if(fallbackData)return(0,_util.warn)(`TrueType Collection does not contain "${fontName}" font, falling back to "${fallbackData.name}" font instead.`),{header:fallbackData.header,tables:fallbackData.tables};throw new _util.FormatError(`TrueType Collection does not contain "${fontName}" font.`)}(font,this.name);header=ttcData.header,tables=ttcData.tables}else header=readOpenTypeHeader(font),tables=readTables(font,header.numTables);const isTrueType=!tables["CFF "];if(isTrueType){if(!tables.loca)throw new _util.FormatError('Required "loca" table is not found');tables.glyf||((0,_util.warn)('Required "glyf" table is not found -- trying to recover.'),tables.glyf={tag:"glyf",data:new Uint8Array(0)}),this.isOpenType=!1}else{const isComposite=properties.composite&&((properties.cidToGidMap||[]).length>0||!(properties.cMap instanceof _cmap.IdentityCMap));if("OTTO"===header.version&&!isComposite||!tables.head||!tables.hhea||!tables.maxp||!tables.post)return cffFile=new _stream.Stream(tables["CFF "].data),cff=new _cff_font.CFFFont(cffFile,properties),adjustWidths(properties),this.convert(name,cff,properties);delete tables.glyf,delete tables.loca,delete tables.fpgm,delete tables.prep,delete tables["cvt "],this.isOpenType=!0}if(!tables.maxp)throw new _util.FormatError('Required "maxp" table is not found');font.pos=(font.start||0)+tables.maxp.offset;const version=font.getInt32(),numGlyphs=font.getUint16();if(properties.scaleFactors&&properties.scaleFactors.length===numGlyphs&&isTrueType){const{scaleFactors}=properties,isGlyphLocationsLong=int16(tables.head.data[50],tables.head.data[51]),glyphs=new _glyf.GlyfTable({glyfTable:tables.glyf.data,isGlyphLocationsLong,locaTable:tables.loca.data,numGlyphs});glyphs.scale(scaleFactors);const{glyf,loca,isLocationLong}=glyphs.write();tables.glyf.data=glyf,tables.loca.data=loca,isLocationLong!==!!isGlyphLocationsLong&&(tables.head.data[50]=0,tables.head.data[51]=isLocationLong?1:0);const metrics=tables.hmtx.data;for(let i=0;i<numGlyphs;i++){const j=4*i,advanceWidth=Math.round(scaleFactors[i]*int16(metrics[j],metrics[j+1]));metrics[j]=advanceWidth>>8&255,metrics[j+1]=255&advanceWidth;writeSignedInt16(metrics,j+2,Math.round(scaleFactors[i]*signedInt16(metrics[j+2],metrics[j+3])))}}let numGlyphsOut=numGlyphs+1,dupFirstEntry=!0;numGlyphsOut>65535&&(dupFirstEntry=!1,numGlyphsOut=numGlyphs,(0,_util.warn)("Not enough space in glyfs to duplicate first glyph."));let maxFunctionDefs=0,maxSizeOfInstructions=0;if(version>=65536&&tables.maxp.length>=22){font.pos+=8;font.getUint16()>2&&(tables.maxp.data[14]=0,tables.maxp.data[15]=2),font.pos+=4,maxFunctionDefs=font.getUint16(),font.pos+=4,maxSizeOfInstructions=font.getUint16()}tables.maxp.data[4]=numGlyphsOut>>8,tables.maxp.data[5]=255&numGlyphsOut;const hintsValid=function sanitizeTTPrograms(fpgm,prep,cvt,maxFunctionDefs){const ttContext={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:!1,hintsValid:!0};if(fpgm&&sanitizeTTProgram(fpgm,ttContext),prep&&sanitizeTTProgram(prep,ttContext),fpgm&&function checkInvalidFunctions(ttContext,maxFunctionDefs){if(!ttContext.tooComplexToFollowFunctions){if(ttContext.functionsDefined.length>maxFunctionDefs)return(0,_util.warn)("TT: more functions defined than expected"),void(ttContext.hintsValid=!1);for(let j=0,jj=ttContext.functionsUsed.length;j<jj;j++){if(j>maxFunctionDefs)return(0,_util.warn)("TT: invalid function id: "+j),void(ttContext.hintsValid=!1);if(ttContext.functionsUsed[j]&&!ttContext.functionsDefined[j])return(0,_util.warn)("TT: undefined function: "+j),void(ttContext.hintsValid=!1)}}}(ttContext,maxFunctionDefs),cvt&&1&cvt.length){const cvtData=new Uint8Array(cvt.length+1);cvtData.set(cvt.data),cvt.data=cvtData}return ttContext.hintsValid}(tables.fpgm,tables.prep,tables["cvt "],maxFunctionDefs);if(hintsValid||(delete tables.fpgm,delete tables.prep,delete tables["cvt "]),function sanitizeMetrics(file,header,metrics,headTable,numGlyphs,dupFirstEntry){if(!header)return void(metrics&&(metrics.data=null));file.pos=(file.start||0)+header.offset,file.pos+=4,file.pos+=2,file.pos+=2,file.pos+=2,file.pos+=2,file.pos+=2,file.pos+=2,file.pos+=2,file.pos+=2,file.pos+=2;const caretOffset=file.getUint16();file.pos+=8,file.pos+=2;let numOfMetrics=file.getUint16();if(0!==caretOffset){2&int16(headTable.data[44],headTable.data[45])||(header.data[22]=0,header.data[23]=0)}numOfMetrics>numGlyphs&&((0,_util.info)(`The numOfMetrics (${numOfMetrics}) should not be greater than the numGlyphs (${numGlyphs}).`),numOfMetrics=numGlyphs,header.data[34]=(65280&numOfMetrics)>>8,header.data[35]=255&numOfMetrics);const numMissing=numGlyphs-numOfMetrics-(metrics.length-4*numOfMetrics>>1);if(numMissing>0){const entries=new Uint8Array(metrics.length+2*numMissing);entries.set(metrics.data),dupFirstEntry&&(entries[metrics.length]=metrics.data[2],entries[metrics.length+1]=metrics.data[3]),metrics.data=entries}}(font,tables.hhea,tables.hmtx,tables.head,numGlyphsOut,dupFirstEntry),!tables.head)throw new _util.FormatError('Required "head" table is not found');!function sanitizeHead(head,numGlyphs,locaLength){const data=head.data,version=function int32(b0,b1,b2,b3){return(b0<<24)+(b1<<16)+(b2<<8)+b3}(data[0],data[1],data[2],data[3]);version>>16!=1&&((0,_util.info)("Attempting to fix invalid version in head table: "+version),data[0]=0,data[1]=1,data[2]=0,data[3]=0);const indexToLocFormat=int16(data[50],data[51]);if(indexToLocFormat<0||indexToLocFormat>1){(0,_util.info)("Attempting to fix invalid indexToLocFormat in head table: "+indexToLocFormat);const numGlyphsPlusOne=numGlyphs+1;if(locaLength===numGlyphsPlusOne<<1)data[50]=0,data[51]=0;else{if(locaLength!==numGlyphsPlusOne<<2)throw new _util.FormatError("Could not fix indexToLocFormat: "+indexToLocFormat);data[50]=0,data[51]=1}}}(tables.head,numGlyphs,isTrueType?tables.loca.length:0);let missingGlyphs=Object.create(null);if(isTrueType){const isGlyphLocationsLong=int16(tables.head.data[50],tables.head.data[51]),glyphsInfo=function sanitizeGlyphLocations(loca,glyf,numGlyphs,isGlyphLocationsLong,hintsValid,dupFirstEntry,maxSizeOfInstructions){let itemSize,itemDecode,itemEncode;isGlyphLocationsLong?(itemSize=4,itemDecode=function fontItemDecodeLong(data,offset){return data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3]},itemEncode=function fontItemEncodeLong(data,offset,value){data[offset]=value>>>24&255,data[offset+1]=value>>16&255,data[offset+2]=value>>8&255,data[offset+3]=255&value}):(itemSize=2,itemDecode=function fontItemDecode(data,offset){return data[offset]<<9|data[offset+1]<<1},itemEncode=function fontItemEncode(data,offset,value){data[offset]=value>>9&255,data[offset+1]=value>>1&255});const numGlyphsOut=dupFirstEntry?numGlyphs+1:numGlyphs,locaDataSize=itemSize*(1+numGlyphsOut),locaData=new Uint8Array(locaDataSize);locaData.set(loca.data.subarray(0,locaDataSize)),loca.data=locaData;const oldGlyfData=glyf.data,oldGlyfDataLength=oldGlyfData.length,newGlyfData=new Uint8Array(oldGlyfDataLength);let i,j;const locaEntries=[];for(i=0,j=0;i<numGlyphs+1;i++,j+=itemSize){let offset=itemDecode(locaData,j);offset>oldGlyfDataLength&&(offset=oldGlyfDataLength),locaEntries.push({index:i,offset,endOffset:0})}for(locaEntries.sort(((a,b)=>a.offset-b.offset)),i=0;i<numGlyphs;i++)locaEntries[i].endOffset=locaEntries[i+1].offset;for(locaEntries.sort(((a,b)=>a.index-b.index)),i=0;i<numGlyphs;i++){const{offset,endOffset}=locaEntries[i];if(0!==offset||0!==endOffset)break;const nextOffset=locaEntries[i+1].offset;if(0!==nextOffset){locaEntries[i].endOffset=nextOffset;break}}const missingGlyphs=Object.create(null);let writeOffset=0;for(itemEncode(locaData,0,writeOffset),i=0,j=itemSize;i<numGlyphs;i++,j+=itemSize){const glyphProfile=sanitizeGlyph(oldGlyfData,locaEntries[i].offset,locaEntries[i].endOffset,newGlyfData,writeOffset,hintsValid),newLength=glyphProfile.length;0===newLength&&(missingGlyphs[i]=!0),glyphProfile.sizeOfInstructions>maxSizeOfInstructions&&(maxSizeOfInstructions=glyphProfile.sizeOfInstructions),writeOffset+=newLength,itemEncode(locaData,j,writeOffset)}if(0===writeOffset){const simpleGlyph=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(i=0,j=itemSize;i<numGlyphsOut;i++,j+=itemSize)itemEncode(locaData,j,simpleGlyph.length);glyf.data=simpleGlyph}else if(dupFirstEntry){const firstEntryLength=itemDecode(locaData,itemSize);newGlyfData.length>firstEntryLength+writeOffset?glyf.data=newGlyfData.subarray(0,firstEntryLength+writeOffset):(glyf.data=new Uint8Array(firstEntryLength+writeOffset),glyf.data.set(newGlyfData.subarray(0,writeOffset))),glyf.data.set(newGlyfData.subarray(0,firstEntryLength),writeOffset),itemEncode(loca.data,locaData.length-itemSize,writeOffset+firstEntryLength)}else glyf.data=newGlyfData.subarray(0,writeOffset);return{missingGlyphs,maxSizeOfInstructions}}(tables.loca,tables.glyf,numGlyphs,isGlyphLocationsLong,hintsValid,dupFirstEntry,maxSizeOfInstructions);missingGlyphs=glyphsInfo.missingGlyphs,version>=65536&&tables.maxp.length>=22&&(tables.maxp.data[26]=glyphsInfo.maxSizeOfInstructions>>8,tables.maxp.data[27]=255&glyphsInfo.maxSizeOfInstructions)}if(!tables.hhea)throw new _util.FormatError('Required "hhea" table is not found');0===tables.hhea.data[10]&&0===tables.hhea.data[11]&&(tables.hhea.data[10]=255,tables.hhea.data[11]=255);const metricsOverride={unitsPerEm:int16(tables.head.data[18],tables.head.data[19]),yMax:int16(tables.head.data[42],tables.head.data[43]),yMin:signedInt16(tables.head.data[38],tables.head.data[39]),ascent:signedInt16(tables.hhea.data[4],tables.hhea.data[5]),descent:signedInt16(tables.hhea.data[6],tables.hhea.data[7]),lineGap:signedInt16(tables.hhea.data[8],tables.hhea.data[9])};this.ascent=metricsOverride.ascent/metricsOverride.unitsPerEm,this.descent=metricsOverride.descent/metricsOverride.unitsPerEm,this.lineGap=metricsOverride.lineGap/metricsOverride.unitsPerEm,this.cssFontInfo&&this.cssFontInfo.lineHeight?(this.lineHeight=this.cssFontInfo.metrics.lineHeight,this.lineGap=this.cssFontInfo.metrics.lineGap):this.lineHeight=this.ascent-this.descent+this.lineGap,tables.post&&function readPostScriptTable(post,propertiesObj,maxpNumGlyphs){const start=(font.start||0)+post.offset;font.pos=start;const end=start+post.length,version=font.getInt32();let glyphNames;font.skip(28);let i,valid=!0;switch(version){case 65536:glyphNames=_fonts_utils.MacStandardGlyphOrdering;break;case 131072:const numGlyphs=font.getUint16();if(numGlyphs!==maxpNumGlyphs){valid=!1;break}const glyphNameIndexes=[];for(i=0;i<numGlyphs;++i){const index=font.getUint16();if(index>=32768){valid=!1;break}glyphNameIndexes.push(index)}if(!valid)break;const customNames=[],strBuf=[];for(;font.pos<end;){const stringLength=font.getByte();for(strBuf.length=stringLength,i=0;i<stringLength;++i)strBuf[i]=String.fromCharCode(font.getByte());customNames.push(strBuf.join(""))}for(glyphNames=[],i=0;i<numGlyphs;++i){const j=glyphNameIndexes[i];j<258?glyphNames.push(_fonts_utils.MacStandardGlyphOrdering[j]):glyphNames.push(customNames[j-258])}break;case 196608:break;default:(0,_util.warn)("Unknown/unsupported post table version "+version),valid=!1,propertiesObj.defaultEncoding&&(glyphNames=propertiesObj.defaultEncoding)}return propertiesObj.glyphNames=glyphNames,valid}(tables.post,properties,numGlyphs),tables.post={tag:"post",data:createPostTable(properties)};const charCodeToGlyphId=[];function hasGlyph(glyphId){return!missingGlyphs[glyphId]}if(properties.composite){const cidToGidMap=properties.cidToGidMap||[],isCidToGidMapEmpty=0===cidToGidMap.length;properties.cMap.forEach((function(charCode,cid){if("string"==typeof cid&&(cid=convertCidString(charCode,cid,!0)),cid>65535)throw new _util.FormatError("Max size of CID is 65,535");let glyphId=-1;isCidToGidMapEmpty?glyphId=cid:void 0!==cidToGidMap[cid]&&(glyphId=cidToGidMap[cid]),glyphId>=0&&glyphId<numGlyphs&&hasGlyph(glyphId)&&(charCodeToGlyphId[charCode]=glyphId)}))}else{const cmapTable=function readCmapTable(cmap,file,isSymbolicFont,hasEncoding){if(!cmap)return(0,_util.warn)("No cmap table available."),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};let segment,start=(file.start||0)+cmap.offset;file.pos=start,file.skip(2);const numTables=file.getUint16();let potentialTable,canBreak=!1;for(let i=0;i<numTables;i++){const platformId=file.getUint16(),encodingId=file.getUint16(),offset=file.getInt32()>>>0;let useTable=!1;if(!potentialTable||potentialTable.platformId!==platformId||potentialTable.encodingId!==encodingId){if(0!==platformId||0!==encodingId&&1!==encodingId&&3!==encodingId)if(1===platformId&&0===encodingId)useTable=!0;else if(3!==platformId||1!==encodingId||!hasEncoding&&potentialTable){if(isSymbolicFont&&3===platformId&&0===encodingId){useTable=!0;let correctlySorted=!0;if(i<numTables-1){const nextBytes=file.peekBytes(2);int16(nextBytes[0],nextBytes[1])<platformId&&(correctlySorted=!1)}correctlySorted&&(canBreak=!0)}}else useTable=!0,isSymbolicFont||(canBreak=!0);else useTable=!0;if(useTable&&(potentialTable={platformId,encodingId,offset}),canBreak)break}}if(potentialTable&&(file.pos=start+potentialTable.offset),!potentialTable||-1===file.peekByte())return(0,_util.warn)("Could not find a preferred cmap table."),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};const format=file.getUint16();let hasShortCmap=!1;const mappings=[];let j,glyphId;if(0===format){for(file.skip(4),j=0;j<256;j++){const index=file.getByte();index&&mappings.push({charCode:j,glyphId:index})}hasShortCmap=!0}else if(2===format){file.skip(4);const subHeaderKeys=[];let maxSubHeaderKey=0;for(let i=0;i<256;i++){const subHeaderKey=file.getUint16()>>3;subHeaderKeys.push(subHeaderKey),maxSubHeaderKey=Math.max(subHeaderKey,maxSubHeaderKey)}const subHeaders=[];for(let i=0;i<=maxSubHeaderKey;i++)subHeaders.push({firstCode:file.getUint16(),entryCount:file.getUint16(),idDelta:signedInt16(file.getByte(),file.getByte()),idRangePos:file.pos+file.getUint16()});for(let i=0;i<256;i++)if(0===subHeaderKeys[i])file.pos=subHeaders[0].idRangePos+2*i,glyphId=file.getUint16(),mappings.push({charCode:i,glyphId});else{const s=subHeaders[subHeaderKeys[i]];for(j=0;j<s.entryCount;j++){const charCode=(i<<8)+j+s.firstCode;file.pos=s.idRangePos+2*j,glyphId=file.getUint16(),0!==glyphId&&(glyphId=(glyphId+s.idDelta)%65536),mappings.push({charCode,glyphId})}}}else if(4===format){file.skip(4);const segCount=file.getUint16()>>1;file.skip(6);const segments=[];let segIndex;for(segIndex=0;segIndex<segCount;segIndex++)segments.push({end:file.getUint16()});for(file.skip(2),segIndex=0;segIndex<segCount;segIndex++)segments[segIndex].start=file.getUint16();for(segIndex=0;segIndex<segCount;segIndex++)segments[segIndex].delta=file.getUint16();let offsetIndex,offsetsCount=0;for(segIndex=0;segIndex<segCount;segIndex++){segment=segments[segIndex];const rangeOffset=file.getUint16();rangeOffset?(offsetIndex=(rangeOffset>>1)-(segCount-segIndex),segment.offsetIndex=offsetIndex,offsetsCount=Math.max(offsetsCount,offsetIndex+segment.end-segment.start+1)):segment.offsetIndex=-1}const offsets=[];for(j=0;j<offsetsCount;j++)offsets.push(file.getUint16());for(segIndex=0;segIndex<segCount;segIndex++){segment=segments[segIndex],start=segment.start;const end=segment.end,delta=segment.delta;for(offsetIndex=segment.offsetIndex,j=start;j<=end;j++)65535!==j&&(glyphId=offsetIndex<0?j:offsets[offsetIndex+j-start],glyphId=glyphId+delta&65535,mappings.push({charCode:j,glyphId}))}}else if(6===format){file.skip(4);const firstCode=file.getUint16(),entryCount=file.getUint16();for(j=0;j<entryCount;j++){glyphId=file.getUint16();const charCode=firstCode+j;mappings.push({charCode,glyphId})}}else{if(12!==format)return(0,_util.warn)("cmap table has unsupported format: "+format),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};{file.skip(10);const nGroups=file.getInt32()>>>0;for(j=0;j<nGroups;j++){const startCharCode=file.getInt32()>>>0,endCharCode=file.getInt32()>>>0;let glyphCode=file.getInt32()>>>0;for(let charCode=startCharCode;charCode<=endCharCode;charCode++)mappings.push({charCode,glyphId:glyphCode++})}}}mappings.sort((function(a,b){return a.charCode-b.charCode}));for(let i=1;i<mappings.length;i++)mappings[i-1].charCode===mappings[i].charCode&&(mappings.splice(i,1),i--);return{platformId:potentialTable.platformId,encodingId:potentialTable.encodingId,mappings,hasShortCmap}}(tables.cmap,font,this.isSymbolicFont,properties.hasEncoding),cmapPlatformId=cmapTable.platformId,cmapEncodingId=cmapTable.encodingId,cmapMappings=cmapTable.mappings,cmapMappingsLength=cmapMappings.length;let baseEncoding=[],forcePostTable=!1;if(!properties.hasEncoding||"MacRomanEncoding"!==properties.baseEncodingName&&"WinAnsiEncoding"!==properties.baseEncodingName||(baseEncoding=(0,_encodings.getEncoding)(properties.baseEncodingName)),properties.hasEncoding&&!this.isSymbolicFont&&(3===cmapPlatformId&&1===cmapEncodingId||1===cmapPlatformId&&0===cmapEncodingId)){const glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();for(let charCode=0;charCode<256;charCode++){let glyphName;if(glyphName=void 0!==this.differences[charCode]?this.differences[charCode]:baseEncoding.length&&""!==baseEncoding[charCode]?baseEncoding[charCode]:_encodings.StandardEncoding[charCode],!glyphName)continue;const standardGlyphName=(0,_fonts_utils.recoverGlyphName)(glyphName,glyphsUnicodeMap);let unicodeOrCharCode;if(3===cmapPlatformId&&1===cmapEncodingId?unicodeOrCharCode=glyphsUnicodeMap[standardGlyphName]:1===cmapPlatformId&&0===cmapEncodingId&&(unicodeOrCharCode=_encodings.MacRomanEncoding.indexOf(standardGlyphName)),void 0===unicodeOrCharCode){if(!properties.glyphNames&&properties.hasIncludedToUnicodeMap&&!(this.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap)){const unicode=this.toUnicode.get(charCode);unicode&&(unicodeOrCharCode=unicode.codePointAt(0))}if(void 0===unicodeOrCharCode)continue}for(let i=0;i<cmapMappingsLength;++i)if(cmapMappings[i].charCode===unicodeOrCharCode){charCodeToGlyphId[charCode]=cmapMappings[i].glyphId;break}}}else if(0===cmapPlatformId){for(let i=0;i<cmapMappingsLength;++i)charCodeToGlyphId[cmapMappings[i].charCode]=cmapMappings[i].glyphId;forcePostTable=!0}else for(let i=0;i<cmapMappingsLength;++i){let charCode=cmapMappings[i].charCode;3===cmapPlatformId&&charCode>=61440&&charCode<=61695&&(charCode&=255),charCodeToGlyphId[charCode]=cmapMappings[i].glyphId}if(properties.glyphNames&&(baseEncoding.length||this.differences.length))for(let i=0;i<256;++i){if(!forcePostTable&&void 0!==charCodeToGlyphId[i])continue;const glyphName=this.differences[i]||baseEncoding[i];if(!glyphName)continue;const glyphId=properties.glyphNames.indexOf(glyphName);glyphId>0&&hasGlyph(glyphId)&&(charCodeToGlyphId[i]=glyphId)}}0===charCodeToGlyphId.length&&(charCodeToGlyphId[0]=0);let glyphZeroId=numGlyphsOut-1;if(dupFirstEntry||(glyphZeroId=0),!properties.cssFontInfo){const newMapping=adjustMapping(charCodeToGlyphId,hasGlyph,glyphZeroId,this.toUnicode);this.toFontChar=newMapping.toFontChar,tables.cmap={tag:"cmap",data:createCmapTable(newMapping.charCodeToGlyphId,newMapping.toUnicodeExtraMap,numGlyphsOut)},tables["OS/2"]&&function validateOS2Table(os2,file){file.pos=(file.start||0)+os2.offset;const version=file.getUint16();file.skip(60);const selection=file.getUint16();return!(version<4&&768&selection)&&(!(file.getUint16()>file.getUint16())&&(file.skip(6),0!==file.getUint16()&&(os2.data[8]=os2.data[9]=0,!0)))}(tables["OS/2"],font)||(tables["OS/2"]={tag:"OS/2",data:createOS2Table(properties,newMapping.charCodeToGlyphId,metricsOverride)})}if(!isTrueType)try{cffFile=new _stream.Stream(tables["CFF "].data);cff=new _cff_parser.CFFParser(cffFile,properties,_fonts_utils.SEAC_ANALYSIS_ENABLED).parse(),cff.duplicateFirstGlyph();const compiler=new _cff_parser.CFFCompiler(cff);tables["CFF "].data=compiler.compile()}catch(e){(0,_util.warn)("Failed to compile font "+properties.loadedName)}if(tables.name){const namePrototype=readNameTable(tables.name);tables.name.data=createNameTable(name,namePrototype),this.psName=namePrototype[0][6]||null}else tables.name={tag:"name",data:createNameTable(this.name)};const builder=new _opentype_file_builder.OpenTypeFileBuilder(header.version);for(const tableTag in tables)builder.addTable(tableTag,tables[tableTag].data);return builder.toArray()}convert(fontName,font,properties){properties.fixedPitch=!1,properties.builtInEncoding&&function adjustToUnicode(properties,builtInEncoding){if(properties.isInternalFont)return;if(builtInEncoding===properties.defaultEncoding)return;if(properties.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap)return;const toUnicode=[],glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();for(const charCode in builtInEncoding){if(properties.hasIncludedToUnicodeMap){if(properties.toUnicode.has(charCode))continue}else if(properties.hasEncoding&&(0===properties.differences.length||void 0!==properties.differences[charCode]))continue;const glyphName=builtInEncoding[charCode],unicode=(0,_unicode.getUnicodeForGlyph)(glyphName,glyphsUnicodeMap);-1!==unicode&&(toUnicode[charCode]=String.fromCharCode(unicode))}toUnicode.length>0&&properties.toUnicode.amend(toUnicode)}(properties,properties.builtInEncoding);let glyphZeroId=1;font instanceof _cff_font.CFFFont&&(glyphZeroId=font.numGlyphs-1);const mapping=font.getGlyphMapping(properties);let newMapping=null,newCharCodeToGlyphId=mapping,toUnicodeExtraMap=null;properties.cssFontInfo||(newMapping=adjustMapping(mapping,font.hasGlyphId.bind(font),glyphZeroId,this.toUnicode),this.toFontChar=newMapping.toFontChar,newCharCodeToGlyphId=newMapping.charCodeToGlyphId,toUnicodeExtraMap=newMapping.toUnicodeExtraMap);const numGlyphs=font.numGlyphs;function getCharCodes(charCodeToGlyphId,glyphId){let charCodes=null;for(const charCode in charCodeToGlyphId)glyphId===charCodeToGlyphId[charCode]&&(charCodes||(charCodes=[]),charCodes.push(0|charCode));return charCodes}function createCharCode(charCodeToGlyphId,glyphId){for(const charCode in charCodeToGlyphId)if(glyphId===charCodeToGlyphId[charCode])return 0|charCode;return newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode]=glyphId,newMapping.nextAvailableFontCharCode++}const seacs=font.seacs;if(newMapping&&_fonts_utils.SEAC_ANALYSIS_ENABLED&&seacs&&seacs.length){const matrix=properties.fontMatrix||_util.FONT_IDENTITY_MATRIX,charset=font.getCharset(),seacMap=Object.create(null);for(let glyphId in seacs){glyphId|=0;const seac=seacs[glyphId],baseGlyphName=_encodings.StandardEncoding[seac[2]],accentGlyphName=_encodings.StandardEncoding[seac[3]],baseGlyphId=charset.indexOf(baseGlyphName),accentGlyphId=charset.indexOf(accentGlyphName);if(baseGlyphId<0||accentGlyphId<0)continue;const accentOffset={x:seac[0]*matrix[0]+seac[1]*matrix[2]+matrix[4],y:seac[0]*matrix[1]+seac[1]*matrix[3]+matrix[5]},charCodes=getCharCodes(mapping,glyphId);if(charCodes)for(let i=0,ii=charCodes.length;i<ii;i++){const charCode=charCodes[i],charCodeToGlyphId=newMapping.charCodeToGlyphId,baseFontCharCode=createCharCode(charCodeToGlyphId,baseGlyphId),accentFontCharCode=createCharCode(charCodeToGlyphId,accentGlyphId);seacMap[charCode]={baseFontCharCode,accentFontCharCode,accentOffset}}}properties.seacMap=seacMap}const unitsPerEm=1/(properties.fontMatrix||_util.FONT_IDENTITY_MATRIX)[0],builder=new _opentype_file_builder.OpenTypeFileBuilder("OTTO");return builder.addTable("CFF ",font.data),builder.addTable("OS/2",createOS2Table(properties,newCharCodeToGlyphId)),builder.addTable("cmap",createCmapTable(newCharCodeToGlyphId,toUnicodeExtraMap,numGlyphs)),builder.addTable("head","\0\0\0\0\0\0\0\0\0\0_<õ\0\0"+safeString16(unitsPerEm)+"\0\0\0\0\v~'\0\0\0\0\v~'\0\0"+safeString16(properties.descent)+"ÿ"+safeString16(properties.ascent)+string16(properties.italicAngle?2:0)+"\0\0\0\0\0\0\0"),builder.addTable("hhea","\0\0\0"+safeString16(properties.ascent)+safeString16(properties.descent)+"\0\0ÿÿ\0\0\0\0\0\0"+safeString16(properties.capHeight)+safeString16(Math.tan(properties.italicAngle)*properties.xHeight)+"\0\0\0\0\0\0\0\0\0\0\0\0"+string16(numGlyphs)),builder.addTable("hmtx",function fontFieldsHmtx(){const charstrings=font.charstrings,cffWidths=font.cff?font.cff.widths:null;let hmtx="\0\0\0\0";for(let i=1,ii=numGlyphs;i<ii;i++){let width=0;if(charstrings){const charstring=charstrings[i-1];width="width"in charstring?charstring.width:0}else cffWidths&&(width=Math.ceil(cffWidths[i]||0));hmtx+=string16(width)+string16(0)}return hmtx}()),builder.addTable("maxp","\0\0P\0"+string16(numGlyphs)),builder.addTable("name",createNameTable(fontName)),builder.addTable("post",createPostTable(properties)),builder.toArray()}get spaceWidth(){const possibleSpaceReplacements=["space","minus","one","i","I"];let width;for(let i=0,ii=possibleSpaceReplacements.length;i<ii;i++){const glyphName=possibleSpaceReplacements[i];if(glyphName in this.widths){width=this.widths[glyphName];break}const glyphUnicode=(0,_glyphlist.getGlyphsUnicode)()[glyphName];let charcode=0;if(this.composite&&this.cMap.contains(glyphUnicode)&&(charcode=this.cMap.lookup(glyphUnicode),"string"==typeof charcode&&(charcode=convertCidString(glyphUnicode,charcode))),!charcode&&this.toUnicode&&(charcode=this.toUnicode.charCodeOf(glyphUnicode)),charcode<=0&&(charcode=glyphUnicode),width=this.widths[charcode],width)break}return width=width||this.defaultWidth,(0,_util.shadow)(this,"spaceWidth",width)}_charToGlyph(charcode,isSpace=!1){let fontCharCode,width,operatorListId,widthCode=charcode;this.cMap&&this.cMap.contains(charcode)&&(widthCode=this.cMap.lookup(charcode),"string"==typeof widthCode&&(widthCode=convertCidString(charcode,widthCode))),width=this.widths[widthCode],"number"!=typeof width&&(width=this.defaultWidth);const vmetric=this.vmetrics&&this.vmetrics[widthCode];let unicode=this.toUnicode.get(charcode)||charcode;"number"==typeof unicode&&(unicode=String.fromCharCode(unicode));let isInFont=void 0!==this.toFontChar[charcode];if(fontCharCode=this.toFontChar[charcode]||charcode,this.missingFile){const glyphName=this.differences[charcode]||this.defaultEncoding[charcode];".notdef"!==glyphName&&""!==glyphName||"Type1"!==this.type||(fontCharCode=32),fontCharCode=(0,_unicode.mapSpecialUnicodeValues)(fontCharCode)}this.isType3Font&&(operatorListId=fontCharCode);let accent=null;if(this.seacMap&&this.seacMap[charcode]){isInFont=!0;const seac=this.seacMap[charcode];fontCharCode=seac.baseFontCharCode,accent={fontChar:String.fromCodePoint(seac.accentFontCharCode),offset:seac.accentOffset}}let fontChar="";"number"==typeof fontCharCode&&(fontCharCode<=1114111?fontChar=String.fromCodePoint(fontCharCode):(0,_util.warn)(`charToGlyph - invalid fontCharCode: ${fontCharCode}`));let glyph=this._glyphCache[charcode];return glyph&&glyph.matchesForCache(charcode,fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont)||(glyph=new Glyph(charcode,fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont),this._glyphCache[charcode]=glyph),glyph}charsToGlyphs(chars){let glyphs=this._charsCache[chars];if(glyphs)return glyphs;if(glyphs=[],this.cMap){const c=Object.create(null),ii=chars.length;let i=0;for(;i<ii;){this.cMap.readCharCode(chars,i,c);const{charcode,length}=c;i+=length;const glyph=this._charToGlyph(charcode,1===length&&32===chars.charCodeAt(i-1));glyphs.push(glyph)}}else for(let i=0,ii=chars.length;i<ii;++i){const charcode=chars.charCodeAt(i),glyph=this._charToGlyph(charcode,32===charcode);glyphs.push(glyph)}return this._charsCache[chars]=glyphs}getCharPositions(chars){const positions=[];if(this.cMap){const c=Object.create(null);let i=0;for(;i<chars.length;){this.cMap.readCharCode(chars,i,c);const length=c.length;positions.push([i,i+length]),i+=length}}else for(let i=0,ii=chars.length;i<ii;++i)positions.push([i,i+1]);return positions}get glyphCacheValues(){return Object.values(this._glyphCache)}encodeString(str){const buffers=[],currentBuf=[],hasCurrentBufErrors=()=>buffers.length%2==1,getCharCode=this.toUnicode instanceof _to_unicode_map.IdentityToUnicodeMap?unicode=>this.toUnicode.charCodeOf(unicode):unicode=>this.toUnicode.charCodeOf(String.fromCodePoint(unicode));for(let i=0,ii=str.length;i<ii;i++){const unicode=str.codePointAt(i);if(unicode>55295&&(unicode<57344||unicode>65533)&&i++,this.toUnicode){const charCode=getCharCode(unicode);if(-1!==charCode){hasCurrentBufErrors()&&(buffers.push(currentBuf.join("")),currentBuf.length=0);for(let j=(this.cMap?this.cMap.getCharCodeLength(charCode):1)-1;j>=0;j--)currentBuf.push(String.fromCharCode(charCode>>8*j&255));continue}}hasCurrentBufErrors()||(buffers.push(currentBuf.join("")),currentBuf.length=0),currentBuf.push(String.fromCodePoint(unicode))}return buffers.push(currentBuf.join("")),buffers}};exports.ErrorFont=class ErrorFont{constructor(error){this.error=error,this.loadedName="g_font_error",this.missingFile=!0}charsToGlyphs(){return[]}encodeString(chars){return[chars]}exportData(extraProperties=!1){return{error:this.error}}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CFFTopDict=exports.CFFStrings=exports.CFFStandardStrings=exports.CFFPrivateDict=exports.CFFParser=exports.CFFIndex=exports.CFFHeader=exports.CFFFDSelect=exports.CFFCompiler=exports.CFFCharset=exports.CFF=void 0;var _util=__w_pdfjs_require__(2),_charsets=__w_pdfjs_require__(36),_encodings=__w_pdfjs_require__(37);const CFFStandardStrings=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];exports.CFFStandardStrings=CFFStandardStrings;const CharstringValidationData=[null,{id:"hstem",min:2,stackClearing:!0,stem:!0},null,{id:"vstem",min:2,stackClearing:!0,stem:!0},{id:"vmoveto",min:1,stackClearing:!0},{id:"rlineto",min:2,resetStack:!0},{id:"hlineto",min:1,resetStack:!0},{id:"vlineto",min:1,resetStack:!0},{id:"rrcurveto",min:6,resetStack:!0},null,{id:"callsubr",min:1,undefStack:!0},{id:"return",min:0,undefStack:!0},null,null,{id:"endchar",min:0,stackClearing:!0},null,null,null,{id:"hstemhm",min:2,stackClearing:!0,stem:!0},{id:"hintmask",min:0,stackClearing:!0},{id:"cntrmask",min:0,stackClearing:!0},{id:"rmoveto",min:2,stackClearing:!0},{id:"hmoveto",min:1,stackClearing:!0},{id:"vstemhm",min:2,stackClearing:!0,stem:!0},{id:"rcurveline",min:8,resetStack:!0},{id:"rlinecurve",min:8,resetStack:!0},{id:"vvcurveto",min:4,resetStack:!0},{id:"hhcurveto",min:4,resetStack:!0},null,{id:"callgsubr",min:1,undefStack:!0},{id:"vhcurveto",min:4,resetStack:!0},{id:"hvcurveto",min:4,resetStack:!0}],CharstringValidationData12=[null,null,null,{id:"and",min:2,stackDelta:-1},{id:"or",min:2,stackDelta:-1},{id:"not",min:1,stackDelta:0},null,null,null,{id:"abs",min:1,stackDelta:0},{id:"add",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]+stack[index-1]}},{id:"sub",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]-stack[index-1]}},{id:"div",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]/stack[index-1]}},null,{id:"neg",min:1,stackDelta:0,stackFn(stack,index){stack[index-1]=-stack[index-1]}},{id:"eq",min:2,stackDelta:-1},null,null,{id:"drop",min:1,stackDelta:-1},null,{id:"put",min:2,stackDelta:-2},{id:"get",min:1,stackDelta:0},{id:"ifelse",min:4,stackDelta:-3},{id:"random",min:0,stackDelta:1},{id:"mul",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]*stack[index-1]}},null,{id:"sqrt",min:1,stackDelta:0},{id:"dup",min:1,stackDelta:1},{id:"exch",min:2,stackDelta:0},{id:"index",min:2,stackDelta:0},{id:"roll",min:3,stackDelta:-2},null,null,null,{id:"hflex",min:7,resetStack:!0},{id:"flex",min:13,resetStack:!0},{id:"hflex1",min:9,resetStack:!0},{id:"flex1",min:11,resetStack:!0}];exports.CFFParser=class CFFParser{constructor(file,properties,seacAnalysisEnabled){this.bytes=file.getBytes(),this.properties=properties,this.seacAnalysisEnabled=!!seacAnalysisEnabled}parse(){const properties=this.properties,cff=new CFF;this.cff=cff;const header=this.parseHeader(),nameIndex=this.parseIndex(header.endPos),topDictIndex=this.parseIndex(nameIndex.endPos),stringIndex=this.parseIndex(topDictIndex.endPos),globalSubrIndex=this.parseIndex(stringIndex.endPos),topDictParsed=this.parseDict(topDictIndex.obj.get(0)),topDict=this.createDict(CFFTopDict,topDictParsed,cff.strings);cff.header=header.obj,cff.names=this.parseNameIndex(nameIndex.obj),cff.strings=this.parseStringIndex(stringIndex.obj),cff.topDict=topDict,cff.globalSubrIndex=globalSubrIndex.obj,this.parsePrivateDict(cff.topDict),cff.isCIDFont=topDict.hasName("ROS");const charStringOffset=topDict.getByName("CharStrings"),charStringIndex=this.parseIndex(charStringOffset).obj,fontMatrix=topDict.getByName("FontMatrix");fontMatrix&&(properties.fontMatrix=fontMatrix);const fontBBox=topDict.getByName("FontBBox");let charset,encoding;if(fontBBox&&(properties.ascent=Math.max(fontBBox[3],fontBBox[1]),properties.descent=Math.min(fontBBox[1],fontBBox[3]),properties.ascentScaled=!0),cff.isCIDFont){const fdArrayIndex=this.parseIndex(topDict.getByName("FDArray")).obj;for(let i=0,ii=fdArrayIndex.count;i<ii;++i){const dictRaw=fdArrayIndex.get(i),fontDict=this.createDict(CFFTopDict,this.parseDict(dictRaw),cff.strings);this.parsePrivateDict(fontDict),cff.fdArray.push(fontDict)}encoding=null,charset=this.parseCharsets(topDict.getByName("charset"),charStringIndex.count,cff.strings,!0),cff.fdSelect=this.parseFDSelect(topDict.getByName("FDSelect"),charStringIndex.count)}else charset=this.parseCharsets(topDict.getByName("charset"),charStringIndex.count,cff.strings,!1),encoding=this.parseEncoding(topDict.getByName("Encoding"),properties,cff.strings,charset.charset);cff.charset=charset,cff.encoding=encoding;const charStringsAndSeacs=this.parseCharStrings({charStrings:charStringIndex,localSubrIndex:topDict.privateDict.subrsIndex,globalSubrIndex:globalSubrIndex.obj,fdSelect:cff.fdSelect,fdArray:cff.fdArray,privateDict:topDict.privateDict});return cff.charStrings=charStringsAndSeacs.charStrings,cff.seacs=charStringsAndSeacs.seacs,cff.widths=charStringsAndSeacs.widths,cff}parseHeader(){let bytes=this.bytes;const bytesLength=bytes.length;let offset=0;for(;offset<bytesLength&&1!==bytes[offset];)++offset;if(offset>=bytesLength)throw new _util.FormatError("Invalid CFF header");0!==offset&&((0,_util.info)("cff data is shifted"),bytes=bytes.subarray(offset),this.bytes=bytes);const major=bytes[0],minor=bytes[1],hdrSize=bytes[2],offSize=bytes[3];return{obj:new CFFHeader(major,minor,hdrSize,offSize),endPos:hdrSize}}parseDict(dict){let pos=0;function parseOperand(){let value=dict[pos++];return 30===value?function parseFloatOperand(){let str="";const eof=15,lookup=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],length=dict.length;for(;pos<length;){const b=dict[pos++],b1=b>>4,b2=15&b;if(b1===eof)break;if(str+=lookup[b1],b2===eof)break;str+=lookup[b2]}return parseFloat(str)}():28===value?(value=dict[pos++],value=(value<<24|dict[pos++]<<16)>>16,value):29===value?(value=dict[pos++],value=value<<8|dict[pos++],value=value<<8|dict[pos++],value=value<<8|dict[pos++],value):value>=32&&value<=246?value-139:value>=247&&value<=250?256*(value-247)+dict[pos++]+108:value>=251&&value<=254?-256*(value-251)-dict[pos++]-108:((0,_util.warn)('CFFParser_parseDict: "'+value+'" is a reserved command.'),NaN)}let operands=[];const entries=[];pos=0;const end=dict.length;for(;pos<end;){let b=dict[pos];b<=21?(12===b&&(b=b<<8|dict[++pos]),entries.push([b,operands]),operands=[],++pos):operands.push(parseOperand())}return entries}parseIndex(pos){const cffIndex=new CFFIndex,bytes=this.bytes,count=bytes[pos++]<<8|bytes[pos++],offsets=[];let i,ii,end=pos;if(0!==count){const offsetSize=bytes[pos++],startPos=pos+(count+1)*offsetSize-1;for(i=0,ii=count+1;i<ii;++i){let offset=0;for(let j=0;j<offsetSize;++j)offset<<=8,offset+=bytes[pos++];offsets.push(startPos+offset)}end=offsets[count]}for(i=0,ii=offsets.length-1;i<ii;++i){const offsetStart=offsets[i],offsetEnd=offsets[i+1];cffIndex.add(bytes.subarray(offsetStart,offsetEnd))}return{obj:cffIndex,endPos:end}}parseNameIndex(index){const names=[];for(let i=0,ii=index.count;i<ii;++i){const name=index.get(i);names.push((0,_util.bytesToString)(name))}return names}parseStringIndex(index){const strings=new CFFStrings;for(let i=0,ii=index.count;i<ii;++i){const data=index.get(i);strings.add((0,_util.bytesToString)(data))}return strings}createDict(Type,dict,strings){const cffDict=new Type(strings);for(let i=0,ii=dict.length;i<ii;++i){const pair=dict[i],key=pair[0],value=pair[1];cffDict.setByKey(key,value)}return cffDict}parseCharString(state,data,localSubrIndex,globalSubrIndex){if(!data||state.callDepth>10)return!1;let stackSize=state.stackSize;const stack=state.stack,length=data.length;for(let j=0;j<length;){const value=data[j++];let validationCommand=null;if(12===value){const q=data[j++];0===q?(data[j-2]=139,data[j-1]=22,stackSize=0):validationCommand=CharstringValidationData12[q]}else if(28===value)stack[stackSize]=(data[j]<<24|data[j+1]<<16)>>16,j+=2,stackSize++;else if(14===value){if(stackSize>=4&&(stackSize-=4,this.seacAnalysisEnabled))return state.seac=stack.slice(stackSize,stackSize+4),!1;validationCommand=CharstringValidationData[value]}else if(value>=32&&value<=246)stack[stackSize]=value-139,stackSize++;else if(value>=247&&value<=254)stack[stackSize]=value<251?(value-247<<8)+data[j]+108:-(value-251<<8)-data[j]-108,j++,stackSize++;else if(255===value)stack[stackSize]=(data[j]<<24|data[j+1]<<16|data[j+2]<<8|data[j+3])/65536,j+=4,stackSize++;else if(19===value||20===value)state.hints+=stackSize>>1,j+=state.hints+7>>3,stackSize%=2,validationCommand=CharstringValidationData[value];else{if(10===value||29===value){let subrsIndex;if(subrsIndex=10===value?localSubrIndex:globalSubrIndex,!subrsIndex)return validationCommand=CharstringValidationData[value],(0,_util.warn)("Missing subrsIndex for "+validationCommand.id),!1;let bias=32768;subrsIndex.count<1240?bias=107:subrsIndex.count<33900&&(bias=1131);const subrNumber=stack[--stackSize]+bias;if(subrNumber<0||subrNumber>=subrsIndex.count||isNaN(subrNumber))return validationCommand=CharstringValidationData[value],(0,_util.warn)("Out of bounds subrIndex for "+validationCommand.id),!1;state.stackSize=stackSize,state.callDepth++;if(!this.parseCharString(state,subrsIndex.get(subrNumber),localSubrIndex,globalSubrIndex))return!1;state.callDepth--,stackSize=state.stackSize;continue}if(11===value)return state.stackSize=stackSize,!0;0===value&&j===data.length?(data[j-1]=14,validationCommand=CharstringValidationData[14]):validationCommand=CharstringValidationData[value]}if(validationCommand){if(validationCommand.stem&&(state.hints+=stackSize>>1,3===value||23===value?state.hasVStems=!0:!state.hasVStems||1!==value&&18!==value||((0,_util.warn)("CFF stem hints are in wrong order"),data[j-1]=1===value?3:23)),"min"in validationCommand&&!state.undefStack&&stackSize<validationCommand.min)return(0,_util.warn)("Not enough parameters for "+validationCommand.id+"; actual: "+stackSize+", expected: "+validationCommand.min),0===stackSize&&(data[j-1]=14,!0);state.firstStackClearing&&validationCommand.stackClearing&&(state.firstStackClearing=!1,stackSize-=validationCommand.min,stackSize>=2&&validationCommand.stem?stackSize%=2:stackSize>1&&(0,_util.warn)("Found too many parameters for stack-clearing command"),stackSize>0&&(state.width=stack[stackSize-1])),"stackDelta"in validationCommand?("stackFn"in validationCommand&&validationCommand.stackFn(stack,stackSize),stackSize+=validationCommand.stackDelta):validationCommand.stackClearing?stackSize=0:validationCommand.resetStack?(stackSize=0,state.undefStack=!1):validationCommand.undefStack&&(stackSize=0,state.undefStack=!0,state.firstStackClearing=!1)}}return state.stackSize=stackSize,!0}parseCharStrings({charStrings,localSubrIndex,globalSubrIndex,fdSelect,fdArray,privateDict}){const seacs=[],widths=[],count=charStrings.count;for(let i=0;i<count;i++){const charstring=charStrings.get(i),state={callDepth:0,stackSize:0,stack:[],undefStack:!0,hints:0,firstStackClearing:!0,seac:null,width:null,hasVStems:!1};let valid=!0,localSubrToUse=null,privateDictToUse=privateDict;if(fdSelect&&fdArray.length){const fdIndex=fdSelect.getFDIndex(i);-1===fdIndex&&((0,_util.warn)("Glyph index is not in fd select."),valid=!1),fdIndex>=fdArray.length&&((0,_util.warn)("Invalid fd index for glyph index."),valid=!1),valid&&(privateDictToUse=fdArray[fdIndex].privateDict,localSubrToUse=privateDictToUse.subrsIndex)}else localSubrIndex&&(localSubrToUse=localSubrIndex);if(valid&&(valid=this.parseCharString(state,charstring,localSubrToUse,globalSubrIndex)),null!==state.width){const nominalWidth=privateDictToUse.getByName("nominalWidthX");widths[i]=nominalWidth+state.width}else{const defaultWidth=privateDictToUse.getByName("defaultWidthX");widths[i]=defaultWidth}null!==state.seac&&(seacs[i]=state.seac),valid||charStrings.set(i,new Uint8Array([14]))}return{charStrings,seacs,widths}}emptyPrivateDictionary(parentDict){const privateDict=this.createDict(CFFPrivateDict,[],parentDict.strings);parentDict.setByKey(18,[0,0]),parentDict.privateDict=privateDict}parsePrivateDict(parentDict){if(!parentDict.hasName("Private"))return void this.emptyPrivateDictionary(parentDict);const privateOffset=parentDict.getByName("Private");if(!Array.isArray(privateOffset)||2!==privateOffset.length)return void parentDict.removeByName("Private");const size=privateOffset[0],offset=privateOffset[1];if(0===size||offset>=this.bytes.length)return void this.emptyPrivateDictionary(parentDict);const privateDictEnd=offset+size,dictData=this.bytes.subarray(offset,privateDictEnd),dict=this.parseDict(dictData),privateDict=this.createDict(CFFPrivateDict,dict,parentDict.strings);if(parentDict.privateDict=privateDict,!privateDict.getByName("Subrs"))return;const subrsOffset=privateDict.getByName("Subrs"),relativeOffset=offset+subrsOffset;if(0===subrsOffset||relativeOffset>=this.bytes.length)return void this.emptyPrivateDictionary(parentDict);const subrsIndex=this.parseIndex(relativeOffset);privateDict.subrsIndex=subrsIndex.obj}parseCharsets(pos,length,strings,cid){if(0===pos)return new CFFCharset(!0,CFFCharsetPredefinedTypes.ISO_ADOBE,_charsets.ISOAdobeCharset);if(1===pos)return new CFFCharset(!0,CFFCharsetPredefinedTypes.EXPERT,_charsets.ExpertCharset);if(2===pos)return new CFFCharset(!0,CFFCharsetPredefinedTypes.EXPERT_SUBSET,_charsets.ExpertSubsetCharset);const bytes=this.bytes,start=pos,format=bytes[pos++],charset=[cid?0:".notdef"];let id,count,i;switch(length-=1,format){case 0:for(i=0;i<length;i++)id=bytes[pos++]<<8|bytes[pos++],charset.push(cid?id:strings.get(id));break;case 1:for(;charset.length<=length;)for(id=bytes[pos++]<<8|bytes[pos++],count=bytes[pos++],i=0;i<=count;i++)charset.push(cid?id++:strings.get(id++));break;case 2:for(;charset.length<=length;)for(id=bytes[pos++]<<8|bytes[pos++],count=bytes[pos++]<<8|bytes[pos++],i=0;i<=count;i++)charset.push(cid?id++:strings.get(id++));break;default:throw new _util.FormatError("Unknown charset format")}const end=pos,raw=bytes.subarray(start,end);return new CFFCharset(!1,format,charset,raw)}parseEncoding(pos,properties,strings,charset){const encoding=Object.create(null),bytes=this.bytes;let format,i,ii,predefined=!1,raw=null;if(0===pos||1===pos){predefined=!0,format=pos;const baseEncoding=pos?_encodings.ExpertEncoding:_encodings.StandardEncoding;for(i=0,ii=charset.length;i<ii;i++){const index=baseEncoding.indexOf(charset[i]);-1!==index&&(encoding[index]=i)}}else{const dataStart=pos;switch(format=bytes[pos++],127&format){case 0:const glyphsCount=bytes[pos++];for(i=1;i<=glyphsCount;i++)encoding[bytes[pos++]]=i;break;case 1:const rangesCount=bytes[pos++];let gid=1;for(i=0;i<rangesCount;i++){const start=bytes[pos++],left=bytes[pos++];for(let j=start;j<=start+left;j++)encoding[j]=gid++}break;default:throw new _util.FormatError(`Unknown encoding format: ${format} in CFF`)}const dataEnd=pos;128&format&&(bytes[dataStart]&=127,function readSupplement(){const supplementsCount=bytes[pos++];for(i=0;i<supplementsCount;i++){const code=bytes[pos++],sid=(bytes[pos++]<<8)+(255&bytes[pos++]);encoding[code]=charset.indexOf(strings.get(sid))}}()),raw=bytes.subarray(dataStart,dataEnd)}return format&=127,new CFFEncoding(predefined,format,encoding,raw)}parseFDSelect(pos,length){const bytes=this.bytes,format=bytes[pos++],fdSelect=[];let i;switch(format){case 0:for(i=0;i<length;++i){const id=bytes[pos++];fdSelect.push(id)}break;case 3:const rangesCount=bytes[pos++]<<8|bytes[pos++];for(i=0;i<rangesCount;++i){let first=bytes[pos++]<<8|bytes[pos++];0===i&&0!==first&&((0,_util.warn)("parseFDSelect: The first range must have a first GID of 0 -- trying to recover."),first=0);const fdIndex=bytes[pos++],next=bytes[pos]<<8|bytes[pos+1];for(let j=first;j<next;++j)fdSelect.push(fdIndex)}pos+=2;break;default:throw new _util.FormatError(`parseFDSelect: Unknown format "${format}".`)}if(fdSelect.length!==length)throw new _util.FormatError("parseFDSelect: Invalid font data.");return new CFFFDSelect(format,fdSelect)}};class CFF{constructor(){this.header=null,this.names=[],this.topDict=null,this.strings=new CFFStrings,this.globalSubrIndex=null,this.encoding=null,this.charset=null,this.charStrings=null,this.fdArray=[],this.fdSelect=null,this.isCIDFont=!1}duplicateFirstGlyph(){if(this.charStrings.count>=65535)return void(0,_util.warn)("Not enough space in charstrings to duplicate first glyph.");const glyphZero=this.charStrings.get(0);this.charStrings.add(glyphZero),this.isCIDFont&&this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0])}hasGlyphId(id){if(id<0||id>=this.charStrings.count)return!1;return this.charStrings.get(id).length>0}}exports.CFF=CFF;class CFFHeader{constructor(major,minor,hdrSize,offSize){this.major=major,this.minor=minor,this.hdrSize=hdrSize,this.offSize=offSize}}exports.CFFHeader=CFFHeader;class CFFStrings{constructor(){this.strings=[]}get(index){return index>=0&&index<=390?CFFStandardStrings[index]:index-391<=this.strings.length?this.strings[index-391]:CFFStandardStrings[0]}getSID(str){let index=CFFStandardStrings.indexOf(str);return-1!==index?index:(index=this.strings.indexOf(str),-1!==index?index+391:-1)}add(value){this.strings.push(value)}get count(){return this.strings.length}}exports.CFFStrings=CFFStrings;class CFFIndex{constructor(){this.objects=[],this.length=0}add(data){this.length+=data.length,this.objects.push(data)}set(index,data){this.length+=data.length-this.objects[index].length,this.objects[index]=data}get(index){return this.objects[index]}get count(){return this.objects.length}}exports.CFFIndex=CFFIndex;class CFFDict{constructor(tables,strings){this.keyToNameMap=tables.keyToNameMap,this.nameToKeyMap=tables.nameToKeyMap,this.defaults=tables.defaults,this.types=tables.types,this.opcodes=tables.opcodes,this.order=tables.order,this.strings=strings,this.values=Object.create(null)}setByKey(key,value){if(!(key in this.keyToNameMap))return!1;const valueLength=value.length;if(0===valueLength)return!0;for(let i=0;i<valueLength;i++)if(isNaN(value[i]))return(0,_util.warn)('Invalid CFFDict value: "'+value+'" for key "'+key+'".'),!0;const type=this.types[key];return"num"!==type&&"sid"!==type&&"offset"!==type||(value=value[0]),this.values[key]=value,!0}setByName(name,value){if(!(name in this.nameToKeyMap))throw new _util.FormatError(`Invalid dictionary name "${name}"`);this.values[this.nameToKeyMap[name]]=value}hasName(name){return this.nameToKeyMap[name]in this.values}getByName(name){if(!(name in this.nameToKeyMap))throw new _util.FormatError(`Invalid dictionary name ${name}"`);const key=this.nameToKeyMap[name];return key in this.values?this.values[key]:this.defaults[key]}removeByName(name){delete this.values[this.nameToKeyMap[name]]}static createTables(layout){const tables={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]};for(let i=0,ii=layout.length;i<ii;++i){const entry=layout[i],key=Array.isArray(entry[0])?(entry[0][0]<<8)+entry[0][1]:entry[0];tables.keyToNameMap[key]=entry[1],tables.nameToKeyMap[entry[1]]=key,tables.types[key]=entry[2],tables.defaults[key]=entry[3],tables.opcodes[key]=Array.isArray(entry[0])?entry[0]:[entry[0]],tables.order.push(key)}return tables}}const CFFTopDictLayout=[[[12,30],"ROS",["sid","sid","num"],null],[[12,20],"SyntheticBase","num",null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","num",0],[[12,2],"ItalicAngle","num",0],[[12,3],"UnderlinePosition","num",-100],[[12,4],"UnderlineThickness","num",50],[[12,5],"PaintType","num",0],[[12,6],"CharstringType","num",2],[[12,7],"FontMatrix",["num","num","num","num","num","num"],[.001,0,0,.001,0,0]],[13,"UniqueID","num",null],[5,"FontBBox",["num","num","num","num"],[0,0,0,0]],[[12,8],"StrokeWidth","num",0],[14,"XUID","array",null],[15,"charset","offset",0],[16,"Encoding","offset",0],[17,"CharStrings","offset",0],[18,"Private",["offset","offset"],null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","num",0],[[12,32],"CIDFontRevision","num",0],[[12,33],"CIDFontType","num",0],[[12,34],"CIDCount","num",8720],[[12,35],"UIDBase","num",null],[[12,37],"FDSelect","offset",null],[[12,36],"FDArray","offset",null],[[12,38],"FontName","sid",null]];class CFFTopDict extends CFFDict{static get tables(){return(0,_util.shadow)(this,"tables",this.createTables(CFFTopDictLayout))}constructor(strings){super(CFFTopDict.tables,strings),this.privateDict=null}}exports.CFFTopDict=CFFTopDict;const CFFPrivateDictLayout=[[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","num",.039625],[[12,10],"BlueShift","num",7],[[12,11],"BlueFuzz","num",1],[10,"StdHW","num",null],[11,"StdVW","num",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","num",0],[[12,17],"LanguageGroup","num",0],[[12,18],"ExpansionFactor","num",.06],[[12,19],"initialRandomSeed","num",0],[20,"defaultWidthX","num",0],[21,"nominalWidthX","num",0],[19,"Subrs","offset",null]];class CFFPrivateDict extends CFFDict{static get tables(){return(0,_util.shadow)(this,"tables",this.createTables(CFFPrivateDictLayout))}constructor(strings){super(CFFPrivateDict.tables,strings),this.subrsIndex=null}}exports.CFFPrivateDict=CFFPrivateDict;const CFFCharsetPredefinedTypes={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2};class CFFCharset{constructor(predefined,format,charset,raw){this.predefined=predefined,this.format=format,this.charset=charset,this.raw=raw}}exports.CFFCharset=CFFCharset;class CFFEncoding{constructor(predefined,format,encoding,raw){this.predefined=predefined,this.format=format,this.encoding=encoding,this.raw=raw}}class CFFFDSelect{constructor(format,fdSelect){this.format=format,this.fdSelect=fdSelect}getFDIndex(glyphIndex){return glyphIndex<0||glyphIndex>=this.fdSelect.length?-1:this.fdSelect[glyphIndex]}}exports.CFFFDSelect=CFFFDSelect;class CFFOffsetTracker{constructor(){this.offsets=Object.create(null)}isTracking(key){return key in this.offsets}track(key,location){if(key in this.offsets)throw new _util.FormatError(`Already tracking location of ${key}`);this.offsets[key]=location}offset(value){for(const key in this.offsets)this.offsets[key]+=value}setEntryLocation(key,values,output){if(!(key in this.offsets))throw new _util.FormatError(`Not tracking location of ${key}`);const data=output.data,dataOffset=this.offsets[key];for(let i=0,ii=values.length;i<ii;++i){const offset0=5*i+dataOffset,offset1=offset0+1,offset2=offset0+2,offset3=offset0+3,offset4=offset0+4;if(29!==data[offset0]||0!==data[offset1]||0!==data[offset2]||0!==data[offset3]||0!==data[offset4])throw new _util.FormatError("writing to an offset that is not empty");const value=values[i];data[offset0]=29,data[offset1]=value>>24&255,data[offset2]=value>>16&255,data[offset3]=value>>8&255,data[offset4]=255&value}}}class CFFCompiler{constructor(cff){this.cff=cff}compile(){const cff=this.cff,output={data:[],length:0,add(data){this.data=this.data.concat(data),this.length=this.data.length}},header=this.compileHeader(cff.header);output.add(header);const nameIndex=this.compileNameIndex(cff.names);if(output.add(nameIndex),cff.isCIDFont&&cff.topDict.hasName("FontMatrix")){const base=cff.topDict.getByName("FontMatrix");cff.topDict.removeByName("FontMatrix");for(let i=0,ii=cff.fdArray.length;i<ii;i++){const subDict=cff.fdArray[i];let matrix=base.slice(0);subDict.hasName("FontMatrix")&&(matrix=_util.Util.transform(matrix,subDict.getByName("FontMatrix"))),subDict.setByName("FontMatrix",matrix)}}const xuid=cff.topDict.getByName("XUID");xuid&&xuid.length>16&&cff.topDict.removeByName("XUID"),cff.topDict.setByName("charset",0);let compiled=this.compileTopDicts([cff.topDict],output.length,cff.isCIDFont);output.add(compiled.output);const topDictTracker=compiled.trackers[0],stringIndex=this.compileStringIndex(cff.strings.strings);output.add(stringIndex);const globalSubrIndex=this.compileIndex(cff.globalSubrIndex);if(output.add(globalSubrIndex),cff.encoding&&cff.topDict.hasName("Encoding"))if(cff.encoding.predefined)topDictTracker.setEntryLocation("Encoding",[cff.encoding.format],output);else{const encoding=this.compileEncoding(cff.encoding);topDictTracker.setEntryLocation("Encoding",[output.length],output),output.add(encoding)}const charset=this.compileCharset(cff.charset,cff.charStrings.count,cff.strings,cff.isCIDFont);topDictTracker.setEntryLocation("charset",[output.length],output),output.add(charset);const charStrings=this.compileCharStrings(cff.charStrings);if(topDictTracker.setEntryLocation("CharStrings",[output.length],output),output.add(charStrings),cff.isCIDFont){topDictTracker.setEntryLocation("FDSelect",[output.length],output);const fdSelect=this.compileFDSelect(cff.fdSelect);output.add(fdSelect),compiled=this.compileTopDicts(cff.fdArray,output.length,!0),topDictTracker.setEntryLocation("FDArray",[output.length],output),output.add(compiled.output);const fontDictTrackers=compiled.trackers;this.compilePrivateDicts(cff.fdArray,fontDictTrackers,output)}return this.compilePrivateDicts([cff.topDict],[topDictTracker],output),output.add([0]),output.data}encodeNumber(value){return Number.isInteger(value)?this.encodeInteger(value):this.encodeFloat(value)}static get EncodeFloatRegExp(){return(0,_util.shadow)(this,"EncodeFloatRegExp",/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/)}encodeFloat(num){let value=num.toString();const m=CFFCompiler.EncodeFloatRegExp.exec(value);if(m){const epsilon=parseFloat("1e"+((m[2]?+m[2]:0)+m[1].length));value=(Math.round(num*epsilon)/epsilon).toString()}let i,ii,nibbles="";for(i=0,ii=value.length;i<ii;++i){const a=value[i];nibbles+="e"===a?"-"===value[++i]?"c":"b":"."===a?"a":"-"===a?"e":a}nibbles+=1&nibbles.length?"f":"ff";const out=[30];for(i=0,ii=nibbles.length;i<ii;i+=2)out.push(parseInt(nibbles.substring(i,i+2),16));return out}encodeInteger(value){let code;return code=value>=-107&&value<=107?[value+139]:value>=108&&value<=1131?[247+((value-=108)>>8),255&value]:value>=-1131&&value<=-108?[251+((value=-value-108)>>8),255&value]:value>=-32768&&value<=32767?[28,value>>8&255,255&value]:[29,value>>24&255,value>>16&255,value>>8&255,255&value],code}compileHeader(header){return[header.major,header.minor,4,header.offSize]}compileNameIndex(names){const nameIndex=new CFFIndex;for(let i=0,ii=names.length;i<ii;++i){const name=names[i],length=Math.min(name.length,127);let sanitizedName=new Array(length);for(let j=0;j<length;j++){let char=name[j];(char<"!"||char>"~"||"["===char||"]"===char||"("===char||")"===char||"{"===char||"}"===char||"<"===char||">"===char||"/"===char||"%"===char)&&(char="_"),sanitizedName[j]=char}sanitizedName=sanitizedName.join(""),""===sanitizedName&&(sanitizedName="Bad_Font_Name"),nameIndex.add((0,_util.stringToBytes)(sanitizedName))}return this.compileIndex(nameIndex)}compileTopDicts(dicts,length,removeCidKeys){const fontDictTrackers=[];let fdArrayIndex=new CFFIndex;for(let i=0,ii=dicts.length;i<ii;++i){const fontDict=dicts[i];removeCidKeys&&(fontDict.removeByName("CIDFontVersion"),fontDict.removeByName("CIDFontRevision"),fontDict.removeByName("CIDFontType"),fontDict.removeByName("CIDCount"),fontDict.removeByName("UIDBase"));const fontDictTracker=new CFFOffsetTracker,fontDictData=this.compileDict(fontDict,fontDictTracker);fontDictTrackers.push(fontDictTracker),fdArrayIndex.add(fontDictData),fontDictTracker.offset(length)}return fdArrayIndex=this.compileIndex(fdArrayIndex,fontDictTrackers),{trackers:fontDictTrackers,output:fdArrayIndex}}compilePrivateDicts(dicts,trackers,output){for(let i=0,ii=dicts.length;i<ii;++i){const fontDict=dicts[i],privateDict=fontDict.privateDict;if(!privateDict||!fontDict.hasName("Private"))throw new _util.FormatError("There must be a private dictionary.");const privateDictTracker=new CFFOffsetTracker,privateDictData=this.compileDict(privateDict,privateDictTracker);let outputLength=output.length;if(privateDictTracker.offset(outputLength),privateDictData.length||(outputLength=0),trackers[i].setEntryLocation("Private",[privateDictData.length,outputLength],output),output.add(privateDictData),privateDict.subrsIndex&&privateDict.hasName("Subrs")){const subrs=this.compileIndex(privateDict.subrsIndex);privateDictTracker.setEntryLocation("Subrs",[privateDictData.length],output),output.add(subrs)}}}compileDict(dict,offsetTracker){const out=[];for(const key of dict.order){if(!(key in dict.values))continue;let values=dict.values[key],types=dict.types[key];if(Array.isArray(types)||(types=[types]),Array.isArray(values)||(values=[values]),0!==values.length){for(let j=0,jj=types.length;j<jj;++j){const type=types[j],value=values[j];switch(type){case"num":case"sid":out.push(...this.encodeNumber(value));break;case"offset":const name=dict.keyToNameMap[key];offsetTracker.isTracking(name)||offsetTracker.track(name,out.length),out.push(29,0,0,0,0);break;case"array":case"delta":out.push(...this.encodeNumber(value));for(let k=1,kk=values.length;k<kk;++k)out.push(...this.encodeNumber(values[k]));break;default:throw new _util.FormatError(`Unknown data type of ${type}`)}}out.push(...dict.opcodes[key])}}return out}compileStringIndex(strings){const stringIndex=new CFFIndex;for(let i=0,ii=strings.length;i<ii;++i)stringIndex.add((0,_util.stringToBytes)(strings[i]));return this.compileIndex(stringIndex)}compileGlobalSubrIndex(){const globalSubrIndex=this.cff.globalSubrIndex;this.out.writeByteArray(this.compileIndex(globalSubrIndex))}compileCharStrings(charStrings){const charStringsIndex=new CFFIndex;for(let i=0;i<charStrings.count;i++){const glyph=charStrings.get(i);0!==glyph.length?charStringsIndex.add(glyph):charStringsIndex.add(new Uint8Array([139,14]))}return this.compileIndex(charStringsIndex)}compileCharset(charset,numGlyphs,strings,isCIDFont){let out;const numGlyphsLessNotDef=numGlyphs-1;if(isCIDFont)out=new Uint8Array([2,0,0,numGlyphsLessNotDef>>8&255,255&numGlyphsLessNotDef]);else{out=new Uint8Array(1+2*numGlyphsLessNotDef),out[0]=0;let charsetIndex=0;const numCharsets=charset.charset.length;let warned=!1;for(let i=1;i<out.length;i+=2){let sid=0;if(charsetIndex<numCharsets){const name=charset.charset[charsetIndex++];sid=strings.getSID(name),-1===sid&&(sid=0,warned||(warned=!0,(0,_util.warn)(`Couldn't find ${name} in CFF strings`)))}out[i]=sid>>8&255,out[i+1]=255&sid}}return this.compileTypedArray(out)}compileEncoding(encoding){return this.compileTypedArray(encoding.raw)}compileFDSelect(fdSelect){const format=fdSelect.format;let out,i;switch(format){case 0:for(out=new Uint8Array(1+fdSelect.fdSelect.length),out[0]=format,i=0;i<fdSelect.fdSelect.length;i++)out[i+1]=fdSelect.fdSelect[i];break;case 3:const start=0;let lastFD=fdSelect.fdSelect[0];const ranges=[format,0,0,start>>8&255,255&start,lastFD];for(i=1;i<fdSelect.fdSelect.length;i++){const currentFD=fdSelect.fdSelect[i];currentFD!==lastFD&&(ranges.push(i>>8&255,255&i,currentFD),lastFD=currentFD)}const numRanges=(ranges.length-3)/3;ranges[1]=numRanges>>8&255,ranges[2]=255&numRanges,ranges.push(i>>8&255,255&i),out=new Uint8Array(ranges)}return this.compileTypedArray(out)}compileTypedArray(data){const out=[];for(let i=0,ii=data.length;i<ii;++i)out[i]=data[i];return out}compileIndex(index,trackers=[]){const objects=index.objects,count=objects.length;if(0===count)return[0,0];const data=[count>>8&255,255&count];let i,offsetSize,lastOffset=1;for(i=0;i<count;++i)lastOffset+=objects[i].length;offsetSize=lastOffset<256?1:lastOffset<65536?2:lastOffset<16777216?3:4,data.push(offsetSize);let relativeOffset=1;for(i=0;i<count+1;i++)1===offsetSize?data.push(255&relativeOffset):2===offsetSize?data.push(relativeOffset>>8&255,255&relativeOffset):3===offsetSize?data.push(relativeOffset>>16&255,relativeOffset>>8&255,255&relativeOffset):data.push(relativeOffset>>>24&255,relativeOffset>>16&255,relativeOffset>>8&255,255&relativeOffset),objects[i]&&(relativeOffset+=objects[i].length);for(i=0;i<count;i++){trackers[i]&&trackers[i].offset(data.length);for(let j=0,jj=objects[i].length;j<jj;j++)data.push(objects[i][j])}return data}}exports.CFFCompiler=CFFCompiler},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ISOAdobeCharset=exports.ExpertSubsetCharset=exports.ExpertCharset=void 0;exports.ISOAdobeCharset=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"];exports.ExpertCharset=[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"];exports.ExpertSubsetCharset=[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"]},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ZapfDingbatsEncoding=exports.WinAnsiEncoding=exports.SymbolSetEncoding=exports.StandardEncoding=exports.MacRomanEncoding=exports.ExpertEncoding=void 0,exports.getEncoding=function getEncoding(encodingName){switch(encodingName){case"WinAnsiEncoding":return WinAnsiEncoding;case"StandardEncoding":return StandardEncoding;case"MacRomanEncoding":return MacRomanEncoding;case"SymbolSetEncoding":return SymbolSetEncoding;case"ZapfDingbatsEncoding":return ZapfDingbatsEncoding;case"ExpertEncoding":return ExpertEncoding;case"MacExpertEncoding":return MacExpertEncoding;default:return null}};const ExpertEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"];exports.ExpertEncoding=ExpertEncoding;const MacExpertEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","centoldstyle","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","","threequartersemdash","","questionsmall","","","","","Ethsmall","","","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","","","","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hypheninferior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","asuperior","centsuperior","","","","","Aacutesmall","Agravesmall","Acircumflexsmall","Adieresissmall","Atildesmall","Aringsmall","Ccedillasmall","Eacutesmall","Egravesmall","Ecircumflexsmall","Edieresissmall","Iacutesmall","Igravesmall","Icircumflexsmall","Idieresissmall","Ntildesmall","Oacutesmall","Ogravesmall","Ocircumflexsmall","Odieresissmall","Otildesmall","Uacutesmall","Ugravesmall","Ucircumflexsmall","Udieresissmall","","eightsuperior","fourinferior","threeinferior","sixinferior","eightinferior","seveninferior","Scaronsmall","","centinferior","twoinferior","","Dieresissmall","","Caronsmall","osuperior","fiveinferior","","commainferior","periodinferior","Yacutesmall","","dollarinferior","","","Thornsmall","","nineinferior","zeroinferior","Zcaronsmall","AEsmall","Oslashsmall","questiondownsmall","oneinferior","Lslashsmall","","","","","","","Cedillasmall","","","","","","OEsmall","figuredash","hyphensuperior","","","","","exclamdownsmall","","Ydieresissmall","","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","ninesuperior","zerosuperior","","esuperior","rsuperior","tsuperior","","","isuperior","ssuperior","dsuperior","","","","","","lsuperior","Ogoneksmall","Brevesmall","Macronsmall","bsuperior","nsuperior","msuperior","commasuperior","periodsuperior","Dotaccentsmall","Ringsmall","","","",""],MacRomanEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","space","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron"];exports.MacRomanEncoding=MacRomanEncoding;const StandardEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls","","","",""];exports.StandardEncoding=StandardEncoding;const WinAnsiEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","bullet","Euro","bullet","quotesinglbase","florin","quotedblbase","ellipsis","dagger","daggerdbl","circumflex","perthousand","Scaron","guilsinglleft","OE","bullet","Zcaron","bullet","bullet","quoteleft","quoteright","quotedblleft","quotedblright","bullet","endash","emdash","tilde","trademark","scaron","guilsinglright","oe","bullet","zcaron","Ydieresis","space","exclamdown","cent","sterling","currency","yen","brokenbar","section","dieresis","copyright","ordfeminine","guillemotleft","logicalnot","hyphen","registered","macron","degree","plusminus","twosuperior","threesuperior","acute","mu","paragraph","periodcentered","cedilla","onesuperior","ordmasculine","guillemotright","onequarter","onehalf","threequarters","questiondown","Agrave","Aacute","Acircumflex","Atilde","Adieresis","Aring","AE","Ccedilla","Egrave","Eacute","Ecircumflex","Edieresis","Igrave","Iacute","Icircumflex","Idieresis","Eth","Ntilde","Ograve","Oacute","Ocircumflex","Otilde","Odieresis","multiply","Oslash","Ugrave","Uacute","Ucircumflex","Udieresis","Yacute","Thorn","germandbls","agrave","aacute","acircumflex","atilde","adieresis","aring","ae","ccedilla","egrave","eacute","ecircumflex","edieresis","igrave","iacute","icircumflex","idieresis","eth","ntilde","ograve","oacute","ocircumflex","otilde","odieresis","divide","oslash","ugrave","uacute","ucircumflex","udieresis","yacute","thorn","ydieresis"];exports.WinAnsiEncoding=WinAnsiEncoding;const SymbolSetEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","universal","numbersign","existential","percent","ampersand","suchthat","parenleft","parenright","asteriskmath","plus","comma","minus","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","congruent","Alpha","Beta","Chi","Delta","Epsilon","Phi","Gamma","Eta","Iota","theta1","Kappa","Lambda","Mu","Nu","Omicron","Pi","Theta","Rho","Sigma","Tau","Upsilon","sigma1","Omega","Xi","Psi","Zeta","bracketleft","therefore","bracketright","perpendicular","underscore","radicalex","alpha","beta","chi","delta","epsilon","phi","gamma","eta","iota","phi1","kappa","lambda","mu","nu","omicron","pi","theta","rho","sigma","tau","upsilon","omega1","omega","xi","psi","zeta","braceleft","bar","braceright","similar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Euro","Upsilon1","minute","lessequal","fraction","infinity","florin","club","diamond","heart","spade","arrowboth","arrowleft","arrowup","arrowright","arrowdown","degree","plusminus","second","greaterequal","multiply","proportional","partialdiff","bullet","divide","notequal","equivalence","approxequal","ellipsis","arrowvertex","arrowhorizex","carriagereturn","aleph","Ifraktur","Rfraktur","weierstrass","circlemultiply","circleplus","emptyset","intersection","union","propersuperset","reflexsuperset","notsubset","propersubset","reflexsubset","element","notelement","angle","gradient","registerserif","copyrightserif","trademarkserif","product","radical","dotmath","logicalnot","logicaland","logicalor","arrowdblboth","arrowdblleft","arrowdblup","arrowdblright","arrowdbldown","lozenge","angleleft","registersans","copyrightsans","trademarksans","summation","parenlefttp","parenleftex","parenleftbt","bracketlefttp","bracketleftex","bracketleftbt","bracelefttp","braceleftmid","braceleftbt","braceex","","angleright","integral","integraltp","integralex","integralbt","parenrighttp","parenrightex","parenrightbt","bracketrighttp","bracketrightex","bracketrightbt","bracerighttp","bracerightmid","bracerightbt",""];exports.SymbolSetEncoding=SymbolSetEncoding;const ZapfDingbatsEncoding=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","a1","a2","a202","a3","a4","a5","a119","a118","a117","a11","a12","a13","a14","a15","a16","a105","a17","a18","a19","a20","a21","a22","a23","a24","a25","a26","a27","a28","a6","a7","a8","a9","a10","a29","a30","a31","a32","a33","a34","a35","a36","a37","a38","a39","a40","a41","a42","a43","a44","a45","a46","a47","a48","a49","a50","a51","a52","a53","a54","a55","a56","a57","a58","a59","a60","a61","a62","a63","a64","a65","a66","a67","a68","a69","a70","a71","a72","a73","a74","a203","a75","a204","a76","a77","a78","a79","a81","a82","a83","a84","a97","a98","a99","a100","","a89","a90","a93","a94","a91","a92","a205","a85","a206","a86","a87","a88","a95","a96","","","","","","","","","","","","","","","","","","","","a101","a102","a103","a104","a106","a107","a108","a112","a111","a110","a109","a120","a121","a122","a123","a124","a125","a126","a127","a128","a129","a130","a131","a132","a133","a134","a135","a136","a137","a138","a139","a140","a141","a142","a143","a144","a145","a146","a147","a148","a149","a150","a151","a152","a153","a154","a155","a156","a157","a158","a159","a160","a161","a163","a164","a196","a165","a192","a166","a167","a168","a169","a170","a171","a172","a173","a162","a174","a175","a176","a177","a178","a179","a193","a180","a199","a181","a200","a182","","a201","a183","a184","a197","a185","a194","a198","a186","a195","a187","a188","a189","a190","a191",""];exports.ZapfDingbatsEncoding=ZapfDingbatsEncoding},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SEAC_ANALYSIS_ENABLED=exports.MacStandardGlyphOrdering=exports.FontFlags=void 0,exports.getFontType=function getFontType(type,subtype,isStandardFont=!1){switch(type){case"Type1":return isStandardFont?_util.FontType.TYPE1STANDARD:"Type1C"===subtype?_util.FontType.TYPE1C:_util.FontType.TYPE1;case"CIDFontType0":return"CIDFontType0C"===subtype?_util.FontType.CIDFONTTYPE0C:_util.FontType.CIDFONTTYPE0;case"OpenType":return _util.FontType.OPENTYPE;case"TrueType":return _util.FontType.TRUETYPE;case"CIDFontType2":return _util.FontType.CIDFONTTYPE2;case"MMType1":return _util.FontType.MMTYPE1;case"Type0":return _util.FontType.TYPE0;default:return _util.FontType.UNKNOWN}},exports.normalizeFontName=function normalizeFontName(name){return name.replace(/[,_]/g,"-").replace(/\s/g,"")},exports.recoverGlyphName=recoverGlyphName,exports.type1FontGlyphMapping=function type1FontGlyphMapping(properties,builtInEncoding,glyphNames){const charCodeToGlyphId=Object.create(null);let glyphId,charCode,baseEncoding;const isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);if(properties.isInternalFont)for(baseEncoding=builtInEncoding,charCode=0;charCode<baseEncoding.length;charCode++)glyphId=glyphNames.indexOf(baseEncoding[charCode]),charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0;else if(properties.baseEncodingName)for(baseEncoding=(0,_encodings.getEncoding)(properties.baseEncodingName),charCode=0;charCode<baseEncoding.length;charCode++)glyphId=glyphNames.indexOf(baseEncoding[charCode]),charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0;else if(isSymbolicFont)for(charCode in builtInEncoding)charCodeToGlyphId[charCode]=builtInEncoding[charCode];else for(baseEncoding=_encodings.StandardEncoding,charCode=0;charCode<baseEncoding.length;charCode++)glyphId=glyphNames.indexOf(baseEncoding[charCode]),charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0;const differences=properties.differences;let glyphsUnicodeMap;if(differences)for(charCode in differences){const glyphName=differences[charCode];if(glyphId=glyphNames.indexOf(glyphName),-1===glyphId){glyphsUnicodeMap||(glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)());const standardGlyphName=recoverGlyphName(glyphName,glyphsUnicodeMap);standardGlyphName!==glyphName&&(glyphId=glyphNames.indexOf(standardGlyphName))}charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0}return charCodeToGlyphId};var _util=__w_pdfjs_require__(2),_encodings=__w_pdfjs_require__(37),_glyphlist=__w_pdfjs_require__(39),_unicode=__w_pdfjs_require__(40);exports.SEAC_ANALYSIS_ENABLED=!0;const FontFlags={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144};exports.FontFlags=FontFlags;function recoverGlyphName(name,glyphsUnicodeMap){if(void 0!==glyphsUnicodeMap[name])return name;const unicode=(0,_unicode.getUnicodeForGlyph)(name,glyphsUnicodeMap);if(-1!==unicode)for(const key in glyphsUnicodeMap)if(glyphsUnicodeMap[key]===unicode)return key;return(0,_util.info)("Unable to recover a standard glyph name for: "+name),name}exports.MacStandardGlyphOrdering=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"]},(__unused_webpack_module,__webpack_exports__,__w_pdfjs_require__)=>{__w_pdfjs_require__.r(__webpack_exports__),__w_pdfjs_require__.d(__webpack_exports__,{getDingbatsGlyphsUnicode:()=>getDingbatsGlyphsUnicode,getGlyphsUnicode:()=>getGlyphsUnicode});var _core_utils_js__WEBPACK_IMPORTED_MODULE_0__=__w_pdfjs_require__(6);const getGlyphsUnicode=(0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getArrayLookupTableFactory)((function(){return["A",65,"AE",198,"AEacute",508,"AEmacron",482,"AEsmall",63462,"Aacute",193,"Aacutesmall",63457,"Abreve",258,"Abreveacute",7854,"Abrevecyrillic",1232,"Abrevedotbelow",7862,"Abrevegrave",7856,"Abrevehookabove",7858,"Abrevetilde",7860,"Acaron",461,"Acircle",9398,"Acircumflex",194,"Acircumflexacute",7844,"Acircumflexdotbelow",7852,"Acircumflexgrave",7846,"Acircumflexhookabove",7848,"Acircumflexsmall",63458,"Acircumflextilde",7850,"Acute",63177,"Acutesmall",63412,"Acyrillic",1040,"Adblgrave",512,"Adieresis",196,"Adieresiscyrillic",1234,"Adieresismacron",478,"Adieresissmall",63460,"Adotbelow",7840,"Adotmacron",480,"Agrave",192,"Agravesmall",63456,"Ahookabove",7842,"Aiecyrillic",1236,"Ainvertedbreve",514,"Alpha",913,"Alphatonos",902,"Amacron",256,"Amonospace",65313,"Aogonek",260,"Aring",197,"Aringacute",506,"Aringbelow",7680,"Aringsmall",63461,"Asmall",63329,"Atilde",195,"Atildesmall",63459,"Aybarmenian",1329,"B",66,"Bcircle",9399,"Bdotaccent",7682,"Bdotbelow",7684,"Becyrillic",1041,"Benarmenian",1330,"Beta",914,"Bhook",385,"Blinebelow",7686,"Bmonospace",65314,"Brevesmall",63220,"Bsmall",63330,"Btopbar",386,"C",67,"Caarmenian",1342,"Cacute",262,"Caron",63178,"Caronsmall",63221,"Ccaron",268,"Ccedilla",199,"Ccedillaacute",7688,"Ccedillasmall",63463,"Ccircle",9400,"Ccircumflex",264,"Cdot",266,"Cdotaccent",266,"Cedillasmall",63416,"Chaarmenian",1353,"Cheabkhasiancyrillic",1212,"Checyrillic",1063,"Chedescenderabkhasiancyrillic",1214,"Chedescendercyrillic",1206,"Chedieresiscyrillic",1268,"Cheharmenian",1347,"Chekhakassiancyrillic",1227,"Cheverticalstrokecyrillic",1208,"Chi",935,"Chook",391,"Circumflexsmall",63222,"Cmonospace",65315,"Coarmenian",1361,"Csmall",63331,"D",68,"DZ",497,"DZcaron",452,"Daarmenian",1332,"Dafrican",393,"Dcaron",270,"Dcedilla",7696,"Dcircle",9401,"Dcircumflexbelow",7698,"Dcroat",272,"Ddotaccent",7690,"Ddotbelow",7692,"Decyrillic",1044,"Deicoptic",1006,"Delta",8710,"Deltagreek",916,"Dhook",394,"Dieresis",63179,"DieresisAcute",63180,"DieresisGrave",63181,"Dieresissmall",63400,"Digammagreek",988,"Djecyrillic",1026,"Dlinebelow",7694,"Dmonospace",65316,"Dotaccentsmall",63223,"Dslash",272,"Dsmall",63332,"Dtopbar",395,"Dz",498,"Dzcaron",453,"Dzeabkhasiancyrillic",1248,"Dzecyrillic",1029,"Dzhecyrillic",1039,"E",69,"Eacute",201,"Eacutesmall",63465,"Ebreve",276,"Ecaron",282,"Ecedillabreve",7708,"Echarmenian",1333,"Ecircle",9402,"Ecircumflex",202,"Ecircumflexacute",7870,"Ecircumflexbelow",7704,"Ecircumflexdotbelow",7878,"Ecircumflexgrave",7872,"Ecircumflexhookabove",7874,"Ecircumflexsmall",63466,"Ecircumflextilde",7876,"Ecyrillic",1028,"Edblgrave",516,"Edieresis",203,"Edieresissmall",63467,"Edot",278,"Edotaccent",278,"Edotbelow",7864,"Efcyrillic",1060,"Egrave",200,"Egravesmall",63464,"Eharmenian",1335,"Ehookabove",7866,"Eightroman",8551,"Einvertedbreve",518,"Eiotifiedcyrillic",1124,"Elcyrillic",1051,"Elevenroman",8554,"Emacron",274,"Emacronacute",7702,"Emacrongrave",7700,"Emcyrillic",1052,"Emonospace",65317,"Encyrillic",1053,"Endescendercyrillic",1186,"Eng",330,"Enghecyrillic",1188,"Enhookcyrillic",1223,"Eogonek",280,"Eopen",400,"Epsilon",917,"Epsilontonos",904,"Ercyrillic",1056,"Ereversed",398,"Ereversedcyrillic",1069,"Escyrillic",1057,"Esdescendercyrillic",1194,"Esh",425,"Esmall",63333,"Eta",919,"Etarmenian",1336,"Etatonos",905,"Eth",208,"Ethsmall",63472,"Etilde",7868,"Etildebelow",7706,"Euro",8364,"Ezh",439,"Ezhcaron",494,"Ezhreversed",440,"F",70,"Fcircle",9403,"Fdotaccent",7710,"Feharmenian",1366,"Feicoptic",996,"Fhook",401,"Fitacyrillic",1138,"Fiveroman",8548,"Fmonospace",65318,"Fourroman",8547,"Fsmall",63334,"G",71,"GBsquare",13191,"Gacute",500,"Gamma",915,"Gammaafrican",404,"Gangiacoptic",1002,"Gbreve",286,"Gcaron",486,"Gcedilla",290,"Gcircle",9404,"Gcircumflex",284,"Gcommaaccent",290,"Gdot",288,"Gdotaccent",288,"Gecyrillic",1043,"Ghadarmenian",1346,"Ghemiddlehookcyrillic",1172,"Ghestrokecyrillic",1170,"Gheupturncyrillic",1168,"Ghook",403,"Gimarmenian",1331,"Gjecyrillic",1027,"Gmacron",7712,"Gmonospace",65319,"Grave",63182,"Gravesmall",63328,"Gsmall",63335,"Gsmallhook",667,"Gstroke",484,"H",72,"H18533",9679,"H18543",9642,"H18551",9643,"H22073",9633,"HPsquare",13259,"Haabkhasiancyrillic",1192,"Hadescendercyrillic",1202,"Hardsigncyrillic",1066,"Hbar",294,"Hbrevebelow",7722,"Hcedilla",7720,"Hcircle",9405,"Hcircumflex",292,"Hdieresis",7718,"Hdotaccent",7714,"Hdotbelow",7716,"Hmonospace",65320,"Hoarmenian",1344,"Horicoptic",1e3,"Hsmall",63336,"Hungarumlaut",63183,"Hungarumlautsmall",63224,"Hzsquare",13200,"I",73,"IAcyrillic",1071,"IJ",306,"IUcyrillic",1070,"Iacute",205,"Iacutesmall",63469,"Ibreve",300,"Icaron",463,"Icircle",9406,"Icircumflex",206,"Icircumflexsmall",63470,"Icyrillic",1030,"Idblgrave",520,"Idieresis",207,"Idieresisacute",7726,"Idieresiscyrillic",1252,"Idieresissmall",63471,"Idot",304,"Idotaccent",304,"Idotbelow",7882,"Iebrevecyrillic",1238,"Iecyrillic",1045,"Ifraktur",8465,"Igrave",204,"Igravesmall",63468,"Ihookabove",7880,"Iicyrillic",1048,"Iinvertedbreve",522,"Iishortcyrillic",1049,"Imacron",298,"Imacroncyrillic",1250,"Imonospace",65321,"Iniarmenian",1339,"Iocyrillic",1025,"Iogonek",302,"Iota",921,"Iotaafrican",406,"Iotadieresis",938,"Iotatonos",906,"Ismall",63337,"Istroke",407,"Itilde",296,"Itildebelow",7724,"Izhitsacyrillic",1140,"Izhitsadblgravecyrillic",1142,"J",74,"Jaarmenian",1345,"Jcircle",9407,"Jcircumflex",308,"Jecyrillic",1032,"Jheharmenian",1355,"Jmonospace",65322,"Jsmall",63338,"K",75,"KBsquare",13189,"KKsquare",13261,"Kabashkircyrillic",1184,"Kacute",7728,"Kacyrillic",1050,"Kadescendercyrillic",1178,"Kahookcyrillic",1219,"Kappa",922,"Kastrokecyrillic",1182,"Kaverticalstrokecyrillic",1180,"Kcaron",488,"Kcedilla",310,"Kcircle",9408,"Kcommaaccent",310,"Kdotbelow",7730,"Keharmenian",1364,"Kenarmenian",1343,"Khacyrillic",1061,"Kheicoptic",998,"Khook",408,"Kjecyrillic",1036,"Klinebelow",7732,"Kmonospace",65323,"Koppacyrillic",1152,"Koppagreek",990,"Ksicyrillic",1134,"Ksmall",63339,"L",76,"LJ",455,"LL",63167,"Lacute",313,"Lambda",923,"Lcaron",317,"Lcedilla",315,"Lcircle",9409,"Lcircumflexbelow",7740,"Lcommaaccent",315,"Ldot",319,"Ldotaccent",319,"Ldotbelow",7734,"Ldotbelowmacron",7736,"Liwnarmenian",1340,"Lj",456,"Ljecyrillic",1033,"Llinebelow",7738,"Lmonospace",65324,"Lslash",321,"Lslashsmall",63225,"Lsmall",63340,"M",77,"MBsquare",13190,"Macron",63184,"Macronsmall",63407,"Macute",7742,"Mcircle",9410,"Mdotaccent",7744,"Mdotbelow",7746,"Menarmenian",1348,"Mmonospace",65325,"Msmall",63341,"Mturned",412,"Mu",924,"N",78,"NJ",458,"Nacute",323,"Ncaron",327,"Ncedilla",325,"Ncircle",9411,"Ncircumflexbelow",7754,"Ncommaaccent",325,"Ndotaccent",7748,"Ndotbelow",7750,"Nhookleft",413,"Nineroman",8552,"Nj",459,"Njecyrillic",1034,"Nlinebelow",7752,"Nmonospace",65326,"Nowarmenian",1350,"Nsmall",63342,"Ntilde",209,"Ntildesmall",63473,"Nu",925,"O",79,"OE",338,"OEsmall",63226,"Oacute",211,"Oacutesmall",63475,"Obarredcyrillic",1256,"Obarreddieresiscyrillic",1258,"Obreve",334,"Ocaron",465,"Ocenteredtilde",415,"Ocircle",9412,"Ocircumflex",212,"Ocircumflexacute",7888,"Ocircumflexdotbelow",7896,"Ocircumflexgrave",7890,"Ocircumflexhookabove",7892,"Ocircumflexsmall",63476,"Ocircumflextilde",7894,"Ocyrillic",1054,"Odblacute",336,"Odblgrave",524,"Odieresis",214,"Odieresiscyrillic",1254,"Odieresissmall",63478,"Odotbelow",7884,"Ogoneksmall",63227,"Ograve",210,"Ogravesmall",63474,"Oharmenian",1365,"Ohm",8486,"Ohookabove",7886,"Ohorn",416,"Ohornacute",7898,"Ohorndotbelow",7906,"Ohorngrave",7900,"Ohornhookabove",7902,"Ohorntilde",7904,"Ohungarumlaut",336,"Oi",418,"Oinvertedbreve",526,"Omacron",332,"Omacronacute",7762,"Omacrongrave",7760,"Omega",8486,"Omegacyrillic",1120,"Omegagreek",937,"Omegaroundcyrillic",1146,"Omegatitlocyrillic",1148,"Omegatonos",911,"Omicron",927,"Omicrontonos",908,"Omonospace",65327,"Oneroman",8544,"Oogonek",490,"Oogonekmacron",492,"Oopen",390,"Oslash",216,"Oslashacute",510,"Oslashsmall",63480,"Osmall",63343,"Ostrokeacute",510,"Otcyrillic",1150,"Otilde",213,"Otildeacute",7756,"Otildedieresis",7758,"Otildesmall",63477,"P",80,"Pacute",7764,"Pcircle",9413,"Pdotaccent",7766,"Pecyrillic",1055,"Peharmenian",1354,"Pemiddlehookcyrillic",1190,"Phi",934,"Phook",420,"Pi",928,"Piwrarmenian",1363,"Pmonospace",65328,"Psi",936,"Psicyrillic",1136,"Psmall",63344,"Q",81,"Qcircle",9414,"Qmonospace",65329,"Qsmall",63345,"R",82,"Raarmenian",1356,"Racute",340,"Rcaron",344,"Rcedilla",342,"Rcircle",9415,"Rcommaaccent",342,"Rdblgrave",528,"Rdotaccent",7768,"Rdotbelow",7770,"Rdotbelowmacron",7772,"Reharmenian",1360,"Rfraktur",8476,"Rho",929,"Ringsmall",63228,"Rinvertedbreve",530,"Rlinebelow",7774,"Rmonospace",65330,"Rsmall",63346,"Rsmallinverted",641,"Rsmallinvertedsuperior",694,"S",83,"SF010000",9484,"SF020000",9492,"SF030000",9488,"SF040000",9496,"SF050000",9532,"SF060000",9516,"SF070000",9524,"SF080000",9500,"SF090000",9508,"SF100000",9472,"SF110000",9474,"SF190000",9569,"SF200000",9570,"SF210000",9558,"SF220000",9557,"SF230000",9571,"SF240000",9553,"SF250000",9559,"SF260000",9565,"SF270000",9564,"SF280000",9563,"SF360000",9566,"SF370000",9567,"SF380000",9562,"SF390000",9556,"SF400000",9577,"SF410000",9574,"SF420000",9568,"SF430000",9552,"SF440000",9580,"SF450000",9575,"SF460000",9576,"SF470000",9572,"SF480000",9573,"SF490000",9561,"SF500000",9560,"SF510000",9554,"SF520000",9555,"SF530000",9579,"SF540000",9578,"Sacute",346,"Sacutedotaccent",7780,"Sampigreek",992,"Scaron",352,"Scarondotaccent",7782,"Scaronsmall",63229,"Scedilla",350,"Schwa",399,"Schwacyrillic",1240,"Schwadieresiscyrillic",1242,"Scircle",9416,"Scircumflex",348,"Scommaaccent",536,"Sdotaccent",7776,"Sdotbelow",7778,"Sdotbelowdotaccent",7784,"Seharmenian",1357,"Sevenroman",8550,"Shaarmenian",1351,"Shacyrillic",1064,"Shchacyrillic",1065,"Sheicoptic",994,"Shhacyrillic",1210,"Shimacoptic",1004,"Sigma",931,"Sixroman",8549,"Smonospace",65331,"Softsigncyrillic",1068,"Ssmall",63347,"Stigmagreek",986,"T",84,"Tau",932,"Tbar",358,"Tcaron",356,"Tcedilla",354,"Tcircle",9417,"Tcircumflexbelow",7792,"Tcommaaccent",354,"Tdotaccent",7786,"Tdotbelow",7788,"Tecyrillic",1058,"Tedescendercyrillic",1196,"Tenroman",8553,"Tetsecyrillic",1204,"Theta",920,"Thook",428,"Thorn",222,"Thornsmall",63486,"Threeroman",8546,"Tildesmall",63230,"Tiwnarmenian",1359,"Tlinebelow",7790,"Tmonospace",65332,"Toarmenian",1337,"Tonefive",444,"Tonesix",388,"Tonetwo",423,"Tretroflexhook",430,"Tsecyrillic",1062,"Tshecyrillic",1035,"Tsmall",63348,"Twelveroman",8555,"Tworoman",8545,"U",85,"Uacute",218,"Uacutesmall",63482,"Ubreve",364,"Ucaron",467,"Ucircle",9418,"Ucircumflex",219,"Ucircumflexbelow",7798,"Ucircumflexsmall",63483,"Ucyrillic",1059,"Udblacute",368,"Udblgrave",532,"Udieresis",220,"Udieresisacute",471,"Udieresisbelow",7794,"Udieresiscaron",473,"Udieresiscyrillic",1264,"Udieresisgrave",475,"Udieresismacron",469,"Udieresissmall",63484,"Udotbelow",7908,"Ugrave",217,"Ugravesmall",63481,"Uhookabove",7910,"Uhorn",431,"Uhornacute",7912,"Uhorndotbelow",7920,"Uhorngrave",7914,"Uhornhookabove",7916,"Uhorntilde",7918,"Uhungarumlaut",368,"Uhungarumlautcyrillic",1266,"Uinvertedbreve",534,"Ukcyrillic",1144,"Umacron",362,"Umacroncyrillic",1262,"Umacrondieresis",7802,"Umonospace",65333,"Uogonek",370,"Upsilon",933,"Upsilon1",978,"Upsilonacutehooksymbolgreek",979,"Upsilonafrican",433,"Upsilondieresis",939,"Upsilondieresishooksymbolgreek",980,"Upsilonhooksymbol",978,"Upsilontonos",910,"Uring",366,"Ushortcyrillic",1038,"Usmall",63349,"Ustraightcyrillic",1198,"Ustraightstrokecyrillic",1200,"Utilde",360,"Utildeacute",7800,"Utildebelow",7796,"V",86,"Vcircle",9419,"Vdotbelow",7806,"Vecyrillic",1042,"Vewarmenian",1358,"Vhook",434,"Vmonospace",65334,"Voarmenian",1352,"Vsmall",63350,"Vtilde",7804,"W",87,"Wacute",7810,"Wcircle",9420,"Wcircumflex",372,"Wdieresis",7812,"Wdotaccent",7814,"Wdotbelow",7816,"Wgrave",7808,"Wmonospace",65335,"Wsmall",63351,"X",88,"Xcircle",9421,"Xdieresis",7820,"Xdotaccent",7818,"Xeharmenian",1341,"Xi",926,"Xmonospace",65336,"Xsmall",63352,"Y",89,"Yacute",221,"Yacutesmall",63485,"Yatcyrillic",1122,"Ycircle",9422,"Ycircumflex",374,"Ydieresis",376,"Ydieresissmall",63487,"Ydotaccent",7822,"Ydotbelow",7924,"Yericyrillic",1067,"Yerudieresiscyrillic",1272,"Ygrave",7922,"Yhook",435,"Yhookabove",7926,"Yiarmenian",1349,"Yicyrillic",1031,"Yiwnarmenian",1362,"Ymonospace",65337,"Ysmall",63353,"Ytilde",7928,"Yusbigcyrillic",1130,"Yusbigiotifiedcyrillic",1132,"Yuslittlecyrillic",1126,"Yuslittleiotifiedcyrillic",1128,"Z",90,"Zaarmenian",1334,"Zacute",377,"Zcaron",381,"Zcaronsmall",63231,"Zcircle",9423,"Zcircumflex",7824,"Zdot",379,"Zdotaccent",379,"Zdotbelow",7826,"Zecyrillic",1047,"Zedescendercyrillic",1176,"Zedieresiscyrillic",1246,"Zeta",918,"Zhearmenian",1338,"Zhebrevecyrillic",1217,"Zhecyrillic",1046,"Zhedescendercyrillic",1174,"Zhedieresiscyrillic",1244,"Zlinebelow",7828,"Zmonospace",65338,"Zsmall",63354,"Zstroke",437,"a",97,"aabengali",2438,"aacute",225,"aadeva",2310,"aagujarati",2694,"aagurmukhi",2566,"aamatragurmukhi",2622,"aarusquare",13059,"aavowelsignbengali",2494,"aavowelsigndeva",2366,"aavowelsigngujarati",2750,"abbreviationmarkarmenian",1375,"abbreviationsigndeva",2416,"abengali",2437,"abopomofo",12570,"abreve",259,"abreveacute",7855,"abrevecyrillic",1233,"abrevedotbelow",7863,"abrevegrave",7857,"abrevehookabove",7859,"abrevetilde",7861,"acaron",462,"acircle",9424,"acircumflex",226,"acircumflexacute",7845,"acircumflexdotbelow",7853,"acircumflexgrave",7847,"acircumflexhookabove",7849,"acircumflextilde",7851,"acute",180,"acutebelowcmb",791,"acutecmb",769,"acutecomb",769,"acutedeva",2388,"acutelowmod",719,"acutetonecmb",833,"acyrillic",1072,"adblgrave",513,"addakgurmukhi",2673,"adeva",2309,"adieresis",228,"adieresiscyrillic",1235,"adieresismacron",479,"adotbelow",7841,"adotmacron",481,"ae",230,"aeacute",509,"aekorean",12624,"aemacron",483,"afii00208",8213,"afii08941",8356,"afii10017",1040,"afii10018",1041,"afii10019",1042,"afii10020",1043,"afii10021",1044,"afii10022",1045,"afii10023",1025,"afii10024",1046,"afii10025",1047,"afii10026",1048,"afii10027",1049,"afii10028",1050,"afii10029",1051,"afii10030",1052,"afii10031",1053,"afii10032",1054,"afii10033",1055,"afii10034",1056,"afii10035",1057,"afii10036",1058,"afii10037",1059,"afii10038",1060,"afii10039",1061,"afii10040",1062,"afii10041",1063,"afii10042",1064,"afii10043",1065,"afii10044",1066,"afii10045",1067,"afii10046",1068,"afii10047",1069,"afii10048",1070,"afii10049",1071,"afii10050",1168,"afii10051",1026,"afii10052",1027,"afii10053",1028,"afii10054",1029,"afii10055",1030,"afii10056",1031,"afii10057",1032,"afii10058",1033,"afii10059",1034,"afii10060",1035,"afii10061",1036,"afii10062",1038,"afii10063",63172,"afii10064",63173,"afii10065",1072,"afii10066",1073,"afii10067",1074,"afii10068",1075,"afii10069",1076,"afii10070",1077,"afii10071",1105,"afii10072",1078,"afii10073",1079,"afii10074",1080,"afii10075",1081,"afii10076",1082,"afii10077",1083,"afii10078",1084,"afii10079",1085,"afii10080",1086,"afii10081",1087,"afii10082",1088,"afii10083",1089,"afii10084",1090,"afii10085",1091,"afii10086",1092,"afii10087",1093,"afii10088",1094,"afii10089",1095,"afii10090",1096,"afii10091",1097,"afii10092",1098,"afii10093",1099,"afii10094",1100,"afii10095",1101,"afii10096",1102,"afii10097",1103,"afii10098",1169,"afii10099",1106,"afii10100",1107,"afii10101",1108,"afii10102",1109,"afii10103",1110,"afii10104",1111,"afii10105",1112,"afii10106",1113,"afii10107",1114,"afii10108",1115,"afii10109",1116,"afii10110",1118,"afii10145",1039,"afii10146",1122,"afii10147",1138,"afii10148",1140,"afii10192",63174,"afii10193",1119,"afii10194",1123,"afii10195",1139,"afii10196",1141,"afii10831",63175,"afii10832",63176,"afii10846",1241,"afii299",8206,"afii300",8207,"afii301",8205,"afii57381",1642,"afii57388",1548,"afii57392",1632,"afii57393",1633,"afii57394",1634,"afii57395",1635,"afii57396",1636,"afii57397",1637,"afii57398",1638,"afii57399",1639,"afii57400",1640,"afii57401",1641,"afii57403",1563,"afii57407",1567,"afii57409",1569,"afii57410",1570,"afii57411",1571,"afii57412",1572,"afii57413",1573,"afii57414",1574,"afii57415",1575,"afii57416",1576,"afii57417",1577,"afii57418",1578,"afii57419",1579,"afii57420",1580,"afii57421",1581,"afii57422",1582,"afii57423",1583,"afii57424",1584,"afii57425",1585,"afii57426",1586,"afii57427",1587,"afii57428",1588,"afii57429",1589,"afii57430",1590,"afii57431",1591,"afii57432",1592,"afii57433",1593,"afii57434",1594,"afii57440",1600,"afii57441",1601,"afii57442",1602,"afii57443",1603,"afii57444",1604,"afii57445",1605,"afii57446",1606,"afii57448",1608,"afii57449",1609,"afii57450",1610,"afii57451",1611,"afii57452",1612,"afii57453",1613,"afii57454",1614,"afii57455",1615,"afii57456",1616,"afii57457",1617,"afii57458",1618,"afii57470",1607,"afii57505",1700,"afii57506",1662,"afii57507",1670,"afii57508",1688,"afii57509",1711,"afii57511",1657,"afii57512",1672,"afii57513",1681,"afii57514",1722,"afii57519",1746,"afii57534",1749,"afii57636",8362,"afii57645",1470,"afii57658",1475,"afii57664",1488,"afii57665",1489,"afii57666",1490,"afii57667",1491,"afii57668",1492,"afii57669",1493,"afii57670",1494,"afii57671",1495,"afii57672",1496,"afii57673",1497,"afii57674",1498,"afii57675",1499,"afii57676",1500,"afii57677",1501,"afii57678",1502,"afii57679",1503,"afii57680",1504,"afii57681",1505,"afii57682",1506,"afii57683",1507,"afii57684",1508,"afii57685",1509,"afii57686",1510,"afii57687",1511,"afii57688",1512,"afii57689",1513,"afii57690",1514,"afii57694",64298,"afii57695",64299,"afii57700",64331,"afii57705",64287,"afii57716",1520,"afii57717",1521,"afii57718",1522,"afii57723",64309,"afii57793",1460,"afii57794",1461,"afii57795",1462,"afii57796",1467,"afii57797",1464,"afii57798",1463,"afii57799",1456,"afii57800",1458,"afii57801",1457,"afii57802",1459,"afii57803",1474,"afii57804",1473,"afii57806",1465,"afii57807",1468,"afii57839",1469,"afii57841",1471,"afii57842",1472,"afii57929",700,"afii61248",8453,"afii61289",8467,"afii61352",8470,"afii61573",8236,"afii61574",8237,"afii61575",8238,"afii61664",8204,"afii63167",1645,"afii64937",701,"agrave",224,"agujarati",2693,"agurmukhi",2565,"ahiragana",12354,"ahookabove",7843,"aibengali",2448,"aibopomofo",12574,"aideva",2320,"aiecyrillic",1237,"aigujarati",2704,"aigurmukhi",2576,"aimatragurmukhi",2632,"ainarabic",1593,"ainfinalarabic",65226,"aininitialarabic",65227,"ainmedialarabic",65228,"ainvertedbreve",515,"aivowelsignbengali",2504,"aivowelsigndeva",2376,"aivowelsigngujarati",2760,"akatakana",12450,"akatakanahalfwidth",65393,"akorean",12623,"alef",1488,"alefarabic",1575,"alefdageshhebrew",64304,"aleffinalarabic",65166,"alefhamzaabovearabic",1571,"alefhamzaabovefinalarabic",65156,"alefhamzabelowarabic",1573,"alefhamzabelowfinalarabic",65160,"alefhebrew",1488,"aleflamedhebrew",64335,"alefmaddaabovearabic",1570,"alefmaddaabovefinalarabic",65154,"alefmaksuraarabic",1609,"alefmaksurafinalarabic",65264,"alefmaksurainitialarabic",65267,"alefmaksuramedialarabic",65268,"alefpatahhebrew",64302,"alefqamatshebrew",64303,"aleph",8501,"allequal",8780,"alpha",945,"alphatonos",940,"amacron",257,"amonospace",65345,"ampersand",38,"ampersandmonospace",65286,"ampersandsmall",63270,"amsquare",13250,"anbopomofo",12578,"angbopomofo",12580,"angbracketleft",12296,"angbracketright",12297,"angkhankhuthai",3674,"angle",8736,"anglebracketleft",12296,"anglebracketleftvertical",65087,"anglebracketright",12297,"anglebracketrightvertical",65088,"angleleft",9001,"angleright",9002,"angstrom",8491,"anoteleia",903,"anudattadeva",2386,"anusvarabengali",2434,"anusvaradeva",2306,"anusvaragujarati",2690,"aogonek",261,"apaatosquare",13056,"aparen",9372,"apostrophearmenian",1370,"apostrophemod",700,"apple",63743,"approaches",8784,"approxequal",8776,"approxequalorimage",8786,"approximatelyequal",8773,"araeaekorean",12686,"araeakorean",12685,"arc",8978,"arighthalfring",7834,"aring",229,"aringacute",507,"aringbelow",7681,"arrowboth",8596,"arrowdashdown",8675,"arrowdashleft",8672,"arrowdashright",8674,"arrowdashup",8673,"arrowdblboth",8660,"arrowdbldown",8659,"arrowdblleft",8656,"arrowdblright",8658,"arrowdblup",8657,"arrowdown",8595,"arrowdownleft",8601,"arrowdownright",8600,"arrowdownwhite",8681,"arrowheaddownmod",709,"arrowheadleftmod",706,"arrowheadrightmod",707,"arrowheadupmod",708,"arrowhorizex",63719,"arrowleft",8592,"arrowleftdbl",8656,"arrowleftdblstroke",8653,"arrowleftoverright",8646,"arrowleftwhite",8678,"arrowright",8594,"arrowrightdblstroke",8655,"arrowrightheavy",10142,"arrowrightoverleft",8644,"arrowrightwhite",8680,"arrowtableft",8676,"arrowtabright",8677,"arrowup",8593,"arrowupdn",8597,"arrowupdnbse",8616,"arrowupdownbase",8616,"arrowupleft",8598,"arrowupleftofdown",8645,"arrowupright",8599,"arrowupwhite",8679,"arrowvertex",63718,"asciicircum",94,"asciicircummonospace",65342,"asciitilde",126,"asciitildemonospace",65374,"ascript",593,"ascriptturned",594,"asmallhiragana",12353,"asmallkatakana",12449,"asmallkatakanahalfwidth",65383,"asterisk",42,"asteriskaltonearabic",1645,"asteriskarabic",1645,"asteriskmath",8727,"asteriskmonospace",65290,"asterisksmall",65121,"asterism",8258,"asuperior",63209,"asymptoticallyequal",8771,"at",64,"atilde",227,"atmonospace",65312,"atsmall",65131,"aturned",592,"aubengali",2452,"aubopomofo",12576,"audeva",2324,"augujarati",2708,"augurmukhi",2580,"aulengthmarkbengali",2519,"aumatragurmukhi",2636,"auvowelsignbengali",2508,"auvowelsigndeva",2380,"auvowelsigngujarati",2764,"avagrahadeva",2365,"aybarmenian",1377,"ayin",1506,"ayinaltonehebrew",64288,"ayinhebrew",1506,"b",98,"babengali",2476,"backslash",92,"backslashmonospace",65340,"badeva",2348,"bagujarati",2732,"bagurmukhi",2604,"bahiragana",12400,"bahtthai",3647,"bakatakana",12496,"bar",124,"barmonospace",65372,"bbopomofo",12549,"bcircle",9425,"bdotaccent",7683,"bdotbelow",7685,"beamedsixteenthnotes",9836,"because",8757,"becyrillic",1073,"beharabic",1576,"behfinalarabic",65168,"behinitialarabic",65169,"behiragana",12409,"behmedialarabic",65170,"behmeeminitialarabic",64671,"behmeemisolatedarabic",64520,"behnoonfinalarabic",64621,"bekatakana",12505,"benarmenian",1378,"bet",1489,"beta",946,"betasymbolgreek",976,"betdagesh",64305,"betdageshhebrew",64305,"bethebrew",1489,"betrafehebrew",64332,"bhabengali",2477,"bhadeva",2349,"bhagujarati",2733,"bhagurmukhi",2605,"bhook",595,"bihiragana",12403,"bikatakana",12499,"bilabialclick",664,"bindigurmukhi",2562,"birusquare",13105,"blackcircle",9679,"blackdiamond",9670,"blackdownpointingtriangle",9660,"blackleftpointingpointer",9668,"blackleftpointingtriangle",9664,"blacklenticularbracketleft",12304,"blacklenticularbracketleftvertical",65083,"blacklenticularbracketright",12305,"blacklenticularbracketrightvertical",65084,"blacklowerlefttriangle",9699,"blacklowerrighttriangle",9698,"blackrectangle",9644,"blackrightpointingpointer",9658,"blackrightpointingtriangle",9654,"blacksmallsquare",9642,"blacksmilingface",9787,"blacksquare",9632,"blackstar",9733,"blackupperlefttriangle",9700,"blackupperrighttriangle",9701,"blackuppointingsmalltriangle",9652,"blackuppointingtriangle",9650,"blank",9251,"blinebelow",7687,"block",9608,"bmonospace",65346,"bobaimaithai",3610,"bohiragana",12412,"bokatakana",12508,"bparen",9373,"bqsquare",13251,"braceex",63732,"braceleft",123,"braceleftbt",63731,"braceleftmid",63730,"braceleftmonospace",65371,"braceleftsmall",65115,"bracelefttp",63729,"braceleftvertical",65079,"braceright",125,"bracerightbt",63742,"bracerightmid",63741,"bracerightmonospace",65373,"bracerightsmall",65116,"bracerighttp",63740,"bracerightvertical",65080,"bracketleft",91,"bracketleftbt",63728,"bracketleftex",63727,"bracketleftmonospace",65339,"bracketlefttp",63726,"bracketright",93,"bracketrightbt",63739,"bracketrightex",63738,"bracketrightmonospace",65341,"bracketrighttp",63737,"breve",728,"brevebelowcmb",814,"brevecmb",774,"breveinvertedbelowcmb",815,"breveinvertedcmb",785,"breveinverteddoublecmb",865,"bridgebelowcmb",810,"bridgeinvertedbelowcmb",826,"brokenbar",166,"bstroke",384,"bsuperior",63210,"btopbar",387,"buhiragana",12406,"bukatakana",12502,"bullet",8226,"bulletinverse",9688,"bulletoperator",8729,"bullseye",9678,"c",99,"caarmenian",1390,"cabengali",2458,"cacute",263,"cadeva",2330,"cagujarati",2714,"cagurmukhi",2586,"calsquare",13192,"candrabindubengali",2433,"candrabinducmb",784,"candrabindudeva",2305,"candrabindugujarati",2689,"capslock",8682,"careof",8453,"caron",711,"caronbelowcmb",812,"caroncmb",780,"carriagereturn",8629,"cbopomofo",12568,"ccaron",269,"ccedilla",231,"ccedillaacute",7689,"ccircle",9426,"ccircumflex",265,"ccurl",597,"cdot",267,"cdotaccent",267,"cdsquare",13253,"cedilla",184,"cedillacmb",807,"cent",162,"centigrade",8451,"centinferior",63199,"centmonospace",65504,"centoldstyle",63394,"centsuperior",63200,"chaarmenian",1401,"chabengali",2459,"chadeva",2331,"chagujarati",2715,"chagurmukhi",2587,"chbopomofo",12564,"cheabkhasiancyrillic",1213,"checkmark",10003,"checyrillic",1095,"chedescenderabkhasiancyrillic",1215,"chedescendercyrillic",1207,"chedieresiscyrillic",1269,"cheharmenian",1395,"chekhakassiancyrillic",1228,"cheverticalstrokecyrillic",1209,"chi",967,"chieuchacirclekorean",12919,"chieuchaparenkorean",12823,"chieuchcirclekorean",12905,"chieuchkorean",12618,"chieuchparenkorean",12809,"chochangthai",3594,"chochanthai",3592,"chochingthai",3593,"chochoethai",3596,"chook",392,"cieucacirclekorean",12918,"cieucaparenkorean",12822,"cieuccirclekorean",12904,"cieuckorean",12616,"cieucparenkorean",12808,"cieucuparenkorean",12828,"circle",9675,"circlecopyrt",169,"circlemultiply",8855,"circleot",8857,"circleplus",8853,"circlepostalmark",12342,"circlewithlefthalfblack",9680,"circlewithrighthalfblack",9681,"circumflex",710,"circumflexbelowcmb",813,"circumflexcmb",770,"clear",8999,"clickalveolar",450,"clickdental",448,"clicklateral",449,"clickretroflex",451,"club",9827,"clubsuitblack",9827,"clubsuitwhite",9831,"cmcubedsquare",13220,"cmonospace",65347,"cmsquaredsquare",13216,"coarmenian",1409,"colon",58,"colonmonetary",8353,"colonmonospace",65306,"colonsign",8353,"colonsmall",65109,"colontriangularhalfmod",721,"colontriangularmod",720,"comma",44,"commaabovecmb",787,"commaaboverightcmb",789,"commaaccent",63171,"commaarabic",1548,"commaarmenian",1373,"commainferior",63201,"commamonospace",65292,"commareversedabovecmb",788,"commareversedmod",701,"commasmall",65104,"commasuperior",63202,"commaturnedabovecmb",786,"commaturnedmod",699,"compass",9788,"congruent",8773,"contourintegral",8750,"control",8963,"controlACK",6,"controlBEL",7,"controlBS",8,"controlCAN",24,"controlCR",13,"controlDC1",17,"controlDC2",18,"controlDC3",19,"controlDC4",20,"controlDEL",127,"controlDLE",16,"controlEM",25,"controlENQ",5,"controlEOT",4,"controlESC",27,"controlETB",23,"controlETX",3,"controlFF",12,"controlFS",28,"controlGS",29,"controlHT",9,"controlLF",10,"controlNAK",21,"controlNULL",0,"controlRS",30,"controlSI",15,"controlSO",14,"controlSOT",2,"controlSTX",1,"controlSUB",26,"controlSYN",22,"controlUS",31,"controlVT",11,"copyright",169,"copyrightsans",63721,"copyrightserif",63193,"cornerbracketleft",12300,"cornerbracketlefthalfwidth",65378,"cornerbracketleftvertical",65089,"cornerbracketright",12301,"cornerbracketrighthalfwidth",65379,"cornerbracketrightvertical",65090,"corporationsquare",13183,"cosquare",13255,"coverkgsquare",13254,"cparen",9374,"cruzeiro",8354,"cstretched",663,"curlyand",8911,"curlyor",8910,"currency",164,"cyrBreve",63185,"cyrFlex",63186,"cyrbreve",63188,"cyrflex",63189,"d",100,"daarmenian",1380,"dabengali",2470,"dadarabic",1590,"dadeva",2342,"dadfinalarabic",65214,"dadinitialarabic",65215,"dadmedialarabic",65216,"dagesh",1468,"dageshhebrew",1468,"dagger",8224,"daggerdbl",8225,"dagujarati",2726,"dagurmukhi",2598,"dahiragana",12384,"dakatakana",12480,"dalarabic",1583,"dalet",1491,"daletdagesh",64307,"daletdageshhebrew",64307,"dalethebrew",1491,"dalfinalarabic",65194,"dammaarabic",1615,"dammalowarabic",1615,"dammatanaltonearabic",1612,"dammatanarabic",1612,"danda",2404,"dargahebrew",1447,"dargalefthebrew",1447,"dasiapneumatacyrilliccmb",1157,"dblGrave",63187,"dblanglebracketleft",12298,"dblanglebracketleftvertical",65085,"dblanglebracketright",12299,"dblanglebracketrightvertical",65086,"dblarchinvertedbelowcmb",811,"dblarrowleft",8660,"dblarrowright",8658,"dbldanda",2405,"dblgrave",63190,"dblgravecmb",783,"dblintegral",8748,"dbllowline",8215,"dbllowlinecmb",819,"dbloverlinecmb",831,"dblprimemod",698,"dblverticalbar",8214,"dblverticallineabovecmb",782,"dbopomofo",12553,"dbsquare",13256,"dcaron",271,"dcedilla",7697,"dcircle",9427,"dcircumflexbelow",7699,"dcroat",273,"ddabengali",2465,"ddadeva",2337,"ddagujarati",2721,"ddagurmukhi",2593,"ddalarabic",1672,"ddalfinalarabic",64393,"dddhadeva",2396,"ddhabengali",2466,"ddhadeva",2338,"ddhagujarati",2722,"ddhagurmukhi",2594,"ddotaccent",7691,"ddotbelow",7693,"decimalseparatorarabic",1643,"decimalseparatorpersian",1643,"decyrillic",1076,"degree",176,"dehihebrew",1453,"dehiragana",12391,"deicoptic",1007,"dekatakana",12487,"deleteleft",9003,"deleteright",8998,"delta",948,"deltaturned",397,"denominatorminusonenumeratorbengali",2552,"dezh",676,"dhabengali",2471,"dhadeva",2343,"dhagujarati",2727,"dhagurmukhi",2599,"dhook",599,"dialytikatonos",901,"dialytikatonoscmb",836,"diamond",9830,"diamondsuitwhite",9826,"dieresis",168,"dieresisacute",63191,"dieresisbelowcmb",804,"dieresiscmb",776,"dieresisgrave",63192,"dieresistonos",901,"dihiragana",12386,"dikatakana",12482,"dittomark",12291,"divide",247,"divides",8739,"divisionslash",8725,"djecyrillic",1106,"dkshade",9619,"dlinebelow",7695,"dlsquare",13207,"dmacron",273,"dmonospace",65348,"dnblock",9604,"dochadathai",3598,"dodekthai",3604,"dohiragana",12393,"dokatakana",12489,"dollar",36,"dollarinferior",63203,"dollarmonospace",65284,"dollaroldstyle",63268,"dollarsmall",65129,"dollarsuperior",63204,"dong",8363,"dorusquare",13094,"dotaccent",729,"dotaccentcmb",775,"dotbelowcmb",803,"dotbelowcomb",803,"dotkatakana",12539,"dotlessi",305,"dotlessj",63166,"dotlessjstrokehook",644,"dotmath",8901,"dottedcircle",9676,"doubleyodpatah",64287,"doubleyodpatahhebrew",64287,"downtackbelowcmb",798,"downtackmod",725,"dparen",9375,"dsuperior",63211,"dtail",598,"dtopbar",396,"duhiragana",12389,"dukatakana",12485,"dz",499,"dzaltone",675,"dzcaron",454,"dzcurl",677,"dzeabkhasiancyrillic",1249,"dzecyrillic",1109,"dzhecyrillic",1119,"e",101,"eacute",233,"earth",9793,"ebengali",2447,"ebopomofo",12572,"ebreve",277,"ecandradeva",2317,"ecandragujarati",2701,"ecandravowelsigndeva",2373,"ecandravowelsigngujarati",2757,"ecaron",283,"ecedillabreve",7709,"echarmenian",1381,"echyiwnarmenian",1415,"ecircle",9428,"ecircumflex",234,"ecircumflexacute",7871,"ecircumflexbelow",7705,"ecircumflexdotbelow",7879,"ecircumflexgrave",7873,"ecircumflexhookabove",7875,"ecircumflextilde",7877,"ecyrillic",1108,"edblgrave",517,"edeva",2319,"edieresis",235,"edot",279,"edotaccent",279,"edotbelow",7865,"eegurmukhi",2575,"eematragurmukhi",2631,"efcyrillic",1092,"egrave",232,"egujarati",2703,"eharmenian",1383,"ehbopomofo",12573,"ehiragana",12360,"ehookabove",7867,"eibopomofo",12575,"eight",56,"eightarabic",1640,"eightbengali",2542,"eightcircle",9319,"eightcircleinversesansserif",10129,"eightdeva",2414,"eighteencircle",9329,"eighteenparen",9349,"eighteenperiod",9369,"eightgujarati",2798,"eightgurmukhi",2670,"eighthackarabic",1640,"eighthangzhou",12328,"eighthnotebeamed",9835,"eightideographicparen",12839,"eightinferior",8328,"eightmonospace",65304,"eightoldstyle",63288,"eightparen",9339,"eightperiod",9359,"eightpersian",1784,"eightroman",8567,"eightsuperior",8312,"eightthai",3672,"einvertedbreve",519,"eiotifiedcyrillic",1125,"ekatakana",12456,"ekatakanahalfwidth",65396,"ekonkargurmukhi",2676,"ekorean",12628,"elcyrillic",1083,"element",8712,"elevencircle",9322,"elevenparen",9342,"elevenperiod",9362,"elevenroman",8570,"ellipsis",8230,"ellipsisvertical",8942,"emacron",275,"emacronacute",7703,"emacrongrave",7701,"emcyrillic",1084,"emdash",8212,"emdashvertical",65073,"emonospace",65349,"emphasismarkarmenian",1371,"emptyset",8709,"enbopomofo",12579,"encyrillic",1085,"endash",8211,"endashvertical",65074,"endescendercyrillic",1187,"eng",331,"engbopomofo",12581,"enghecyrillic",1189,"enhookcyrillic",1224,"enspace",8194,"eogonek",281,"eokorean",12627,"eopen",603,"eopenclosed",666,"eopenreversed",604,"eopenreversedclosed",606,"eopenreversedhook",605,"eparen",9376,"epsilon",949,"epsilontonos",941,"equal",61,"equalmonospace",65309,"equalsmall",65126,"equalsuperior",8316,"equivalence",8801,"erbopomofo",12582,"ercyrillic",1088,"ereversed",600,"ereversedcyrillic",1101,"escyrillic",1089,"esdescendercyrillic",1195,"esh",643,"eshcurl",646,"eshortdeva",2318,"eshortvowelsigndeva",2374,"eshreversedloop",426,"eshsquatreversed",645,"esmallhiragana",12359,"esmallkatakana",12455,"esmallkatakanahalfwidth",65386,"estimated",8494,"esuperior",63212,"eta",951,"etarmenian",1384,"etatonos",942,"eth",240,"etilde",7869,"etildebelow",7707,"etnahtafoukhhebrew",1425,"etnahtafoukhlefthebrew",1425,"etnahtahebrew",1425,"etnahtalefthebrew",1425,"eturned",477,"eukorean",12641,"euro",8364,"evowelsignbengali",2503,"evowelsigndeva",2375,"evowelsigngujarati",2759,"exclam",33,"exclamarmenian",1372,"exclamdbl",8252,"exclamdown",161,"exclamdownsmall",63393,"exclammonospace",65281,"exclamsmall",63265,"existential",8707,"ezh",658,"ezhcaron",495,"ezhcurl",659,"ezhreversed",441,"ezhtail",442,"f",102,"fadeva",2398,"fagurmukhi",2654,"fahrenheit",8457,"fathaarabic",1614,"fathalowarabic",1614,"fathatanarabic",1611,"fbopomofo",12552,"fcircle",9429,"fdotaccent",7711,"feharabic",1601,"feharmenian",1414,"fehfinalarabic",65234,"fehinitialarabic",65235,"fehmedialarabic",65236,"feicoptic",997,"female",9792,"ff",64256,"f_f",64256,"ffi",64259,"ffl",64260,"fi",64257,"fifteencircle",9326,"fifteenparen",9346,"fifteenperiod",9366,"figuredash",8210,"filledbox",9632,"filledrect",9644,"finalkaf",1498,"finalkafdagesh",64314,"finalkafdageshhebrew",64314,"finalkafhebrew",1498,"finalmem",1501,"finalmemhebrew",1501,"finalnun",1503,"finalnunhebrew",1503,"finalpe",1507,"finalpehebrew",1507,"finaltsadi",1509,"finaltsadihebrew",1509,"firsttonechinese",713,"fisheye",9673,"fitacyrillic",1139,"five",53,"fivearabic",1637,"fivebengali",2539,"fivecircle",9316,"fivecircleinversesansserif",10126,"fivedeva",2411,"fiveeighths",8541,"fivegujarati",2795,"fivegurmukhi",2667,"fivehackarabic",1637,"fivehangzhou",12325,"fiveideographicparen",12836,"fiveinferior",8325,"fivemonospace",65301,"fiveoldstyle",63285,"fiveparen",9336,"fiveperiod",9356,"fivepersian",1781,"fiveroman",8564,"fivesuperior",8309,"fivethai",3669,"fl",64258,"florin",402,"fmonospace",65350,"fmsquare",13209,"fofanthai",3615,"fofathai",3613,"fongmanthai",3663,"forall",8704,"four",52,"fourarabic",1636,"fourbengali",2538,"fourcircle",9315,"fourcircleinversesansserif",10125,"fourdeva",2410,"fourgujarati",2794,"fourgurmukhi",2666,"fourhackarabic",1636,"fourhangzhou",12324,"fourideographicparen",12835,"fourinferior",8324,"fourmonospace",65300,"fournumeratorbengali",2551,"fouroldstyle",63284,"fourparen",9335,"fourperiod",9355,"fourpersian",1780,"fourroman",8563,"foursuperior",8308,"fourteencircle",9325,"fourteenparen",9345,"fourteenperiod",9365,"fourthai",3668,"fourthtonechinese",715,"fparen",9377,"fraction",8260,"franc",8355,"g",103,"gabengali",2455,"gacute",501,"gadeva",2327,"gafarabic",1711,"gaffinalarabic",64403,"gafinitialarabic",64404,"gafmedialarabic",64405,"gagujarati",2711,"gagurmukhi",2583,"gahiragana",12364,"gakatakana",12460,"gamma",947,"gammalatinsmall",611,"gammasuperior",736,"gangiacoptic",1003,"gbopomofo",12557,"gbreve",287,"gcaron",487,"gcedilla",291,"gcircle",9430,"gcircumflex",285,"gcommaaccent",291,"gdot",289,"gdotaccent",289,"gecyrillic",1075,"gehiragana",12370,"gekatakana",12466,"geometricallyequal",8785,"gereshaccenthebrew",1436,"gereshhebrew",1523,"gereshmuqdamhebrew",1437,"germandbls",223,"gershayimaccenthebrew",1438,"gershayimhebrew",1524,"getamark",12307,"ghabengali",2456,"ghadarmenian",1394,"ghadeva",2328,"ghagujarati",2712,"ghagurmukhi",2584,"ghainarabic",1594,"ghainfinalarabic",65230,"ghaininitialarabic",65231,"ghainmedialarabic",65232,"ghemiddlehookcyrillic",1173,"ghestrokecyrillic",1171,"gheupturncyrillic",1169,"ghhadeva",2394,"ghhagurmukhi",2650,"ghook",608,"ghzsquare",13203,"gihiragana",12366,"gikatakana",12462,"gimarmenian",1379,"gimel",1490,"gimeldagesh",64306,"gimeldageshhebrew",64306,"gimelhebrew",1490,"gjecyrillic",1107,"glottalinvertedstroke",446,"glottalstop",660,"glottalstopinverted",662,"glottalstopmod",704,"glottalstopreversed",661,"glottalstopreversedmod",705,"glottalstopreversedsuperior",740,"glottalstopstroke",673,"glottalstopstrokereversed",674,"gmacron",7713,"gmonospace",65351,"gohiragana",12372,"gokatakana",12468,"gparen",9378,"gpasquare",13228,"gradient",8711,"grave",96,"gravebelowcmb",790,"gravecmb",768,"gravecomb",768,"gravedeva",2387,"gravelowmod",718,"gravemonospace",65344,"gravetonecmb",832,"greater",62,"greaterequal",8805,"greaterequalorless",8923,"greatermonospace",65310,"greaterorequivalent",8819,"greaterorless",8823,"greateroverequal",8807,"greatersmall",65125,"gscript",609,"gstroke",485,"guhiragana",12368,"guillemotleft",171,"guillemotright",187,"guilsinglleft",8249,"guilsinglright",8250,"gukatakana",12464,"guramusquare",13080,"gysquare",13257,"h",104,"haabkhasiancyrillic",1193,"haaltonearabic",1729,"habengali",2489,"hadescendercyrillic",1203,"hadeva",2361,"hagujarati",2745,"hagurmukhi",2617,"haharabic",1581,"hahfinalarabic",65186,"hahinitialarabic",65187,"hahiragana",12399,"hahmedialarabic",65188,"haitusquare",13098,"hakatakana",12495,"hakatakanahalfwidth",65418,"halantgurmukhi",2637,"hamzaarabic",1569,"hamzalowarabic",1569,"hangulfiller",12644,"hardsigncyrillic",1098,"harpoonleftbarbup",8636,"harpoonrightbarbup",8640,"hasquare",13258,"hatafpatah",1458,"hatafpatah16",1458,"hatafpatah23",1458,"hatafpatah2f",1458,"hatafpatahhebrew",1458,"hatafpatahnarrowhebrew",1458,"hatafpatahquarterhebrew",1458,"hatafpatahwidehebrew",1458,"hatafqamats",1459,"hatafqamats1b",1459,"hatafqamats28",1459,"hatafqamats34",1459,"hatafqamatshebrew",1459,"hatafqamatsnarrowhebrew",1459,"hatafqamatsquarterhebrew",1459,"hatafqamatswidehebrew",1459,"hatafsegol",1457,"hatafsegol17",1457,"hatafsegol24",1457,"hatafsegol30",1457,"hatafsegolhebrew",1457,"hatafsegolnarrowhebrew",1457,"hatafsegolquarterhebrew",1457,"hatafsegolwidehebrew",1457,"hbar",295,"hbopomofo",12559,"hbrevebelow",7723,"hcedilla",7721,"hcircle",9431,"hcircumflex",293,"hdieresis",7719,"hdotaccent",7715,"hdotbelow",7717,"he",1492,"heart",9829,"heartsuitblack",9829,"heartsuitwhite",9825,"hedagesh",64308,"hedageshhebrew",64308,"hehaltonearabic",1729,"heharabic",1607,"hehebrew",1492,"hehfinalaltonearabic",64423,"hehfinalalttwoarabic",65258,"hehfinalarabic",65258,"hehhamzaabovefinalarabic",64421,"hehhamzaaboveisolatedarabic",64420,"hehinitialaltonearabic",64424,"hehinitialarabic",65259,"hehiragana",12408,"hehmedialaltonearabic",64425,"hehmedialarabic",65260,"heiseierasquare",13179,"hekatakana",12504,"hekatakanahalfwidth",65421,"hekutaarusquare",13110,"henghook",615,"herutusquare",13113,"het",1495,"hethebrew",1495,"hhook",614,"hhooksuperior",689,"hieuhacirclekorean",12923,"hieuhaparenkorean",12827,"hieuhcirclekorean",12909,"hieuhkorean",12622,"hieuhparenkorean",12813,"hihiragana",12402,"hikatakana",12498,"hikatakanahalfwidth",65419,"hiriq",1460,"hiriq14",1460,"hiriq21",1460,"hiriq2d",1460,"hiriqhebrew",1460,"hiriqnarrowhebrew",1460,"hiriqquarterhebrew",1460,"hiriqwidehebrew",1460,"hlinebelow",7830,"hmonospace",65352,"hoarmenian",1392,"hohipthai",3627,"hohiragana",12411,"hokatakana",12507,"hokatakanahalfwidth",65422,"holam",1465,"holam19",1465,"holam26",1465,"holam32",1465,"holamhebrew",1465,"holamnarrowhebrew",1465,"holamquarterhebrew",1465,"holamwidehebrew",1465,"honokhukthai",3630,"hookabovecomb",777,"hookcmb",777,"hookpalatalizedbelowcmb",801,"hookretroflexbelowcmb",802,"hoonsquare",13122,"horicoptic",1001,"horizontalbar",8213,"horncmb",795,"hotsprings",9832,"house",8962,"hparen",9379,"hsuperior",688,"hturned",613,"huhiragana",12405,"huiitosquare",13107,"hukatakana",12501,"hukatakanahalfwidth",65420,"hungarumlaut",733,"hungarumlautcmb",779,"hv",405,"hyphen",45,"hypheninferior",63205,"hyphenmonospace",65293,"hyphensmall",65123,"hyphensuperior",63206,"hyphentwo",8208,"i",105,"iacute",237,"iacyrillic",1103,"ibengali",2439,"ibopomofo",12583,"ibreve",301,"icaron",464,"icircle",9432,"icircumflex",238,"icyrillic",1110,"idblgrave",521,"ideographearthcircle",12943,"ideographfirecircle",12939,"ideographicallianceparen",12863,"ideographiccallparen",12858,"ideographiccentrecircle",12965,"ideographicclose",12294,"ideographiccomma",12289,"ideographiccommaleft",65380,"ideographiccongratulationparen",12855,"ideographiccorrectcircle",12963,"ideographicearthparen",12847,"ideographicenterpriseparen",12861,"ideographicexcellentcircle",12957,"ideographicfestivalparen",12864,"ideographicfinancialcircle",12950,"ideographicfinancialparen",12854,"ideographicfireparen",12843,"ideographichaveparen",12850,"ideographichighcircle",12964,"ideographiciterationmark",12293,"ideographiclaborcircle",12952,"ideographiclaborparen",12856,"ideographicleftcircle",12967,"ideographiclowcircle",12966,"ideographicmedicinecircle",12969,"ideographicmetalparen",12846,"ideographicmoonparen",12842,"ideographicnameparen",12852,"ideographicperiod",12290,"ideographicprintcircle",12958,"ideographicreachparen",12867,"ideographicrepresentparen",12857,"ideographicresourceparen",12862,"ideographicrightcircle",12968,"ideographicsecretcircle",12953,"ideographicselfparen",12866,"ideographicsocietyparen",12851,"ideographicspace",12288,"ideographicspecialparen",12853,"ideographicstockparen",12849,"ideographicstudyparen",12859,"ideographicsunparen",12848,"ideographicsuperviseparen",12860,"ideographicwaterparen",12844,"ideographicwoodparen",12845,"ideographiczero",12295,"ideographmetalcircle",12942,"ideographmooncircle",12938,"ideographnamecircle",12948,"ideographsuncircle",12944,"ideographwatercircle",12940,"ideographwoodcircle",12941,"ideva",2311,"idieresis",239,"idieresisacute",7727,"idieresiscyrillic",1253,"idotbelow",7883,"iebrevecyrillic",1239,"iecyrillic",1077,"ieungacirclekorean",12917,"ieungaparenkorean",12821,"ieungcirclekorean",12903,"ieungkorean",12615,"ieungparenkorean",12807,"igrave",236,"igujarati",2695,"igurmukhi",2567,"ihiragana",12356,"ihookabove",7881,"iibengali",2440,"iicyrillic",1080,"iideva",2312,"iigujarati",2696,"iigurmukhi",2568,"iimatragurmukhi",2624,"iinvertedbreve",523,"iishortcyrillic",1081,"iivowelsignbengali",2496,"iivowelsigndeva",2368,"iivowelsigngujarati",2752,"ij",307,"ikatakana",12452,"ikatakanahalfwidth",65394,"ikorean",12643,"ilde",732,"iluyhebrew",1452,"imacron",299,"imacroncyrillic",1251,"imageorapproximatelyequal",8787,"imatragurmukhi",2623,"imonospace",65353,"increment",8710,"infinity",8734,"iniarmenian",1387,"integral",8747,"integralbottom",8993,"integralbt",8993,"integralex",63733,"integraltop",8992,"integraltp",8992,"intersection",8745,"intisquare",13061,"invbullet",9688,"invcircle",9689,"invsmileface",9787,"iocyrillic",1105,"iogonek",303,"iota",953,"iotadieresis",970,"iotadieresistonos",912,"iotalatin",617,"iotatonos",943,"iparen",9380,"irigurmukhi",2674,"ismallhiragana",12355,"ismallkatakana",12451,"ismallkatakanahalfwidth",65384,"issharbengali",2554,"istroke",616,"isuperior",63213,"iterationhiragana",12445,"iterationkatakana",12541,"itilde",297,"itildebelow",7725,"iubopomofo",12585,"iucyrillic",1102,"ivowelsignbengali",2495,"ivowelsigndeva",2367,"ivowelsigngujarati",2751,"izhitsacyrillic",1141,"izhitsadblgravecyrillic",1143,"j",106,"jaarmenian",1393,"jabengali",2460,"jadeva",2332,"jagujarati",2716,"jagurmukhi",2588,"jbopomofo",12560,"jcaron",496,"jcircle",9433,"jcircumflex",309,"jcrossedtail",669,"jdotlessstroke",607,"jecyrillic",1112,"jeemarabic",1580,"jeemfinalarabic",65182,"jeeminitialarabic",65183,"jeemmedialarabic",65184,"jeharabic",1688,"jehfinalarabic",64395,"jhabengali",2461,"jhadeva",2333,"jhagujarati",2717,"jhagurmukhi",2589,"jheharmenian",1403,"jis",12292,"jmonospace",65354,"jparen",9381,"jsuperior",690,"k",107,"kabashkircyrillic",1185,"kabengali",2453,"kacute",7729,"kacyrillic",1082,"kadescendercyrillic",1179,"kadeva",2325,"kaf",1499,"kafarabic",1603,"kafdagesh",64315,"kafdageshhebrew",64315,"kaffinalarabic",65242,"kafhebrew",1499,"kafinitialarabic",65243,"kafmedialarabic",65244,"kafrafehebrew",64333,"kagujarati",2709,"kagurmukhi",2581,"kahiragana",12363,"kahookcyrillic",1220,"kakatakana",12459,"kakatakanahalfwidth",65398,"kappa",954,"kappasymbolgreek",1008,"kapyeounmieumkorean",12657,"kapyeounphieuphkorean",12676,"kapyeounpieupkorean",12664,"kapyeounssangpieupkorean",12665,"karoriisquare",13069,"kashidaautoarabic",1600,"kashidaautonosidebearingarabic",1600,"kasmallkatakana",12533,"kasquare",13188,"kasraarabic",1616,"kasratanarabic",1613,"kastrokecyrillic",1183,"katahiraprolongmarkhalfwidth",65392,"kaverticalstrokecyrillic",1181,"kbopomofo",12558,"kcalsquare",13193,"kcaron",489,"kcedilla",311,"kcircle",9434,"kcommaaccent",311,"kdotbelow",7731,"keharmenian",1412,"kehiragana",12369,"kekatakana",12465,"kekatakanahalfwidth",65401,"kenarmenian",1391,"kesmallkatakana",12534,"kgreenlandic",312,"khabengali",2454,"khacyrillic",1093,"khadeva",2326,"khagujarati",2710,"khagurmukhi",2582,"khaharabic",1582,"khahfinalarabic",65190,"khahinitialarabic",65191,"khahmedialarabic",65192,"kheicoptic",999,"khhadeva",2393,"khhagurmukhi",2649,"khieukhacirclekorean",12920,"khieukhaparenkorean",12824,"khieukhcirclekorean",12906,"khieukhkorean",12619,"khieukhparenkorean",12810,"khokhaithai",3586,"khokhonthai",3589,"khokhuatthai",3587,"khokhwaithai",3588,"khomutthai",3675,"khook",409,"khorakhangthai",3590,"khzsquare",13201,"kihiragana",12365,"kikatakana",12461,"kikatakanahalfwidth",65399,"kiroguramusquare",13077,"kiromeetorusquare",13078,"kirosquare",13076,"kiyeokacirclekorean",12910,"kiyeokaparenkorean",12814,"kiyeokcirclekorean",12896,"kiyeokkorean",12593,"kiyeokparenkorean",12800,"kiyeoksioskorean",12595,"kjecyrillic",1116,"klinebelow",7733,"klsquare",13208,"kmcubedsquare",13222,"kmonospace",65355,"kmsquaredsquare",13218,"kohiragana",12371,"kohmsquare",13248,"kokaithai",3585,"kokatakana",12467,"kokatakanahalfwidth",65402,"kooposquare",13086,"koppacyrillic",1153,"koreanstandardsymbol",12927,"koroniscmb",835,"kparen",9382,"kpasquare",13226,"ksicyrillic",1135,"ktsquare",13263,"kturned",670,"kuhiragana",12367,"kukatakana",12463,"kukatakanahalfwidth",65400,"kvsquare",13240,"kwsquare",13246,"l",108,"labengali",2482,"lacute",314,"ladeva",2354,"lagujarati",2738,"lagurmukhi",2610,"lakkhangyaothai",3653,"lamaleffinalarabic",65276,"lamalefhamzaabovefinalarabic",65272,"lamalefhamzaaboveisolatedarabic",65271,"lamalefhamzabelowfinalarabic",65274,"lamalefhamzabelowisolatedarabic",65273,"lamalefisolatedarabic",65275,"lamalefmaddaabovefinalarabic",65270,"lamalefmaddaaboveisolatedarabic",65269,"lamarabic",1604,"lambda",955,"lambdastroke",411,"lamed",1500,"lameddagesh",64316,"lameddageshhebrew",64316,"lamedhebrew",1500,"lamfinalarabic",65246,"lamhahinitialarabic",64714,"laminitialarabic",65247,"lamjeeminitialarabic",64713,"lamkhahinitialarabic",64715,"lamlamhehisolatedarabic",65010,"lammedialarabic",65248,"lammeemhahinitialarabic",64904,"lammeeminitialarabic",64716,"largecircle",9711,"lbar",410,"lbelt",620,"lbopomofo",12556,"lcaron",318,"lcedilla",316,"lcircle",9435,"lcircumflexbelow",7741,"lcommaaccent",316,"ldot",320,"ldotaccent",320,"ldotbelow",7735,"ldotbelowmacron",7737,"leftangleabovecmb",794,"lefttackbelowcmb",792,"less",60,"lessequal",8804,"lessequalorgreater",8922,"lessmonospace",65308,"lessorequivalent",8818,"lessorgreater",8822,"lessoverequal",8806,"lesssmall",65124,"lezh",622,"lfblock",9612,"lhookretroflex",621,"lira",8356,"liwnarmenian",1388,"lj",457,"ljecyrillic",1113,"ll",63168,"lladeva",2355,"llagujarati",2739,"llinebelow",7739,"llladeva",2356,"llvocalicbengali",2529,"llvocalicdeva",2401,"llvocalicvowelsignbengali",2531,"llvocalicvowelsigndeva",2403,"lmiddletilde",619,"lmonospace",65356,"lmsquare",13264,"lochulathai",3628,"logicaland",8743,"logicalnot",172,"logicalnotreversed",8976,"logicalor",8744,"lolingthai",3621,"longs",383,"lowlinecenterline",65102,"lowlinecmb",818,"lowlinedashed",65101,"lozenge",9674,"lparen",9383,"lslash",322,"lsquare",8467,"lsuperior",63214,"ltshade",9617,"luthai",3622,"lvocalicbengali",2444,"lvocalicdeva",2316,"lvocalicvowelsignbengali",2530,"lvocalicvowelsigndeva",2402,"lxsquare",13267,"m",109,"mabengali",2478,"macron",175,"macronbelowcmb",817,"macroncmb",772,"macronlowmod",717,"macronmonospace",65507,"macute",7743,"madeva",2350,"magujarati",2734,"magurmukhi",2606,"mahapakhhebrew",1444,"mahapakhlefthebrew",1444,"mahiragana",12414,"maichattawalowleftthai",63637,"maichattawalowrightthai",63636,"maichattawathai",3659,"maichattawaupperleftthai",63635,"maieklowleftthai",63628,"maieklowrightthai",63627,"maiekthai",3656,"maiekupperleftthai",63626,"maihanakatleftthai",63620,"maihanakatthai",3633,"maitaikhuleftthai",63625,"maitaikhuthai",3655,"maitholowleftthai",63631,"maitholowrightthai",63630,"maithothai",3657,"maithoupperleftthai",63629,"maitrilowleftthai",63634,"maitrilowrightthai",63633,"maitrithai",3658,"maitriupperleftthai",63632,"maiyamokthai",3654,"makatakana",12510,"makatakanahalfwidth",65423,"male",9794,"mansyonsquare",13127,"maqafhebrew",1470,"mars",9794,"masoracirclehebrew",1455,"masquare",13187,"mbopomofo",12551,"mbsquare",13268,"mcircle",9436,"mcubedsquare",13221,"mdotaccent",7745,"mdotbelow",7747,"meemarabic",1605,"meemfinalarabic",65250,"meeminitialarabic",65251,"meemmedialarabic",65252,"meemmeeminitialarabic",64721,"meemmeemisolatedarabic",64584,"meetorusquare",13133,"mehiragana",12417,"meizierasquare",13182,"mekatakana",12513,"mekatakanahalfwidth",65426,"mem",1502,"memdagesh",64318,"memdageshhebrew",64318,"memhebrew",1502,"menarmenian",1396,"merkhahebrew",1445,"merkhakefulahebrew",1446,"merkhakefulalefthebrew",1446,"merkhalefthebrew",1445,"mhook",625,"mhzsquare",13202,"middledotkatakanahalfwidth",65381,"middot",183,"mieumacirclekorean",12914,"mieumaparenkorean",12818,"mieumcirclekorean",12900,"mieumkorean",12609,"mieumpansioskorean",12656,"mieumparenkorean",12804,"mieumpieupkorean",12654,"mieumsioskorean",12655,"mihiragana",12415,"mikatakana",12511,"mikatakanahalfwidth",65424,"minus",8722,"minusbelowcmb",800,"minuscircle",8854,"minusmod",727,"minusplus",8723,"minute",8242,"miribaarusquare",13130,"mirisquare",13129,"mlonglegturned",624,"mlsquare",13206,"mmcubedsquare",13219,"mmonospace",65357,"mmsquaredsquare",13215,"mohiragana",12418,"mohmsquare",13249,"mokatakana",12514,"mokatakanahalfwidth",65427,"molsquare",13270,"momathai",3617,"moverssquare",13223,"moverssquaredsquare",13224,"mparen",9384,"mpasquare",13227,"mssquare",13235,"msuperior",63215,"mturned",623,"mu",181,"mu1",181,"muasquare",13186,"muchgreater",8811,"muchless",8810,"mufsquare",13196,"mugreek",956,"mugsquare",13197,"muhiragana",12416,"mukatakana",12512,"mukatakanahalfwidth",65425,"mulsquare",13205,"multiply",215,"mumsquare",13211,"munahhebrew",1443,"munahlefthebrew",1443,"musicalnote",9834,"musicalnotedbl",9835,"musicflatsign",9837,"musicsharpsign",9839,"mussquare",13234,"muvsquare",13238,"muwsquare",13244,"mvmegasquare",13241,"mvsquare",13239,"mwmegasquare",13247,"mwsquare",13245,"n",110,"nabengali",2472,"nabla",8711,"nacute",324,"nadeva",2344,"nagujarati",2728,"nagurmukhi",2600,"nahiragana",12394,"nakatakana",12490,"nakatakanahalfwidth",65413,"napostrophe",329,"nasquare",13185,"nbopomofo",12555,"nbspace",160,"ncaron",328,"ncedilla",326,"ncircle",9437,"ncircumflexbelow",7755,"ncommaaccent",326,"ndotaccent",7749,"ndotbelow",7751,"nehiragana",12397,"nekatakana",12493,"nekatakanahalfwidth",65416,"newsheqelsign",8362,"nfsquare",13195,"ngabengali",2457,"ngadeva",2329,"ngagujarati",2713,"ngagurmukhi",2585,"ngonguthai",3591,"nhiragana",12435,"nhookleft",626,"nhookretroflex",627,"nieunacirclekorean",12911,"nieunaparenkorean",12815,"nieuncieuckorean",12597,"nieuncirclekorean",12897,"nieunhieuhkorean",12598,"nieunkorean",12596,"nieunpansioskorean",12648,"nieunparenkorean",12801,"nieunsioskorean",12647,"nieuntikeutkorean",12646,"nihiragana",12395,"nikatakana",12491,"nikatakanahalfwidth",65414,"nikhahitleftthai",63641,"nikhahitthai",3661,"nine",57,"ninearabic",1641,"ninebengali",2543,"ninecircle",9320,"ninecircleinversesansserif",10130,"ninedeva",2415,"ninegujarati",2799,"ninegurmukhi",2671,"ninehackarabic",1641,"ninehangzhou",12329,"nineideographicparen",12840,"nineinferior",8329,"ninemonospace",65305,"nineoldstyle",63289,"nineparen",9340,"nineperiod",9360,"ninepersian",1785,"nineroman",8568,"ninesuperior",8313,"nineteencircle",9330,"nineteenparen",9350,"nineteenperiod",9370,"ninethai",3673,"nj",460,"njecyrillic",1114,"nkatakana",12531,"nkatakanahalfwidth",65437,"nlegrightlong",414,"nlinebelow",7753,"nmonospace",65358,"nmsquare",13210,"nnabengali",2467,"nnadeva",2339,"nnagujarati",2723,"nnagurmukhi",2595,"nnnadeva",2345,"nohiragana",12398,"nokatakana",12494,"nokatakanahalfwidth",65417,"nonbreakingspace",160,"nonenthai",3603,"nonuthai",3609,"noonarabic",1606,"noonfinalarabic",65254,"noonghunnaarabic",1722,"noonghunnafinalarabic",64415,"nooninitialarabic",65255,"noonjeeminitialarabic",64722,"noonjeemisolatedarabic",64587,"noonmedialarabic",65256,"noonmeeminitialarabic",64725,"noonmeemisolatedarabic",64590,"noonnoonfinalarabic",64653,"notcontains",8716,"notelement",8713,"notelementof",8713,"notequal",8800,"notgreater",8815,"notgreaternorequal",8817,"notgreaternorless",8825,"notidentical",8802,"notless",8814,"notlessnorequal",8816,"notparallel",8742,"notprecedes",8832,"notsubset",8836,"notsucceeds",8833,"notsuperset",8837,"nowarmenian",1398,"nparen",9385,"nssquare",13233,"nsuperior",8319,"ntilde",241,"nu",957,"nuhiragana",12396,"nukatakana",12492,"nukatakanahalfwidth",65415,"nuktabengali",2492,"nuktadeva",2364,"nuktagujarati",2748,"nuktagurmukhi",2620,"numbersign",35,"numbersignmonospace",65283,"numbersignsmall",65119,"numeralsigngreek",884,"numeralsignlowergreek",885,"numero",8470,"nun",1504,"nundagesh",64320,"nundageshhebrew",64320,"nunhebrew",1504,"nvsquare",13237,"nwsquare",13243,"nyabengali",2462,"nyadeva",2334,"nyagujarati",2718,"nyagurmukhi",2590,"o",111,"oacute",243,"oangthai",3629,"obarred",629,"obarredcyrillic",1257,"obarreddieresiscyrillic",1259,"obengali",2451,"obopomofo",12571,"obreve",335,"ocandradeva",2321,"ocandragujarati",2705,"ocandravowelsigndeva",2377,"ocandravowelsigngujarati",2761,"ocaron",466,"ocircle",9438,"ocircumflex",244,"ocircumflexacute",7889,"ocircumflexdotbelow",7897,"ocircumflexgrave",7891,"ocircumflexhookabove",7893,"ocircumflextilde",7895,"ocyrillic",1086,"odblacute",337,"odblgrave",525,"odeva",2323,"odieresis",246,"odieresiscyrillic",1255,"odotbelow",7885,"oe",339,"oekorean",12634,"ogonek",731,"ogonekcmb",808,"ograve",242,"ogujarati",2707,"oharmenian",1413,"ohiragana",12362,"ohookabove",7887,"ohorn",417,"ohornacute",7899,"ohorndotbelow",7907,"ohorngrave",7901,"ohornhookabove",7903,"ohorntilde",7905,"ohungarumlaut",337,"oi",419,"oinvertedbreve",527,"okatakana",12458,"okatakanahalfwidth",65397,"okorean",12631,"olehebrew",1451,"omacron",333,"omacronacute",7763,"omacrongrave",7761,"omdeva",2384,"omega",969,"omega1",982,"omegacyrillic",1121,"omegalatinclosed",631,"omegaroundcyrillic",1147,"omegatitlocyrillic",1149,"omegatonos",974,"omgujarati",2768,"omicron",959,"omicrontonos",972,"omonospace",65359,"one",49,"onearabic",1633,"onebengali",2535,"onecircle",9312,"onecircleinversesansserif",10122,"onedeva",2407,"onedotenleader",8228,"oneeighth",8539,"onefitted",63196,"onegujarati",2791,"onegurmukhi",2663,"onehackarabic",1633,"onehalf",189,"onehangzhou",12321,"oneideographicparen",12832,"oneinferior",8321,"onemonospace",65297,"onenumeratorbengali",2548,"oneoldstyle",63281,"oneparen",9332,"oneperiod",9352,"onepersian",1777,"onequarter",188,"oneroman",8560,"onesuperior",185,"onethai",3665,"onethird",8531,"oogonek",491,"oogonekmacron",493,"oogurmukhi",2579,"oomatragurmukhi",2635,"oopen",596,"oparen",9386,"openbullet",9702,"option",8997,"ordfeminine",170,"ordmasculine",186,"orthogonal",8735,"oshortdeva",2322,"oshortvowelsigndeva",2378,"oslash",248,"oslashacute",511,"osmallhiragana",12361,"osmallkatakana",12457,"osmallkatakanahalfwidth",65387,"ostrokeacute",511,"osuperior",63216,"otcyrillic",1151,"otilde",245,"otildeacute",7757,"otildedieresis",7759,"oubopomofo",12577,"overline",8254,"overlinecenterline",65098,"overlinecmb",773,"overlinedashed",65097,"overlinedblwavy",65100,"overlinewavy",65099,"overscore",175,"ovowelsignbengali",2507,"ovowelsigndeva",2379,"ovowelsigngujarati",2763,"p",112,"paampssquare",13184,"paasentosquare",13099,"pabengali",2474,"pacute",7765,"padeva",2346,"pagedown",8671,"pageup",8670,"pagujarati",2730,"pagurmukhi",2602,"pahiragana",12401,"paiyannoithai",3631,"pakatakana",12497,"palatalizationcyrilliccmb",1156,"palochkacyrillic",1216,"pansioskorean",12671,"paragraph",182,"parallel",8741,"parenleft",40,"parenleftaltonearabic",64830,"parenleftbt",63725,"parenleftex",63724,"parenleftinferior",8333,"parenleftmonospace",65288,"parenleftsmall",65113,"parenleftsuperior",8317,"parenlefttp",63723,"parenleftvertical",65077,"parenright",41,"parenrightaltonearabic",64831,"parenrightbt",63736,"parenrightex",63735,"parenrightinferior",8334,"parenrightmonospace",65289,"parenrightsmall",65114,"parenrightsuperior",8318,"parenrighttp",63734,"parenrightvertical",65078,"partialdiff",8706,"paseqhebrew",1472,"pashtahebrew",1433,"pasquare",13225,"patah",1463,"patah11",1463,"patah1d",1463,"patah2a",1463,"patahhebrew",1463,"patahnarrowhebrew",1463,"patahquarterhebrew",1463,"patahwidehebrew",1463,"pazerhebrew",1441,"pbopomofo",12550,"pcircle",9439,"pdotaccent",7767,"pe",1508,"pecyrillic",1087,"pedagesh",64324,"pedageshhebrew",64324,"peezisquare",13115,"pefinaldageshhebrew",64323,"peharabic",1662,"peharmenian",1402,"pehebrew",1508,"pehfinalarabic",64343,"pehinitialarabic",64344,"pehiragana",12410,"pehmedialarabic",64345,"pekatakana",12506,"pemiddlehookcyrillic",1191,"perafehebrew",64334,"percent",37,"percentarabic",1642,"percentmonospace",65285,"percentsmall",65130,"period",46,"periodarmenian",1417,"periodcentered",183,"periodhalfwidth",65377,"periodinferior",63207,"periodmonospace",65294,"periodsmall",65106,"periodsuperior",63208,"perispomenigreekcmb",834,"perpendicular",8869,"perthousand",8240,"peseta",8359,"pfsquare",13194,"phabengali",2475,"phadeva",2347,"phagujarati",2731,"phagurmukhi",2603,"phi",966,"phi1",981,"phieuphacirclekorean",12922,"phieuphaparenkorean",12826,"phieuphcirclekorean",12908,"phieuphkorean",12621,"phieuphparenkorean",12812,"philatin",632,"phinthuthai",3642,"phisymbolgreek",981,"phook",421,"phophanthai",3614,"phophungthai",3612,"phosamphaothai",3616,"pi",960,"pieupacirclekorean",12915,"pieupaparenkorean",12819,"pieupcieuckorean",12662,"pieupcirclekorean",12901,"pieupkiyeokkorean",12658,"pieupkorean",12610,"pieupparenkorean",12805,"pieupsioskiyeokkorean",12660,"pieupsioskorean",12612,"pieupsiostikeutkorean",12661,"pieupthieuthkorean",12663,"pieuptikeutkorean",12659,"pihiragana",12404,"pikatakana",12500,"pisymbolgreek",982,"piwrarmenian",1411,"plus",43,"plusbelowcmb",799,"pluscircle",8853,"plusminus",177,"plusmod",726,"plusmonospace",65291,"plussmall",65122,"plussuperior",8314,"pmonospace",65360,"pmsquare",13272,"pohiragana",12413,"pointingindexdownwhite",9759,"pointingindexleftwhite",9756,"pointingindexrightwhite",9758,"pointingindexupwhite",9757,"pokatakana",12509,"poplathai",3611,"postalmark",12306,"postalmarkface",12320,"pparen",9387,"precedes",8826,"prescription",8478,"primemod",697,"primereversed",8245,"product",8719,"projective",8965,"prolongedkana",12540,"propellor",8984,"propersubset",8834,"propersuperset",8835,"proportion",8759,"proportional",8733,"psi",968,"psicyrillic",1137,"psilipneumatacyrilliccmb",1158,"pssquare",13232,"puhiragana",12407,"pukatakana",12503,"pvsquare",13236,"pwsquare",13242,"q",113,"qadeva",2392,"qadmahebrew",1448,"qafarabic",1602,"qaffinalarabic",65238,"qafinitialarabic",65239,"qafmedialarabic",65240,"qamats",1464,"qamats10",1464,"qamats1a",1464,"qamats1c",1464,"qamats27",1464,"qamats29",1464,"qamats33",1464,"qamatsde",1464,"qamatshebrew",1464,"qamatsnarrowhebrew",1464,"qamatsqatanhebrew",1464,"qamatsqatannarrowhebrew",1464,"qamatsqatanquarterhebrew",1464,"qamatsqatanwidehebrew",1464,"qamatsquarterhebrew",1464,"qamatswidehebrew",1464,"qarneyparahebrew",1439,"qbopomofo",12561,"qcircle",9440,"qhook",672,"qmonospace",65361,"qof",1511,"qofdagesh",64327,"qofdageshhebrew",64327,"qofhebrew",1511,"qparen",9388,"quarternote",9833,"qubuts",1467,"qubuts18",1467,"qubuts25",1467,"qubuts31",1467,"qubutshebrew",1467,"qubutsnarrowhebrew",1467,"qubutsquarterhebrew",1467,"qubutswidehebrew",1467,"question",63,"questionarabic",1567,"questionarmenian",1374,"questiondown",191,"questiondownsmall",63423,"questiongreek",894,"questionmonospace",65311,"questionsmall",63295,"quotedbl",34,"quotedblbase",8222,"quotedblleft",8220,"quotedblmonospace",65282,"quotedblprime",12318,"quotedblprimereversed",12317,"quotedblright",8221,"quoteleft",8216,"quoteleftreversed",8219,"quotereversed",8219,"quoteright",8217,"quoterightn",329,"quotesinglbase",8218,"quotesingle",39,"quotesinglemonospace",65287,"r",114,"raarmenian",1404,"rabengali",2480,"racute",341,"radeva",2352,"radical",8730,"radicalex",63717,"radoverssquare",13230,"radoverssquaredsquare",13231,"radsquare",13229,"rafe",1471,"rafehebrew",1471,"ragujarati",2736,"ragurmukhi",2608,"rahiragana",12425,"rakatakana",12521,"rakatakanahalfwidth",65431,"ralowerdiagonalbengali",2545,"ramiddlediagonalbengali",2544,"ramshorn",612,"ratio",8758,"rbopomofo",12566,"rcaron",345,"rcedilla",343,"rcircle",9441,"rcommaaccent",343,"rdblgrave",529,"rdotaccent",7769,"rdotbelow",7771,"rdotbelowmacron",7773,"referencemark",8251,"reflexsubset",8838,"reflexsuperset",8839,"registered",174,"registersans",63720,"registerserif",63194,"reharabic",1585,"reharmenian",1408,"rehfinalarabic",65198,"rehiragana",12428,"rekatakana",12524,"rekatakanahalfwidth",65434,"resh",1512,"reshdageshhebrew",64328,"reshhebrew",1512,"reversedtilde",8765,"reviahebrew",1431,"reviamugrashhebrew",1431,"revlogicalnot",8976,"rfishhook",638,"rfishhookreversed",639,"rhabengali",2525,"rhadeva",2397,"rho",961,"rhook",637,"rhookturned",635,"rhookturnedsuperior",693,"rhosymbolgreek",1009,"rhotichookmod",734,"rieulacirclekorean",12913,"rieulaparenkorean",12817,"rieulcirclekorean",12899,"rieulhieuhkorean",12608,"rieulkiyeokkorean",12602,"rieulkiyeoksioskorean",12649,"rieulkorean",12601,"rieulmieumkorean",12603,"rieulpansioskorean",12652,"rieulparenkorean",12803,"rieulphieuphkorean",12607,"rieulpieupkorean",12604,"rieulpieupsioskorean",12651,"rieulsioskorean",12605,"rieulthieuthkorean",12606,"rieultikeutkorean",12650,"rieulyeorinhieuhkorean",12653,"rightangle",8735,"righttackbelowcmb",793,"righttriangle",8895,"rihiragana",12426,"rikatakana",12522,"rikatakanahalfwidth",65432,"ring",730,"ringbelowcmb",805,"ringcmb",778,"ringhalfleft",703,"ringhalfleftarmenian",1369,"ringhalfleftbelowcmb",796,"ringhalfleftcentered",723,"ringhalfright",702,"ringhalfrightbelowcmb",825,"ringhalfrightcentered",722,"rinvertedbreve",531,"rittorusquare",13137,"rlinebelow",7775,"rlongleg",636,"rlonglegturned",634,"rmonospace",65362,"rohiragana",12429,"rokatakana",12525,"rokatakanahalfwidth",65435,"roruathai",3619,"rparen",9389,"rrabengali",2524,"rradeva",2353,"rragurmukhi",2652,"rreharabic",1681,"rrehfinalarabic",64397,"rrvocalicbengali",2528,"rrvocalicdeva",2400,"rrvocalicgujarati",2784,"rrvocalicvowelsignbengali",2500,"rrvocalicvowelsigndeva",2372,"rrvocalicvowelsigngujarati",2756,"rsuperior",63217,"rtblock",9616,"rturned",633,"rturnedsuperior",692,"ruhiragana",12427,"rukatakana",12523,"rukatakanahalfwidth",65433,"rupeemarkbengali",2546,"rupeesignbengali",2547,"rupiah",63197,"ruthai",3620,"rvocalicbengali",2443,"rvocalicdeva",2315,"rvocalicgujarati",2699,"rvocalicvowelsignbengali",2499,"rvocalicvowelsigndeva",2371,"rvocalicvowelsigngujarati",2755,"s",115,"sabengali",2488,"sacute",347,"sacutedotaccent",7781,"sadarabic",1589,"sadeva",2360,"sadfinalarabic",65210,"sadinitialarabic",65211,"sadmedialarabic",65212,"sagujarati",2744,"sagurmukhi",2616,"sahiragana",12373,"sakatakana",12469,"sakatakanahalfwidth",65403,"sallallahoualayhewasallamarabic",65018,"samekh",1505,"samekhdagesh",64321,"samekhdageshhebrew",64321,"samekhhebrew",1505,"saraaathai",3634,"saraaethai",3649,"saraaimaimalaithai",3652,"saraaimaimuanthai",3651,"saraamthai",3635,"saraathai",3632,"saraethai",3648,"saraiileftthai",63622,"saraiithai",3637,"saraileftthai",63621,"saraithai",3636,"saraothai",3650,"saraueeleftthai",63624,"saraueethai",3639,"saraueleftthai",63623,"sarauethai",3638,"sarauthai",3640,"sarauuthai",3641,"sbopomofo",12569,"scaron",353,"scarondotaccent",7783,"scedilla",351,"schwa",601,"schwacyrillic",1241,"schwadieresiscyrillic",1243,"schwahook",602,"scircle",9442,"scircumflex",349,"scommaaccent",537,"sdotaccent",7777,"sdotbelow",7779,"sdotbelowdotaccent",7785,"seagullbelowcmb",828,"second",8243,"secondtonechinese",714,"section",167,"seenarabic",1587,"seenfinalarabic",65202,"seeninitialarabic",65203,"seenmedialarabic",65204,"segol",1462,"segol13",1462,"segol1f",1462,"segol2c",1462,"segolhebrew",1462,"segolnarrowhebrew",1462,"segolquarterhebrew",1462,"segoltahebrew",1426,"segolwidehebrew",1462,"seharmenian",1405,"sehiragana",12379,"sekatakana",12475,"sekatakanahalfwidth",65406,"semicolon",59,"semicolonarabic",1563,"semicolonmonospace",65307,"semicolonsmall",65108,"semivoicedmarkkana",12444,"semivoicedmarkkanahalfwidth",65439,"sentisquare",13090,"sentosquare",13091,"seven",55,"sevenarabic",1639,"sevenbengali",2541,"sevencircle",9318,"sevencircleinversesansserif",10128,"sevendeva",2413,"seveneighths",8542,"sevengujarati",2797,"sevengurmukhi",2669,"sevenhackarabic",1639,"sevenhangzhou",12327,"sevenideographicparen",12838,"seveninferior",8327,"sevenmonospace",65303,"sevenoldstyle",63287,"sevenparen",9338,"sevenperiod",9358,"sevenpersian",1783,"sevenroman",8566,"sevensuperior",8311,"seventeencircle",9328,"seventeenparen",9348,"seventeenperiod",9368,"seventhai",3671,"sfthyphen",173,"shaarmenian",1399,"shabengali",2486,"shacyrillic",1096,"shaddaarabic",1617,"shaddadammaarabic",64609,"shaddadammatanarabic",64606,"shaddafathaarabic",64608,"shaddakasraarabic",64610,"shaddakasratanarabic",64607,"shade",9618,"shadedark",9619,"shadelight",9617,"shademedium",9618,"shadeva",2358,"shagujarati",2742,"shagurmukhi",2614,"shalshelethebrew",1427,"shbopomofo",12565,"shchacyrillic",1097,"sheenarabic",1588,"sheenfinalarabic",65206,"sheeninitialarabic",65207,"sheenmedialarabic",65208,"sheicoptic",995,"sheqel",8362,"sheqelhebrew",8362,"sheva",1456,"sheva115",1456,"sheva15",1456,"sheva22",1456,"sheva2e",1456,"shevahebrew",1456,"shevanarrowhebrew",1456,"shevaquarterhebrew",1456,"shevawidehebrew",1456,"shhacyrillic",1211,"shimacoptic",1005,"shin",1513,"shindagesh",64329,"shindageshhebrew",64329,"shindageshshindot",64300,"shindageshshindothebrew",64300,"shindageshsindot",64301,"shindageshsindothebrew",64301,"shindothebrew",1473,"shinhebrew",1513,"shinshindot",64298,"shinshindothebrew",64298,"shinsindot",64299,"shinsindothebrew",64299,"shook",642,"sigma",963,"sigma1",962,"sigmafinal",962,"sigmalunatesymbolgreek",1010,"sihiragana",12375,"sikatakana",12471,"sikatakanahalfwidth",65404,"siluqhebrew",1469,"siluqlefthebrew",1469,"similar",8764,"sindothebrew",1474,"siosacirclekorean",12916,"siosaparenkorean",12820,"sioscieuckorean",12670,"sioscirclekorean",12902,"sioskiyeokkorean",12666,"sioskorean",12613,"siosnieunkorean",12667,"siosparenkorean",12806,"siospieupkorean",12669,"siostikeutkorean",12668,"six",54,"sixarabic",1638,"sixbengali",2540,"sixcircle",9317,"sixcircleinversesansserif",10127,"sixdeva",2412,"sixgujarati",2796,"sixgurmukhi",2668,"sixhackarabic",1638,"sixhangzhou",12326,"sixideographicparen",12837,"sixinferior",8326,"sixmonospace",65302,"sixoldstyle",63286,"sixparen",9337,"sixperiod",9357,"sixpersian",1782,"sixroman",8565,"sixsuperior",8310,"sixteencircle",9327,"sixteencurrencydenominatorbengali",2553,"sixteenparen",9347,"sixteenperiod",9367,"sixthai",3670,"slash",47,"slashmonospace",65295,"slong",383,"slongdotaccent",7835,"smileface",9786,"smonospace",65363,"sofpasuqhebrew",1475,"softhyphen",173,"softsigncyrillic",1100,"sohiragana",12381,"sokatakana",12477,"sokatakanahalfwidth",65407,"soliduslongoverlaycmb",824,"solidusshortoverlaycmb",823,"sorusithai",3625,"sosalathai",3624,"sosothai",3595,"sosuathai",3626,"space",32,"spacehackarabic",32,"spade",9824,"spadesuitblack",9824,"spadesuitwhite",9828,"sparen",9390,"squarebelowcmb",827,"squarecc",13252,"squarecm",13213,"squarediagonalcrosshatchfill",9641,"squarehorizontalfill",9636,"squarekg",13199,"squarekm",13214,"squarekmcapital",13262,"squareln",13265,"squarelog",13266,"squaremg",13198,"squaremil",13269,"squaremm",13212,"squaremsquared",13217,"squareorthogonalcrosshatchfill",9638,"squareupperlefttolowerrightfill",9639,"squareupperrighttolowerleftfill",9640,"squareverticalfill",9637,"squarewhitewithsmallblack",9635,"srsquare",13275,"ssabengali",2487,"ssadeva",2359,"ssagujarati",2743,"ssangcieuckorean",12617,"ssanghieuhkorean",12677,"ssangieungkorean",12672,"ssangkiyeokkorean",12594,"ssangnieunkorean",12645,"ssangpieupkorean",12611,"ssangsioskorean",12614,"ssangtikeutkorean",12600,"ssuperior",63218,"sterling",163,"sterlingmonospace",65505,"strokelongoverlaycmb",822,"strokeshortoverlaycmb",821,"subset",8834,"subsetnotequal",8842,"subsetorequal",8838,"succeeds",8827,"suchthat",8715,"suhiragana",12377,"sukatakana",12473,"sukatakanahalfwidth",65405,"sukunarabic",1618,"summation",8721,"sun",9788,"superset",8835,"supersetnotequal",8843,"supersetorequal",8839,"svsquare",13276,"syouwaerasquare",13180,"t",116,"tabengali",2468,"tackdown",8868,"tackleft",8867,"tadeva",2340,"tagujarati",2724,"tagurmukhi",2596,"taharabic",1591,"tahfinalarabic",65218,"tahinitialarabic",65219,"tahiragana",12383,"tahmedialarabic",65220,"taisyouerasquare",13181,"takatakana",12479,"takatakanahalfwidth",65408,"tatweelarabic",1600,"tau",964,"tav",1514,"tavdages",64330,"tavdagesh",64330,"tavdageshhebrew",64330,"tavhebrew",1514,"tbar",359,"tbopomofo",12554,"tcaron",357,"tccurl",680,"tcedilla",355,"tcheharabic",1670,"tchehfinalarabic",64379,"tchehinitialarabic",64380,"tchehmedialarabic",64381,"tcircle",9443,"tcircumflexbelow",7793,"tcommaaccent",355,"tdieresis",7831,"tdotaccent",7787,"tdotbelow",7789,"tecyrillic",1090,"tedescendercyrillic",1197,"teharabic",1578,"tehfinalarabic",65174,"tehhahinitialarabic",64674,"tehhahisolatedarabic",64524,"tehinitialarabic",65175,"tehiragana",12390,"tehjeeminitialarabic",64673,"tehjeemisolatedarabic",64523,"tehmarbutaarabic",1577,"tehmarbutafinalarabic",65172,"tehmedialarabic",65176,"tehmeeminitialarabic",64676,"tehmeemisolatedarabic",64526,"tehnoonfinalarabic",64627,"tekatakana",12486,"tekatakanahalfwidth",65411,"telephone",8481,"telephoneblack",9742,"telishagedolahebrew",1440,"telishaqetanahebrew",1449,"tencircle",9321,"tenideographicparen",12841,"tenparen",9341,"tenperiod",9361,"tenroman",8569,"tesh",679,"tet",1496,"tetdagesh",64312,"tetdageshhebrew",64312,"tethebrew",1496,"tetsecyrillic",1205,"tevirhebrew",1435,"tevirlefthebrew",1435,"thabengali",2469,"thadeva",2341,"thagujarati",2725,"thagurmukhi",2597,"thalarabic",1584,"thalfinalarabic",65196,"thanthakhatlowleftthai",63640,"thanthakhatlowrightthai",63639,"thanthakhatthai",3660,"thanthakhatupperleftthai",63638,"theharabic",1579,"thehfinalarabic",65178,"thehinitialarabic",65179,"thehmedialarabic",65180,"thereexists",8707,"therefore",8756,"theta",952,"theta1",977,"thetasymbolgreek",977,"thieuthacirclekorean",12921,"thieuthaparenkorean",12825,"thieuthcirclekorean",12907,"thieuthkorean",12620,"thieuthparenkorean",12811,"thirteencircle",9324,"thirteenparen",9344,"thirteenperiod",9364,"thonangmonthothai",3601,"thook",429,"thophuthaothai",3602,"thorn",254,"thothahanthai",3607,"thothanthai",3600,"thothongthai",3608,"thothungthai",3606,"thousandcyrillic",1154,"thousandsseparatorarabic",1644,"thousandsseparatorpersian",1644,"three",51,"threearabic",1635,"threebengali",2537,"threecircle",9314,"threecircleinversesansserif",10124,"threedeva",2409,"threeeighths",8540,"threegujarati",2793,"threegurmukhi",2665,"threehackarabic",1635,"threehangzhou",12323,"threeideographicparen",12834,"threeinferior",8323,"threemonospace",65299,"threenumeratorbengali",2550,"threeoldstyle",63283,"threeparen",9334,"threeperiod",9354,"threepersian",1779,"threequarters",190,"threequartersemdash",63198,"threeroman",8562,"threesuperior",179,"threethai",3667,"thzsquare",13204,"tihiragana",12385,"tikatakana",12481,"tikatakanahalfwidth",65409,"tikeutacirclekorean",12912,"tikeutaparenkorean",12816,"tikeutcirclekorean",12898,"tikeutkorean",12599,"tikeutparenkorean",12802,"tilde",732,"tildebelowcmb",816,"tildecmb",771,"tildecomb",771,"tildedoublecmb",864,"tildeoperator",8764,"tildeoverlaycmb",820,"tildeverticalcmb",830,"timescircle",8855,"tipehahebrew",1430,"tipehalefthebrew",1430,"tippigurmukhi",2672,"titlocyrilliccmb",1155,"tiwnarmenian",1407,"tlinebelow",7791,"tmonospace",65364,"toarmenian",1385,"tohiragana",12392,"tokatakana",12488,"tokatakanahalfwidth",65412,"tonebarextrahighmod",741,"tonebarextralowmod",745,"tonebarhighmod",742,"tonebarlowmod",744,"tonebarmidmod",743,"tonefive",445,"tonesix",389,"tonetwo",424,"tonos",900,"tonsquare",13095,"topatakthai",3599,"tortoiseshellbracketleft",12308,"tortoiseshellbracketleftsmall",65117,"tortoiseshellbracketleftvertical",65081,"tortoiseshellbracketright",12309,"tortoiseshellbracketrightsmall",65118,"tortoiseshellbracketrightvertical",65082,"totaothai",3605,"tpalatalhook",427,"tparen",9391,"trademark",8482,"trademarksans",63722,"trademarkserif",63195,"tretroflexhook",648,"triagdn",9660,"triaglf",9668,"triagrt",9658,"triagup",9650,"ts",678,"tsadi",1510,"tsadidagesh",64326,"tsadidageshhebrew",64326,"tsadihebrew",1510,"tsecyrillic",1094,"tsere",1461,"tsere12",1461,"tsere1e",1461,"tsere2b",1461,"tserehebrew",1461,"tserenarrowhebrew",1461,"tserequarterhebrew",1461,"tserewidehebrew",1461,"tshecyrillic",1115,"tsuperior",63219,"ttabengali",2463,"ttadeva",2335,"ttagujarati",2719,"ttagurmukhi",2591,"tteharabic",1657,"ttehfinalarabic",64359,"ttehinitialarabic",64360,"ttehmedialarabic",64361,"tthabengali",2464,"tthadeva",2336,"tthagujarati",2720,"tthagurmukhi",2592,"tturned",647,"tuhiragana",12388,"tukatakana",12484,"tukatakanahalfwidth",65410,"tusmallhiragana",12387,"tusmallkatakana",12483,"tusmallkatakanahalfwidth",65391,"twelvecircle",9323,"twelveparen",9343,"twelveperiod",9363,"twelveroman",8571,"twentycircle",9331,"twentyhangzhou",21316,"twentyparen",9351,"twentyperiod",9371,"two",50,"twoarabic",1634,"twobengali",2536,"twocircle",9313,"twocircleinversesansserif",10123,"twodeva",2408,"twodotenleader",8229,"twodotleader",8229,"twodotleadervertical",65072,"twogujarati",2792,"twogurmukhi",2664,"twohackarabic",1634,"twohangzhou",12322,"twoideographicparen",12833,"twoinferior",8322,"twomonospace",65298,"twonumeratorbengali",2549,"twooldstyle",63282,"twoparen",9333,"twoperiod",9353,"twopersian",1778,"tworoman",8561,"twostroke",443,"twosuperior",178,"twothai",3666,"twothirds",8532,"u",117,"uacute",250,"ubar",649,"ubengali",2441,"ubopomofo",12584,"ubreve",365,"ucaron",468,"ucircle",9444,"ucircumflex",251,"ucircumflexbelow",7799,"ucyrillic",1091,"udattadeva",2385,"udblacute",369,"udblgrave",533,"udeva",2313,"udieresis",252,"udieresisacute",472,"udieresisbelow",7795,"udieresiscaron",474,"udieresiscyrillic",1265,"udieresisgrave",476,"udieresismacron",470,"udotbelow",7909,"ugrave",249,"ugujarati",2697,"ugurmukhi",2569,"uhiragana",12358,"uhookabove",7911,"uhorn",432,"uhornacute",7913,"uhorndotbelow",7921,"uhorngrave",7915,"uhornhookabove",7917,"uhorntilde",7919,"uhungarumlaut",369,"uhungarumlautcyrillic",1267,"uinvertedbreve",535,"ukatakana",12454,"ukatakanahalfwidth",65395,"ukcyrillic",1145,"ukorean",12636,"umacron",363,"umacroncyrillic",1263,"umacrondieresis",7803,"umatragurmukhi",2625,"umonospace",65365,"underscore",95,"underscoredbl",8215,"underscoremonospace",65343,"underscorevertical",65075,"underscorewavy",65103,"union",8746,"universal",8704,"uogonek",371,"uparen",9392,"upblock",9600,"upperdothebrew",1476,"upsilon",965,"upsilondieresis",971,"upsilondieresistonos",944,"upsilonlatin",650,"upsilontonos",973,"uptackbelowcmb",797,"uptackmod",724,"uragurmukhi",2675,"uring",367,"ushortcyrillic",1118,"usmallhiragana",12357,"usmallkatakana",12453,"usmallkatakanahalfwidth",65385,"ustraightcyrillic",1199,"ustraightstrokecyrillic",1201,"utilde",361,"utildeacute",7801,"utildebelow",7797,"uubengali",2442,"uudeva",2314,"uugujarati",2698,"uugurmukhi",2570,"uumatragurmukhi",2626,"uuvowelsignbengali",2498,"uuvowelsigndeva",2370,"uuvowelsigngujarati",2754,"uvowelsignbengali",2497,"uvowelsigndeva",2369,"uvowelsigngujarati",2753,"v",118,"vadeva",2357,"vagujarati",2741,"vagurmukhi",2613,"vakatakana",12535,"vav",1493,"vavdagesh",64309,"vavdagesh65",64309,"vavdageshhebrew",64309,"vavhebrew",1493,"vavholam",64331,"vavholamhebrew",64331,"vavvavhebrew",1520,"vavyodhebrew",1521,"vcircle",9445,"vdotbelow",7807,"vecyrillic",1074,"veharabic",1700,"vehfinalarabic",64363,"vehinitialarabic",64364,"vehmedialarabic",64365,"vekatakana",12537,"venus",9792,"verticalbar",124,"verticallineabovecmb",781,"verticallinebelowcmb",809,"verticallinelowmod",716,"verticallinemod",712,"vewarmenian",1406,"vhook",651,"vikatakana",12536,"viramabengali",2509,"viramadeva",2381,"viramagujarati",2765,"visargabengali",2435,"visargadeva",2307,"visargagujarati",2691,"vmonospace",65366,"voarmenian",1400,"voicediterationhiragana",12446,"voicediterationkatakana",12542,"voicedmarkkana",12443,"voicedmarkkanahalfwidth",65438,"vokatakana",12538,"vparen",9393,"vtilde",7805,"vturned",652,"vuhiragana",12436,"vukatakana",12532,"w",119,"wacute",7811,"waekorean",12633,"wahiragana",12431,"wakatakana",12527,"wakatakanahalfwidth",65436,"wakorean",12632,"wasmallhiragana",12430,"wasmallkatakana",12526,"wattosquare",13143,"wavedash",12316,"wavyunderscorevertical",65076,"wawarabic",1608,"wawfinalarabic",65262,"wawhamzaabovearabic",1572,"wawhamzaabovefinalarabic",65158,"wbsquare",13277,"wcircle",9446,"wcircumflex",373,"wdieresis",7813,"wdotaccent",7815,"wdotbelow",7817,"wehiragana",12433,"weierstrass",8472,"wekatakana",12529,"wekorean",12638,"weokorean",12637,"wgrave",7809,"whitebullet",9702,"whitecircle",9675,"whitecircleinverse",9689,"whitecornerbracketleft",12302,"whitecornerbracketleftvertical",65091,"whitecornerbracketright",12303,"whitecornerbracketrightvertical",65092,"whitediamond",9671,"whitediamondcontainingblacksmalldiamond",9672,"whitedownpointingsmalltriangle",9663,"whitedownpointingtriangle",9661,"whiteleftpointingsmalltriangle",9667,"whiteleftpointingtriangle",9665,"whitelenticularbracketleft",12310,"whitelenticularbracketright",12311,"whiterightpointingsmalltriangle",9657,"whiterightpointingtriangle",9655,"whitesmallsquare",9643,"whitesmilingface",9786,"whitesquare",9633,"whitestar",9734,"whitetelephone",9743,"whitetortoiseshellbracketleft",12312,"whitetortoiseshellbracketright",12313,"whiteuppointingsmalltriangle",9653,"whiteuppointingtriangle",9651,"wihiragana",12432,"wikatakana",12528,"wikorean",12639,"wmonospace",65367,"wohiragana",12434,"wokatakana",12530,"wokatakanahalfwidth",65382,"won",8361,"wonmonospace",65510,"wowaenthai",3623,"wparen",9394,"wring",7832,"wsuperior",695,"wturned",653,"wynn",447,"x",120,"xabovecmb",829,"xbopomofo",12562,"xcircle",9447,"xdieresis",7821,"xdotaccent",7819,"xeharmenian",1389,"xi",958,"xmonospace",65368,"xparen",9395,"xsuperior",739,"y",121,"yaadosquare",13134,"yabengali",2479,"yacute",253,"yadeva",2351,"yaekorean",12626,"yagujarati",2735,"yagurmukhi",2607,"yahiragana",12420,"yakatakana",12516,"yakatakanahalfwidth",65428,"yakorean",12625,"yamakkanthai",3662,"yasmallhiragana",12419,"yasmallkatakana",12515,"yasmallkatakanahalfwidth",65388,"yatcyrillic",1123,"ycircle",9448,"ycircumflex",375,"ydieresis",255,"ydotaccent",7823,"ydotbelow",7925,"yeharabic",1610,"yehbarreearabic",1746,"yehbarreefinalarabic",64431,"yehfinalarabic",65266,"yehhamzaabovearabic",1574,"yehhamzaabovefinalarabic",65162,"yehhamzaaboveinitialarabic",65163,"yehhamzaabovemedialarabic",65164,"yehinitialarabic",65267,"yehmedialarabic",65268,"yehmeeminitialarabic",64733,"yehmeemisolatedarabic",64600,"yehnoonfinalarabic",64660,"yehthreedotsbelowarabic",1745,"yekorean",12630,"yen",165,"yenmonospace",65509,"yeokorean",12629,"yeorinhieuhkorean",12678,"yerahbenyomohebrew",1450,"yerahbenyomolefthebrew",1450,"yericyrillic",1099,"yerudieresiscyrillic",1273,"yesieungkorean",12673,"yesieungpansioskorean",12675,"yesieungsioskorean",12674,"yetivhebrew",1434,"ygrave",7923,"yhook",436,"yhookabove",7927,"yiarmenian",1397,"yicyrillic",1111,"yikorean",12642,"yinyang",9775,"yiwnarmenian",1410,"ymonospace",65369,"yod",1497,"yoddagesh",64313,"yoddageshhebrew",64313,"yodhebrew",1497,"yodyodhebrew",1522,"yodyodpatahhebrew",64287,"yohiragana",12424,"yoikorean",12681,"yokatakana",12520,"yokatakanahalfwidth",65430,"yokorean",12635,"yosmallhiragana",12423,"yosmallkatakana",12519,"yosmallkatakanahalfwidth",65390,"yotgreek",1011,"yoyaekorean",12680,"yoyakorean",12679,"yoyakthai",3618,"yoyingthai",3597,"yparen",9396,"ypogegrammeni",890,"ypogegrammenigreekcmb",837,"yr",422,"yring",7833,"ysuperior",696,"ytilde",7929,"yturned",654,"yuhiragana",12422,"yuikorean",12684,"yukatakana",12518,"yukatakanahalfwidth",65429,"yukorean",12640,"yusbigcyrillic",1131,"yusbigiotifiedcyrillic",1133,"yuslittlecyrillic",1127,"yuslittleiotifiedcyrillic",1129,"yusmallhiragana",12421,"yusmallkatakana",12517,"yusmallkatakanahalfwidth",65389,"yuyekorean",12683,"yuyeokorean",12682,"yyabengali",2527,"yyadeva",2399,"z",122,"zaarmenian",1382,"zacute",378,"zadeva",2395,"zagurmukhi",2651,"zaharabic",1592,"zahfinalarabic",65222,"zahinitialarabic",65223,"zahiragana",12374,"zahmedialarabic",65224,"zainarabic",1586,"zainfinalarabic",65200,"zakatakana",12470,"zaqefgadolhebrew",1429,"zaqefqatanhebrew",1428,"zarqahebrew",1432,"zayin",1494,"zayindagesh",64310,"zayindageshhebrew",64310,"zayinhebrew",1494,"zbopomofo",12567,"zcaron",382,"zcircle",9449,"zcircumflex",7825,"zcurl",657,"zdot",380,"zdotaccent",380,"zdotbelow",7827,"zecyrillic",1079,"zedescendercyrillic",1177,"zedieresiscyrillic",1247,"zehiragana",12380,"zekatakana",12476,"zero",48,"zeroarabic",1632,"zerobengali",2534,"zerodeva",2406,"zerogujarati",2790,"zerogurmukhi",2662,"zerohackarabic",1632,"zeroinferior",8320,"zeromonospace",65296,"zerooldstyle",63280,"zeropersian",1776,"zerosuperior",8304,"zerothai",3664,"zerowidthjoiner",65279,"zerowidthnonjoiner",8204,"zerowidthspace",8203,"zeta",950,"zhbopomofo",12563,"zhearmenian",1386,"zhebrevecyrillic",1218,"zhecyrillic",1078,"zhedescendercyrillic",1175,"zhedieresiscyrillic",1245,"zihiragana",12376,"zikatakana",12472,"zinorhebrew",1454,"zlinebelow",7829,"zmonospace",65370,"zohiragana",12382,"zokatakana",12478,"zparen",9397,"zretroflexhook",656,"zstroke",438,"zuhiragana",12378,"zukatakana",12474,".notdef",0,"angbracketleftbig",9001,"angbracketleftBig",9001,"angbracketleftbigg",9001,"angbracketleftBigg",9001,"angbracketrightBig",9002,"angbracketrightbig",9002,"angbracketrightBigg",9002,"angbracketrightbigg",9002,"arrowhookleft",8618,"arrowhookright",8617,"arrowlefttophalf",8636,"arrowleftbothalf",8637,"arrownortheast",8599,"arrownorthwest",8598,"arrowrighttophalf",8640,"arrowrightbothalf",8641,"arrowsoutheast",8600,"arrowsouthwest",8601,"backslashbig",8726,"backslashBig",8726,"backslashBigg",8726,"backslashbigg",8726,"bardbl",8214,"bracehtipdownleft",65079,"bracehtipdownright",65079,"bracehtipupleft",65080,"bracehtipupright",65080,"braceleftBig",123,"braceleftbig",123,"braceleftbigg",123,"braceleftBigg",123,"bracerightBig",125,"bracerightbig",125,"bracerightbigg",125,"bracerightBigg",125,"bracketleftbig",91,"bracketleftBig",91,"bracketleftbigg",91,"bracketleftBigg",91,"bracketrightBig",93,"bracketrightbig",93,"bracketrightbigg",93,"bracketrightBigg",93,"ceilingleftbig",8968,"ceilingleftBig",8968,"ceilingleftBigg",8968,"ceilingleftbigg",8968,"ceilingrightbig",8969,"ceilingrightBig",8969,"ceilingrightbigg",8969,"ceilingrightBigg",8969,"circledotdisplay",8857,"circledottext",8857,"circlemultiplydisplay",8855,"circlemultiplytext",8855,"circleplusdisplay",8853,"circleplustext",8853,"contintegraldisplay",8750,"contintegraltext",8750,"coproductdisplay",8720,"coproducttext",8720,"floorleftBig",8970,"floorleftbig",8970,"floorleftbigg",8970,"floorleftBigg",8970,"floorrightbig",8971,"floorrightBig",8971,"floorrightBigg",8971,"floorrightbigg",8971,"hatwide",770,"hatwider",770,"hatwidest",770,"intercal",7488,"integraldisplay",8747,"integraltext",8747,"intersectiondisplay",8898,"intersectiontext",8898,"logicalanddisplay",8743,"logicalandtext",8743,"logicalordisplay",8744,"logicalortext",8744,"parenleftBig",40,"parenleftbig",40,"parenleftBigg",40,"parenleftbigg",40,"parenrightBig",41,"parenrightbig",41,"parenrightBigg",41,"parenrightbigg",41,"prime",8242,"productdisplay",8719,"producttext",8719,"radicalbig",8730,"radicalBig",8730,"radicalBigg",8730,"radicalbigg",8730,"radicalbt",8730,"radicaltp",8730,"radicalvertex",8730,"slashbig",47,"slashBig",47,"slashBigg",47,"slashbigg",47,"summationdisplay",8721,"summationtext",8721,"tildewide",732,"tildewider",732,"tildewidest",732,"uniondisplay",8899,"unionmultidisplay",8846,"unionmultitext",8846,"unionsqdisplay",8852,"unionsqtext",8852,"uniontext",8899,"vextenddouble",8741,"vextendsingle",8739]})),getDingbatsGlyphsUnicode=(0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getArrayLookupTableFactory)((function(){return["space",32,"a1",9985,"a2",9986,"a202",9987,"a3",9988,"a4",9742,"a5",9990,"a119",9991,"a118",9992,"a117",9993,"a11",9755,"a12",9758,"a13",9996,"a14",9997,"a15",9998,"a16",9999,"a105",1e4,"a17",10001,"a18",10002,"a19",10003,"a20",10004,"a21",10005,"a22",10006,"a23",10007,"a24",10008,"a25",10009,"a26",10010,"a27",10011,"a28",10012,"a6",10013,"a7",10014,"a8",10015,"a9",10016,"a10",10017,"a29",10018,"a30",10019,"a31",10020,"a32",10021,"a33",10022,"a34",10023,"a35",9733,"a36",10025,"a37",10026,"a38",10027,"a39",10028,"a40",10029,"a41",10030,"a42",10031,"a43",10032,"a44",10033,"a45",10034,"a46",10035,"a47",10036,"a48",10037,"a49",10038,"a50",10039,"a51",10040,"a52",10041,"a53",10042,"a54",10043,"a55",10044,"a56",10045,"a57",10046,"a58",10047,"a59",10048,"a60",10049,"a61",10050,"a62",10051,"a63",10052,"a64",10053,"a65",10054,"a66",10055,"a67",10056,"a68",10057,"a69",10058,"a70",10059,"a71",9679,"a72",10061,"a73",9632,"a74",10063,"a203",10064,"a75",10065,"a204",10066,"a76",9650,"a77",9660,"a78",9670,"a79",10070,"a81",9687,"a82",10072,"a83",10073,"a84",10074,"a97",10075,"a98",10076,"a99",10077,"a100",10078,"a101",10081,"a102",10082,"a103",10083,"a104",10084,"a106",10085,"a107",10086,"a108",10087,"a112",9827,"a111",9830,"a110",9829,"a109",9824,"a120",9312,"a121",9313,"a122",9314,"a123",9315,"a124",9316,"a125",9317,"a126",9318,"a127",9319,"a128",9320,"a129",9321,"a130",10102,"a131",10103,"a132",10104,"a133",10105,"a134",10106,"a135",10107,"a136",10108,"a137",10109,"a138",10110,"a139",10111,"a140",10112,"a141",10113,"a142",10114,"a143",10115,"a144",10116,"a145",10117,"a146",10118,"a147",10119,"a148",10120,"a149",10121,"a150",10122,"a151",10123,"a152",10124,"a153",10125,"a154",10126,"a155",10127,"a156",10128,"a157",10129,"a158",10130,"a159",10131,"a160",10132,"a161",8594,"a163",8596,"a164",8597,"a196",10136,"a165",10137,"a192",10138,"a166",10139,"a167",10140,"a168",10141,"a169",10142,"a170",10143,"a171",10144,"a172",10145,"a173",10146,"a162",10147,"a174",10148,"a175",10149,"a176",10150,"a177",10151,"a178",10152,"a179",10153,"a193",10154,"a180",10155,"a199",10156,"a181",10157,"a200",10158,"a182",10159,"a201",10161,"a183",10162,"a184",10163,"a197",10164,"a185",10165,"a194",10166,"a198",10167,"a186",10168,"a195",10169,"a187",10170,"a188",10171,"a189",10172,"a190",10173,"a191",10174,"a89",10088,"a90",10089,"a93",10090,"a94",10091,"a91",10092,"a92",10093,"a205",10094,"a85",10095,"a206",10096,"a86",10097,"a87",10098,"a88",10099,"a95",10100,"a96",10101,".notdef",0]}))},(__unused_webpack_module,__webpack_exports__,__w_pdfjs_require__)=>{__w_pdfjs_require__.r(__webpack_exports__),__w_pdfjs_require__.d(__webpack_exports__,{clearUnicodeCaches:()=>clearUnicodeCaches,getCharUnicodeCategory:()=>getCharUnicodeCategory,getNormalizedUnicodes:()=>getNormalizedUnicodes,getUnicodeForGlyph:()=>getUnicodeForGlyph,getUnicodeRangeFor:()=>getUnicodeRangeFor,mapSpecialUnicodeValues:()=>mapSpecialUnicodeValues,reverseIfRtl:()=>reverseIfRtl});var _core_utils_js__WEBPACK_IMPORTED_MODULE_0__=__w_pdfjs_require__(6);const getSpecialPUASymbols=(0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getLookupTableFactory)((function(t){t[63721]=169,t[63193]=169,t[63720]=174,t[63194]=174,t[63722]=8482,t[63195]=8482,t[63729]=9127,t[63730]=9128,t[63731]=9129,t[63740]=9131,t[63741]=9132,t[63742]=9133,t[63726]=9121,t[63727]=9122,t[63728]=9123,t[63737]=9124,t[63738]=9125,t[63739]=9126,t[63723]=9115,t[63724]=9116,t[63725]=9117,t[63734]=9118,t[63735]=9119,t[63736]=9120}));function mapSpecialUnicodeValues(code){return code>=65520&&code<=65535?0:code>=62976&&code<=63743?getSpecialPUASymbols()[code]||code:173===code?45:code}function getUnicodeForGlyph(name,glyphsUnicodeMap){let unicode=glyphsUnicodeMap[name];if(void 0!==unicode)return unicode;if(!name)return-1;if("u"===name[0]){const nameLen=name.length;let hexStr;if(7===nameLen&&"n"===name[1]&&"i"===name[2])hexStr=name.substring(3);else{if(!(nameLen>=5&&nameLen<=7))return-1;hexStr=name.substring(1)}if(hexStr===hexStr.toUpperCase()&&(unicode=parseInt(hexStr,16),unicode>=0))return unicode}return-1}const UnicodeRanges=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];function getUnicodeRangeFor(value){for(let i=0,ii=UnicodeRanges.length;i<ii;i++){const range=UnicodeRanges[i];if(value>=range.begin&&value<range.end)return i}return-1}const getNormalizedUnicodes=(0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getArrayLookupTableFactory)((function(){return["¨"," ̈","¯"," ̄","´"," ́","µ","μ","¸"," ̧","Ĳ","IJ","ĳ","ij","Ŀ","L·","ŀ","l·","ŉ","ʼn","ſ","s","Ǆ","DŽ","ǅ","Dž","ǆ","dž","Ǉ","LJ","ǈ","Lj","ǉ","lj","Ǌ","NJ","ǋ","Nj","ǌ","nj","Ǳ","DZ","ǲ","Dz","ǳ","dz","˘"," ̆","˙"," ̇","˚"," ̊","˛"," ̨","˜"," ̃","˝"," ̋","ͺ"," ͅ","΄"," ́","ϐ","β","ϑ","θ","ϒ","Υ","ϕ","φ","ϖ","π","ϰ","κ","ϱ","ρ","ϲ","ς","ϴ","Θ","ϵ","ε","Ϲ","Σ","և","եւ","ٵ","اٴ","ٶ","وٴ","ٷ","ۇٴ","ٸ","يٴ","ำ","ํา","ຳ","ໍາ","ໜ","ຫນ","ໝ","ຫມ","ཷ","ྲཱྀ","ཹ","ླཱྀ","ẚ","aʾ","᾽"," ̓","᾿"," ̓","῀"," ͂","῾"," ̔"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","‗"," ̳","․",".","‥","..","…","...","″","′′","‴","′′′","‶","‵‵","‷","‵‵‵","‼","!!","‾"," ̅","⁇","??","⁈","?!","⁉","!?","⁗","′′′′"," "," ","₨","Rs","℀","a/c","℁","a/s","℃","°C","℅","c/o","℆","c/u","ℇ","Ɛ","℉","°F","№","No","℡","TEL","ℵ","א","ℶ","ב","ℷ","ג","ℸ","ד","℻","FAX","Ⅰ","I","Ⅱ","II","Ⅲ","III","Ⅳ","IV","Ⅴ","V","Ⅵ","VI","Ⅶ","VII","Ⅷ","VIII","Ⅸ","IX","Ⅹ","X","Ⅺ","XI","Ⅻ","XII","Ⅼ","L","Ⅽ","C","Ⅾ","D","Ⅿ","M","ⅰ","i","ⅱ","ii","ⅲ","iii","ⅳ","iv","ⅴ","v","ⅵ","vi","ⅶ","vii","ⅷ","viii","ⅸ","ix","ⅹ","x","ⅺ","xi","ⅻ","xii","ⅼ","l","ⅽ","c","ⅾ","d","ⅿ","m","∬","∫∫","∭","∫∫∫","∯","∮∮","∰","∮∮∮","⑴","(1)","⑵","(2)","⑶","(3)","⑷","(4)","⑸","(5)","⑹","(6)","⑺","(7)","⑻","(8)","⑼","(9)","⑽","(10)","⑾","(11)","⑿","(12)","⒀","(13)","⒁","(14)","⒂","(15)","⒃","(16)","⒄","(17)","⒅","(18)","⒆","(19)","⒇","(20)","⒈","1.","⒉","2.","⒊","3.","⒋","4.","⒌","5.","⒍","6.","⒎","7.","⒏","8.","⒐","9.","⒑","10.","⒒","11.","⒓","12.","⒔","13.","⒕","14.","⒖","15.","⒗","16.","⒘","17.","⒙","18.","⒚","19.","⒛","20.","⒜","(a)","⒝","(b)","⒞","(c)","⒟","(d)","⒠","(e)","⒡","(f)","⒢","(g)","⒣","(h)","⒤","(i)","⒥","(j)","⒦","(k)","⒧","(l)","⒨","(m)","⒩","(n)","⒪","(o)","⒫","(p)","⒬","(q)","⒭","(r)","⒮","(s)","⒯","(t)","⒰","(u)","⒱","(v)","⒲","(w)","⒳","(x)","⒴","(y)","⒵","(z)","⨌","∫∫∫∫","⩴","::=","⩵","==","⩶","===","⺟","母","⻳","龟","⼀","一","⼁","丨","⼂","丶","⼃","丿","⼄","乙","⼅","亅","⼆","二","⼇","亠","⼈","人","⼉","儿","⼊","入","⼋","八","⼌","冂","⼍","冖","⼎","冫","⼏","几","⼐","凵","⼑","刀","⼒","力","⼓","勹","⼔","匕","⼕","匚","⼖","匸","⼗","十","⼘","卜","⼙","卩","⼚","厂","⼛","厶","⼜","又","⼝","口","⼞","囗","⼟","土","⼠","士","⼡","夂","⼢","夊","⼣","夕","⼤","大","⼥","女","⼦","子","⼧","宀","⼨","寸","⼩","小","⼪","尢","⼫","尸","⼬","屮","⼭","山","⼮","巛","⼯","工","⼰","己","⼱","巾","⼲","干","⼳","幺","⼴","广","⼵","廴","⼶","廾","⼷","弋","⼸","弓","⼹","彐","⼺","彡","⼻","彳","⼼","心","⼽","戈","⼾","戶","⼿","手","⽀","支","⽁","攴","⽂","文","⽃","斗","⽄","斤","⽅","方","⽆","无","⽇","日","⽈","曰","⽉","月","⽊","木","⽋","欠","⽌","止","⽍","歹","⽎","殳","⽏","毋","⽐","比","⽑","毛","⽒","氏","⽓","气","⽔","水","⽕","火","⽖","爪","⽗","父","⽘","爻","⽙","爿","⽚","片","⽛","牙","⽜","牛","⽝","犬","⽞","玄","⽟","玉","⽠","瓜","⽡","瓦","⽢","甘","⽣","生","⽤","用","⽥","田","⽦","疋","⽧","疒","⽨","癶","⽩","白","⽪","皮","⽫","皿","⽬","目","⽭","矛","⽮","矢","⽯","石","⽰","示","⽱","禸","⽲","禾","⽳","穴","⽴","立","⽵","竹","⽶","米","⽷","糸","⽸","缶","⽹","网","⽺","羊","⽻","羽","⽼","老","⽽","而","⽾","耒","⽿","耳","⾀","聿","⾁","肉","⾂","臣","⾃","自","⾄","至","⾅","臼","⾆","舌","⾇","舛","⾈","舟","⾉","艮","⾊","色","⾋","艸","⾌","虍","⾍","虫","⾎","血","⾏","行","⾐","衣","⾑","襾","⾒","見","⾓","角","⾔","言","⾕","谷","⾖","豆","⾗","豕","⾘","豸","⾙","貝","⾚","赤","⾛","走","⾜","足","⾝","身","⾞","車","⾟","辛","⾠","辰","⾡","辵","⾢","邑","⾣","酉","⾤","釆","⾥","里","⾦","金","⾧","長","⾨","門","⾩","阜","⾪","隶","⾫","隹","⾬","雨","⾭","靑","⾮","非","⾯","面","⾰","革","⾱","韋","⾲","韭","⾳","音","⾴","頁","⾵","風","⾶","飛","⾷","食","⾸","首","⾹","香","⾺","馬","⾻","骨","⾼","高","⾽","髟","⾾","鬥","⾿","鬯","⿀","鬲","⿁","鬼","⿂","魚","⿃","鳥","⿄","鹵","⿅","鹿","⿆","麥","⿇","麻","⿈","黃","⿉","黍","⿊","黑","⿋","黹","⿌","黽","⿍","鼎","⿎","鼓","⿏","鼠","⿐","鼻","⿑","齊","⿒","齒","⿓","龍","⿔","龜","⿕","龠","〶","〒","〸","十","〹","卄","〺","卅","゛"," ゙","゜"," ゚","ㄱ","ᄀ","ㄲ","ᄁ","ㄳ","ᆪ","ㄴ","ᄂ","ㄵ","ᆬ","ㄶ","ᆭ","ㄷ","ᄃ","ㄸ","ᄄ","ㄹ","ᄅ","ㄺ","ᆰ","ㄻ","ᆱ","ㄼ","ᆲ","ㄽ","ᆳ","ㄾ","ᆴ","ㄿ","ᆵ","ㅀ","ᄚ","ㅁ","ᄆ","ㅂ","ᄇ","ㅃ","ᄈ","ㅄ","ᄡ","ㅅ","ᄉ","ㅆ","ᄊ","ㅇ","ᄋ","ㅈ","ᄌ","ㅉ","ᄍ","ㅊ","ᄎ","ㅋ","ᄏ","ㅌ","ᄐ","ㅍ","ᄑ","ㅎ","ᄒ","ㅏ","ᅡ","ㅐ","ᅢ","ㅑ","ᅣ","ㅒ","ᅤ","ㅓ","ᅥ","ㅔ","ᅦ","ㅕ","ᅧ","ㅖ","ᅨ","ㅗ","ᅩ","ㅘ","ᅪ","ㅙ","ᅫ","ㅚ","ᅬ","ㅛ","ᅭ","ㅜ","ᅮ","ㅝ","ᅯ","ㅞ","ᅰ","ㅟ","ᅱ","ㅠ","ᅲ","ㅡ","ᅳ","ㅢ","ᅴ","ㅣ","ᅵ","ㅤ","ᅠ","ㅥ","ᄔ","ㅦ","ᄕ","ㅧ","ᇇ","ㅨ","ᇈ","ㅩ","ᇌ","ㅪ","ᇎ","ㅫ","ᇓ","ㅬ","ᇗ","ㅭ","ᇙ","ㅮ","ᄜ","ㅯ","ᇝ","ㅰ","ᇟ","ㅱ","ᄝ","ㅲ","ᄞ","ㅳ","ᄠ","ㅴ","ᄢ","ㅵ","ᄣ","ㅶ","ᄧ","ㅷ","ᄩ","ㅸ","ᄫ","ㅹ","ᄬ","ㅺ","ᄭ","ㅻ","ᄮ","ㅼ","ᄯ","ㅽ","ᄲ","ㅾ","ᄶ","ㅿ","ᅀ","ㆀ","ᅇ","ㆁ","ᅌ","ㆂ","ᇱ","ㆃ","ᇲ","ㆄ","ᅗ","ㆅ","ᅘ","ㆆ","ᅙ","ㆇ","ᆄ","ㆈ","ᆅ","ㆉ","ᆈ","ㆊ","ᆑ","ㆋ","ᆒ","ㆌ","ᆔ","ㆍ","ᆞ","ㆎ","ᆡ","㈀","(ᄀ)","㈁","(ᄂ)","㈂","(ᄃ)","㈃","(ᄅ)","㈄","(ᄆ)","㈅","(ᄇ)","㈆","(ᄉ)","㈇","(ᄋ)","㈈","(ᄌ)","㈉","(ᄎ)","㈊","(ᄏ)","㈋","(ᄐ)","㈌","(ᄑ)","㈍","(ᄒ)","㈎","(가)","㈏","(나)","㈐","(다)","㈑","(라)","㈒","(마)","㈓","(바)","㈔","(사)","㈕","(아)","㈖","(자)","㈗","(차)","㈘","(카)","㈙","(타)","㈚","(파)","㈛","(하)","㈜","(주)","㈝","(오전)","㈞","(오후)","㈠","(一)","㈡","(二)","㈢","(三)","㈣","(四)","㈤","(五)","㈥","(六)","㈦","(七)","㈧","(八)","㈨","(九)","㈩","(十)","㈪","(月)","㈫","(火)","㈬","(水)","㈭","(木)","㈮","(金)","㈯","(土)","㈰","(日)","㈱","(株)","㈲","(有)","㈳","(社)","㈴","(名)","㈵","(特)","㈶","(財)","㈷","(祝)","㈸","(労)","㈹","(代)","㈺","(呼)","㈻","(学)","㈼","(監)","㈽","(企)","㈾","(資)","㈿","(協)","㉀","(祭)","㉁","(休)","㉂","(自)","㉃","(至)","㋀","1月","㋁","2月","㋂","3月","㋃","4月","㋄","5月","㋅","6月","㋆","7月","㋇","8月","㋈","9月","㋉","10月","㋊","11月","㋋","12月","㍘","0点","㍙","1点","㍚","2点","㍛","3点","㍜","4点","㍝","5点","㍞","6点","㍟","7点","㍠","8点","㍡","9点","㍢","10点","㍣","11点","㍤","12点","㍥","13点","㍦","14点","㍧","15点","㍨","16点","㍩","17点","㍪","18点","㍫","19点","㍬","20点","㍭","21点","㍮","22点","㍯","23点","㍰","24点","㏠","1日","㏡","2日","㏢","3日","㏣","4日","㏤","5日","㏥","6日","㏦","7日","㏧","8日","㏨","9日","㏩","10日","㏪","11日","㏫","12日","㏬","13日","㏭","14日","㏮","15日","㏯","16日","㏰","17日","㏱","18日","㏲","19日","㏳","20日","㏴","21日","㏵","22日","㏶","23日","㏷","24日","㏸","25日","㏹","26日","㏺","27日","㏻","28日","㏼","29日","㏽","30日","㏾","31日","ﬀ","ff","ﬁ","fi","ﬂ","fl","ﬃ","ffi","ﬄ","ffl","ﬅ","ſt","ﬆ","st","ﬓ","մն","ﬔ","մե","ﬕ","մի","ﬖ","վն","ﬗ","մխ","ﭏ","אל","ﭐ","ٱ","ﭑ","ٱ","ﭒ","ٻ","ﭓ","ٻ","ﭔ","ٻ","ﭕ","ٻ","ﭖ","پ","ﭗ","پ","ﭘ","پ","ﭙ","پ","ﭚ","ڀ","ﭛ","ڀ","ﭜ","ڀ","ﭝ","ڀ","ﭞ","ٺ","ﭟ","ٺ","ﭠ","ٺ","ﭡ","ٺ","ﭢ","ٿ","ﭣ","ٿ","ﭤ","ٿ","ﭥ","ٿ","ﭦ","ٹ","ﭧ","ٹ","ﭨ","ٹ","ﭩ","ٹ","ﭪ","ڤ","ﭫ","ڤ","ﭬ","ڤ","ﭭ","ڤ","ﭮ","ڦ","ﭯ","ڦ","ﭰ","ڦ","ﭱ","ڦ","ﭲ","ڄ","ﭳ","ڄ","ﭴ","ڄ","ﭵ","ڄ","ﭶ","ڃ","ﭷ","ڃ","ﭸ","ڃ","ﭹ","ڃ","ﭺ","چ","ﭻ","چ","ﭼ","چ","ﭽ","چ","ﭾ","ڇ","ﭿ","ڇ","ﮀ","ڇ","ﮁ","ڇ","ﮂ","ڍ","ﮃ","ڍ","ﮄ","ڌ","ﮅ","ڌ","ﮆ","ڎ","ﮇ","ڎ","ﮈ","ڈ","ﮉ","ڈ","ﮊ","ژ","ﮋ","ژ","ﮌ","ڑ","ﮍ","ڑ","ﮎ","ک","ﮏ","ک","ﮐ","ک","ﮑ","ک","ﮒ","گ","ﮓ","گ","ﮔ","گ","ﮕ","گ","ﮖ","ڳ","ﮗ","ڳ","ﮘ","ڳ","ﮙ","ڳ","ﮚ","ڱ","ﮛ","ڱ","ﮜ","ڱ","ﮝ","ڱ","ﮞ","ں","ﮟ","ں","ﮠ","ڻ","ﮡ","ڻ","ﮢ","ڻ","ﮣ","ڻ","ﮤ","ۀ","ﮥ","ۀ","ﮦ","ہ","ﮧ","ہ","ﮨ","ہ","ﮩ","ہ","ﮪ","ھ","ﮫ","ھ","ﮬ","ھ","ﮭ","ھ","ﮮ","ے","ﮯ","ے","ﮰ","ۓ","ﮱ","ۓ","ﯓ","ڭ","ﯔ","ڭ","ﯕ","ڭ","ﯖ","ڭ","ﯗ","ۇ","ﯘ","ۇ","ﯙ","ۆ","ﯚ","ۆ","ﯛ","ۈ","ﯜ","ۈ","ﯝ","ٷ","ﯞ","ۋ","ﯟ","ۋ","ﯠ","ۅ","ﯡ","ۅ","ﯢ","ۉ","ﯣ","ۉ","ﯤ","ې","ﯥ","ې","ﯦ","ې","ﯧ","ې","ﯨ","ى","ﯩ","ى","ﯪ","ئا","ﯫ","ئا","ﯬ","ئە","ﯭ","ئە","ﯮ","ئو","ﯯ","ئو","ﯰ","ئۇ","ﯱ","ئۇ","ﯲ","ئۆ","ﯳ","ئۆ","ﯴ","ئۈ","ﯵ","ئۈ","ﯶ","ئې","ﯷ","ئې","ﯸ","ئې","ﯹ","ئى","ﯺ","ئى","ﯻ","ئى","ﯼ","ی","ﯽ","ی","ﯾ","ی","ﯿ","ی","ﰀ","ئج","ﰁ","ئح","ﰂ","ئم","ﰃ","ئى","ﰄ","ئي","ﰅ","بج","ﰆ","بح","ﰇ","بخ","ﰈ","بم","ﰉ","بى","ﰊ","بي","ﰋ","تج","ﰌ","تح","ﰍ","تخ","ﰎ","تم","ﰏ","تى","ﰐ","تي","ﰑ","ثج","ﰒ","ثم","ﰓ","ثى","ﰔ","ثي","ﰕ","جح","ﰖ","جم","ﰗ","حج","ﰘ","حم","ﰙ","خج","ﰚ","خح","ﰛ","خم","ﰜ","سج","ﰝ","سح","ﰞ","سخ","ﰟ","سم","ﰠ","صح","ﰡ","صم","ﰢ","ضج","ﰣ","ضح","ﰤ","ضخ","ﰥ","ضم","ﰦ","طح","ﰧ","طم","ﰨ","ظم","ﰩ","عج","ﰪ","عم","ﰫ","غج","ﰬ","غم","ﰭ","فج","ﰮ","فح","ﰯ","فخ","ﰰ","فم","ﰱ","فى","ﰲ","في","ﰳ","قح","ﰴ","قم","ﰵ","قى","ﰶ","قي","ﰷ","كا","ﰸ","كج","ﰹ","كح","ﰺ","كخ","ﰻ","كل","ﰼ","كم","ﰽ","كى","ﰾ","كي","ﰿ","لج","ﱀ","لح","ﱁ","لخ","ﱂ","لم","ﱃ","لى","ﱄ","لي","ﱅ","مج","ﱆ","مح","ﱇ","مخ","ﱈ","مم","ﱉ","مى","ﱊ","مي","ﱋ","نج","ﱌ","نح","ﱍ","نخ","ﱎ","نم","ﱏ","نى","ﱐ","ني","ﱑ","هج","ﱒ","هم","ﱓ","هى","ﱔ","هي","ﱕ","يج","ﱖ","يح","ﱗ","يخ","ﱘ","يم","ﱙ","يى","ﱚ","يي","ﱛ","ذٰ","ﱜ","رٰ","ﱝ","ىٰ","ﱞ"," ٌّ","ﱟ"," ٍّ","ﱠ"," َّ","ﱡ"," ُّ","ﱢ"," ِّ","ﱣ"," ّٰ","ﱤ","ئر","ﱥ","ئز","ﱦ","ئم","ﱧ","ئن","ﱨ","ئى","ﱩ","ئي","ﱪ","بر","ﱫ","بز","ﱬ","بم","ﱭ","بن","ﱮ","بى","ﱯ","بي","ﱰ","تر","ﱱ","تز","ﱲ","تم","ﱳ","تن","ﱴ","تى","ﱵ","تي","ﱶ","ثر","ﱷ","ثز","ﱸ","ثم","ﱹ","ثن","ﱺ","ثى","ﱻ","ثي","ﱼ","فى","ﱽ","في","ﱾ","قى","ﱿ","قي","ﲀ","كا","ﲁ","كل","ﲂ","كم","ﲃ","كى","ﲄ","كي","ﲅ","لم","ﲆ","لى","ﲇ","لي","ﲈ","ما","ﲉ","مم","ﲊ","نر","ﲋ","نز","ﲌ","نم","ﲍ","نن","ﲎ","نى","ﲏ","ني","ﲐ","ىٰ","ﲑ","ير","ﲒ","يز","ﲓ","يم","ﲔ","ين","ﲕ","يى","ﲖ","يي","ﲗ","ئج","ﲘ","ئح","ﲙ","ئخ","ﲚ","ئم","ﲛ","ئه","ﲜ","بج","ﲝ","بح","ﲞ","بخ","ﲟ","بم","ﲠ","به","ﲡ","تج","ﲢ","تح","ﲣ","تخ","ﲤ","تم","ﲥ","ته","ﲦ","ثم","ﲧ","جح","ﲨ","جم","ﲩ","حج","ﲪ","حم","ﲫ","خج","ﲬ","خم","ﲭ","سج","ﲮ","سح","ﲯ","سخ","ﲰ","سم","ﲱ","صح","ﲲ","صخ","ﲳ","صم","ﲴ","ضج","ﲵ","ضح","ﲶ","ضخ","ﲷ","ضم","ﲸ","طح","ﲹ","ظم","ﲺ","عج","ﲻ","عم","ﲼ","غج","ﲽ","غم","ﲾ","فج","ﲿ","فح","ﳀ","فخ","ﳁ","فم","ﳂ","قح","ﳃ","قم","ﳄ","كج","ﳅ","كح","ﳆ","كخ","ﳇ","كل","ﳈ","كم","ﳉ","لج","ﳊ","لح","ﳋ","لخ","ﳌ","لم","ﳍ","له","ﳎ","مج","ﳏ","مح","ﳐ","مخ","ﳑ","مم","ﳒ","نج","ﳓ","نح","ﳔ","نخ","ﳕ","نم","ﳖ","نه","ﳗ","هج","ﳘ","هم","ﳙ","هٰ","ﳚ","يج","ﳛ","يح","ﳜ","يخ","ﳝ","يم","ﳞ","يه","ﳟ","ئم","ﳠ","ئه","ﳡ","بم","ﳢ","به","ﳣ","تم","ﳤ","ته","ﳥ","ثم","ﳦ","ثه","ﳧ","سم","ﳨ","سه","ﳩ","شم","ﳪ","شه","ﳫ","كل","ﳬ","كم","ﳭ","لم","ﳮ","نم","ﳯ","نه","ﳰ","يم","ﳱ","يه","ﳲ","ـَّ","ﳳ","ـُّ","ﳴ","ـِّ","ﳵ","طى","ﳶ","طي","ﳷ","عى","ﳸ","عي","ﳹ","غى","ﳺ","غي","ﳻ","سى","ﳼ","سي","ﳽ","شى","ﳾ","شي","ﳿ","حى","ﴀ","حي","ﴁ","جى","ﴂ","جي","ﴃ","خى","ﴄ","خي","ﴅ","صى","ﴆ","صي","ﴇ","ضى","ﴈ","ضي","ﴉ","شج","ﴊ","شح","ﴋ","شخ","ﴌ","شم","ﴍ","شر","ﴎ","سر","ﴏ","صر","ﴐ","ضر","ﴑ","طى","ﴒ","طي","ﴓ","عى","ﴔ","عي","ﴕ","غى","ﴖ","غي","ﴗ","سى","ﴘ","سي","ﴙ","شى","ﴚ","شي","ﴛ","حى","ﴜ","حي","ﴝ","جى","ﴞ","جي","ﴟ","خى","ﴠ","خي","ﴡ","صى","ﴢ","صي","ﴣ","ضى","ﴤ","ضي","ﴥ","شج","ﴦ","شح","ﴧ","شخ","ﴨ","شم","ﴩ","شر","ﴪ","سر","ﴫ","صر","ﴬ","ضر","ﴭ","شج","ﴮ","شح","ﴯ","شخ","ﴰ","شم","ﴱ","سه","ﴲ","شه","ﴳ","طم","ﴴ","سج","ﴵ","سح","ﴶ","سخ","ﴷ","شج","ﴸ","شح","ﴹ","شخ","ﴺ","طم","ﴻ","ظم","ﴼ","اً","ﴽ","اً","ﵐ","تجم","ﵑ","تحج","ﵒ","تحج","ﵓ","تحم","ﵔ","تخم","ﵕ","تمج","ﵖ","تمح","ﵗ","تمخ","ﵘ","جمح","ﵙ","جمح","ﵚ","حمي","ﵛ","حمى","ﵜ","سحج","ﵝ","سجح","ﵞ","سجى","ﵟ","سمح","ﵠ","سمح","ﵡ","سمج","ﵢ","سمم","ﵣ","سمم","ﵤ","صحح","ﵥ","صحح","ﵦ","صمم","ﵧ","شحم","ﵨ","شحم","ﵩ","شجي","ﵪ","شمخ","ﵫ","شمخ","ﵬ","شمم","ﵭ","شمم","ﵮ","ضحى","ﵯ","ضخم","ﵰ","ضخم","ﵱ","طمح","ﵲ","طمح","ﵳ","طمم","ﵴ","طمي","ﵵ","عجم","ﵶ","عمم","ﵷ","عمم","ﵸ","عمى","ﵹ","غمم","ﵺ","غمي","ﵻ","غمى","ﵼ","فخم","ﵽ","فخم","ﵾ","قمح","ﵿ","قمم","ﶀ","لحم","ﶁ","لحي","ﶂ","لحى","ﶃ","لجج","ﶄ","لجج","ﶅ","لخم","ﶆ","لخم","ﶇ","لمح","ﶈ","لمح","ﶉ","محج","ﶊ","محم","ﶋ","محي","ﶌ","مجح","ﶍ","مجم","ﶎ","مخج","ﶏ","مخم","ﶒ","مجخ","ﶓ","همج","ﶔ","همم","ﶕ","نحم","ﶖ","نحى","ﶗ","نجم","ﶘ","نجم","ﶙ","نجى","ﶚ","نمي","ﶛ","نمى","ﶜ","يمم","ﶝ","يمم","ﶞ","بخي","ﶟ","تجي","ﶠ","تجى","ﶡ","تخي","ﶢ","تخى","ﶣ","تمي","ﶤ","تمى","ﶥ","جمي","ﶦ","جحى","ﶧ","جمى","ﶨ","سخى","ﶩ","صحي","ﶪ","شحي","ﶫ","ضحي","ﶬ","لجي","ﶭ","لمي","ﶮ","يحي","ﶯ","يجي","ﶰ","يمي","ﶱ","ممي","ﶲ","قمي","ﶳ","نحي","ﶴ","قمح","ﶵ","لحم","ﶶ","عمي","ﶷ","كمي","ﶸ","نجح","ﶹ","مخي","ﶺ","لجم","ﶻ","كمم","ﶼ","لجم","ﶽ","نجح","ﶾ","جحي","ﶿ","حجي","ﷀ","مجي","ﷁ","فمي","ﷂ","بحي","ﷃ","كمم","ﷄ","عجم","ﷅ","صمم","ﷆ","سخي","ﷇ","نجي","﹉","‾","﹊","‾","﹋","‾","﹌","‾","﹍","_","﹎","_","﹏","_","ﺀ","ء","ﺁ","آ","ﺂ","آ","ﺃ","أ","ﺄ","أ","ﺅ","ؤ","ﺆ","ؤ","ﺇ","إ","ﺈ","إ","ﺉ","ئ","ﺊ","ئ","ﺋ","ئ","ﺌ","ئ","ﺍ","ا","ﺎ","ا","ﺏ","ب","ﺐ","ب","ﺑ","ب","ﺒ","ب","ﺓ","ة","ﺔ","ة","ﺕ","ت","ﺖ","ت","ﺗ","ت","ﺘ","ت","ﺙ","ث","ﺚ","ث","ﺛ","ث","ﺜ","ث","ﺝ","ج","ﺞ","ج","ﺟ","ج","ﺠ","ج","ﺡ","ح","ﺢ","ح","ﺣ","ح","ﺤ","ح","ﺥ","خ","ﺦ","خ","ﺧ","خ","ﺨ","خ","ﺩ","د","ﺪ","د","ﺫ","ذ","ﺬ","ذ","ﺭ","ر","ﺮ","ر","ﺯ","ز","ﺰ","ز","ﺱ","س","ﺲ","س","ﺳ","س","ﺴ","س","ﺵ","ش","ﺶ","ش","ﺷ","ش","ﺸ","ش","ﺹ","ص","ﺺ","ص","ﺻ","ص","ﺼ","ص","ﺽ","ض","ﺾ","ض","ﺿ","ض","ﻀ","ض","ﻁ","ط","ﻂ","ط","ﻃ","ط","ﻄ","ط","ﻅ","ظ","ﻆ","ظ","ﻇ","ظ","ﻈ","ظ","ﻉ","ع","ﻊ","ع","ﻋ","ع","ﻌ","ع","ﻍ","غ","ﻎ","غ","ﻏ","غ","ﻐ","غ","ﻑ","ف","ﻒ","ف","ﻓ","ف","ﻔ","ف","ﻕ","ق","ﻖ","ق","ﻗ","ق","ﻘ","ق","ﻙ","ك","ﻚ","ك","ﻛ","ك","ﻜ","ك","ﻝ","ل","ﻞ","ل","ﻟ","ل","ﻠ","ل","ﻡ","م","ﻢ","م","ﻣ","م","ﻤ","م","ﻥ","ن","ﻦ","ن","ﻧ","ن","ﻨ","ن","ﻩ","ه","ﻪ","ه","ﻫ","ه","ﻬ","ه","ﻭ","و","ﻮ","و","ﻯ","ى","ﻰ","ى","ﻱ","ي","ﻲ","ي","ﻳ","ي","ﻴ","ي","ﻵ","لآ","ﻶ","لآ","ﻷ","لأ","ﻸ","لأ","ﻹ","لإ","ﻺ","لإ","ﻻ","لا","ﻼ","لا"]}));function reverseIfRtl(chars){const charsLength=chars.length;if(charsLength<=1||!function isRTLRangeFor(value){let range=UnicodeRanges[13];return value>=range.begin&&value<range.end||(range=UnicodeRanges[11],value>=range.begin&&value<range.end)}(chars.charCodeAt(0)))return chars;const buf=[];for(let ii=charsLength-1;ii>=0;ii--)buf.push(chars[ii]);return buf.join("")}const SpecialCharRegExp=new RegExp("^(\\s)|(\\p{Mn})|(\\p{Cf})$","u"),CategoryCache=new Map;function getCharUnicodeCategory(char){const cachedCategory=CategoryCache.get(char);if(cachedCategory)return cachedCategory;const groups=char.match(SpecialCharRegExp),category={isWhitespace:!(!groups||!groups[1]),isZeroWidthDiacritic:!(!groups||!groups[2]),isInvisibleFormatMark:!(!groups||!groups[3])};return CategoryCache.set(char,category),category}function clearUnicodeCaches(){CategoryCache.clear()}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getSerifFonts=exports.getNonStdFontMap=exports.getGlyphMapForStandardFonts=exports.getFontNameToFileMap=void 0,exports.getStandardFontName=function getStandardFontName(name){const fontName=(0,_fonts_utils.normalizeFontName)(name);return getStdFontMap()[fontName]},exports.getSymbolsFonts=exports.getSupplementalGlyphMapForCalibri=exports.getSupplementalGlyphMapForArialBlack=exports.getStdFontMap=void 0;var _core_utils=__w_pdfjs_require__(6),_fonts_utils=__w_pdfjs_require__(38);const getStdFontMap=(0,_core_utils.getLookupTableFactory)((function(t){t["Times-Roman"]="Times-Roman",t.Helvetica="Helvetica",t.Courier="Courier",t.Symbol="Symbol",t["Times-Bold"]="Times-Bold",t["Helvetica-Bold"]="Helvetica-Bold",t["Courier-Bold"]="Courier-Bold",t.ZapfDingbats="ZapfDingbats",t["Times-Italic"]="Times-Italic",t["Helvetica-Oblique"]="Helvetica-Oblique",t["Courier-Oblique"]="Courier-Oblique",t["Times-BoldItalic"]="Times-BoldItalic",t["Helvetica-BoldOblique"]="Helvetica-BoldOblique",t["Courier-BoldOblique"]="Courier-BoldOblique",t.ArialNarrow="Helvetica",t["ArialNarrow-Bold"]="Helvetica-Bold",t["ArialNarrow-BoldItalic"]="Helvetica-BoldOblique",t["ArialNarrow-Italic"]="Helvetica-Oblique",t.ArialBlack="Helvetica",t["ArialBlack-Bold"]="Helvetica-Bold",t["ArialBlack-BoldItalic"]="Helvetica-BoldOblique",t["ArialBlack-Italic"]="Helvetica-Oblique",t["Arial-Black"]="Helvetica",t["Arial-Black-Bold"]="Helvetica-Bold",t["Arial-Black-BoldItalic"]="Helvetica-BoldOblique",t["Arial-Black-Italic"]="Helvetica-Oblique",t.Arial="Helvetica",t["Arial-Bold"]="Helvetica-Bold",t["Arial-BoldItalic"]="Helvetica-BoldOblique",t["Arial-Italic"]="Helvetica-Oblique",t.ArialMT="Helvetica",t["Arial-BoldItalicMT"]="Helvetica-BoldOblique",t["Arial-BoldMT"]="Helvetica-Bold",t["Arial-ItalicMT"]="Helvetica-Oblique",t.ArialUnicodeMS="Helvetica",t["ArialUnicodeMS-Bold"]="Helvetica-Bold",t["ArialUnicodeMS-BoldItalic"]="Helvetica-BoldOblique",t["ArialUnicodeMS-Italic"]="Helvetica-Oblique",t["Courier-BoldItalic"]="Courier-BoldOblique",t["Courier-Italic"]="Courier-Oblique",t.CourierNew="Courier",t["CourierNew-Bold"]="Courier-Bold",t["CourierNew-BoldItalic"]="Courier-BoldOblique",t["CourierNew-Italic"]="Courier-Oblique",t["CourierNewPS-BoldItalicMT"]="Courier-BoldOblique",t["CourierNewPS-BoldMT"]="Courier-Bold",t["CourierNewPS-ItalicMT"]="Courier-Oblique",t.CourierNewPSMT="Courier",t["Helvetica-BoldItalic"]="Helvetica-BoldOblique",t["Helvetica-Italic"]="Helvetica-Oblique",t["Symbol-Bold"]="Symbol",t["Symbol-BoldItalic"]="Symbol",t["Symbol-Italic"]="Symbol",t.TimesNewRoman="Times-Roman",t["TimesNewRoman-Bold"]="Times-Bold",t["TimesNewRoman-BoldItalic"]="Times-BoldItalic",t["TimesNewRoman-Italic"]="Times-Italic",t.TimesNewRomanPS="Times-Roman",t["TimesNewRomanPS-Bold"]="Times-Bold",t["TimesNewRomanPS-BoldItalic"]="Times-BoldItalic",t["TimesNewRomanPS-BoldItalicMT"]="Times-BoldItalic",t["TimesNewRomanPS-BoldMT"]="Times-Bold",t["TimesNewRomanPS-Italic"]="Times-Italic",t["TimesNewRomanPS-ItalicMT"]="Times-Italic",t.TimesNewRomanPSMT="Times-Roman",t["TimesNewRomanPSMT-Bold"]="Times-Bold",t["TimesNewRomanPSMT-BoldItalic"]="Times-BoldItalic",t["TimesNewRomanPSMT-Italic"]="Times-Italic"}));exports.getStdFontMap=getStdFontMap;const getFontNameToFileMap=(0,_core_utils.getLookupTableFactory)((function(t){t.Courier="FoxitFixed.pfb",t["Courier-Bold"]="FoxitFixedBold.pfb",t["Courier-BoldOblique"]="FoxitFixedBoldItalic.pfb",t["Courier-Oblique"]="FoxitFixedItalic.pfb",t.Helvetica="FoxitSans.pfb",t["Helvetica-Bold"]="FoxitSansBold.pfb",t["Helvetica-BoldOblique"]="FoxitSansBoldItalic.pfb",t["Helvetica-Oblique"]="FoxitSansItalic.pfb",t["Times-Roman"]="FoxitSerif.pfb",t["Times-Bold"]="FoxitSerifBold.pfb",t["Times-BoldItalic"]="FoxitSerifBoldItalic.pfb",t["Times-Italic"]="FoxitSerifItalic.pfb",t.Symbol="FoxitSymbol.pfb",t.ZapfDingbats="FoxitDingbats.pfb",t["LiberationSans-Regular"]="LiberationSans-Regular.ttf",t["LiberationSans-Bold"]="LiberationSans-Bold.ttf",t["LiberationSans-Italic"]="LiberationSans-Italic.ttf",t["LiberationSans-BoldItalic"]="LiberationSans-BoldItalic.ttf"}));exports.getFontNameToFileMap=getFontNameToFileMap;const getNonStdFontMap=(0,_core_utils.getLookupTableFactory)((function(t){t.Calibri="Helvetica",t["Calibri-Bold"]="Helvetica-Bold",t["Calibri-BoldItalic"]="Helvetica-BoldOblique",t["Calibri-Italic"]="Helvetica-Oblique",t.CenturyGothic="Helvetica",t["CenturyGothic-Bold"]="Helvetica-Bold",t["CenturyGothic-BoldItalic"]="Helvetica-BoldOblique",t["CenturyGothic-Italic"]="Helvetica-Oblique",t.ComicSansMS="Comic Sans MS",t["ComicSansMS-Bold"]="Comic Sans MS-Bold",t["ComicSansMS-BoldItalic"]="Comic Sans MS-BoldItalic",t["ComicSansMS-Italic"]="Comic Sans MS-Italic",t["ItcSymbol-Bold"]="Helvetica-Bold",t["ItcSymbol-BoldItalic"]="Helvetica-BoldOblique",t["ItcSymbol-Book"]="Helvetica",t["ItcSymbol-BookItalic"]="Helvetica-Oblique",t["ItcSymbol-Medium"]="Helvetica",t["ItcSymbol-MediumItalic"]="Helvetica-Oblique",t.LucidaConsole="Courier",t["LucidaConsole-Bold"]="Courier-Bold",t["LucidaConsole-BoldItalic"]="Courier-BoldOblique",t["LucidaConsole-Italic"]="Courier-Oblique",t["LucidaSans-Demi"]="Helvetica-Bold",t["MS-Gothic"]="MS Gothic",t["MS-Gothic-Bold"]="MS Gothic-Bold",t["MS-Gothic-BoldItalic"]="MS Gothic-BoldItalic",t["MS-Gothic-Italic"]="MS Gothic-Italic",t["MS-Mincho"]="MS Mincho",t["MS-Mincho-Bold"]="MS Mincho-Bold",t["MS-Mincho-BoldItalic"]="MS Mincho-BoldItalic",t["MS-Mincho-Italic"]="MS Mincho-Italic",t["MS-PGothic"]="MS PGothic",t["MS-PGothic-Bold"]="MS PGothic-Bold",t["MS-PGothic-BoldItalic"]="MS PGothic-BoldItalic",t["MS-PGothic-Italic"]="MS PGothic-Italic",t["MS-PMincho"]="MS PMincho",t["MS-PMincho-Bold"]="MS PMincho-Bold",t["MS-PMincho-BoldItalic"]="MS PMincho-BoldItalic",t["MS-PMincho-Italic"]="MS PMincho-Italic",t.NuptialScript="Times-Italic",t.SegoeUISymbol="Helvetica",t.Wingdings="ZapfDingbats",t["Wingdings-Regular"]="ZapfDingbats"}));exports.getNonStdFontMap=getNonStdFontMap;const getSerifFonts=(0,_core_utils.getLookupTableFactory)((function(t){t["Adobe Jenson"]=!0,t["Adobe Text"]=!0,t.Albertus=!0,t.Aldus=!0,t.Alexandria=!0,t.Algerian=!0,t["American Typewriter"]=!0,t.Antiqua=!0,t.Apex=!0,t.Arno=!0,t.Aster=!0,t.Aurora=!0,t.Baskerville=!0,t.Bell=!0,t.Bembo=!0,t["Bembo Schoolbook"]=!0,t.Benguiat=!0,t["Berkeley Old Style"]=!0,t["Bernhard Modern"]=!0,t["Berthold City"]=!0,t.Bodoni=!0,t["Bauer Bodoni"]=!0,t["Book Antiqua"]=!0,t.Bookman=!0,t["Bordeaux Roman"]=!0,t["Californian FB"]=!0,t.Calisto=!0,t.Calvert=!0,t.Capitals=!0,t.Cambria=!0,t.Cartier=!0,t.Caslon=!0,t.Catull=!0,t.Centaur=!0,t["Century Old Style"]=!0,t["Century Schoolbook"]=!0,t.Chaparral=!0,t["Charis SIL"]=!0,t.Cheltenham=!0,t["Cholla Slab"]=!0,t.Clarendon=!0,t.Clearface=!0,t.Cochin=!0,t.Colonna=!0,t["Computer Modern"]=!0,t["Concrete Roman"]=!0,t.Constantia=!0,t["Cooper Black"]=!0,t.Corona=!0,t.Ecotype=!0,t.Egyptienne=!0,t.Elephant=!0,t.Excelsior=!0,t.Fairfield=!0,t["FF Scala"]=!0,t.Folkard=!0,t.Footlight=!0,t.FreeSerif=!0,t["Friz Quadrata"]=!0,t.Garamond=!0,t.Gentium=!0,t.Georgia=!0,t.Gloucester=!0,t["Goudy Old Style"]=!0,t["Goudy Schoolbook"]=!0,t["Goudy Pro Font"]=!0,t.Granjon=!0,t["Guardian Egyptian"]=!0,t.Heather=!0,t.Hercules=!0,t["High Tower Text"]=!0,t.Hiroshige=!0,t["Hoefler Text"]=!0,t["Humana Serif"]=!0,t.Imprint=!0,t["Ionic No. 5"]=!0,t.Janson=!0,t.Joanna=!0,t.Korinna=!0,t.Lexicon=!0,t.LiberationSerif=!0,t["Liberation Serif"]=!0,t["Linux Libertine"]=!0,t.Literaturnaya=!0,t.Lucida=!0,t["Lucida Bright"]=!0,t.Melior=!0,t.Memphis=!0,t.Miller=!0,t.Minion=!0,t.Modern=!0,t["Mona Lisa"]=!0,t["Mrs Eaves"]=!0,t["MS Serif"]=!0,t["Museo Slab"]=!0,t["New York"]=!0,t["Nimbus Roman"]=!0,t["NPS Rawlinson Roadway"]=!0,t.NuptialScript=!0,t.Palatino=!0,t.Perpetua=!0,t.Plantin=!0,t["Plantin Schoolbook"]=!0,t.Playbill=!0,t["Poor Richard"]=!0,t["Rawlinson Roadway"]=!0,t.Renault=!0,t.Requiem=!0,t.Rockwell=!0,t.Roman=!0,t["Rotis Serif"]=!0,t.Sabon=!0,t.Scala=!0,t.Seagull=!0,t.Sistina=!0,t.Souvenir=!0,t.STIX=!0,t["Stone Informal"]=!0,t["Stone Serif"]=!0,t.Sylfaen=!0,t.Times=!0,t.Trajan=!0,t["Trinité"]=!0,t["Trump Mediaeval"]=!0,t.Utopia=!0,t["Vale Type"]=!0,t["Bitstream Vera"]=!0,t["Vera Serif"]=!0,t.Versailles=!0,t.Wanted=!0,t.Weiss=!0,t["Wide Latin"]=!0,t.Windsor=!0,t.XITS=!0}));exports.getSerifFonts=getSerifFonts;const getSymbolsFonts=(0,_core_utils.getLookupTableFactory)((function(t){t.Dingbats=!0,t.Symbol=!0,t.ZapfDingbats=!0}));exports.getSymbolsFonts=getSymbolsFonts;const getGlyphMapForStandardFonts=(0,_core_utils.getLookupTableFactory)((function(t){t[2]=10,t[3]=32,t[4]=33,t[5]=34,t[6]=35,t[7]=36,t[8]=37,t[9]=38,t[10]=39,t[11]=40,t[12]=41,t[13]=42,t[14]=43,t[15]=44,t[16]=45,t[17]=46,t[18]=47,t[19]=48,t[20]=49,t[21]=50,t[22]=51,t[23]=52,t[24]=53,t[25]=54,t[26]=55,t[27]=56,t[28]=57,t[29]=58,t[30]=894,t[31]=60,t[32]=61,t[33]=62,t[34]=63,t[35]=64,t[36]=65,t[37]=66,t[38]=67,t[39]=68,t[40]=69,t[41]=70,t[42]=71,t[43]=72,t[44]=73,t[45]=74,t[46]=75,t[47]=76,t[48]=77,t[49]=78,t[50]=79,t[51]=80,t[52]=81,t[53]=82,t[54]=83,t[55]=84,t[56]=85,t[57]=86,t[58]=87,t[59]=88,t[60]=89,t[61]=90,t[62]=91,t[63]=92,t[64]=93,t[65]=94,t[66]=95,t[67]=96,t[68]=97,t[69]=98,t[70]=99,t[71]=100,t[72]=101,t[73]=102,t[74]=103,t[75]=104,t[76]=105,t[77]=106,t[78]=107,t[79]=108,t[80]=109,t[81]=110,t[82]=111,t[83]=112,t[84]=113,t[85]=114,t[86]=115,t[87]=116,t[88]=117,t[89]=118,t[90]=119,t[91]=120,t[92]=121,t[93]=122,t[94]=123,t[95]=124,t[96]=125,t[97]=126,t[98]=196,t[99]=197,t[100]=199,t[101]=201,t[102]=209,t[103]=214,t[104]=220,t[105]=225,t[106]=224,t[107]=226,t[108]=228,t[109]=227,t[110]=229,t[111]=231,t[112]=233,t[113]=232,t[114]=234,t[115]=235,t[116]=237,t[117]=236,t[118]=238,t[119]=239,t[120]=241,t[121]=243,t[122]=242,t[123]=244,t[124]=246,t[125]=245,t[126]=250,t[127]=249,t[128]=251,t[129]=252,t[130]=8224,t[131]=176,t[132]=162,t[133]=163,t[134]=167,t[135]=8226,t[136]=182,t[137]=223,t[138]=174,t[139]=169,t[140]=8482,t[141]=180,t[142]=168,t[143]=8800,t[144]=198,t[145]=216,t[146]=8734,t[147]=177,t[148]=8804,t[149]=8805,t[150]=165,t[151]=181,t[152]=8706,t[153]=8721,t[154]=8719,t[156]=8747,t[157]=170,t[158]=186,t[159]=8486,t[160]=230,t[161]=248,t[162]=191,t[163]=161,t[164]=172,t[165]=8730,t[166]=402,t[167]=8776,t[168]=8710,t[169]=171,t[170]=187,t[171]=8230,t[200]=193,t[203]=205,t[210]=218,t[223]=711,t[224]=321,t[225]=322,t[226]=352,t[227]=353,t[228]=381,t[229]=382,t[233]=221,t[234]=253,t[252]=263,t[253]=268,t[254]=269,t[258]=258,t[260]=260,t[261]=261,t[265]=280,t[266]=281,t[267]=282,t[268]=283,t[269]=313,t[275]=323,t[276]=324,t[278]=328,t[283]=344,t[284]=345,t[285]=346,t[286]=347,t[292]=367,t[295]=377,t[296]=378,t[298]=380,t[305]=963,t[306]=964,t[307]=966,t[308]=8215,t[309]=8252,t[310]=8319,t[311]=8359,t[312]=8592,t[313]=8593,t[337]=9552,t[493]=1039,t[494]=1040,t[672]=1488,t[673]=1489,t[674]=1490,t[675]=1491,t[676]=1492,t[677]=1493,t[678]=1494,t[679]=1495,t[680]=1496,t[681]=1497,t[682]=1498,t[683]=1499,t[684]=1500,t[685]=1501,t[686]=1502,t[687]=1503,t[688]=1504,t[689]=1505,t[690]=1506,t[691]=1507,t[692]=1508,t[693]=1509,t[694]=1510,t[695]=1511,t[696]=1512,t[697]=1513,t[698]=1514,t[705]=1524,t[706]=8362,t[710]=64288,t[711]=64298,t[759]=1617,t[761]=1776,t[763]=1778,t[775]=1652,t[777]=1764,t[778]=1780,t[779]=1781,t[780]=1782,t[782]=771,t[783]=64726,t[786]=8363,t[788]=8532,t[790]=768,t[791]=769,t[792]=768,t[795]=803,t[797]=64336,t[798]=64337,t[799]=64342,t[800]=64343,t[801]=64344,t[802]=64345,t[803]=64362,t[804]=64363,t[805]=64364,t[2424]=7821,t[2425]=7822,t[2426]=7823,t[2427]=7824,t[2428]=7825,t[2429]=7826,t[2430]=7827,t[2433]=7682,t[2678]=8045,t[2679]=8046,t[2830]=1552,t[2838]=686,t[2840]=751,t[2842]=753,t[2843]=754,t[2844]=755,t[2846]=757,t[2856]=767,t[2857]=848,t[2858]=849,t[2862]=853,t[2863]=854,t[2864]=855,t[2865]=861,t[2866]=862,t[2906]=7460,t[2908]=7462,t[2909]=7463,t[2910]=7464,t[2912]=7466,t[2913]=7467,t[2914]=7468,t[2916]=7470,t[2917]=7471,t[2918]=7472,t[2920]=7474,t[2921]=7475,t[2922]=7476,t[2924]=7478,t[2925]=7479,t[2926]=7480,t[2928]=7482,t[2929]=7483,t[2930]=7484,t[2932]=7486,t[2933]=7487,t[2934]=7488,t[2936]=7490,t[2937]=7491,t[2938]=7492,t[2940]=7494,t[2941]=7495,t[2942]=7496,t[2944]=7498,t[2946]=7500,t[2948]=7502,t[2950]=7504,t[2951]=7505,t[2952]=7506,t[2954]=7508,t[2955]=7509,t[2956]=7510,t[2958]=7512,t[2959]=7513,t[2960]=7514,t[2962]=7516,t[2963]=7517,t[2964]=7518,t[2966]=7520,t[2967]=7521,t[2968]=7522,t[2970]=7524,t[2971]=7525,t[2972]=7526,t[2974]=7528,t[2975]=7529,t[2976]=7530,t[2978]=1537,t[2979]=1538,t[2980]=1539,t[2982]=1549,t[2983]=1551,t[2984]=1552,t[2986]=1554,t[2987]=1555,t[2988]=1556,t[2990]=1623,t[2991]=1624,t[2995]=1775,t[2999]=1791,t[3002]=64290,t[3003]=64291,t[3004]=64292,t[3006]=64294,t[3007]=64295,t[3008]=64296,t[3011]=1900,t[3014]=8223,t[3015]=8244,t[3017]=7532,t[3018]=7533,t[3019]=7534,t[3075]=7590,t[3076]=7591,t[3079]=7594,t[3080]=7595,t[3083]=7598,t[3084]=7599,t[3087]=7602,t[3088]=7603,t[3091]=7606,t[3092]=7607,t[3095]=7610,t[3096]=7611,t[3099]=7614,t[3100]=7615,t[3103]=7618,t[3104]=7619,t[3107]=8337,t[3108]=8338,t[3116]=1884,t[3119]=1885,t[3120]=1885,t[3123]=1886,t[3124]=1886,t[3127]=1887,t[3128]=1887,t[3131]=1888,t[3132]=1888,t[3135]=1889,t[3136]=1889,t[3139]=1890,t[3140]=1890,t[3143]=1891,t[3144]=1891,t[3147]=1892,t[3148]=1892,t[3153]=580,t[3154]=581,t[3157]=584,t[3158]=585,t[3161]=588,t[3162]=589,t[3165]=891,t[3166]=892,t[3169]=1274,t[3170]=1275,t[3173]=1278,t[3174]=1279,t[3181]=7622,t[3182]=7623,t[3282]=11799,t[3316]=578,t[3379]=42785,t[3393]=1159,t[3416]=8377}));exports.getGlyphMapForStandardFonts=getGlyphMapForStandardFonts;const getSupplementalGlyphMapForArialBlack=(0,_core_utils.getLookupTableFactory)((function(t){t[227]=322,t[264]=261,t[291]=346}));exports.getSupplementalGlyphMapForArialBlack=getSupplementalGlyphMapForArialBlack;const getSupplementalGlyphMapForCalibri=(0,_core_utils.getLookupTableFactory)((function(t){t[1]=32,t[4]=65,t[6]=193,t[17]=66,t[18]=67,t[21]=268,t[24]=68,t[28]=69,t[30]=201,t[32]=282,t[38]=70,t[39]=71,t[44]=72,t[47]=73,t[49]=205,t[58]=74,t[60]=75,t[62]=76,t[68]=77,t[69]=78,t[75]=79,t[87]=80,t[89]=81,t[90]=82,t[92]=344,t[94]=83,t[97]=352,t[100]=84,t[104]=85,t[115]=86,t[116]=87,t[121]=88,t[122]=89,t[124]=221,t[127]=90,t[129]=381,t[258]=97,t[260]=225,t[268]=261,t[271]=98,t[272]=99,t[273]=263,t[275]=269,t[282]=100,t[286]=101,t[288]=233,t[290]=283,t[295]=281,t[296]=102,t[336]=103,t[346]=104,t[349]=105,t[351]=237,t[361]=106,t[364]=107,t[367]=108,t[371]=322,t[373]=109,t[374]=110,t[381]=111,t[383]=243,t[393]=112,t[395]=113,t[396]=114,t[398]=345,t[400]=115,t[401]=347,t[403]=353,t[410]=116,t[437]=117,t[448]=118,t[449]=119,t[454]=120,t[455]=121,t[457]=253,t[460]=122,t[462]=382,t[463]=380,t[853]=44,t[855]=58,t[856]=46,t[876]=47,t[878]=45,t[882]=45,t[894]=40,t[895]=41,t[896]=91,t[897]=93,t[923]=64,t[1004]=48,t[1005]=49,t[1006]=50,t[1007]=51,t[1008]=52,t[1009]=53,t[1010]=54,t[1011]=55,t[1012]=56,t[1013]=57,t[1081]=37,t[1085]=43,t[1086]=45}));exports.getSupplementalGlyphMapForCalibri=getSupplementalGlyphMapForCalibri},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ToUnicodeMap=exports.IdentityToUnicodeMap=void 0;var _util=__w_pdfjs_require__(2);exports.ToUnicodeMap=class ToUnicodeMap{constructor(cmap=[]){this._map=cmap}get length(){return this._map.length}forEach(callback){for(const charCode in this._map)callback(charCode,this._map[charCode].charCodeAt(0))}has(i){return void 0!==this._map[i]}get(i){return this._map[i]}charCodeOf(value){const map=this._map;if(map.length<=65536)return map.indexOf(value);for(const charCode in map)if(map[charCode]===value)return 0|charCode;return-1}amend(map){for(const charCode in map)this._map[charCode]=map[charCode]}};exports.IdentityToUnicodeMap=class IdentityToUnicodeMap{constructor(firstChar,lastChar){this.firstChar=firstChar,this.lastChar=lastChar}get length(){return this.lastChar+1-this.firstChar}forEach(callback){for(let i=this.firstChar,ii=this.lastChar;i<=ii;i++)callback(i,i)}has(i){return this.firstChar<=i&&i<=this.lastChar}get(i){if(this.firstChar<=i&&i<=this.lastChar)return String.fromCharCode(i)}charCodeOf(v){return Number.isInteger(v)&&v>=this.firstChar&&v<=this.lastChar?v:-1}amend(map){(0,_util.unreachable)("Should not call amend()")}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CFFFont=void 0;var _cff_parser=__w_pdfjs_require__(35),_fonts_utils=__w_pdfjs_require__(38),_util=__w_pdfjs_require__(2);exports.CFFFont=class CFFFont{constructor(file,properties){this.properties=properties;const parser=new _cff_parser.CFFParser(file,properties,_fonts_utils.SEAC_ANALYSIS_ENABLED);this.cff=parser.parse(),this.cff.duplicateFirstGlyph();const compiler=new _cff_parser.CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=compiler.compile()}catch(e){(0,_util.warn)("Failed to compile font "+properties.loadedName),this.data=file}this._createBuiltInEncoding()}get numGlyphs(){return this.cff.charStrings.count}getCharset(){return this.cff.charset.charset}getGlyphMapping(){const cff=this.cff,properties=this.properties,charsets=cff.charset.charset;let charCodeToGlyphId,glyphId;if(properties.composite){let charCode;if(charCodeToGlyphId=Object.create(null),cff.isCIDFont)for(glyphId=0;glyphId<charsets.length;glyphId++){const cid=charsets[glyphId];charCode=properties.cMap.charCodeOf(cid),charCodeToGlyphId[charCode]=glyphId}else for(glyphId=0;glyphId<cff.charStrings.count;glyphId++)charCode=properties.cMap.charCodeOf(glyphId),charCodeToGlyphId[charCode]=glyphId;return charCodeToGlyphId}let encoding=cff.encoding?cff.encoding.encoding:null;return properties.isInternalFont&&(encoding=properties.defaultEncoding),charCodeToGlyphId=(0,_fonts_utils.type1FontGlyphMapping)(properties,encoding,charsets),charCodeToGlyphId}hasGlyphId(id){return this.cff.hasGlyphId(id)}_createBuiltInEncoding(){const{charset,encoding}=this.cff;if(!charset||!encoding)return;const charsets=charset.charset,encodings=encoding.encoding,map=[];for(const charCode in encodings){const glyphId=encodings[charCode];if(glyphId>=0){const glyphName=charsets[glyphId];glyphName&&(map[charCode]=glyphName)}}map.length>0&&(this.properties.builtInEncoding=map)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FontRendererFactory=void 0;var _util=__w_pdfjs_require__(2),_cff_parser=__w_pdfjs_require__(35),_glyphlist=__w_pdfjs_require__(39),_encodings=__w_pdfjs_require__(37),_stream=__w_pdfjs_require__(10);function getUint32(data,offset){return(data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3])>>>0}function getUint16(data,offset){return data[offset]<<8|data[offset+1]}function getInt16(data,offset){return(data[offset]<<24|data[offset+1]<<16)>>16}function getInt8(data,offset){return data[offset]<<24>>24}function getFloat214(data,offset){return getInt16(data,offset)/16384}function getSubroutineBias(subrs){const numSubrs=subrs.length;let bias=32768;return numSubrs<1240?bias=107:numSubrs<33900&&(bias=1131),bias}function parseCmap(data,start,end){const offset=1===getUint16(data,start+2)?getUint32(data,start+8):getUint32(data,start+16),format=getUint16(data,start+offset);let ranges,p,i;if(4===format){getUint16(data,start+offset+2);const segCount=getUint16(data,start+offset+6)>>1;for(p=start+offset+14,ranges=[],i=0;i<segCount;i++,p+=2)ranges[i]={end:getUint16(data,p)};for(p+=2,i=0;i<segCount;i++,p+=2)ranges[i].start=getUint16(data,p);for(i=0;i<segCount;i++,p+=2)ranges[i].idDelta=getUint16(data,p);for(i=0;i<segCount;i++,p+=2){let idOffset=getUint16(data,p);if(0!==idOffset){ranges[i].ids=[];for(let j=0,jj=ranges[i].end-ranges[i].start+1;j<jj;j++)ranges[i].ids[j]=getUint16(data,p+idOffset),idOffset+=2}}return ranges}if(12===format){const groups=getUint32(data,start+offset+12);for(p=start+offset+16,ranges=[],i=0;i<groups;i++)start=getUint32(data,p),ranges.push({start,end:getUint32(data,p+4),idDelta:getUint32(data,p+8)-start}),p+=12;return ranges}throw new _util.FormatError(`unsupported cmap: ${format}`)}function parseCff(data,start,end,seacAnalysisEnabled){const cff=new _cff_parser.CFFParser(new _stream.Stream(data,start,end-start),{},seacAnalysisEnabled).parse();return{glyphs:cff.charStrings.objects,subrs:cff.topDict.privateDict&&cff.topDict.privateDict.subrsIndex&&cff.topDict.privateDict.subrsIndex.objects,gsubrs:cff.globalSubrIndex&&cff.globalSubrIndex.objects,isCFFCIDFont:cff.isCIDFont,fdSelect:cff.fdSelect,fdArray:cff.fdArray}}function lookupCmap(ranges,unicode){const code=unicode.codePointAt(0);let gid=0,l=0,r=ranges.length-1;for(;l<r;){const c=l+r+1>>1;code<ranges[c].start?r=c-1:l=c}return ranges[l].start<=code&&code<=ranges[l].end&&(gid=ranges[l].idDelta+(ranges[l].ids?ranges[l].ids[code-ranges[l].start]:code)&65535),{charCode:code,glyphId:gid}}function compileGlyf(code,cmds,font){function moveTo(x,y){cmds.push({cmd:"moveTo",args:[x,y]})}function lineTo(x,y){cmds.push({cmd:"lineTo",args:[x,y]})}function quadraticCurveTo(xa,ya,x,y){cmds.push({cmd:"quadraticCurveTo",args:[xa,ya,x,y]})}let i=0;const numberOfContours=getInt16(code,i);let flags,x=0,y=0;if(i+=10,numberOfContours<0)do{flags=getUint16(code,i);const glyphIndex=getUint16(code,i+2);let arg1,arg2;i+=4,1&flags?(2&flags?(arg1=getInt16(code,i),arg2=getInt16(code,i+2)):(arg1=getUint16(code,i),arg2=getUint16(code,i+2)),i+=4):2&flags?(arg1=getInt8(code,i++),arg2=getInt8(code,i++)):(arg1=code[i++],arg2=code[i++]),2&flags?(x=arg1,y=arg2):(x=0,y=0);let scaleX=1,scaleY=1,scale01=0,scale10=0;8&flags?(scaleX=scaleY=getFloat214(code,i),i+=2):64&flags?(scaleX=getFloat214(code,i),scaleY=getFloat214(code,i+2),i+=4):128&flags&&(scaleX=getFloat214(code,i),scale01=getFloat214(code,i+2),scale10=getFloat214(code,i+4),scaleY=getFloat214(code,i+6),i+=8);const subglyph=font.glyphs[glyphIndex];subglyph&&(cmds.push({cmd:"save"},{cmd:"transform",args:[scaleX,scale01,scale10,scaleY,x,y]}),compileGlyf(subglyph,cmds,font),cmds.push({cmd:"restore"}))}while(32&flags);else{const endPtsOfContours=[];let j,jj;for(j=0;j<numberOfContours;j++)endPtsOfContours.push(getUint16(code,i)),i+=2;i+=2+getUint16(code,i);const numberOfPoints=endPtsOfContours.at(-1)+1,points=[];for(;points.length<numberOfPoints;){flags=code[i++];let repeat=1;for(8&flags&&(repeat+=code[i++]);repeat-- >0;)points.push({flags})}for(j=0;j<numberOfPoints;j++){switch(18&points[j].flags){case 0:x+=getInt16(code,i),i+=2;break;case 2:x-=code[i++];break;case 18:x+=code[i++]}points[j].x=x}for(j=0;j<numberOfPoints;j++){switch(36&points[j].flags){case 0:y+=getInt16(code,i),i+=2;break;case 4:y-=code[i++];break;case 36:y+=code[i++]}points[j].y=y}let startPoint=0;for(i=0;i<numberOfContours;i++){const endPoint=endPtsOfContours[i],contour=points.slice(startPoint,endPoint+1);if(1&contour[0].flags)contour.push(contour[0]);else if(1&contour.at(-1).flags)contour.unshift(contour.at(-1));else{const p={flags:1,x:(contour[0].x+contour.at(-1).x)/2,y:(contour[0].y+contour.at(-1).y)/2};contour.unshift(p),contour.push(p)}for(moveTo(contour[0].x,contour[0].y),j=1,jj=contour.length;j<jj;j++)1&contour[j].flags?lineTo(contour[j].x,contour[j].y):1&contour[j+1].flags?(quadraticCurveTo(contour[j].x,contour[j].y,contour[j+1].x,contour[j+1].y),j++):quadraticCurveTo(contour[j].x,contour[j].y,(contour[j].x+contour[j+1].x)/2,(contour[j].y+contour[j+1].y)/2);startPoint=endPoint+1}}}function compileCharString(charStringCode,cmds,font,glyphId){function moveTo(x,y){cmds.push({cmd:"moveTo",args:[x,y]})}function lineTo(x,y){cmds.push({cmd:"lineTo",args:[x,y]})}function bezierCurveTo(x1,y1,x2,y2,x,y){cmds.push({cmd:"bezierCurveTo",args:[x1,y1,x2,y2,x,y]})}const stack=[];let x=0,y=0,stems=0;!function parse(code){let i=0;for(;i<code.length;){let xa,xb,ya,yb,y1,y2,y3,n,subrCode,stackClean=!1,v=code[i++];switch(v){case 1:case 3:case 18:case 23:stems+=stack.length>>1,stackClean=!0;break;case 4:y+=stack.pop(),moveTo(x,y),stackClean=!0;break;case 5:for(;stack.length>0;)x+=stack.shift(),y+=stack.shift(),lineTo(x,y);break;case 6:for(;stack.length>0&&(x+=stack.shift(),lineTo(x,y),0!==stack.length);)y+=stack.shift(),lineTo(x,y);break;case 7:for(;stack.length>0&&(y+=stack.shift(),lineTo(x,y),0!==stack.length);)x+=stack.shift(),lineTo(x,y);break;case 8:for(;stack.length>0;)xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y);break;case 10:if(n=stack.pop(),subrCode=null,font.isCFFCIDFont){const fdIndex=font.fdSelect.getFDIndex(glyphId);if(fdIndex>=0&&fdIndex<font.fdArray.length){const fontDict=font.fdArray[fdIndex];let subrs;fontDict.privateDict&&fontDict.privateDict.subrsIndex&&(subrs=fontDict.privateDict.subrsIndex.objects),subrs&&(n+=getSubroutineBias(subrs),subrCode=subrs[n])}else(0,_util.warn)("Invalid fd index for glyph index.")}else subrCode=font.subrs[n+font.subrsBias];subrCode&&parse(subrCode);break;case 11:return;case 12:switch(v=code[i++],v){case 34:xa=x+stack.shift(),xb=xa+stack.shift(),y1=y+stack.shift(),x=xb+stack.shift(),bezierCurveTo(xa,y,xb,y1,x,y1),xa=x+stack.shift(),xb=xa+stack.shift(),x=xb+stack.shift(),bezierCurveTo(xa,y1,xb,y,x,y);break;case 35:xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y),xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y),stack.pop();break;case 36:xa=x+stack.shift(),y1=y+stack.shift(),xb=xa+stack.shift(),y2=y1+stack.shift(),x=xb+stack.shift(),bezierCurveTo(xa,y1,xb,y2,x,y2),xa=x+stack.shift(),xb=xa+stack.shift(),y3=y2+stack.shift(),x=xb+stack.shift(),bezierCurveTo(xa,y2,xb,y3,x,y);break;case 37:const x0=x,y0=y;xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y),xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb,y=yb,Math.abs(x-x0)>Math.abs(y-y0)?x+=stack.shift():y+=stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y);break;default:throw new _util.FormatError(`unknown operator: 12 ${v}`)}break;case 14:if(stack.length>=4){const achar=stack.pop(),bchar=stack.pop();y=stack.pop(),x=stack.pop(),cmds.push({cmd:"save"},{cmd:"translate",args:[x,y]});let cmap=lookupCmap(font.cmap,String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));compileCharString(font.glyphs[cmap.glyphId],cmds,font,cmap.glyphId),cmds.push({cmd:"restore"}),cmap=lookupCmap(font.cmap,String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]])),compileCharString(font.glyphs[cmap.glyphId],cmds,font,cmap.glyphId)}return;case 19:case 20:stems+=stack.length>>1,i+=stems+7>>3,stackClean=!0;break;case 21:y+=stack.pop(),x+=stack.pop(),moveTo(x,y),stackClean=!0;break;case 22:x+=stack.pop(),moveTo(x,y),stackClean=!0;break;case 24:for(;stack.length>2;)xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y);x+=stack.shift(),y+=stack.shift(),lineTo(x,y);break;case 25:for(;stack.length>6;)x+=stack.shift(),y+=stack.shift(),lineTo(x,y);xa=x+stack.shift(),ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y);break;case 26:for(stack.length%2&&(x+=stack.shift());stack.length>0;)xa=x,ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb,y=yb+stack.shift(),bezierCurveTo(xa,ya,xb,yb,x,y);break;case 27:for(stack.length%2&&(y+=stack.shift());stack.length>0;)xa=x+stack.shift(),ya=y,xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb,bezierCurveTo(xa,ya,xb,yb,x,y);break;case 28:stack.push((code[i]<<24|code[i+1]<<16)>>16),i+=2;break;case 29:n=stack.pop()+font.gsubrsBias,subrCode=font.gsubrs[n],subrCode&&parse(subrCode);break;case 30:for(;stack.length>0&&(xa=x,ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+(1===stack.length?stack.shift():0),bezierCurveTo(xa,ya,xb,yb,x,y),0!==stack.length);)xa=x+stack.shift(),ya=y,xb=xa+stack.shift(),yb=ya+stack.shift(),y=yb+stack.shift(),x=xb+(1===stack.length?stack.shift():0),bezierCurveTo(xa,ya,xb,yb,x,y);break;case 31:for(;stack.length>0&&(xa=x+stack.shift(),ya=y,xb=xa+stack.shift(),yb=ya+stack.shift(),y=yb+stack.shift(),x=xb+(1===stack.length?stack.shift():0),bezierCurveTo(xa,ya,xb,yb,x,y),0!==stack.length);)xa=x,ya=y+stack.shift(),xb=xa+stack.shift(),yb=ya+stack.shift(),x=xb+stack.shift(),y=yb+(1===stack.length?stack.shift():0),bezierCurveTo(xa,ya,xb,yb,x,y);break;default:if(v<32)throw new _util.FormatError(`unknown operator: ${v}`);v<247?stack.push(v-139):v<251?stack.push(256*(v-247)+code[i++]+108):v<255?stack.push(256*-(v-251)-code[i++]-108):(stack.push((code[i]<<24|code[i+1]<<16|code[i+2]<<8|code[i+3])/65536),i+=4)}stackClean&&(stack.length=0)}}(charStringCode)}const NOOP=[];class CompiledFont{constructor(fontMatrix){this.constructor===CompiledFont&&(0,_util.unreachable)("Cannot initialize CompiledFont."),this.fontMatrix=fontMatrix,this.compiledGlyphs=Object.create(null),this.compiledCharCodeToGlyphId=Object.create(null)}getPathJs(unicode){const{charCode,glyphId}=lookupCmap(this.cmap,unicode);let fn=this.compiledGlyphs[glyphId];if(!fn)try{fn=this.compileGlyph(this.glyphs[glyphId],glyphId),this.compiledGlyphs[glyphId]=fn}catch(ex){throw this.compiledGlyphs[glyphId]=NOOP,void 0===this.compiledCharCodeToGlyphId[charCode]&&(this.compiledCharCodeToGlyphId[charCode]=glyphId),ex}return void 0===this.compiledCharCodeToGlyphId[charCode]&&(this.compiledCharCodeToGlyphId[charCode]=glyphId),fn}compileGlyph(code,glyphId){if(!code||0===code.length||14===code[0])return NOOP;let fontMatrix=this.fontMatrix;if(this.isCFFCIDFont){const fdIndex=this.fdSelect.getFDIndex(glyphId);if(fdIndex>=0&&fdIndex<this.fdArray.length){fontMatrix=this.fdArray[fdIndex].getByName("FontMatrix")||_util.FONT_IDENTITY_MATRIX}else(0,_util.warn)("Invalid fd index for glyph index.")}const cmds=[{cmd:"save"},{cmd:"transform",args:fontMatrix.slice()},{cmd:"scale",args:["size","-size"]}];return this.compileGlyphImpl(code,cmds,glyphId),cmds.push({cmd:"restore"}),cmds}compileGlyphImpl(){(0,_util.unreachable)("Children classes should implement this.")}hasBuiltPath(unicode){const{charCode,glyphId}=lookupCmap(this.cmap,unicode);return void 0!==this.compiledGlyphs[glyphId]&&void 0!==this.compiledCharCodeToGlyphId[charCode]}}class TrueTypeCompiled extends CompiledFont{constructor(glyphs,cmap,fontMatrix){super(fontMatrix||[488e-6,0,0,488e-6,0,0]),this.glyphs=glyphs,this.cmap=cmap}compileGlyphImpl(code,cmds){compileGlyf(code,cmds,this)}}class Type2Compiled extends CompiledFont{constructor(cffInfo,cmap,fontMatrix,glyphNameMap){super(fontMatrix||[.001,0,0,.001,0,0]),this.glyphs=cffInfo.glyphs,this.gsubrs=cffInfo.gsubrs||[],this.subrs=cffInfo.subrs||[],this.cmap=cmap,this.glyphNameMap=glyphNameMap||(0,_glyphlist.getGlyphsUnicode)(),this.gsubrsBias=getSubroutineBias(this.gsubrs),this.subrsBias=getSubroutineBias(this.subrs),this.isCFFCIDFont=cffInfo.isCFFCIDFont,this.fdSelect=cffInfo.fdSelect,this.fdArray=cffInfo.fdArray}compileGlyphImpl(code,cmds,glyphId){compileCharString(code,cmds,this,glyphId)}}exports.FontRendererFactory=class FontRendererFactory{static create(font,seacAnalysisEnabled){const data=new Uint8Array(font.data);let cmap,glyf,loca,cff,indexToLocFormat,unitsPerEm;const numTables=getUint16(data,4);for(let i=0,p=12;i<numTables;i++,p+=16){const tag=(0,_util.bytesToString)(data.subarray(p,p+4)),offset=getUint32(data,p+8),length=getUint32(data,p+12);switch(tag){case"cmap":cmap=parseCmap(data,offset);break;case"glyf":glyf=data.subarray(offset,offset+length);break;case"loca":loca=data.subarray(offset,offset+length);break;case"head":unitsPerEm=getUint16(data,offset+18),indexToLocFormat=getUint16(data,offset+50);break;case"CFF ":cff=parseCff(data,offset,offset+length,seacAnalysisEnabled)}}if(glyf){const fontMatrix=unitsPerEm?[1/unitsPerEm,0,0,1/unitsPerEm,0,0]:font.fontMatrix;return new TrueTypeCompiled(function parseGlyfTable(glyf,loca,isGlyphLocationsLong){let itemSize,itemDecode;isGlyphLocationsLong?(itemSize=4,itemDecode=getUint32):(itemSize=2,itemDecode=(data,offset)=>2*getUint16(data,offset));const glyphs=[];let startOffset=itemDecode(loca,0);for(let j=itemSize;j<loca.length;j+=itemSize){const endOffset=itemDecode(loca,j);glyphs.push(glyf.subarray(startOffset,endOffset)),startOffset=endOffset}return glyphs}(glyf,loca,indexToLocFormat),cmap,fontMatrix)}return new Type2Compiled(cff,cmap,font.fontMatrix,font.glyphNameMap)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMetrics=exports.getFontBasicMetrics=void 0;var _core_utils=__w_pdfjs_require__(6);const getMetrics=(0,_core_utils.getLookupTableFactory)((function(t){t.Courier=600,t["Courier-Bold"]=600,t["Courier-BoldOblique"]=600,t["Courier-Oblique"]=600,t.Helvetica=(0,_core_utils.getLookupTableFactory)((function(t){t.space=278,t.exclam=278,t.quotedbl=355,t.numbersign=556,t.dollar=556,t.percent=889,t.ampersand=667,t.quoteright=222,t.parenleft=333,t.parenright=333,t.asterisk=389,t.plus=584,t.comma=278,t.hyphen=333,t.period=278,t.slash=278,t.zero=556,t.one=556,t.two=556,t.three=556,t.four=556,t.five=556,t.six=556,t.seven=556,t.eight=556,t.nine=556,t.colon=278,t.semicolon=278,t.less=584,t.equal=584,t.greater=584,t.question=556,t.at=1015,t.A=667,t.B=667,t.C=722,t.D=722,t.E=667,t.F=611,t.G=778,t.H=722,t.I=278,t.J=500,t.K=667,t.L=556,t.M=833,t.N=722,t.O=778,t.P=667,t.Q=778,t.R=722,t.S=667,t.T=611,t.U=722,t.V=667,t.W=944,t.X=667,t.Y=667,t.Z=611,t.bracketleft=278,t.backslash=278,t.bracketright=278,t.asciicircum=469,t.underscore=556,t.quoteleft=222,t.a=556,t.b=556,t.c=500,t.d=556,t.e=556,t.f=278,t.g=556,t.h=556,t.i=222,t.j=222,t.k=500,t.l=222,t.m=833,t.n=556,t.o=556,t.p=556,t.q=556,t.r=333,t.s=500,t.t=278,t.u=556,t.v=500,t.w=722,t.x=500,t.y=500,t.z=500,t.braceleft=334,t.bar=260,t.braceright=334,t.asciitilde=584,t.exclamdown=333,t.cent=556,t.sterling=556,t.fraction=167,t.yen=556,t.florin=556,t.section=556,t.currency=556,t.quotesingle=191,t.quotedblleft=333,t.guillemotleft=556,t.guilsinglleft=333,t.guilsinglright=333,t.fi=500,t.fl=500,t.endash=556,t.dagger=556,t.daggerdbl=556,t.periodcentered=278,t.paragraph=537,t.bullet=350,t.quotesinglbase=222,t.quotedblbase=333,t.quotedblright=333,t.guillemotright=556,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=611,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=1e3,t.ordfeminine=370,t.Lslash=556,t.Oslash=778,t.OE=1e3,t.ordmasculine=365,t.ae=889,t.dotlessi=278,t.lslash=222,t.oslash=611,t.oe=944,t.germandbls=611,t.Idieresis=278,t.eacute=556,t.abreve=556,t.uhungarumlaut=556,t.ecaron=556,t.Ydieresis=667,t.divide=584,t.Yacute=667,t.Acircumflex=667,t.aacute=556,t.Ucircumflex=722,t.yacute=500,t.scommaaccent=500,t.ecircumflex=556,t.Uring=722,t.Udieresis=722,t.aogonek=556,t.Uacute=722,t.uogonek=556,t.Edieresis=667,t.Dcroat=722,t.commaaccent=250,t.copyright=737,t.Emacron=667,t.ccaron=500,t.aring=556,t.Ncommaaccent=722,t.lacute=222,t.agrave=556,t.Tcommaaccent=611,t.Cacute=722,t.atilde=556,t.Edotaccent=667,t.scaron=500,t.scedilla=500,t.iacute=278,t.lozenge=471,t.Rcaron=722,t.Gcommaaccent=778,t.ucircumflex=556,t.acircumflex=556,t.Amacron=667,t.rcaron=333,t.ccedilla=500,t.Zdotaccent=611,t.Thorn=667,t.Omacron=778,t.Racute=722,t.Sacute=667,t.dcaron=643,t.Umacron=722,t.uring=556,t.threesuperior=333,t.Ograve=778,t.Agrave=667,t.Abreve=667,t.multiply=584,t.uacute=556,t.Tcaron=611,t.partialdiff=476,t.ydieresis=500,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=667,t.adieresis=556,t.edieresis=556,t.cacute=500,t.nacute=556,t.umacron=556,t.Ncaron=722,t.Iacute=278,t.plusminus=584,t.brokenbar=260,t.registered=737,t.Gbreve=778,t.Idotaccent=278,t.summation=600,t.Egrave=667,t.racute=333,t.omacron=556,t.Zacute=611,t.Zcaron=611,t.greaterequal=549,t.Eth=722,t.Ccedilla=722,t.lcommaaccent=222,t.tcaron=317,t.eogonek=556,t.Uogonek=722,t.Aacute=667,t.Adieresis=667,t.egrave=556,t.zacute=500,t.iogonek=222,t.Oacute=778,t.oacute=556,t.amacron=556,t.sacute=500,t.idieresis=278,t.Ocircumflex=778,t.Ugrave=722,t.Delta=612,t.thorn=556,t.twosuperior=333,t.Odieresis=778,t.mu=556,t.igrave=278,t.ohungarumlaut=556,t.Eogonek=667,t.dcroat=556,t.threequarters=834,t.Scedilla=667,t.lcaron=299,t.Kcommaaccent=667,t.Lacute=556,t.trademark=1e3,t.edotaccent=556,t.Igrave=278,t.Imacron=278,t.Lcaron=556,t.onehalf=834,t.lessequal=549,t.ocircumflex=556,t.ntilde=556,t.Uhungarumlaut=722,t.Eacute=667,t.emacron=556,t.gbreve=556,t.onequarter=834,t.Scaron=667,t.Scommaaccent=667,t.Ohungarumlaut=778,t.degree=400,t.ograve=556,t.Ccaron=722,t.ugrave=556,t.radical=453,t.Dcaron=722,t.rcommaaccent=333,t.Ntilde=722,t.otilde=556,t.Rcommaaccent=722,t.Lcommaaccent=556,t.Atilde=667,t.Aogonek=667,t.Aring=667,t.Otilde=778,t.zdotaccent=500,t.Ecaron=667,t.Iogonek=278,t.kcommaaccent=500,t.minus=584,t.Icircumflex=278,t.ncaron=556,t.tcommaaccent=278,t.logicalnot=584,t.odieresis=556,t.udieresis=556,t.notequal=549,t.gcommaaccent=556,t.eth=556,t.zcaron=500,t.ncommaaccent=556,t.onesuperior=333,t.imacron=278,t.Euro=556})),t["Helvetica-Bold"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=278,t.exclam=333,t.quotedbl=474,t.numbersign=556,t.dollar=556,t.percent=889,t.ampersand=722,t.quoteright=278,t.parenleft=333,t.parenright=333,t.asterisk=389,t.plus=584,t.comma=278,t.hyphen=333,t.period=278,t.slash=278,t.zero=556,t.one=556,t.two=556,t.three=556,t.four=556,t.five=556,t.six=556,t.seven=556,t.eight=556,t.nine=556,t.colon=333,t.semicolon=333,t.less=584,t.equal=584,t.greater=584,t.question=611,t.at=975,t.A=722,t.B=722,t.C=722,t.D=722,t.E=667,t.F=611,t.G=778,t.H=722,t.I=278,t.J=556,t.K=722,t.L=611,t.M=833,t.N=722,t.O=778,t.P=667,t.Q=778,t.R=722,t.S=667,t.T=611,t.U=722,t.V=667,t.W=944,t.X=667,t.Y=667,t.Z=611,t.bracketleft=333,t.backslash=278,t.bracketright=333,t.asciicircum=584,t.underscore=556,t.quoteleft=278,t.a=556,t.b=611,t.c=556,t.d=611,t.e=556,t.f=333,t.g=611,t.h=611,t.i=278,t.j=278,t.k=556,t.l=278,t.m=889,t.n=611,t.o=611,t.p=611,t.q=611,t.r=389,t.s=556,t.t=333,t.u=611,t.v=556,t.w=778,t.x=556,t.y=556,t.z=500,t.braceleft=389,t.bar=280,t.braceright=389,t.asciitilde=584,t.exclamdown=333,t.cent=556,t.sterling=556,t.fraction=167,t.yen=556,t.florin=556,t.section=556,t.currency=556,t.quotesingle=238,t.quotedblleft=500,t.guillemotleft=556,t.guilsinglleft=333,t.guilsinglright=333,t.fi=611,t.fl=611,t.endash=556,t.dagger=556,t.daggerdbl=556,t.periodcentered=278,t.paragraph=556,t.bullet=350,t.quotesinglbase=278,t.quotedblbase=500,t.quotedblright=500,t.guillemotright=556,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=611,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=1e3,t.ordfeminine=370,t.Lslash=611,t.Oslash=778,t.OE=1e3,t.ordmasculine=365,t.ae=889,t.dotlessi=278,t.lslash=278,t.oslash=611,t.oe=944,t.germandbls=611,t.Idieresis=278,t.eacute=556,t.abreve=556,t.uhungarumlaut=611,t.ecaron=556,t.Ydieresis=667,t.divide=584,t.Yacute=667,t.Acircumflex=722,t.aacute=556,t.Ucircumflex=722,t.yacute=556,t.scommaaccent=556,t.ecircumflex=556,t.Uring=722,t.Udieresis=722,t.aogonek=556,t.Uacute=722,t.uogonek=611,t.Edieresis=667,t.Dcroat=722,t.commaaccent=250,t.copyright=737,t.Emacron=667,t.ccaron=556,t.aring=556,t.Ncommaaccent=722,t.lacute=278,t.agrave=556,t.Tcommaaccent=611,t.Cacute=722,t.atilde=556,t.Edotaccent=667,t.scaron=556,t.scedilla=556,t.iacute=278,t.lozenge=494,t.Rcaron=722,t.Gcommaaccent=778,t.ucircumflex=611,t.acircumflex=556,t.Amacron=722,t.rcaron=389,t.ccedilla=556,t.Zdotaccent=611,t.Thorn=667,t.Omacron=778,t.Racute=722,t.Sacute=667,t.dcaron=743,t.Umacron=722,t.uring=611,t.threesuperior=333,t.Ograve=778,t.Agrave=722,t.Abreve=722,t.multiply=584,t.uacute=611,t.Tcaron=611,t.partialdiff=494,t.ydieresis=556,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=667,t.adieresis=556,t.edieresis=556,t.cacute=556,t.nacute=611,t.umacron=611,t.Ncaron=722,t.Iacute=278,t.plusminus=584,t.brokenbar=280,t.registered=737,t.Gbreve=778,t.Idotaccent=278,t.summation=600,t.Egrave=667,t.racute=389,t.omacron=611,t.Zacute=611,t.Zcaron=611,t.greaterequal=549,t.Eth=722,t.Ccedilla=722,t.lcommaaccent=278,t.tcaron=389,t.eogonek=556,t.Uogonek=722,t.Aacute=722,t.Adieresis=722,t.egrave=556,t.zacute=500,t.iogonek=278,t.Oacute=778,t.oacute=611,t.amacron=556,t.sacute=556,t.idieresis=278,t.Ocircumflex=778,t.Ugrave=722,t.Delta=612,t.thorn=611,t.twosuperior=333,t.Odieresis=778,t.mu=611,t.igrave=278,t.ohungarumlaut=611,t.Eogonek=667,t.dcroat=611,t.threequarters=834,t.Scedilla=667,t.lcaron=400,t.Kcommaaccent=722,t.Lacute=611,t.trademark=1e3,t.edotaccent=556,t.Igrave=278,t.Imacron=278,t.Lcaron=611,t.onehalf=834,t.lessequal=549,t.ocircumflex=611,t.ntilde=611,t.Uhungarumlaut=722,t.Eacute=667,t.emacron=556,t.gbreve=611,t.onequarter=834,t.Scaron=667,t.Scommaaccent=667,t.Ohungarumlaut=778,t.degree=400,t.ograve=611,t.Ccaron=722,t.ugrave=611,t.radical=549,t.Dcaron=722,t.rcommaaccent=389,t.Ntilde=722,t.otilde=611,t.Rcommaaccent=722,t.Lcommaaccent=611,t.Atilde=722,t.Aogonek=722,t.Aring=722,t.Otilde=778,t.zdotaccent=500,t.Ecaron=667,t.Iogonek=278,t.kcommaaccent=556,t.minus=584,t.Icircumflex=278,t.ncaron=611,t.tcommaaccent=333,t.logicalnot=584,t.odieresis=611,t.udieresis=611,t.notequal=549,t.gcommaaccent=611,t.eth=611,t.zcaron=500,t.ncommaaccent=611,t.onesuperior=333,t.imacron=278,t.Euro=556})),t["Helvetica-BoldOblique"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=278,t.exclam=333,t.quotedbl=474,t.numbersign=556,t.dollar=556,t.percent=889,t.ampersand=722,t.quoteright=278,t.parenleft=333,t.parenright=333,t.asterisk=389,t.plus=584,t.comma=278,t.hyphen=333,t.period=278,t.slash=278,t.zero=556,t.one=556,t.two=556,t.three=556,t.four=556,t.five=556,t.six=556,t.seven=556,t.eight=556,t.nine=556,t.colon=333,t.semicolon=333,t.less=584,t.equal=584,t.greater=584,t.question=611,t.at=975,t.A=722,t.B=722,t.C=722,t.D=722,t.E=667,t.F=611,t.G=778,t.H=722,t.I=278,t.J=556,t.K=722,t.L=611,t.M=833,t.N=722,t.O=778,t.P=667,t.Q=778,t.R=722,t.S=667,t.T=611,t.U=722,t.V=667,t.W=944,t.X=667,t.Y=667,t.Z=611,t.bracketleft=333,t.backslash=278,t.bracketright=333,t.asciicircum=584,t.underscore=556,t.quoteleft=278,t.a=556,t.b=611,t.c=556,t.d=611,t.e=556,t.f=333,t.g=611,t.h=611,t.i=278,t.j=278,t.k=556,t.l=278,t.m=889,t.n=611,t.o=611,t.p=611,t.q=611,t.r=389,t.s=556,t.t=333,t.u=611,t.v=556,t.w=778,t.x=556,t.y=556,t.z=500,t.braceleft=389,t.bar=280,t.braceright=389,t.asciitilde=584,t.exclamdown=333,t.cent=556,t.sterling=556,t.fraction=167,t.yen=556,t.florin=556,t.section=556,t.currency=556,t.quotesingle=238,t.quotedblleft=500,t.guillemotleft=556,t.guilsinglleft=333,t.guilsinglright=333,t.fi=611,t.fl=611,t.endash=556,t.dagger=556,t.daggerdbl=556,t.periodcentered=278,t.paragraph=556,t.bullet=350,t.quotesinglbase=278,t.quotedblbase=500,t.quotedblright=500,t.guillemotright=556,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=611,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=1e3,t.ordfeminine=370,t.Lslash=611,t.Oslash=778,t.OE=1e3,t.ordmasculine=365,t.ae=889,t.dotlessi=278,t.lslash=278,t.oslash=611,t.oe=944,t.germandbls=611,t.Idieresis=278,t.eacute=556,t.abreve=556,t.uhungarumlaut=611,t.ecaron=556,t.Ydieresis=667,t.divide=584,t.Yacute=667,t.Acircumflex=722,t.aacute=556,t.Ucircumflex=722,t.yacute=556,t.scommaaccent=556,t.ecircumflex=556,t.Uring=722,t.Udieresis=722,t.aogonek=556,t.Uacute=722,t.uogonek=611,t.Edieresis=667,t.Dcroat=722,t.commaaccent=250,t.copyright=737,t.Emacron=667,t.ccaron=556,t.aring=556,t.Ncommaaccent=722,t.lacute=278,t.agrave=556,t.Tcommaaccent=611,t.Cacute=722,t.atilde=556,t.Edotaccent=667,t.scaron=556,t.scedilla=556,t.iacute=278,t.lozenge=494,t.Rcaron=722,t.Gcommaaccent=778,t.ucircumflex=611,t.acircumflex=556,t.Amacron=722,t.rcaron=389,t.ccedilla=556,t.Zdotaccent=611,t.Thorn=667,t.Omacron=778,t.Racute=722,t.Sacute=667,t.dcaron=743,t.Umacron=722,t.uring=611,t.threesuperior=333,t.Ograve=778,t.Agrave=722,t.Abreve=722,t.multiply=584,t.uacute=611,t.Tcaron=611,t.partialdiff=494,t.ydieresis=556,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=667,t.adieresis=556,t.edieresis=556,t.cacute=556,t.nacute=611,t.umacron=611,t.Ncaron=722,t.Iacute=278,t.plusminus=584,t.brokenbar=280,t.registered=737,t.Gbreve=778,t.Idotaccent=278,t.summation=600,t.Egrave=667,t.racute=389,t.omacron=611,t.Zacute=611,t.Zcaron=611,t.greaterequal=549,t.Eth=722,t.Ccedilla=722,t.lcommaaccent=278,t.tcaron=389,t.eogonek=556,t.Uogonek=722,t.Aacute=722,t.Adieresis=722,t.egrave=556,t.zacute=500,t.iogonek=278,t.Oacute=778,t.oacute=611,t.amacron=556,t.sacute=556,t.idieresis=278,t.Ocircumflex=778,t.Ugrave=722,t.Delta=612,t.thorn=611,t.twosuperior=333,t.Odieresis=778,t.mu=611,t.igrave=278,t.ohungarumlaut=611,t.Eogonek=667,t.dcroat=611,t.threequarters=834,t.Scedilla=667,t.lcaron=400,t.Kcommaaccent=722,t.Lacute=611,t.trademark=1e3,t.edotaccent=556,t.Igrave=278,t.Imacron=278,t.Lcaron=611,t.onehalf=834,t.lessequal=549,t.ocircumflex=611,t.ntilde=611,t.Uhungarumlaut=722,t.Eacute=667,t.emacron=556,t.gbreve=611,t.onequarter=834,t.Scaron=667,t.Scommaaccent=667,t.Ohungarumlaut=778,t.degree=400,t.ograve=611,t.Ccaron=722,t.ugrave=611,t.radical=549,t.Dcaron=722,t.rcommaaccent=389,t.Ntilde=722,t.otilde=611,t.Rcommaaccent=722,t.Lcommaaccent=611,t.Atilde=722,t.Aogonek=722,t.Aring=722,t.Otilde=778,t.zdotaccent=500,t.Ecaron=667,t.Iogonek=278,t.kcommaaccent=556,t.minus=584,t.Icircumflex=278,t.ncaron=611,t.tcommaaccent=333,t.logicalnot=584,t.odieresis=611,t.udieresis=611,t.notequal=549,t.gcommaaccent=611,t.eth=611,t.zcaron=500,t.ncommaaccent=611,t.onesuperior=333,t.imacron=278,t.Euro=556})),t["Helvetica-Oblique"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=278,t.exclam=278,t.quotedbl=355,t.numbersign=556,t.dollar=556,t.percent=889,t.ampersand=667,t.quoteright=222,t.parenleft=333,t.parenright=333,t.asterisk=389,t.plus=584,t.comma=278,t.hyphen=333,t.period=278,t.slash=278,t.zero=556,t.one=556,t.two=556,t.three=556,t.four=556,t.five=556,t.six=556,t.seven=556,t.eight=556,t.nine=556,t.colon=278,t.semicolon=278,t.less=584,t.equal=584,t.greater=584,t.question=556,t.at=1015,t.A=667,t.B=667,t.C=722,t.D=722,t.E=667,t.F=611,t.G=778,t.H=722,t.I=278,t.J=500,t.K=667,t.L=556,t.M=833,t.N=722,t.O=778,t.P=667,t.Q=778,t.R=722,t.S=667,t.T=611,t.U=722,t.V=667,t.W=944,t.X=667,t.Y=667,t.Z=611,t.bracketleft=278,t.backslash=278,t.bracketright=278,t.asciicircum=469,t.underscore=556,t.quoteleft=222,t.a=556,t.b=556,t.c=500,t.d=556,t.e=556,t.f=278,t.g=556,t.h=556,t.i=222,t.j=222,t.k=500,t.l=222,t.m=833,t.n=556,t.o=556,t.p=556,t.q=556,t.r=333,t.s=500,t.t=278,t.u=556,t.v=500,t.w=722,t.x=500,t.y=500,t.z=500,t.braceleft=334,t.bar=260,t.braceright=334,t.asciitilde=584,t.exclamdown=333,t.cent=556,t.sterling=556,t.fraction=167,t.yen=556,t.florin=556,t.section=556,t.currency=556,t.quotesingle=191,t.quotedblleft=333,t.guillemotleft=556,t.guilsinglleft=333,t.guilsinglright=333,t.fi=500,t.fl=500,t.endash=556,t.dagger=556,t.daggerdbl=556,t.periodcentered=278,t.paragraph=537,t.bullet=350,t.quotesinglbase=222,t.quotedblbase=333,t.quotedblright=333,t.guillemotright=556,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=611,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=1e3,t.ordfeminine=370,t.Lslash=556,t.Oslash=778,t.OE=1e3,t.ordmasculine=365,t.ae=889,t.dotlessi=278,t.lslash=222,t.oslash=611,t.oe=944,t.germandbls=611,t.Idieresis=278,t.eacute=556,t.abreve=556,t.uhungarumlaut=556,t.ecaron=556,t.Ydieresis=667,t.divide=584,t.Yacute=667,t.Acircumflex=667,t.aacute=556,t.Ucircumflex=722,t.yacute=500,t.scommaaccent=500,t.ecircumflex=556,t.Uring=722,t.Udieresis=722,t.aogonek=556,t.Uacute=722,t.uogonek=556,t.Edieresis=667,t.Dcroat=722,t.commaaccent=250,t.copyright=737,t.Emacron=667,t.ccaron=500,t.aring=556,t.Ncommaaccent=722,t.lacute=222,t.agrave=556,t.Tcommaaccent=611,t.Cacute=722,t.atilde=556,t.Edotaccent=667,t.scaron=500,t.scedilla=500,t.iacute=278,t.lozenge=471,t.Rcaron=722,t.Gcommaaccent=778,t.ucircumflex=556,t.acircumflex=556,t.Amacron=667,t.rcaron=333,t.ccedilla=500,t.Zdotaccent=611,t.Thorn=667,t.Omacron=778,t.Racute=722,t.Sacute=667,t.dcaron=643,t.Umacron=722,t.uring=556,t.threesuperior=333,t.Ograve=778,t.Agrave=667,t.Abreve=667,t.multiply=584,t.uacute=556,t.Tcaron=611,t.partialdiff=476,t.ydieresis=500,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=667,t.adieresis=556,t.edieresis=556,t.cacute=500,t.nacute=556,t.umacron=556,t.Ncaron=722,t.Iacute=278,t.plusminus=584,t.brokenbar=260,t.registered=737,t.Gbreve=778,t.Idotaccent=278,t.summation=600,t.Egrave=667,t.racute=333,t.omacron=556,t.Zacute=611,t.Zcaron=611,t.greaterequal=549,t.Eth=722,t.Ccedilla=722,t.lcommaaccent=222,t.tcaron=317,t.eogonek=556,t.Uogonek=722,t.Aacute=667,t.Adieresis=667,t.egrave=556,t.zacute=500,t.iogonek=222,t.Oacute=778,t.oacute=556,t.amacron=556,t.sacute=500,t.idieresis=278,t.Ocircumflex=778,t.Ugrave=722,t.Delta=612,t.thorn=556,t.twosuperior=333,t.Odieresis=778,t.mu=556,t.igrave=278,t.ohungarumlaut=556,t.Eogonek=667,t.dcroat=556,t.threequarters=834,t.Scedilla=667,t.lcaron=299,t.Kcommaaccent=667,t.Lacute=556,t.trademark=1e3,t.edotaccent=556,t.Igrave=278,t.Imacron=278,t.Lcaron=556,t.onehalf=834,t.lessequal=549,t.ocircumflex=556,t.ntilde=556,t.Uhungarumlaut=722,t.Eacute=667,t.emacron=556,t.gbreve=556,t.onequarter=834,t.Scaron=667,t.Scommaaccent=667,t.Ohungarumlaut=778,t.degree=400,t.ograve=556,t.Ccaron=722,t.ugrave=556,t.radical=453,t.Dcaron=722,t.rcommaaccent=333,t.Ntilde=722,t.otilde=556,t.Rcommaaccent=722,t.Lcommaaccent=556,t.Atilde=667,t.Aogonek=667,t.Aring=667,t.Otilde=778,t.zdotaccent=500,t.Ecaron=667,t.Iogonek=278,t.kcommaaccent=500,t.minus=584,t.Icircumflex=278,t.ncaron=556,t.tcommaaccent=278,t.logicalnot=584,t.odieresis=556,t.udieresis=556,t.notequal=549,t.gcommaaccent=556,t.eth=556,t.zcaron=500,t.ncommaaccent=556,t.onesuperior=333,t.imacron=278,t.Euro=556})),t.Symbol=(0,_core_utils.getLookupTableFactory)((function(t){t.space=250,t.exclam=333,t.universal=713,t.numbersign=500,t.existential=549,t.percent=833,t.ampersand=778,t.suchthat=439,t.parenleft=333,t.parenright=333,t.asteriskmath=500,t.plus=549,t.comma=250,t.minus=549,t.period=250,t.slash=278,t.zero=500,t.one=500,t.two=500,t.three=500,t.four=500,t.five=500,t.six=500,t.seven=500,t.eight=500,t.nine=500,t.colon=278,t.semicolon=278,t.less=549,t.equal=549,t.greater=549,t.question=444,t.congruent=549,t.Alpha=722,t.Beta=667,t.Chi=722,t.Delta=612,t.Epsilon=611,t.Phi=763,t.Gamma=603,t.Eta=722,t.Iota=333,t.theta1=631,t.Kappa=722,t.Lambda=686,t.Mu=889,t.Nu=722,t.Omicron=722,t.Pi=768,t.Theta=741,t.Rho=556,t.Sigma=592,t.Tau=611,t.Upsilon=690,t.sigma1=439,t.Omega=768,t.Xi=645,t.Psi=795,t.Zeta=611,t.bracketleft=333,t.therefore=863,t.bracketright=333,t.perpendicular=658,t.underscore=500,t.radicalex=500,t.alpha=631,t.beta=549,t.chi=549,t.delta=494,t.epsilon=439,t.phi=521,t.gamma=411,t.eta=603,t.iota=329,t.phi1=603,t.kappa=549,t.lambda=549,t.mu=576,t.nu=521,t.omicron=549,t.pi=549,t.theta=521,t.rho=549,t.sigma=603,t.tau=439,t.upsilon=576,t.omega1=713,t.omega=686,t.xi=493,t.psi=686,t.zeta=494,t.braceleft=480,t.bar=200,t.braceright=480,t.similar=549,t.Euro=750,t.Upsilon1=620,t.minute=247,t.lessequal=549,t.fraction=167,t.infinity=713,t.florin=500,t.club=753,t.diamond=753,t.heart=753,t.spade=753,t.arrowboth=1042,t.arrowleft=987,t.arrowup=603,t.arrowright=987,t.arrowdown=603,t.degree=400,t.plusminus=549,t.second=411,t.greaterequal=549,t.multiply=549,t.proportional=713,t.partialdiff=494,t.bullet=460,t.divide=549,t.notequal=549,t.equivalence=549,t.approxequal=549,t.ellipsis=1e3,t.arrowvertex=603,t.arrowhorizex=1e3,t.carriagereturn=658,t.aleph=823,t.Ifraktur=686,t.Rfraktur=795,t.weierstrass=987,t.circlemultiply=768,t.circleplus=768,t.emptyset=823,t.intersection=768,t.union=768,t.propersuperset=713,t.reflexsuperset=713,t.notsubset=713,t.propersubset=713,t.reflexsubset=713,t.element=713,t.notelement=713,t.angle=768,t.gradient=713,t.registerserif=790,t.copyrightserif=790,t.trademarkserif=890,t.product=823,t.radical=549,t.dotmath=250,t.logicalnot=713,t.logicaland=603,t.logicalor=603,t.arrowdblboth=1042,t.arrowdblleft=987,t.arrowdblup=603,t.arrowdblright=987,t.arrowdbldown=603,t.lozenge=494,t.angleleft=329,t.registersans=790,t.copyrightsans=790,t.trademarksans=786,t.summation=713,t.parenlefttp=384,t.parenleftex=384,t.parenleftbt=384,t.bracketlefttp=384,t.bracketleftex=384,t.bracketleftbt=384,t.bracelefttp=494,t.braceleftmid=494,t.braceleftbt=494,t.braceex=494,t.angleright=329,t.integral=274,t.integraltp=686,t.integralex=686,t.integralbt=686,t.parenrighttp=384,t.parenrightex=384,t.parenrightbt=384,t.bracketrighttp=384,t.bracketrightex=384,t.bracketrightbt=384,t.bracerighttp=494,t.bracerightmid=494,t.bracerightbt=494,t.apple=790})),t["Times-Roman"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=250,t.exclam=333,t.quotedbl=408,t.numbersign=500,t.dollar=500,t.percent=833,t.ampersand=778,t.quoteright=333,t.parenleft=333,t.parenright=333,t.asterisk=500,t.plus=564,t.comma=250,t.hyphen=333,t.period=250,t.slash=278,t.zero=500,t.one=500,t.two=500,t.three=500,t.four=500,t.five=500,t.six=500,t.seven=500,t.eight=500,t.nine=500,t.colon=278,t.semicolon=278,t.less=564,t.equal=564,t.greater=564,t.question=444,t.at=921,t.A=722,t.B=667,t.C=667,t.D=722,t.E=611,t.F=556,t.G=722,t.H=722,t.I=333,t.J=389,t.K=722,t.L=611,t.M=889,t.N=722,t.O=722,t.P=556,t.Q=722,t.R=667,t.S=556,t.T=611,t.U=722,t.V=722,t.W=944,t.X=722,t.Y=722,t.Z=611,t.bracketleft=333,t.backslash=278,t.bracketright=333,t.asciicircum=469,t.underscore=500,t.quoteleft=333,t.a=444,t.b=500,t.c=444,t.d=500,t.e=444,t.f=333,t.g=500,t.h=500,t.i=278,t.j=278,t.k=500,t.l=278,t.m=778,t.n=500,t.o=500,t.p=500,t.q=500,t.r=333,t.s=389,t.t=278,t.u=500,t.v=500,t.w=722,t.x=500,t.y=500,t.z=444,t.braceleft=480,t.bar=200,t.braceright=480,t.asciitilde=541,t.exclamdown=333,t.cent=500,t.sterling=500,t.fraction=167,t.yen=500,t.florin=500,t.section=500,t.currency=500,t.quotesingle=180,t.quotedblleft=444,t.guillemotleft=500,t.guilsinglleft=333,t.guilsinglright=333,t.fi=556,t.fl=556,t.endash=500,t.dagger=500,t.daggerdbl=500,t.periodcentered=250,t.paragraph=453,t.bullet=350,t.quotesinglbase=333,t.quotedblbase=444,t.quotedblright=444,t.guillemotright=500,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=444,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=889,t.ordfeminine=276,t.Lslash=611,t.Oslash=722,t.OE=889,t.ordmasculine=310,t.ae=667,t.dotlessi=278,t.lslash=278,t.oslash=500,t.oe=722,t.germandbls=500,t.Idieresis=333,t.eacute=444,t.abreve=444,t.uhungarumlaut=500,t.ecaron=444,t.Ydieresis=722,t.divide=564,t.Yacute=722,t.Acircumflex=722,t.aacute=444,t.Ucircumflex=722,t.yacute=500,t.scommaaccent=389,t.ecircumflex=444,t.Uring=722,t.Udieresis=722,t.aogonek=444,t.Uacute=722,t.uogonek=500,t.Edieresis=611,t.Dcroat=722,t.commaaccent=250,t.copyright=760,t.Emacron=611,t.ccaron=444,t.aring=444,t.Ncommaaccent=722,t.lacute=278,t.agrave=444,t.Tcommaaccent=611,t.Cacute=667,t.atilde=444,t.Edotaccent=611,t.scaron=389,t.scedilla=389,t.iacute=278,t.lozenge=471,t.Rcaron=667,t.Gcommaaccent=722,t.ucircumflex=500,t.acircumflex=444,t.Amacron=722,t.rcaron=333,t.ccedilla=444,t.Zdotaccent=611,t.Thorn=556,t.Omacron=722,t.Racute=667,t.Sacute=556,t.dcaron=588,t.Umacron=722,t.uring=500,t.threesuperior=300,t.Ograve=722,t.Agrave=722,t.Abreve=722,t.multiply=564,t.uacute=500,t.Tcaron=611,t.partialdiff=476,t.ydieresis=500,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=611,t.adieresis=444,t.edieresis=444,t.cacute=444,t.nacute=500,t.umacron=500,t.Ncaron=722,t.Iacute=333,t.plusminus=564,t.brokenbar=200,t.registered=760,t.Gbreve=722,t.Idotaccent=333,t.summation=600,t.Egrave=611,t.racute=333,t.omacron=500,t.Zacute=611,t.Zcaron=611,t.greaterequal=549,t.Eth=722,t.Ccedilla=667,t.lcommaaccent=278,t.tcaron=326,t.eogonek=444,t.Uogonek=722,t.Aacute=722,t.Adieresis=722,t.egrave=444,t.zacute=444,t.iogonek=278,t.Oacute=722,t.oacute=500,t.amacron=444,t.sacute=389,t.idieresis=278,t.Ocircumflex=722,t.Ugrave=722,t.Delta=612,t.thorn=500,t.twosuperior=300,t.Odieresis=722,t.mu=500,t.igrave=278,t.ohungarumlaut=500,t.Eogonek=611,t.dcroat=500,t.threequarters=750,t.Scedilla=556,t.lcaron=344,t.Kcommaaccent=722,t.Lacute=611,t.trademark=980,t.edotaccent=444,t.Igrave=333,t.Imacron=333,t.Lcaron=611,t.onehalf=750,t.lessequal=549,t.ocircumflex=500,t.ntilde=500,t.Uhungarumlaut=722,t.Eacute=611,t.emacron=444,t.gbreve=500,t.onequarter=750,t.Scaron=556,t.Scommaaccent=556,t.Ohungarumlaut=722,t.degree=400,t.ograve=500,t.Ccaron=667,t.ugrave=500,t.radical=453,t.Dcaron=722,t.rcommaaccent=333,t.Ntilde=722,t.otilde=500,t.Rcommaaccent=667,t.Lcommaaccent=611,t.Atilde=722,t.Aogonek=722,t.Aring=722,t.Otilde=722,t.zdotaccent=444,t.Ecaron=611,t.Iogonek=333,t.kcommaaccent=500,t.minus=564,t.Icircumflex=333,t.ncaron=500,t.tcommaaccent=278,t.logicalnot=564,t.odieresis=500,t.udieresis=500,t.notequal=549,t.gcommaaccent=500,t.eth=500,t.zcaron=444,t.ncommaaccent=500,t.onesuperior=300,t.imacron=278,t.Euro=500})),t["Times-Bold"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=250,t.exclam=333,t.quotedbl=555,t.numbersign=500,t.dollar=500,t.percent=1e3,t.ampersand=833,t.quoteright=333,t.parenleft=333,t.parenright=333,t.asterisk=500,t.plus=570,t.comma=250,t.hyphen=333,t.period=250,t.slash=278,t.zero=500,t.one=500,t.two=500,t.three=500,t.four=500,t.five=500,t.six=500,t.seven=500,t.eight=500,t.nine=500,t.colon=333,t.semicolon=333,t.less=570,t.equal=570,t.greater=570,t.question=500,t.at=930,t.A=722,t.B=667,t.C=722,t.D=722,t.E=667,t.F=611,t.G=778,t.H=778,t.I=389,t.J=500,t.K=778,t.L=667,t.M=944,t.N=722,t.O=778,t.P=611,t.Q=778,t.R=722,t.S=556,t.T=667,t.U=722,t.V=722,t.W=1e3,t.X=722,t.Y=722,t.Z=667,t.bracketleft=333,t.backslash=278,t.bracketright=333,t.asciicircum=581,t.underscore=500,t.quoteleft=333,t.a=500,t.b=556,t.c=444,t.d=556,t.e=444,t.f=333,t.g=500,t.h=556,t.i=278,t.j=333,t.k=556,t.l=278,t.m=833,t.n=556,t.o=500,t.p=556,t.q=556,t.r=444,t.s=389,t.t=333,t.u=556,t.v=500,t.w=722,t.x=500,t.y=500,t.z=444,t.braceleft=394,t.bar=220,t.braceright=394,t.asciitilde=520,t.exclamdown=333,t.cent=500,t.sterling=500,t.fraction=167,t.yen=500,t.florin=500,t.section=500,t.currency=500,t.quotesingle=278,t.quotedblleft=500,t.guillemotleft=500,t.guilsinglleft=333,t.guilsinglright=333,t.fi=556,t.fl=556,t.endash=500,t.dagger=500,t.daggerdbl=500,t.periodcentered=250,t.paragraph=540,t.bullet=350,t.quotesinglbase=333,t.quotedblbase=500,t.quotedblright=500,t.guillemotright=500,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=500,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=1e3,t.ordfeminine=300,t.Lslash=667,t.Oslash=778,t.OE=1e3,t.ordmasculine=330,t.ae=722,t.dotlessi=278,t.lslash=278,t.oslash=500,t.oe=722,t.germandbls=556,t.Idieresis=389,t.eacute=444,t.abreve=500,t.uhungarumlaut=556,t.ecaron=444,t.Ydieresis=722,t.divide=570,t.Yacute=722,t.Acircumflex=722,t.aacute=500,t.Ucircumflex=722,t.yacute=500,t.scommaaccent=389,t.ecircumflex=444,t.Uring=722,t.Udieresis=722,t.aogonek=500,t.Uacute=722,t.uogonek=556,t.Edieresis=667,t.Dcroat=722,t.commaaccent=250,t.copyright=747,t.Emacron=667,t.ccaron=444,t.aring=500,t.Ncommaaccent=722,t.lacute=278,t.agrave=500,t.Tcommaaccent=667,t.Cacute=722,t.atilde=500,t.Edotaccent=667,t.scaron=389,t.scedilla=389,t.iacute=278,t.lozenge=494,t.Rcaron=722,t.Gcommaaccent=778,t.ucircumflex=556,t.acircumflex=500,t.Amacron=722,t.rcaron=444,t.ccedilla=444,t.Zdotaccent=667,t.Thorn=611,t.Omacron=778,t.Racute=722,t.Sacute=556,t.dcaron=672,t.Umacron=722,t.uring=556,t.threesuperior=300,t.Ograve=778,t.Agrave=722,t.Abreve=722,t.multiply=570,t.uacute=556,t.Tcaron=667,t.partialdiff=494,t.ydieresis=500,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=667,t.adieresis=500,t.edieresis=444,t.cacute=444,t.nacute=556,t.umacron=556,t.Ncaron=722,t.Iacute=389,t.plusminus=570,t.brokenbar=220,t.registered=747,t.Gbreve=778,t.Idotaccent=389,t.summation=600,t.Egrave=667,t.racute=444,t.omacron=500,t.Zacute=667,t.Zcaron=667,t.greaterequal=549,t.Eth=722,t.Ccedilla=722,t.lcommaaccent=278,t.tcaron=416,t.eogonek=444,t.Uogonek=722,t.Aacute=722,t.Adieresis=722,t.egrave=444,t.zacute=444,t.iogonek=278,t.Oacute=778,t.oacute=500,t.amacron=500,t.sacute=389,t.idieresis=278,t.Ocircumflex=778,t.Ugrave=722,t.Delta=612,t.thorn=556,t.twosuperior=300,t.Odieresis=778,t.mu=556,t.igrave=278,t.ohungarumlaut=500,t.Eogonek=667,t.dcroat=556,t.threequarters=750,t.Scedilla=556,t.lcaron=394,t.Kcommaaccent=778,t.Lacute=667,t.trademark=1e3,t.edotaccent=444,t.Igrave=389,t.Imacron=389,t.Lcaron=667,t.onehalf=750,t.lessequal=549,t.ocircumflex=500,t.ntilde=556,t.Uhungarumlaut=722,t.Eacute=667,t.emacron=444,t.gbreve=500,t.onequarter=750,t.Scaron=556,t.Scommaaccent=556,t.Ohungarumlaut=778,t.degree=400,t.ograve=500,t.Ccaron=722,t.ugrave=556,t.radical=549,t.Dcaron=722,t.rcommaaccent=444,t.Ntilde=722,t.otilde=500,t.Rcommaaccent=722,t.Lcommaaccent=667,t.Atilde=722,t.Aogonek=722,t.Aring=722,t.Otilde=778,t.zdotaccent=444,t.Ecaron=667,t.Iogonek=389,t.kcommaaccent=556,t.minus=570,t.Icircumflex=389,t.ncaron=556,t.tcommaaccent=333,t.logicalnot=570,t.odieresis=500,t.udieresis=556,t.notequal=549,t.gcommaaccent=500,t.eth=500,t.zcaron=444,t.ncommaaccent=556,t.onesuperior=300,t.imacron=278,t.Euro=500})),t["Times-BoldItalic"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=250,t.exclam=389,t.quotedbl=555,t.numbersign=500,t.dollar=500,t.percent=833,t.ampersand=778,t.quoteright=333,t.parenleft=333,t.parenright=333,t.asterisk=500,t.plus=570,t.comma=250,t.hyphen=333,t.period=250,t.slash=278,t.zero=500,t.one=500,t.two=500,t.three=500,t.four=500,t.five=500,t.six=500,t.seven=500,t.eight=500,t.nine=500,t.colon=333,t.semicolon=333,t.less=570,t.equal=570,t.greater=570,t.question=500,t.at=832,t.A=667,t.B=667,t.C=667,t.D=722,t.E=667,t.F=667,t.G=722,t.H=778,t.I=389,t.J=500,t.K=667,t.L=611,t.M=889,t.N=722,t.O=722,t.P=611,t.Q=722,t.R=667,t.S=556,t.T=611,t.U=722,t.V=667,t.W=889,t.X=667,t.Y=611,t.Z=611,t.bracketleft=333,t.backslash=278,t.bracketright=333,t.asciicircum=570,t.underscore=500,t.quoteleft=333,t.a=500,t.b=500,t.c=444,t.d=500,t.e=444,t.f=333,t.g=500,t.h=556,t.i=278,t.j=278,t.k=500,t.l=278,t.m=778,t.n=556,t.o=500,t.p=500,t.q=500,t.r=389,t.s=389,t.t=278,t.u=556,t.v=444,t.w=667,t.x=500,t.y=444,t.z=389,t.braceleft=348,t.bar=220,t.braceright=348,t.asciitilde=570,t.exclamdown=389,t.cent=500,t.sterling=500,t.fraction=167,t.yen=500,t.florin=500,t.section=500,t.currency=500,t.quotesingle=278,t.quotedblleft=500,t.guillemotleft=500,t.guilsinglleft=333,t.guilsinglright=333,t.fi=556,t.fl=556,t.endash=500,t.dagger=500,t.daggerdbl=500,t.periodcentered=250,t.paragraph=500,t.bullet=350,t.quotesinglbase=333,t.quotedblbase=500,t.quotedblright=500,t.guillemotright=500,t.ellipsis=1e3,t.perthousand=1e3,t.questiondown=500,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=1e3,t.AE=944,t.ordfeminine=266,t.Lslash=611,t.Oslash=722,t.OE=944,t.ordmasculine=300,t.ae=722,t.dotlessi=278,t.lslash=278,t.oslash=500,t.oe=722,t.germandbls=500,t.Idieresis=389,t.eacute=444,t.abreve=500,t.uhungarumlaut=556,t.ecaron=444,t.Ydieresis=611,t.divide=570,t.Yacute=611,t.Acircumflex=667,t.aacute=500,t.Ucircumflex=722,t.yacute=444,t.scommaaccent=389,t.ecircumflex=444,t.Uring=722,t.Udieresis=722,t.aogonek=500,t.Uacute=722,t.uogonek=556,t.Edieresis=667,t.Dcroat=722,t.commaaccent=250,t.copyright=747,t.Emacron=667,t.ccaron=444,t.aring=500,t.Ncommaaccent=722,t.lacute=278,t.agrave=500,t.Tcommaaccent=611,t.Cacute=667,t.atilde=500,t.Edotaccent=667,t.scaron=389,t.scedilla=389,t.iacute=278,t.lozenge=494,t.Rcaron=667,t.Gcommaaccent=722,t.ucircumflex=556,t.acircumflex=500,t.Amacron=667,t.rcaron=389,t.ccedilla=444,t.Zdotaccent=611,t.Thorn=611,t.Omacron=722,t.Racute=667,t.Sacute=556,t.dcaron=608,t.Umacron=722,t.uring=556,t.threesuperior=300,t.Ograve=722,t.Agrave=667,t.Abreve=667,t.multiply=570,t.uacute=556,t.Tcaron=611,t.partialdiff=494,t.ydieresis=444,t.Nacute=722,t.icircumflex=278,t.Ecircumflex=667,t.adieresis=500,t.edieresis=444,t.cacute=444,t.nacute=556,t.umacron=556,t.Ncaron=722,t.Iacute=389,t.plusminus=570,t.brokenbar=220,t.registered=747,t.Gbreve=722,t.Idotaccent=389,t.summation=600,t.Egrave=667,t.racute=389,t.omacron=500,t.Zacute=611,t.Zcaron=611,t.greaterequal=549,t.Eth=722,t.Ccedilla=667,t.lcommaaccent=278,t.tcaron=366,t.eogonek=444,t.Uogonek=722,t.Aacute=667,t.Adieresis=667,t.egrave=444,t.zacute=389,t.iogonek=278,t.Oacute=722,t.oacute=500,t.amacron=500,t.sacute=389,t.idieresis=278,t.Ocircumflex=722,t.Ugrave=722,t.Delta=612,t.thorn=500,t.twosuperior=300,t.Odieresis=722,t.mu=576,t.igrave=278,t.ohungarumlaut=500,t.Eogonek=667,t.dcroat=500,t.threequarters=750,t.Scedilla=556,t.lcaron=382,t.Kcommaaccent=667,t.Lacute=611,t.trademark=1e3,t.edotaccent=444,t.Igrave=389,t.Imacron=389,t.Lcaron=611,t.onehalf=750,t.lessequal=549,t.ocircumflex=500,t.ntilde=556,t.Uhungarumlaut=722,t.Eacute=667,t.emacron=444,t.gbreve=500,t.onequarter=750,t.Scaron=556,t.Scommaaccent=556,t.Ohungarumlaut=722,t.degree=400,t.ograve=500,t.Ccaron=667,t.ugrave=556,t.radical=549,t.Dcaron=722,t.rcommaaccent=389,t.Ntilde=722,t.otilde=500,t.Rcommaaccent=667,t.Lcommaaccent=611,t.Atilde=667,t.Aogonek=667,t.Aring=667,t.Otilde=722,t.zdotaccent=389,t.Ecaron=667,t.Iogonek=389,t.kcommaaccent=500,t.minus=606,t.Icircumflex=389,t.ncaron=556,t.tcommaaccent=278,t.logicalnot=606,t.odieresis=500,t.udieresis=556,t.notequal=549,t.gcommaaccent=500,t.eth=500,t.zcaron=389,t.ncommaaccent=556,t.onesuperior=300,t.imacron=278,t.Euro=500})),t["Times-Italic"]=(0,_core_utils.getLookupTableFactory)((function(t){t.space=250,t.exclam=333,t.quotedbl=420,t.numbersign=500,t.dollar=500,t.percent=833,t.ampersand=778,t.quoteright=333,t.parenleft=333,t.parenright=333,t.asterisk=500,t.plus=675,t.comma=250,t.hyphen=333,t.period=250,t.slash=278,t.zero=500,t.one=500,t.two=500,t.three=500,t.four=500,t.five=500,t.six=500,t.seven=500,t.eight=500,t.nine=500,t.colon=333,t.semicolon=333,t.less=675,t.equal=675,t.greater=675,t.question=500,t.at=920,t.A=611,t.B=611,t.C=667,t.D=722,t.E=611,t.F=611,t.G=722,t.H=722,t.I=333,t.J=444,t.K=667,t.L=556,t.M=833,t.N=667,t.O=722,t.P=611,t.Q=722,t.R=611,t.S=500,t.T=556,t.U=722,t.V=611,t.W=833,t.X=611,t.Y=556,t.Z=556,t.bracketleft=389,t.backslash=278,t.bracketright=389,t.asciicircum=422,t.underscore=500,t.quoteleft=333,t.a=500,t.b=500,t.c=444,t.d=500,t.e=444,t.f=278,t.g=500,t.h=500,t.i=278,t.j=278,t.k=444,t.l=278,t.m=722,t.n=500,t.o=500,t.p=500,t.q=500,t.r=389,t.s=389,t.t=278,t.u=500,t.v=444,t.w=667,t.x=444,t.y=444,t.z=389,t.braceleft=400,t.bar=275,t.braceright=400,t.asciitilde=541,t.exclamdown=389,t.cent=500,t.sterling=500,t.fraction=167,t.yen=500,t.florin=500,t.section=500,t.currency=500,t.quotesingle=214,t.quotedblleft=556,t.guillemotleft=500,t.guilsinglleft=333,t.guilsinglright=333,t.fi=500,t.fl=500,t.endash=500,t.dagger=500,t.daggerdbl=500,t.periodcentered=250,t.paragraph=523,t.bullet=350,t.quotesinglbase=333,t.quotedblbase=556,t.quotedblright=556,t.guillemotright=500,t.ellipsis=889,t.perthousand=1e3,t.questiondown=500,t.grave=333,t.acute=333,t.circumflex=333,t.tilde=333,t.macron=333,t.breve=333,t.dotaccent=333,t.dieresis=333,t.ring=333,t.cedilla=333,t.hungarumlaut=333,t.ogonek=333,t.caron=333,t.emdash=889,t.AE=889,t.ordfeminine=276,t.Lslash=556,t.Oslash=722,t.OE=944,t.ordmasculine=310,t.ae=667,t.dotlessi=278,t.lslash=278,t.oslash=500,t.oe=667,t.germandbls=500,t.Idieresis=333,t.eacute=444,t.abreve=500,t.uhungarumlaut=500,t.ecaron=444,t.Ydieresis=556,t.divide=675,t.Yacute=556,t.Acircumflex=611,t.aacute=500,t.Ucircumflex=722,t.yacute=444,t.scommaaccent=389,t.ecircumflex=444,t.Uring=722,t.Udieresis=722,t.aogonek=500,t.Uacute=722,t.uogonek=500,t.Edieresis=611,t.Dcroat=722,t.commaaccent=250,t.copyright=760,t.Emacron=611,t.ccaron=444,t.aring=500,t.Ncommaaccent=667,t.lacute=278,t.agrave=500,t.Tcommaaccent=556,t.Cacute=667,t.atilde=500,t.Edotaccent=611,t.scaron=389,t.scedilla=389,t.iacute=278,t.lozenge=471,t.Rcaron=611,t.Gcommaaccent=722,t.ucircumflex=500,t.acircumflex=500,t.Amacron=611,t.rcaron=389,t.ccedilla=444,t.Zdotaccent=556,t.Thorn=611,t.Omacron=722,t.Racute=611,t.Sacute=500,t.dcaron=544,t.Umacron=722,t.uring=500,t.threesuperior=300,t.Ograve=722,t.Agrave=611,t.Abreve=611,t.multiply=675,t.uacute=500,t.Tcaron=556,t.partialdiff=476,t.ydieresis=444,t.Nacute=667,t.icircumflex=278,t.Ecircumflex=611,t.adieresis=500,t.edieresis=444,t.cacute=444,t.nacute=500,t.umacron=500,t.Ncaron=667,t.Iacute=333,t.plusminus=675,t.brokenbar=275,t.registered=760,t.Gbreve=722,t.Idotaccent=333,t.summation=600,t.Egrave=611,t.racute=389,t.omacron=500,t.Zacute=556,t.Zcaron=556,t.greaterequal=549,t.Eth=722,t.Ccedilla=667,t.lcommaaccent=278,t.tcaron=300,t.eogonek=444,t.Uogonek=722,t.Aacute=611,t.Adieresis=611,t.egrave=444,t.zacute=389,t.iogonek=278,t.Oacute=722,t.oacute=500,t.amacron=500,t.sacute=389,t.idieresis=278,t.Ocircumflex=722,t.Ugrave=722,t.Delta=612,t.thorn=500,t.twosuperior=300,t.Odieresis=722,t.mu=500,t.igrave=278,t.ohungarumlaut=500,t.Eogonek=611,t.dcroat=500,t.threequarters=750,t.Scedilla=500,t.lcaron=300,t.Kcommaaccent=667,t.Lacute=556,t.trademark=980,t.edotaccent=444,t.Igrave=333,t.Imacron=333,t.Lcaron=611,t.onehalf=750,t.lessequal=549,t.ocircumflex=500,t.ntilde=500,t.Uhungarumlaut=722,t.Eacute=611,t.emacron=444,t.gbreve=500,t.onequarter=750,t.Scaron=500,t.Scommaaccent=500,t.Ohungarumlaut=722,t.degree=400,t.ograve=500,t.Ccaron=667,t.ugrave=500,t.radical=453,t.Dcaron=722,t.rcommaaccent=389,t.Ntilde=667,t.otilde=500,t.Rcommaaccent=611,t.Lcommaaccent=556,t.Atilde=611,t.Aogonek=611,t.Aring=611,t.Otilde=722,t.zdotaccent=389,t.Ecaron=611,t.Iogonek=333,t.kcommaaccent=444,t.minus=675,t.Icircumflex=333,t.ncaron=500,t.tcommaaccent=278,t.logicalnot=675,t.odieresis=500,t.udieresis=500,t.notequal=549,t.gcommaaccent=500,t.eth=500,t.zcaron=389,t.ncommaaccent=500,t.onesuperior=300,t.imacron=278,t.Euro=500})),t.ZapfDingbats=(0,_core_utils.getLookupTableFactory)((function(t){t.space=278,t.a1=974,t.a2=961,t.a202=974,t.a3=980,t.a4=719,t.a5=789,t.a119=790,t.a118=791,t.a117=690,t.a11=960,t.a12=939,t.a13=549,t.a14=855,t.a15=911,t.a16=933,t.a105=911,t.a17=945,t.a18=974,t.a19=755,t.a20=846,t.a21=762,t.a22=761,t.a23=571,t.a24=677,t.a25=763,t.a26=760,t.a27=759,t.a28=754,t.a6=494,t.a7=552,t.a8=537,t.a9=577,t.a10=692,t.a29=786,t.a30=788,t.a31=788,t.a32=790,t.a33=793,t.a34=794,t.a35=816,t.a36=823,t.a37=789,t.a38=841,t.a39=823,t.a40=833,t.a41=816,t.a42=831,t.a43=923,t.a44=744,t.a45=723,t.a46=749,t.a47=790,t.a48=792,t.a49=695,t.a50=776,t.a51=768,t.a52=792,t.a53=759,t.a54=707,t.a55=708,t.a56=682,t.a57=701,t.a58=826,t.a59=815,t.a60=789,t.a61=789,t.a62=707,t.a63=687,t.a64=696,t.a65=689,t.a66=786,t.a67=787,t.a68=713,t.a69=791,t.a70=785,t.a71=791,t.a72=873,t.a73=761,t.a74=762,t.a203=762,t.a75=759,t.a204=759,t.a76=892,t.a77=892,t.a78=788,t.a79=784,t.a81=438,t.a82=138,t.a83=277,t.a84=415,t.a97=392,t.a98=392,t.a99=668,t.a100=668,t.a89=390,t.a90=390,t.a93=317,t.a94=317,t.a91=276,t.a92=276,t.a205=509,t.a85=509,t.a206=410,t.a86=410,t.a87=234,t.a88=234,t.a95=334,t.a96=334,t.a101=732,t.a102=544,t.a103=544,t.a104=910,t.a106=667,t.a107=760,t.a108=760,t.a112=776,t.a111=595,t.a110=694,t.a109=626,t.a120=788,t.a121=788,t.a122=788,t.a123=788,t.a124=788,t.a125=788,t.a126=788,t.a127=788,t.a128=788,t.a129=788,t.a130=788,t.a131=788,t.a132=788,t.a133=788,t.a134=788,t.a135=788,t.a136=788,t.a137=788,t.a138=788,t.a139=788,t.a140=788,t.a141=788,t.a142=788,t.a143=788,t.a144=788,t.a145=788,t.a146=788,t.a147=788,t.a148=788,t.a149=788,t.a150=788,t.a151=788,t.a152=788,t.a153=788,t.a154=788,t.a155=788,t.a156=788,t.a157=788,t.a158=788,t.a159=788,t.a160=894,t.a161=838,t.a163=1016,t.a164=458,t.a196=748,t.a165=924,t.a192=748,t.a166=918,t.a167=927,t.a168=928,t.a169=928,t.a170=834,t.a171=873,t.a172=828,t.a173=924,t.a162=924,t.a174=917,t.a175=930,t.a176=931,t.a177=463,t.a178=883,t.a179=836,t.a193=836,t.a180=867,t.a199=867,t.a181=696,t.a200=696,t.a182=874,t.a201=874,t.a183=760,t.a184=946,t.a197=771,t.a185=865,t.a194=771,t.a198=888,t.a186=967,t.a195=888,t.a187=831,t.a188=873,t.a189=927,t.a190=970,t.a191=918}))}));exports.getMetrics=getMetrics;const getFontBasicMetrics=(0,_core_utils.getLookupTableFactory)((function(t){t.Courier={ascent:629,descent:-157,capHeight:562,xHeight:-426},t["Courier-Bold"]={ascent:629,descent:-157,capHeight:562,xHeight:439},t["Courier-Oblique"]={ascent:629,descent:-157,capHeight:562,xHeight:426},t["Courier-BoldOblique"]={ascent:629,descent:-157,capHeight:562,xHeight:426},t.Helvetica={ascent:718,descent:-207,capHeight:718,xHeight:523},t["Helvetica-Bold"]={ascent:718,descent:-207,capHeight:718,xHeight:532},t["Helvetica-Oblique"]={ascent:718,descent:-207,capHeight:718,xHeight:523},t["Helvetica-BoldOblique"]={ascent:718,descent:-207,capHeight:718,xHeight:532},t["Times-Roman"]={ascent:683,descent:-217,capHeight:662,xHeight:450},t["Times-Bold"]={ascent:683,descent:-217,capHeight:676,xHeight:461},t["Times-Italic"]={ascent:683,descent:-217,capHeight:653,xHeight:441},t["Times-BoldItalic"]={ascent:683,descent:-217,capHeight:669,xHeight:462},t.Symbol={ascent:Math.NaN,descent:Math.NaN,capHeight:Math.NaN,xHeight:Math.NaN},t.ZapfDingbats={ascent:Math.NaN,descent:Math.NaN,capHeight:Math.NaN,xHeight:Math.NaN}}));exports.getFontBasicMetrics=getFontBasicMetrics},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlyfTable=void 0;exports.GlyfTable=class GlyfTable{constructor({glyfTable,isGlyphLocationsLong,locaTable,numGlyphs}){this.glyphs=[];const loca=new DataView(locaTable.buffer,locaTable.byteOffset,locaTable.byteLength),glyf=new DataView(glyfTable.buffer,glyfTable.byteOffset,glyfTable.byteLength),offsetSize=isGlyphLocationsLong?4:2;let prev=isGlyphLocationsLong?loca.getUint32(0):2*loca.getUint16(0),pos=0;for(let i=0;i<numGlyphs;i++){pos+=offsetSize;const next=isGlyphLocationsLong?loca.getUint32(pos):2*loca.getUint16(pos);if(next===prev){this.glyphs.push(new Glyph({}));continue}const glyph=Glyph.parse(prev,glyf);this.glyphs.push(glyph),prev=next}}getSize(){return this.glyphs.reduce(((a,g)=>a+(g.getSize()+3&-4)),0)}write(){const totalSize=this.getSize(),glyfTable=new DataView(new ArrayBuffer(totalSize)),isLocationLong=totalSize>131070,offsetSize=isLocationLong?4:2,locaTable=new DataView(new ArrayBuffer((this.glyphs.length+1)*offsetSize));isLocationLong?locaTable.setUint32(0,0):locaTable.setUint16(0,0);let pos=0,locaIndex=0;for(const glyph of this.glyphs)pos+=glyph.write(pos,glyfTable),pos=pos+3&-4,locaIndex+=offsetSize,isLocationLong?locaTable.setUint32(locaIndex,pos):locaTable.setUint16(locaIndex,pos>>1);return{isLocationLong,loca:new Uint8Array(locaTable.buffer),glyf:new Uint8Array(glyfTable.buffer)}}scale(factors){for(let i=0,ii=this.glyphs.length;i<ii;i++)this.glyphs[i].scale(factors[i])}};class Glyph{constructor({header=null,simple=null,composites=null}){this.header=header,this.simple=simple,this.composites=composites}static parse(pos,glyf){const[read,header]=GlyphHeader.parse(pos,glyf);if(pos+=read,header.numberOfContours<0){const composites=[];for(;;){const[n,composite]=CompositeGlyph.parse(pos,glyf);if(pos+=n,composites.push(composite),!(32&composite.flags))break}return new Glyph({header,composites})}const simple=SimpleGlyph.parse(pos,glyf,header.numberOfContours);return new Glyph({header,simple})}getSize(){if(!this.header)return 0;const size=this.simple?this.simple.getSize():this.composites.reduce(((a,c)=>a+c.getSize()),0);return this.header.getSize()+size}write(pos,buf){if(!this.header)return 0;const spos=pos;if(pos+=this.header.write(pos,buf),this.simple)pos+=this.simple.write(pos,buf);else for(const composite of this.composites)pos+=composite.write(pos,buf);return pos-spos}scale(factor){if(!this.header)return;const xMiddle=(this.header.xMin+this.header.xMax)/2;if(this.header.scale(xMiddle,factor),this.simple)this.simple.scale(xMiddle,factor);else for(const composite of this.composites)composite.scale(xMiddle,factor)}}class GlyphHeader{constructor({numberOfContours,xMin,yMin,xMax,yMax}){this.numberOfContours=numberOfContours,this.xMin=xMin,this.yMin=yMin,this.xMax=xMax,this.yMax=yMax}static parse(pos,glyf){return[10,new GlyphHeader({numberOfContours:glyf.getInt16(pos),xMin:glyf.getInt16(pos+2),yMin:glyf.getInt16(pos+4),xMax:glyf.getInt16(pos+6),yMax:glyf.getInt16(pos+8)})]}getSize(){return 10}write(pos,buf){return buf.setInt16(pos,this.numberOfContours),buf.setInt16(pos+2,this.xMin),buf.setInt16(pos+4,this.yMin),buf.setInt16(pos+6,this.xMax),buf.setInt16(pos+8,this.yMax),10}scale(x,factor){this.xMin=Math.round(x+(this.xMin-x)*factor),this.xMax=Math.round(x+(this.xMax-x)*factor)}}class Contour{constructor({flags,xCoordinates,yCoordinates}){this.xCoordinates=xCoordinates,this.yCoordinates=yCoordinates,this.flags=flags}}class SimpleGlyph{constructor({contours,instructions}){this.contours=contours,this.instructions=instructions}static parse(pos,glyf,numberOfContours){const endPtsOfContours=[];for(let i=0;i<numberOfContours;i++){const endPt=glyf.getUint16(pos);pos+=2,endPtsOfContours.push(endPt)}const numberOfPt=endPtsOfContours[numberOfContours-1]+1,instructionLength=glyf.getUint16(pos);pos+=2;const instructions=new Uint8Array(glyf).slice(pos,pos+instructionLength);pos+=instructionLength;const flags=[];for(let i=0;i<numberOfPt;pos++,i++){let flag=glyf.getUint8(pos);if(flags.push(flag),8&flag){const count=glyf.getUint8(++pos);flag^=8;for(let m=0;m<count;m++)flags.push(flag);i+=count}}const allXCoordinates=[];let xCoordinates=[],yCoordinates=[],pointFlags=[];const contours=[];let endPtsOfContoursIndex=0,lastCoordinate=0;for(let i=0;i<numberOfPt;i++){const flag=flags[i];if(2&flag){const x=glyf.getUint8(pos++);lastCoordinate+=16&flag?x:-x,xCoordinates.push(lastCoordinate)}else 16&flag||(lastCoordinate+=glyf.getInt16(pos),pos+=2),xCoordinates.push(lastCoordinate);endPtsOfContours[endPtsOfContoursIndex]===i&&(endPtsOfContoursIndex++,allXCoordinates.push(xCoordinates),xCoordinates=[])}lastCoordinate=0,endPtsOfContoursIndex=0;for(let i=0;i<numberOfPt;i++){const flag=flags[i];if(4&flag){const y=glyf.getUint8(pos++);lastCoordinate+=32&flag?y:-y,yCoordinates.push(lastCoordinate)}else 32&flag||(lastCoordinate+=glyf.getInt16(pos),pos+=2),yCoordinates.push(lastCoordinate);pointFlags.push(1&flag|64&flag),endPtsOfContours[endPtsOfContoursIndex]===i&&(xCoordinates=allXCoordinates[endPtsOfContoursIndex],endPtsOfContoursIndex++,contours.push(new Contour({flags:pointFlags,xCoordinates,yCoordinates})),yCoordinates=[],pointFlags=[])}return new SimpleGlyph({contours,instructions})}getSize(){let size=2*this.contours.length+2+this.instructions.length,lastX=0,lastY=0;for(const contour of this.contours){size+=contour.flags.length;for(let i=0,ii=contour.xCoordinates.length;i<ii;i++){const x=contour.xCoordinates[i],y=contour.yCoordinates[i];let abs=Math.abs(x-lastX);abs>255?size+=2:abs>0&&(size+=1),lastX=x,abs=Math.abs(y-lastY),abs>255?size+=2:abs>0&&(size+=1),lastY=y}}return size}write(pos,buf){const spos=pos,xCoordinates=[],yCoordinates=[],flags=[];let lastX=0,lastY=0;for(const contour of this.contours){for(let i=0,ii=contour.xCoordinates.length;i<ii;i++){let flag=contour.flags[i];const x=contour.xCoordinates[i];let delta=x-lastX;if(0===delta)flag|=16,xCoordinates.push(0);else{const abs=Math.abs(delta);abs<=255?(flag|=delta>=0?18:2,xCoordinates.push(abs)):xCoordinates.push(delta)}lastX=x;const y=contour.yCoordinates[i];if(delta=y-lastY,0===delta)flag|=32,yCoordinates.push(0);else{const abs=Math.abs(delta);abs<=255?(flag|=delta>=0?36:4,yCoordinates.push(abs)):yCoordinates.push(delta)}lastY=y,flags.push(flag)}buf.setUint16(pos,xCoordinates.length-1),pos+=2}buf.setUint16(pos,this.instructions.length),pos+=2,this.instructions.length&&(new Uint8Array(buf.buffer,0,buf.buffer.byteLength).set(this.instructions,pos),pos+=this.instructions.length);for(const flag of flags)buf.setUint8(pos++,flag);for(let i=0,ii=xCoordinates.length;i<ii;i++){const x=xCoordinates[i],flag=flags[i];2&flag?buf.setUint8(pos++,x):16&flag||(buf.setInt16(pos,x),pos+=2)}for(let i=0,ii=yCoordinates.length;i<ii;i++){const y=yCoordinates[i],flag=flags[i];4&flag?buf.setUint8(pos++,y):32&flag||(buf.setInt16(pos,y),pos+=2)}return pos-spos}scale(x,factor){for(const contour of this.contours)if(0!==contour.xCoordinates.length)for(let i=0,ii=contour.xCoordinates.length;i<ii;i++)contour.xCoordinates[i]=Math.round(x+(contour.xCoordinates[i]-x)*factor)}}class CompositeGlyph{constructor({flags,glyphIndex,argument1,argument2,transf,instructions}){this.flags=flags,this.glyphIndex=glyphIndex,this.argument1=argument1,this.argument2=argument2,this.transf=transf,this.instructions=instructions}static parse(pos,glyf){const spos=pos,transf=[];let flags=glyf.getUint16(pos);const glyphIndex=glyf.getUint16(pos+2);let argument1,argument2;pos+=4,1&flags?(2&flags?(argument1=glyf.getInt16(pos),argument2=glyf.getInt16(pos+2)):(argument1=glyf.getUint16(pos),argument2=glyf.getUint16(pos+2)),pos+=4,flags^=1):(2&flags?(argument1=glyf.getInt8(pos),argument2=glyf.getInt8(pos+1)):(argument1=glyf.getUint8(pos),argument2=glyf.getUint8(pos+1)),pos+=2),8&flags?(transf.push(glyf.getUint16(pos)),pos+=2):64&flags?(transf.push(glyf.getUint16(pos),glyf.getUint16(pos+2)),pos+=4):128&flags&&(transf.push(glyf.getUint16(pos),glyf.getUint16(pos+2),glyf.getUint16(pos+4),glyf.getUint16(pos+6)),pos+=8);let instructions=null;if(256&flags){const instructionLength=glyf.getUint16(pos);pos+=2,instructions=new Uint8Array(glyf).slice(pos,pos+instructionLength),pos+=instructionLength}return[pos-spos,new CompositeGlyph({flags,glyphIndex,argument1,argument2,transf,instructions})]}getSize(){let size=4+2*this.transf.length;return 256&this.flags&&(size+=2+this.instructions.length),size+=2,2&this.flags?this.argument1>=-128&&this.argument1<=127&&this.argument2>=-128&&this.argument2<=127||(size+=2):this.argument1>=0&&this.argument1<=255&&this.argument2>=0&&this.argument2<=255||(size+=2),size}write(pos,buf){const spos=pos;return 2&this.flags?this.argument1>=-128&&this.argument1<=127&&this.argument2>=-128&&this.argument2<=127||(this.flags|=1):this.argument1>=0&&this.argument1<=255&&this.argument2>=0&&this.argument2<=255||(this.flags|=1),buf.setUint16(pos,this.flags),buf.setUint16(pos+2,this.glyphIndex),pos+=4,1&this.flags?(2&this.flags?(buf.setInt16(pos,this.argument1),buf.setInt16(pos+2,this.argument2)):(buf.setUint16(pos,this.argument1),buf.setUint16(pos+2,this.argument2)),pos+=4):(buf.setUint8(pos,this.argument1),buf.setUint8(pos+1,this.argument2),pos+=2),256&this.flags&&(buf.setUint16(pos,this.instructions.length),pos+=2,this.instructions.length&&(new Uint8Array(buf.buffer,0,buf.buffer.byteLength).set(this.instructions,pos),pos+=this.instructions.length)),pos-spos}scale(x,factor){}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.OpenTypeFileBuilder=void 0;var _core_utils=__w_pdfjs_require__(6),_util=__w_pdfjs_require__(2);function writeInt16(dest,offset,num){dest[offset]=num>>8&255,dest[offset+1]=255&num}function writeInt32(dest,offset,num){dest[offset]=num>>24&255,dest[offset+1]=num>>16&255,dest[offset+2]=num>>8&255,dest[offset+3]=255&num}function writeData(dest,offset,data){if(data instanceof Uint8Array)dest.set(data,offset);else if("string"==typeof data)for(let i=0,ii=data.length;i<ii;i++)dest[offset++]=255&data.charCodeAt(i);else for(let i=0,ii=data.length;i<ii;i++)dest[offset++]=255&data[i]}class OpenTypeFileBuilder{constructor(sfnt){this.sfnt=sfnt,this.tables=Object.create(null)}static getSearchParams(entriesCount,entrySize){let maxPower2=1,log2=0;for(;(maxPower2^entriesCount)>maxPower2;)maxPower2<<=1,log2++;const searchRange=maxPower2*entrySize;return{range:searchRange,entry:log2,rangeShift:entrySize*entriesCount-searchRange}}toArray(){let sfnt=this.sfnt;const tables=this.tables,tablesNames=Object.keys(tables);tablesNames.sort();const numTables=tablesNames.length;let i,j,jj,table,tableName,offset=12+16*numTables;const tableOffsets=[offset];for(i=0;i<numTables;i++){table=tables[tablesNames[i]];offset+=(table.length+3&-4)>>>0,tableOffsets.push(offset)}const file=new Uint8Array(offset);for(i=0;i<numTables;i++)table=tables[tablesNames[i]],writeData(file,tableOffsets[i],table);"true"===sfnt&&(sfnt=(0,_util.string32)(65536)),file[0]=255&sfnt.charCodeAt(0),file[1]=255&sfnt.charCodeAt(1),file[2]=255&sfnt.charCodeAt(2),file[3]=255&sfnt.charCodeAt(3),writeInt16(file,4,numTables);const searchParams=OpenTypeFileBuilder.getSearchParams(numTables,16);for(writeInt16(file,6,searchParams.range),writeInt16(file,8,searchParams.entry),writeInt16(file,10,searchParams.rangeShift),offset=12,i=0;i<numTables;i++){tableName=tablesNames[i],file[offset]=255&tableName.charCodeAt(0),file[offset+1]=255&tableName.charCodeAt(1),file[offset+2]=255&tableName.charCodeAt(2),file[offset+3]=255&tableName.charCodeAt(3);let checksum=0;for(j=tableOffsets[i],jj=tableOffsets[i+1];j<jj;j+=4){checksum=checksum+(0,_core_utils.readUint32)(file,j)>>>0}writeInt32(file,offset+4,checksum),writeInt32(file,offset+8,tableOffsets[i]),writeInt32(file,offset+12,tables[tableName].length),offset+=16}return file}addTable(tag,data){if(tag in this.tables)throw new Error("Table "+tag+" already exists");this.tables[tag]=data}}exports.OpenTypeFileBuilder=OpenTypeFileBuilder},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Type1Font=void 0;var _cff_parser=__w_pdfjs_require__(35),_fonts_utils=__w_pdfjs_require__(38),_core_utils=__w_pdfjs_require__(6),_stream=__w_pdfjs_require__(10),_type1_parser=__w_pdfjs_require__(49),_util=__w_pdfjs_require__(2);function findBlock(streamBytes,signature,startIndex){const streamBytesLength=streamBytes.length,signatureLength=signature.length,scanLength=streamBytesLength-signatureLength;let i=startIndex,found=!1;for(;i<scanLength;){let j=0;for(;j<signatureLength&&streamBytes[i+j]===signature[j];)j++;if(j>=signatureLength){for(i+=j;i<streamBytesLength&&(0,_core_utils.isWhiteSpace)(streamBytes[i]);)i++;found=!0;break}i++}return{found,length:i}}exports.Type1Font=class Type1Font{constructor(name,file,properties){let headerBlockLength=properties.length1,eexecBlockLength=properties.length2,pfbHeader=file.peekBytes(6);const pfbHeaderPresent=128===pfbHeader[0]&&1===pfbHeader[1];pfbHeaderPresent&&(file.skip(6),headerBlockLength=pfbHeader[5]<<24|pfbHeader[4]<<16|pfbHeader[3]<<8|pfbHeader[2]);const headerBlock=function getHeaderBlock(stream,suggestedLength){const EEXEC_SIGNATURE=[101,101,120,101,99],streamStartPos=stream.pos;let headerBytes,headerBytesLength,block,actualLength;try{headerBytes=stream.getBytes(suggestedLength),headerBytesLength=headerBytes.length}catch(ex){}if(headerBytesLength===suggestedLength&&(block=findBlock(headerBytes,EEXEC_SIGNATURE,suggestedLength-2*EEXEC_SIGNATURE.length),block.found&&block.length===suggestedLength))return{stream:new _stream.Stream(headerBytes),length:suggestedLength};for((0,_util.warn)('Invalid "Length1" property in Type1 font -- trying to recover.'),stream.pos=streamStartPos;block=findBlock(stream.peekBytes(2048),EEXEC_SIGNATURE,0),0!==block.length;)if(stream.pos+=block.length,block.found){actualLength=stream.pos-streamStartPos;break}return stream.pos=streamStartPos,actualLength?{stream:new _stream.Stream(stream.getBytes(actualLength)),length:actualLength}:((0,_util.warn)('Unable to recover "Length1" property in Type1 font -- using as is.'),{stream:new _stream.Stream(stream.getBytes(suggestedLength)),length:suggestedLength})}(file,headerBlockLength);new _type1_parser.Type1Parser(headerBlock.stream,!1,_fonts_utils.SEAC_ANALYSIS_ENABLED).extractFontHeader(properties),pfbHeaderPresent&&(pfbHeader=file.getBytes(6),eexecBlockLength=pfbHeader[5]<<24|pfbHeader[4]<<16|pfbHeader[3]<<8|pfbHeader[2]);const eexecBlock=function getEexecBlock(stream,suggestedLength){const eexecBytes=stream.getBytes();return{stream:new _stream.Stream(eexecBytes),length:eexecBytes.length}}(file),data=new _type1_parser.Type1Parser(eexecBlock.stream,!0,_fonts_utils.SEAC_ANALYSIS_ENABLED).extractFontProgram(properties);for(const key in data.properties)properties[key]=data.properties[key];const charstrings=data.charstrings,type2Charstrings=this.getType2Charstrings(charstrings),subrs=this.getType2Subrs(data.subrs);this.charstrings=charstrings,this.data=this.wrap(name,type2Charstrings,this.charstrings,subrs,properties),this.seacs=this.getSeacs(data.charstrings)}get numGlyphs(){return this.charstrings.length+1}getCharset(){const charset=[".notdef"];for(const{glyphName}of this.charstrings)charset.push(glyphName);return charset}getGlyphMapping(properties){const charstrings=this.charstrings;if(properties.composite){const charCodeToGlyphId=Object.create(null);for(let glyphId=0,charstringsLen=charstrings.length;glyphId<charstringsLen;glyphId++){charCodeToGlyphId[properties.cMap.charCodeOf(glyphId)]=glyphId+1}return charCodeToGlyphId}const glyphNames=[".notdef"];let builtInEncoding,glyphId;for(glyphId=0;glyphId<charstrings.length;glyphId++)glyphNames.push(charstrings[glyphId].glyphName);const encoding=properties.builtInEncoding;if(encoding){builtInEncoding=Object.create(null);for(const charCode in encoding)glyphId=glyphNames.indexOf(encoding[charCode]),glyphId>=0&&(builtInEncoding[charCode]=glyphId)}return(0,_fonts_utils.type1FontGlyphMapping)(properties,builtInEncoding,glyphNames)}hasGlyphId(id){if(id<0||id>=this.numGlyphs)return!1;if(0===id)return!0;return this.charstrings[id-1].charstring.length>0}getSeacs(charstrings){const seacMap=[];for(let i=0,ii=charstrings.length;i<ii;i++){const charstring=charstrings[i];charstring.seac&&(seacMap[i+1]=charstring.seac)}return seacMap}getType2Charstrings(type1Charstrings){const type2Charstrings=[];for(let i=0,ii=type1Charstrings.length;i<ii;i++)type2Charstrings.push(type1Charstrings[i].charstring);return type2Charstrings}getType2Subrs(type1Subrs){let bias=0;const count=type1Subrs.length;bias=count<1133?107:count<33769?1131:32768;const type2Subrs=[];let i;for(i=0;i<bias;i++)type2Subrs.push([11]);for(i=0;i<count;i++)type2Subrs.push(type1Subrs[i]);return type2Subrs}wrap(name,glyphs,charstrings,subrs,properties){const cff=new _cff_parser.CFF;cff.header=new _cff_parser.CFFHeader(1,0,4,4),cff.names=[name];const topDict=new _cff_parser.CFFTopDict;topDict.setByName("version",391),topDict.setByName("Notice",392),topDict.setByName("FullName",393),topDict.setByName("FamilyName",394),topDict.setByName("Weight",395),topDict.setByName("Encoding",null),topDict.setByName("FontMatrix",properties.fontMatrix),topDict.setByName("FontBBox",properties.bbox),topDict.setByName("charset",null),topDict.setByName("CharStrings",null),topDict.setByName("Private",null),cff.topDict=topDict;const strings=new _cff_parser.CFFStrings;strings.add("Version 0.11"),strings.add("See original notice"),strings.add(name),strings.add(name),strings.add("Medium"),cff.strings=strings,cff.globalSubrIndex=new _cff_parser.CFFIndex;const count=glyphs.length,charsetArray=[".notdef"];let i,ii;for(i=0;i<count;i++){const glyphName=charstrings[i].glyphName;-1===_cff_parser.CFFStandardStrings.indexOf(glyphName)&&strings.add(glyphName),charsetArray.push(glyphName)}cff.charset=new _cff_parser.CFFCharset(!1,0,charsetArray);const charStringsIndex=new _cff_parser.CFFIndex;for(charStringsIndex.add([139,14]),i=0;i<count;i++)charStringsIndex.add(glyphs[i]);cff.charStrings=charStringsIndex;const privateDict=new _cff_parser.CFFPrivateDict;privateDict.setByName("Subrs",null);const fields=["BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StemSnapH","StemSnapV","BlueShift","BlueFuzz","BlueScale","LanguageGroup","ExpansionFactor","ForceBold","StdHW","StdVW"];for(i=0,ii=fields.length;i<ii;i++){const field=fields[i];if(!(field in properties.privateData))continue;const value=properties.privateData[field];if(Array.isArray(value))for(let j=value.length-1;j>0;j--)value[j]-=value[j-1];privateDict.setByName(field,value)}cff.topDict.privateDict=privateDict;const subrIndex=new _cff_parser.CFFIndex;for(i=0,ii=subrs.length;i<ii;i++)subrIndex.add(subrs[i]);privateDict.subrsIndex=subrIndex;return new _cff_parser.CFFCompiler(cff).compile()}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Type1Parser=void 0;var _encodings=__w_pdfjs_require__(37),_core_utils=__w_pdfjs_require__(6),_stream=__w_pdfjs_require__(10),_util=__w_pdfjs_require__(2);const COMMAND_MAP_vmoveto=[4],COMMAND_MAP_rlineto=[5],COMMAND_MAP_hlineto=[6],COMMAND_MAP_vlineto=[7],COMMAND_MAP_rrcurveto=[8],COMMAND_MAP_flex=[12,35],COMMAND_MAP_endchar=[14],COMMAND_MAP_rmoveto=[21],COMMAND_MAP_hmoveto=[22],COMMAND_MAP_vhcurveto=[30],COMMAND_MAP_hvcurveto=[31];class Type1CharString{constructor(){this.width=0,this.lsb=0,this.flexing=!1,this.output=[],this.stack=[]}convert(encoded,subrs,seacAnalysisEnabled){const count=encoded.length;let wx,sbx,subrNumber,error=!1;for(let i=0;i<count;i++){let value=encoded[i];if(value<32){switch(12===value&&(value=(value<<8)+encoded[++i]),value){case 1:case 3:case 9:case 3072:case 3073:case 3074:case 3105:this.stack=[];break;case 4:if(this.flexing){if(this.stack.length<1){error=!0;break}const dy=this.stack.pop();this.stack.push(0,dy);break}error=this.executeCommand(1,COMMAND_MAP_vmoveto);break;case 5:error=this.executeCommand(2,COMMAND_MAP_rlineto);break;case 6:error=this.executeCommand(1,COMMAND_MAP_hlineto);break;case 7:error=this.executeCommand(1,COMMAND_MAP_vlineto);break;case 8:error=this.executeCommand(6,COMMAND_MAP_rrcurveto);break;case 10:if(this.stack.length<1){error=!0;break}if(subrNumber=this.stack.pop(),!subrs[subrNumber]){error=!0;break}error=this.convert(subrs[subrNumber],subrs,seacAnalysisEnabled);break;case 11:return error;case 13:if(this.stack.length<2){error=!0;break}wx=this.stack.pop(),sbx=this.stack.pop(),this.lsb=sbx,this.width=wx,this.stack.push(wx,sbx),error=this.executeCommand(2,COMMAND_MAP_hmoveto);break;case 14:this.output.push(COMMAND_MAP_endchar[0]);break;case 21:if(this.flexing)break;error=this.executeCommand(2,COMMAND_MAP_rmoveto);break;case 22:if(this.flexing){this.stack.push(0);break}error=this.executeCommand(1,COMMAND_MAP_hmoveto);break;case 30:error=this.executeCommand(4,COMMAND_MAP_vhcurveto);break;case 31:error=this.executeCommand(4,COMMAND_MAP_hvcurveto);break;case 3078:if(seacAnalysisEnabled){const asb=this.stack.at(-5);this.seac=this.stack.splice(-4,4),this.seac[0]+=this.lsb-asb,error=this.executeCommand(0,COMMAND_MAP_endchar)}else error=this.executeCommand(4,COMMAND_MAP_endchar);break;case 3079:if(this.stack.length<4){error=!0;break}this.stack.pop(),wx=this.stack.pop();const sby=this.stack.pop();sbx=this.stack.pop(),this.lsb=sbx,this.width=wx,this.stack.push(wx,sbx,sby),error=this.executeCommand(3,COMMAND_MAP_rmoveto);break;case 3084:if(this.stack.length<2){error=!0;break}const num2=this.stack.pop(),num1=this.stack.pop();this.stack.push(num1/num2);break;case 3088:if(this.stack.length<2){error=!0;break}subrNumber=this.stack.pop();const numArgs=this.stack.pop();if(0===subrNumber&&3===numArgs){const flexArgs=this.stack.splice(this.stack.length-17,17);this.stack.push(flexArgs[2]+flexArgs[0],flexArgs[3]+flexArgs[1],flexArgs[4],flexArgs[5],flexArgs[6],flexArgs[7],flexArgs[8],flexArgs[9],flexArgs[10],flexArgs[11],flexArgs[12],flexArgs[13],flexArgs[14]),error=this.executeCommand(13,COMMAND_MAP_flex,!0),this.flexing=!1,this.stack.push(flexArgs[15],flexArgs[16])}else 1===subrNumber&&0===numArgs&&(this.flexing=!0);break;case 3089:break;default:(0,_util.warn)('Unknown type 1 charstring command of "'+value+'"')}if(error)break}else value<=246?value-=139:value=value<=250?256*(value-247)+encoded[++i]+108:value<=254?-256*(value-251)-encoded[++i]-108:(255&encoded[++i])<<24|(255&encoded[++i])<<16|(255&encoded[++i])<<8|(255&encoded[++i])<<0,this.stack.push(value)}return error}executeCommand(howManyArgs,command,keepStack){const stackLength=this.stack.length;if(howManyArgs>stackLength)return!0;const start=stackLength-howManyArgs;for(let i=start;i<stackLength;i++){let value=this.stack[i];Number.isInteger(value)?this.output.push(28,value>>8&255,255&value):(value=65536*value|0,this.output.push(255,value>>24&255,value>>16&255,value>>8&255,255&value))}return this.output.push(...command),keepStack?this.stack.splice(start,howManyArgs):this.stack.length=0,!1}}function isHexDigit(code){return code>=48&&code<=57||code>=65&&code<=70||code>=97&&code<=102}function decrypt(data,key,discardNumber){if(discardNumber>=data.length)return new Uint8Array(0);let i,j,r=0|key;for(i=0;i<discardNumber;i++)r=52845*(data[i]+r)+22719&65535;const count=data.length-discardNumber,decrypted=new Uint8Array(count);for(i=discardNumber,j=0;j<count;i++,j++){const value=data[i];decrypted[j]=value^r>>8,r=52845*(value+r)+22719&65535}return decrypted}function isSpecial(c){return 47===c||91===c||93===c||123===c||125===c||40===c||41===c}exports.Type1Parser=class Type1Parser{constructor(stream,encrypted,seacAnalysisEnabled){if(encrypted){const data=stream.getBytes(),isBinary=!((isHexDigit(data[0])||(0,_core_utils.isWhiteSpace)(data[0]))&&isHexDigit(data[1])&&isHexDigit(data[2])&&isHexDigit(data[3])&&isHexDigit(data[4])&&isHexDigit(data[5])&&isHexDigit(data[6])&&isHexDigit(data[7]));stream=new _stream.Stream(isBinary?decrypt(data,55665,4):function decryptAscii(data,key,discardNumber){let r=0|key;const count=data.length,decrypted=new Uint8Array(count>>>1);let i,j;for(i=0,j=0;i<count;i++){const digit1=data[i];if(!isHexDigit(digit1))continue;let digit2;for(i++;i<count&&!isHexDigit(digit2=data[i]);)i++;if(i<count){const value=parseInt(String.fromCharCode(digit1,digit2),16);decrypted[j++]=value^r>>8,r=52845*(value+r)+22719&65535}}return decrypted.slice(discardNumber,j)}(data,55665,4))}this.seacAnalysisEnabled=!!seacAnalysisEnabled,this.stream=stream,this.nextChar()}readNumberArray(){this.getToken();const array=[];for(;;){const token=this.getToken();if(null===token||"]"===token||"}"===token)break;array.push(parseFloat(token||0))}return array}readNumber(){const token=this.getToken();return parseFloat(token||0)}readInt(){const token=this.getToken();return 0|parseInt(token||0,10)}readBoolean(){return"true"===this.getToken()?1:0}nextChar(){return this.currentChar=this.stream.getByte()}prevChar(){return this.stream.skip(-2),this.currentChar=this.stream.getByte()}getToken(){let comment=!1,ch=this.currentChar;for(;;){if(-1===ch)return null;if(comment)10!==ch&&13!==ch||(comment=!1);else if(37===ch)comment=!0;else if(!(0,_core_utils.isWhiteSpace)(ch))break;ch=this.nextChar()}if(isSpecial(ch))return this.nextChar(),String.fromCharCode(ch);let token="";do{token+=String.fromCharCode(ch),ch=this.nextChar()}while(ch>=0&&!(0,_core_utils.isWhiteSpace)(ch)&&!isSpecial(ch));return token}readCharStrings(bytes,lenIV){return-1===lenIV?bytes:decrypt(bytes,4330,lenIV)}extractFontProgram(properties){const stream=this.stream,subrs=[],charstrings=[],privateData=Object.create(null);privateData.lenIV=4;const program={subrs:[],charstrings:[],properties:{privateData}};let token,length,data,lenIV;for(;null!==(token=this.getToken());)if("/"===token)switch(token=this.getToken(),token){case"CharStrings":for(this.getToken(),this.getToken(),this.getToken(),this.getToken();token=this.getToken(),null!==token&&"end"!==token;){if("/"!==token)continue;const glyph=this.getToken();length=this.readInt(),this.getToken(),data=length>0?stream.getBytes(length):new Uint8Array(0),lenIV=program.properties.privateData.lenIV;const encoded=this.readCharStrings(data,lenIV);this.nextChar(),token=this.getToken(),"noaccess"===token?this.getToken():"/"===token&&this.prevChar(),charstrings.push({glyph,encoded})}break;case"Subrs":for(this.readInt(),this.getToken();"dup"===this.getToken();){const index=this.readInt();length=this.readInt(),this.getToken(),data=length>0?stream.getBytes(length):new Uint8Array(0),lenIV=program.properties.privateData.lenIV;const encoded=this.readCharStrings(data,lenIV);this.nextChar(),token=this.getToken(),"noaccess"===token&&this.getToken(),subrs[index]=encoded}break;case"BlueValues":case"OtherBlues":case"FamilyBlues":case"FamilyOtherBlues":const blueArray=this.readNumberArray();blueArray.length>0&&blueArray.length,0;break;case"StemSnapH":case"StemSnapV":program.properties.privateData[token]=this.readNumberArray();break;case"StdHW":case"StdVW":program.properties.privateData[token]=this.readNumberArray()[0];break;case"BlueShift":case"lenIV":case"BlueFuzz":case"BlueScale":case"LanguageGroup":case"ExpansionFactor":program.properties.privateData[token]=this.readNumber();break;case"ForceBold":program.properties.privateData[token]=this.readBoolean()}for(const{encoded,glyph}of charstrings){const charString=new Type1CharString,error=charString.convert(encoded,subrs,this.seacAnalysisEnabled);let output=charString.output;error&&(output=[14]);const charStringObject={glyphName:glyph,charstring:output,width:charString.width,lsb:charString.lsb,seac:charString.seac};if(".notdef"===glyph?program.charstrings.unshift(charStringObject):program.charstrings.push(charStringObject),properties.builtInEncoding){const index=properties.builtInEncoding.indexOf(glyph);index>-1&&void 0===properties.widths[index]&&index>=properties.firstChar&&index<=properties.lastChar&&(properties.widths[index]=charString.width)}}return program}extractFontHeader(properties){let token;for(;null!==(token=this.getToken());)if("/"===token)switch(token=this.getToken(),token){case"FontMatrix":const matrix=this.readNumberArray();properties.fontMatrix=matrix;break;case"Encoding":const encodingArg=this.getToken();let encoding;if(/^\d+$/.test(encodingArg)){encoding=[];const size=0|parseInt(encodingArg,10);this.getToken();for(let j=0;j<size;j++){for(token=this.getToken();"dup"!==token&&"def"!==token;)if(token=this.getToken(),null===token)return;if("def"===token)break;const index=this.readInt();this.getToken();const glyph=this.getToken();encoding[index]=glyph,this.getToken()}}else encoding=(0,_encodings.getEncoding)(encodingArg);properties.builtInEncoding=encoding;break;case"FontBBox":const fontBBox=this.readNumberArray();properties.ascent=Math.max(fontBBox[3],fontBBox[1]),properties.descent=Math.min(fontBBox[1],fontBBox[3]),properties.ascentScaled=!0}}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Pattern=void 0,exports.getTilingPatternIR=function getTilingPatternIR(operatorList,dict,color){const matrix=dict.getArray("Matrix"),bbox=_util.Util.normalizeRect(dict.getArray("BBox")),xstep=dict.get("XStep"),ystep=dict.get("YStep"),paintType=dict.get("PaintType"),tilingType=dict.get("TilingType");if(bbox[2]-bbox[0]==0||bbox[3]-bbox[1]==0)throw new _util.FormatError(`Invalid getTilingPatternIR /BBox array: [${bbox}].`);return["TilingPattern",color,operatorList,matrix,bbox,xstep,ystep,paintType,tilingType]};var _util=__w_pdfjs_require__(2),_base_stream=__w_pdfjs_require__(7),_colorspace=__w_pdfjs_require__(14),_core_utils=__w_pdfjs_require__(6);const ShadingType_AXIAL=2,ShadingType_RADIAL=3,ShadingType_FREE_FORM_MESH=4,ShadingType_LATTICE_FORM_MESH=5,ShadingType_COONS_PATCH_MESH=6,ShadingType_TENSOR_PATCH_MESH=7;exports.Pattern=class Pattern{constructor(){(0,_util.unreachable)("Cannot initialize Pattern.")}static parseShading(shading,xref,res,handler,pdfFunctionFactory,localColorSpaceCache){const dict=shading instanceof _base_stream.BaseStream?shading.dict:shading,type=dict.get("ShadingType");try{switch(type){case ShadingType_AXIAL:case ShadingType_RADIAL:return new RadialAxialShading(dict,xref,res,pdfFunctionFactory,localColorSpaceCache);case ShadingType_FREE_FORM_MESH:case ShadingType_LATTICE_FORM_MESH:case ShadingType_COONS_PATCH_MESH:case ShadingType_TENSOR_PATCH_MESH:return new MeshShading(shading,xref,res,pdfFunctionFactory,localColorSpaceCache);default:throw new _util.FormatError("Unsupported ShadingType: "+type)}}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;return handler.send("UnsupportedFeature",{featureId:_util.UNSUPPORTED_FEATURES.shadingPattern}),(0,_util.warn)(ex),new DummyShading}}};class BaseShading{static get SMALL_NUMBER(){return(0,_util.shadow)(this,"SMALL_NUMBER",1e-6)}constructor(){this.constructor===BaseShading&&(0,_util.unreachable)("Cannot initialize BaseShading.")}getIR(){(0,_util.unreachable)("Abstract method `getIR` called.")}}class RadialAxialShading extends BaseShading{constructor(dict,xref,resources,pdfFunctionFactory,localColorSpaceCache){super(),this.coordsArr=dict.getArray("Coords"),this.shadingType=dict.get("ShadingType");const cs=_colorspace.ColorSpace.parse({cs:dict.getRaw("CS")||dict.getRaw("ColorSpace"),xref,resources,pdfFunctionFactory,localColorSpaceCache}),bbox=dict.getArray("BBox");Array.isArray(bbox)&&4===bbox.length?this.bbox=_util.Util.normalizeRect(bbox):this.bbox=null;let t0=0,t1=1;if(dict.has("Domain")){const domainArr=dict.getArray("Domain");t0=domainArr[0],t1=domainArr[1]}let extendStart=!1,extendEnd=!1;if(dict.has("Extend")){const extendArr=dict.getArray("Extend");extendStart=extendArr[0],extendEnd=extendArr[1]}if(!(this.shadingType!==ShadingType_RADIAL||extendStart&&extendEnd)){const[x1,y1,r1,x2,y2,r2]=this.coordsArr,distance=Math.hypot(x1-x2,y1-y2);r1<=r2+distance&&r2<=r1+distance&&(0,_util.warn)("Unsupported radial gradient.")}this.extendStart=extendStart,this.extendEnd=extendEnd;const fnObj=dict.getRaw("Function"),fn=pdfFunctionFactory.createFromArray(fnObj),step=(t1-t0)/10,colorStops=this.colorStops=[];if(t0>=t1||step<=0)return void(0,_util.info)("Bad shading domain.");const color=new Float32Array(cs.numComps),ratio=new Float32Array(1);let rgbColor;for(let i=0;i<=10;i++){ratio[0]=t0+i*step,fn(ratio,0,color,0),rgbColor=cs.getRgb(color,0);const cssColor=_util.Util.makeHexColor(rgbColor[0],rgbColor[1],rgbColor[2]);colorStops.push([i/10,cssColor])}let background="transparent";dict.has("Background")&&(rgbColor=cs.getRgb(dict.get("Background"),0),background=_util.Util.makeHexColor(rgbColor[0],rgbColor[1],rgbColor[2])),extendStart||(colorStops.unshift([0,background]),colorStops[1][0]+=BaseShading.SMALL_NUMBER),extendEnd||(colorStops.at(-1)[0]-=BaseShading.SMALL_NUMBER,colorStops.push([1,background])),this.colorStops=colorStops}getIR(){const coordsArr=this.coordsArr,shadingType=this.shadingType;let type,p0,p1,r0,r1;return shadingType===ShadingType_AXIAL?(p0=[coordsArr[0],coordsArr[1]],p1=[coordsArr[2],coordsArr[3]],r0=null,r1=null,type="axial"):shadingType===ShadingType_RADIAL?(p0=[coordsArr[0],coordsArr[1]],p1=[coordsArr[3],coordsArr[4]],r0=coordsArr[2],r1=coordsArr[5],type="radial"):(0,_util.unreachable)(`getPattern type unknown: ${shadingType}`),["RadialAxial",type,this.bbox,this.colorStops,p0,p1,r0,r1]}}class MeshStreamReader{constructor(stream,context){this.stream=stream,this.context=context,this.buffer=0,this.bufferLength=0;const numComps=context.numComps;this.tmpCompsBuf=new Float32Array(numComps);const csNumComps=context.colorSpace.numComps;this.tmpCsCompsBuf=context.colorFn?new Float32Array(csNumComps):this.tmpCompsBuf}get hasData(){if(this.stream.end)return this.stream.pos<this.stream.end;if(this.bufferLength>0)return!0;const nextByte=this.stream.getByte();return!(nextByte<0)&&(this.buffer=nextByte,this.bufferLength=8,!0)}readBits(n){let buffer=this.buffer,bufferLength=this.bufferLength;if(32===n){if(0===bufferLength)return(this.stream.getByte()<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte())>>>0;buffer=buffer<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte();const nextByte=this.stream.getByte();return this.buffer=nextByte&(1<<bufferLength)-1,(buffer<<8-bufferLength|(255&nextByte)>>bufferLength)>>>0}if(8===n&&0===bufferLength)return this.stream.getByte();for(;bufferLength<n;)buffer=buffer<<8|this.stream.getByte(),bufferLength+=8;return bufferLength-=n,this.bufferLength=bufferLength,this.buffer=buffer&(1<<bufferLength)-1,buffer>>bufferLength}align(){this.buffer=0,this.bufferLength=0}readFlag(){return this.readBits(this.context.bitsPerFlag)}readCoordinate(){const bitsPerCoordinate=this.context.bitsPerCoordinate,xi=this.readBits(bitsPerCoordinate),yi=this.readBits(bitsPerCoordinate),decode=this.context.decode,scale=bitsPerCoordinate<32?1/((1<<bitsPerCoordinate)-1):2.3283064365386963e-10;return[xi*scale*(decode[1]-decode[0])+decode[0],yi*scale*(decode[3]-decode[2])+decode[2]]}readComponents(){const numComps=this.context.numComps,bitsPerComponent=this.context.bitsPerComponent,scale=bitsPerComponent<32?1/((1<<bitsPerComponent)-1):2.3283064365386963e-10,decode=this.context.decode,components=this.tmpCompsBuf;for(let i=0,j=4;i<numComps;i++,j+=2){const ci=this.readBits(bitsPerComponent);components[i]=ci*scale*(decode[j+1]-decode[j])+decode[j]}const color=this.tmpCsCompsBuf;return this.context.colorFn&&this.context.colorFn(components,0,color,0),this.context.colorSpace.getRgb(color,0)}}const getB=function getBClosure(){const cache=[];return function(count){return cache[count]||(cache[count]=function buildB(count){const lut=[];for(let i=0;i<=count;i++){const t=i/count,t_=1-t;lut.push(new Float32Array([t_*t_*t_,3*t*t_*t_,3*t*t*t_,t*t*t]))}return lut}(count)),cache[count]}}();class MeshShading extends BaseShading{static get MIN_SPLIT_PATCH_CHUNKS_AMOUNT(){return(0,_util.shadow)(this,"MIN_SPLIT_PATCH_CHUNKS_AMOUNT",3)}static get MAX_SPLIT_PATCH_CHUNKS_AMOUNT(){return(0,_util.shadow)(this,"MAX_SPLIT_PATCH_CHUNKS_AMOUNT",20)}static get TRIANGLE_DENSITY(){return(0,_util.shadow)(this,"TRIANGLE_DENSITY",20)}constructor(stream,xref,resources,pdfFunctionFactory,localColorSpaceCache){if(super(),!(stream instanceof _base_stream.BaseStream))throw new _util.FormatError("Mesh data is not a stream");const dict=stream.dict;this.shadingType=dict.get("ShadingType");const bbox=dict.getArray("BBox");Array.isArray(bbox)&&4===bbox.length?this.bbox=_util.Util.normalizeRect(bbox):this.bbox=null;const cs=_colorspace.ColorSpace.parse({cs:dict.getRaw("CS")||dict.getRaw("ColorSpace"),xref,resources,pdfFunctionFactory,localColorSpaceCache});this.background=dict.has("Background")?cs.getRgb(dict.get("Background"),0):null;const fnObj=dict.getRaw("Function"),fn=fnObj?pdfFunctionFactory.createFromArray(fnObj):null;this.coords=[],this.colors=[],this.figures=[];const decodeContext={bitsPerCoordinate:dict.get("BitsPerCoordinate"),bitsPerComponent:dict.get("BitsPerComponent"),bitsPerFlag:dict.get("BitsPerFlag"),decode:dict.getArray("Decode"),colorFn:fn,colorSpace:cs,numComps:fn?1:cs.numComps},reader=new MeshStreamReader(stream,decodeContext);let patchMesh=!1;switch(this.shadingType){case ShadingType_FREE_FORM_MESH:this._decodeType4Shading(reader);break;case ShadingType_LATTICE_FORM_MESH:const verticesPerRow=0|dict.get("VerticesPerRow");if(verticesPerRow<2)throw new _util.FormatError("Invalid VerticesPerRow");this._decodeType5Shading(reader,verticesPerRow);break;case ShadingType_COONS_PATCH_MESH:this._decodeType6Shading(reader),patchMesh=!0;break;case ShadingType_TENSOR_PATCH_MESH:this._decodeType7Shading(reader),patchMesh=!0;break;default:(0,_util.unreachable)("Unsupported mesh type.")}if(patchMesh){this._updateBounds();for(let i=0,ii=this.figures.length;i<ii;i++)this._buildFigureFromPatch(i)}this._updateBounds(),this._packData()}_decodeType4Shading(reader){const coords=this.coords,colors=this.colors,operators=[],ps=[];let verticesLeft=0;for(;reader.hasData;){const f=reader.readFlag(),coord=reader.readCoordinate(),color=reader.readComponents();if(0===verticesLeft){if(!(0<=f&&f<=2))throw new _util.FormatError("Unknown type4 flag");switch(f){case 0:verticesLeft=3;break;case 1:ps.push(ps.at(-2),ps.at(-1)),verticesLeft=1;break;case 2:ps.push(ps.at(-3),ps.at(-1)),verticesLeft=1}operators.push(f)}ps.push(coords.length),coords.push(coord),colors.push(color),verticesLeft--,reader.align()}this.figures.push({type:"triangles",coords:new Int32Array(ps),colors:new Int32Array(ps)})}_decodeType5Shading(reader,verticesPerRow){const coords=this.coords,colors=this.colors,ps=[];for(;reader.hasData;){const coord=reader.readCoordinate(),color=reader.readComponents();ps.push(coords.length),coords.push(coord),colors.push(color)}this.figures.push({type:"lattice",coords:new Int32Array(ps),colors:new Int32Array(ps),verticesPerRow})}_decodeType6Shading(reader){const coords=this.coords,colors=this.colors,ps=new Int32Array(16),cs=new Int32Array(4);for(;reader.hasData;){const f=reader.readFlag();if(!(0<=f&&f<=3))throw new _util.FormatError("Unknown type6 flag");const pi=coords.length;for(let i=0,ii=0!==f?8:12;i<ii;i++)coords.push(reader.readCoordinate());const ci=colors.length;for(let i=0,ii=0!==f?2:4;i<ii;i++)colors.push(reader.readComponents());let tmp1,tmp2,tmp3,tmp4;switch(f){case 0:ps[12]=pi+3,ps[13]=pi+4,ps[14]=pi+5,ps[15]=pi+6,ps[8]=pi+2,ps[11]=pi+7,ps[4]=pi+1,ps[7]=pi+8,ps[0]=pi,ps[1]=pi+11,ps[2]=pi+10,ps[3]=pi+9,cs[2]=ci+1,cs[3]=ci+2,cs[0]=ci,cs[1]=ci+3;break;case 1:tmp1=ps[12],tmp2=ps[13],tmp3=ps[14],tmp4=ps[15],ps[12]=tmp4,ps[13]=pi+0,ps[14]=pi+1,ps[15]=pi+2,ps[8]=tmp3,ps[11]=pi+3,ps[4]=tmp2,ps[7]=pi+4,ps[0]=tmp1,ps[1]=pi+7,ps[2]=pi+6,ps[3]=pi+5,tmp1=cs[2],tmp2=cs[3],cs[2]=tmp2,cs[3]=ci,cs[0]=tmp1,cs[1]=ci+1;break;case 2:tmp1=ps[15],tmp2=ps[11],ps[12]=ps[3],ps[13]=pi+0,ps[14]=pi+1,ps[15]=pi+2,ps[8]=ps[7],ps[11]=pi+3,ps[4]=tmp2,ps[7]=pi+4,ps[0]=tmp1,ps[1]=pi+7,ps[2]=pi+6,ps[3]=pi+5,tmp1=cs[3],cs[2]=cs[1],cs[3]=ci,cs[0]=tmp1,cs[1]=ci+1;break;case 3:ps[12]=ps[0],ps[13]=pi+0,ps[14]=pi+1,ps[15]=pi+2,ps[8]=ps[1],ps[11]=pi+3,ps[4]=ps[2],ps[7]=pi+4,ps[0]=ps[3],ps[1]=pi+7,ps[2]=pi+6,ps[3]=pi+5,cs[2]=cs[0],cs[3]=ci,cs[0]=cs[1],cs[1]=ci+1}ps[5]=coords.length,coords.push([(-4*coords[ps[0]][0]-coords[ps[15]][0]+6*(coords[ps[4]][0]+coords[ps[1]][0])-2*(coords[ps[12]][0]+coords[ps[3]][0])+3*(coords[ps[13]][0]+coords[ps[7]][0]))/9,(-4*coords[ps[0]][1]-coords[ps[15]][1]+6*(coords[ps[4]][1]+coords[ps[1]][1])-2*(coords[ps[12]][1]+coords[ps[3]][1])+3*(coords[ps[13]][1]+coords[ps[7]][1]))/9]),ps[6]=coords.length,coords.push([(-4*coords[ps[3]][0]-coords[ps[12]][0]+6*(coords[ps[2]][0]+coords[ps[7]][0])-2*(coords[ps[0]][0]+coords[ps[15]][0])+3*(coords[ps[4]][0]+coords[ps[14]][0]))/9,(-4*coords[ps[3]][1]-coords[ps[12]][1]+6*(coords[ps[2]][1]+coords[ps[7]][1])-2*(coords[ps[0]][1]+coords[ps[15]][1])+3*(coords[ps[4]][1]+coords[ps[14]][1]))/9]),ps[9]=coords.length,coords.push([(-4*coords[ps[12]][0]-coords[ps[3]][0]+6*(coords[ps[8]][0]+coords[ps[13]][0])-2*(coords[ps[0]][0]+coords[ps[15]][0])+3*(coords[ps[11]][0]+coords[ps[1]][0]))/9,(-4*coords[ps[12]][1]-coords[ps[3]][1]+6*(coords[ps[8]][1]+coords[ps[13]][1])-2*(coords[ps[0]][1]+coords[ps[15]][1])+3*(coords[ps[11]][1]+coords[ps[1]][1]))/9]),ps[10]=coords.length,coords.push([(-4*coords[ps[15]][0]-coords[ps[0]][0]+6*(coords[ps[11]][0]+coords[ps[14]][0])-2*(coords[ps[12]][0]+coords[ps[3]][0])+3*(coords[ps[2]][0]+coords[ps[8]][0]))/9,(-4*coords[ps[15]][1]-coords[ps[0]][1]+6*(coords[ps[11]][1]+coords[ps[14]][1])-2*(coords[ps[12]][1]+coords[ps[3]][1])+3*(coords[ps[2]][1]+coords[ps[8]][1]))/9]),this.figures.push({type:"patch",coords:new Int32Array(ps),colors:new Int32Array(cs)})}}_decodeType7Shading(reader){const coords=this.coords,colors=this.colors,ps=new Int32Array(16),cs=new Int32Array(4);for(;reader.hasData;){const f=reader.readFlag();if(!(0<=f&&f<=3))throw new _util.FormatError("Unknown type7 flag");const pi=coords.length;for(let i=0,ii=0!==f?12:16;i<ii;i++)coords.push(reader.readCoordinate());const ci=colors.length;for(let i=0,ii=0!==f?2:4;i<ii;i++)colors.push(reader.readComponents());let tmp1,tmp2,tmp3,tmp4;switch(f){case 0:ps[12]=pi+3,ps[13]=pi+4,ps[14]=pi+5,ps[15]=pi+6,ps[8]=pi+2,ps[9]=pi+13,ps[10]=pi+14,ps[11]=pi+7,ps[4]=pi+1,ps[5]=pi+12,ps[6]=pi+15,ps[7]=pi+8,ps[0]=pi,ps[1]=pi+11,ps[2]=pi+10,ps[3]=pi+9,cs[2]=ci+1,cs[3]=ci+2,cs[0]=ci,cs[1]=ci+3;break;case 1:tmp1=ps[12],tmp2=ps[13],tmp3=ps[14],tmp4=ps[15],ps[12]=tmp4,ps[13]=pi+0,ps[14]=pi+1,ps[15]=pi+2,ps[8]=tmp3,ps[9]=pi+9,ps[10]=pi+10,ps[11]=pi+3,ps[4]=tmp2,ps[5]=pi+8,ps[6]=pi+11,ps[7]=pi+4,ps[0]=tmp1,ps[1]=pi+7,ps[2]=pi+6,ps[3]=pi+5,tmp1=cs[2],tmp2=cs[3],cs[2]=tmp2,cs[3]=ci,cs[0]=tmp1,cs[1]=ci+1;break;case 2:tmp1=ps[15],tmp2=ps[11],ps[12]=ps[3],ps[13]=pi+0,ps[14]=pi+1,ps[15]=pi+2,ps[8]=ps[7],ps[9]=pi+9,ps[10]=pi+10,ps[11]=pi+3,ps[4]=tmp2,ps[5]=pi+8,ps[6]=pi+11,ps[7]=pi+4,ps[0]=tmp1,ps[1]=pi+7,ps[2]=pi+6,ps[3]=pi+5,tmp1=cs[3],cs[2]=cs[1],cs[3]=ci,cs[0]=tmp1,cs[1]=ci+1;break;case 3:ps[12]=ps[0],ps[13]=pi+0,ps[14]=pi+1,ps[15]=pi+2,ps[8]=ps[1],ps[9]=pi+9,ps[10]=pi+10,ps[11]=pi+3,ps[4]=ps[2],ps[5]=pi+8,ps[6]=pi+11,ps[7]=pi+4,ps[0]=ps[3],ps[1]=pi+7,ps[2]=pi+6,ps[3]=pi+5,cs[2]=cs[0],cs[3]=ci,cs[0]=cs[1],cs[1]=ci+1}this.figures.push({type:"patch",coords:new Int32Array(ps),colors:new Int32Array(cs)})}}_buildFigureFromPatch(index){const figure=this.figures[index];(0,_util.assert)("patch"===figure.type,"Unexpected patch mesh figure");const coords=this.coords,colors=this.colors,pi=figure.coords,ci=figure.colors,figureMinX=Math.min(coords[pi[0]][0],coords[pi[3]][0],coords[pi[12]][0],coords[pi[15]][0]),figureMinY=Math.min(coords[pi[0]][1],coords[pi[3]][1],coords[pi[12]][1],coords[pi[15]][1]),figureMaxX=Math.max(coords[pi[0]][0],coords[pi[3]][0],coords[pi[12]][0],coords[pi[15]][0]),figureMaxY=Math.max(coords[pi[0]][1],coords[pi[3]][1],coords[pi[12]][1],coords[pi[15]][1]);let splitXBy=Math.ceil((figureMaxX-figureMinX)*MeshShading.TRIANGLE_DENSITY/(this.bounds[2]-this.bounds[0]));splitXBy=Math.max(MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT,Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT,splitXBy));let splitYBy=Math.ceil((figureMaxY-figureMinY)*MeshShading.TRIANGLE_DENSITY/(this.bounds[3]-this.bounds[1]));splitYBy=Math.max(MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT,Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT,splitYBy));const verticesPerRow=splitXBy+1,figureCoords=new Int32Array((splitYBy+1)*verticesPerRow),figureColors=new Int32Array((splitYBy+1)*verticesPerRow);let k=0;const cl=new Uint8Array(3),cr=new Uint8Array(3),c0=colors[ci[0]],c1=colors[ci[1]],c2=colors[ci[2]],c3=colors[ci[3]],bRow=getB(splitYBy),bCol=getB(splitXBy);for(let row=0;row<=splitYBy;row++){cl[0]=(c0[0]*(splitYBy-row)+c2[0]*row)/splitYBy|0,cl[1]=(c0[1]*(splitYBy-row)+c2[1]*row)/splitYBy|0,cl[2]=(c0[2]*(splitYBy-row)+c2[2]*row)/splitYBy|0,cr[0]=(c1[0]*(splitYBy-row)+c3[0]*row)/splitYBy|0,cr[1]=(c1[1]*(splitYBy-row)+c3[1]*row)/splitYBy|0,cr[2]=(c1[2]*(splitYBy-row)+c3[2]*row)/splitYBy|0;for(let col=0;col<=splitXBy;col++,k++){if(!(0!==row&&row!==splitYBy||0!==col&&col!==splitXBy))continue;let x=0,y=0,q=0;for(let i=0;i<=3;i++)for(let j=0;j<=3;j++,q++){const m=bRow[row][i]*bCol[col][j];x+=coords[pi[q]][0]*m,y+=coords[pi[q]][1]*m}figureCoords[k]=coords.length,coords.push([x,y]),figureColors[k]=colors.length;const newColor=new Uint8Array(3);newColor[0]=(cl[0]*(splitXBy-col)+cr[0]*col)/splitXBy|0,newColor[1]=(cl[1]*(splitXBy-col)+cr[1]*col)/splitXBy|0,newColor[2]=(cl[2]*(splitXBy-col)+cr[2]*col)/splitXBy|0,colors.push(newColor)}}figureCoords[0]=pi[0],figureColors[0]=ci[0],figureCoords[splitXBy]=pi[3],figureColors[splitXBy]=ci[1],figureCoords[verticesPerRow*splitYBy]=pi[12],figureColors[verticesPerRow*splitYBy]=ci[2],figureCoords[verticesPerRow*splitYBy+splitXBy]=pi[15],figureColors[verticesPerRow*splitYBy+splitXBy]=ci[3],this.figures[index]={type:"lattice",coords:figureCoords,colors:figureColors,verticesPerRow}}_updateBounds(){let minX=this.coords[0][0],minY=this.coords[0][1],maxX=minX,maxY=minY;for(let i=1,ii=this.coords.length;i<ii;i++){const x=this.coords[i][0],y=this.coords[i][1];minX=minX>x?x:minX,minY=minY>y?y:minY,maxX=maxX<x?x:maxX,maxY=maxY<y?y:maxY}this.bounds=[minX,minY,maxX,maxY]}_packData(){let i,ii,j,jj;const coords=this.coords,coordsPacked=new Float32Array(2*coords.length);for(i=0,j=0,ii=coords.length;i<ii;i++){const xy=coords[i];coordsPacked[j++]=xy[0],coordsPacked[j++]=xy[1]}this.coords=coordsPacked;const colors=this.colors,colorsPacked=new Uint8Array(3*colors.length);for(i=0,j=0,ii=colors.length;i<ii;i++){const c=colors[i];colorsPacked[j++]=c[0],colorsPacked[j++]=c[1],colorsPacked[j++]=c[2]}this.colors=colorsPacked;const figures=this.figures;for(i=0,ii=figures.length;i<ii;i++){const figure=figures[i],ps=figure.coords,cs=figure.colors;for(j=0,jj=ps.length;j<jj;j++)ps[j]*=2,cs[j]*=3}}getIR(){return["Mesh",this.shadingType,this.coords,this.colors,this.figures,this.bounds,this.bbox,this.background]}}class DummyShading extends BaseShading{getIR(){return["Dummy"]}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getXfaFontDict=function getXfaFontDict(name){const widths=function getXfaFontWidths(name){const info=getXfaFontName(name);if(!info)return null;const{baseWidths,baseMapping,factors}=info;let rescaledBaseWidths;rescaledBaseWidths=factors?baseWidths.map(((w,i)=>w*factors[i])):baseWidths;let currentArray,currentCode=-2;const newWidths=[];for(const[unicode,glyphIndex]of baseMapping.map(((charUnicode,index)=>[charUnicode,index])).sort((([unicode1],[unicode2])=>unicode1-unicode2)))-1!==unicode&&(unicode===currentCode+1?(currentArray.push(rescaledBaseWidths[glyphIndex]),currentCode+=1):(currentCode=unicode,currentArray=[rescaledBaseWidths[glyphIndex]],newWidths.push(unicode,currentArray)));return newWidths}(name),dict=new _primitives.Dict(null);dict.set("BaseFont",_primitives.Name.get(name)),dict.set("Type",_primitives.Name.get("Font")),dict.set("Subtype",_primitives.Name.get("CIDFontType2")),dict.set("Encoding",_primitives.Name.get("Identity-H")),dict.set("CIDToGIDMap",_primitives.Name.get("Identity")),dict.set("W",widths),dict.set("FirstChar",widths[0]),dict.set("LastChar",widths.at(-2)+widths.at(-1).length-1);const descriptor=new _primitives.Dict(null);dict.set("FontDescriptor",descriptor);const systemInfo=new _primitives.Dict(null);return systemInfo.set("Ordering","Identity"),systemInfo.set("Registry","Adobe"),systemInfo.set("Supplement",0),dict.set("CIDSystemInfo",systemInfo),dict},exports.getXfaFontName=getXfaFontName;var _calibri_factors=__w_pdfjs_require__(52),_primitives=__w_pdfjs_require__(5),_helvetica_factors=__w_pdfjs_require__(53),_liberationsans_widths=__w_pdfjs_require__(54),_myriadpro_factors=__w_pdfjs_require__(55),_segoeui_factors=__w_pdfjs_require__(56),_core_utils=__w_pdfjs_require__(6),_fonts_utils=__w_pdfjs_require__(38);const getXFAFontMap=(0,_core_utils.getLookupTableFactory)((function(t){t["MyriadPro-Regular"]=t["PdfJS-Fallback-Regular"]={name:"LiberationSans-Regular",factors:_myriadpro_factors.MyriadProRegularFactors,baseWidths:_liberationsans_widths.LiberationSansRegularWidths,baseMapping:_liberationsans_widths.LiberationSansRegularMapping,metrics:_myriadpro_factors.MyriadProRegularMetrics},t["MyriadPro-Bold"]=t["PdfJS-Fallback-Bold"]={name:"LiberationSans-Bold",factors:_myriadpro_factors.MyriadProBoldFactors,baseWidths:_liberationsans_widths.LiberationSansBoldWidths,baseMapping:_liberationsans_widths.LiberationSansBoldMapping,metrics:_myriadpro_factors.MyriadProBoldMetrics},t["MyriadPro-It"]=t["MyriadPro-Italic"]=t["PdfJS-Fallback-Italic"]={name:"LiberationSans-Italic",factors:_myriadpro_factors.MyriadProItalicFactors,baseWidths:_liberationsans_widths.LiberationSansItalicWidths,baseMapping:_liberationsans_widths.LiberationSansItalicMapping,metrics:_myriadpro_factors.MyriadProItalicMetrics},t["MyriadPro-BoldIt"]=t["MyriadPro-BoldItalic"]=t["PdfJS-Fallback-BoldItalic"]={name:"LiberationSans-BoldItalic",factors:_myriadpro_factors.MyriadProBoldItalicFactors,baseWidths:_liberationsans_widths.LiberationSansBoldItalicWidths,baseMapping:_liberationsans_widths.LiberationSansBoldItalicMapping,metrics:_myriadpro_factors.MyriadProBoldItalicMetrics},t.ArialMT=t.Arial=t["Arial-Regular"]={name:"LiberationSans-Regular",baseWidths:_liberationsans_widths.LiberationSansRegularWidths,baseMapping:_liberationsans_widths.LiberationSansRegularMapping},t["Arial-BoldMT"]=t["Arial-Bold"]={name:"LiberationSans-Bold",baseWidths:_liberationsans_widths.LiberationSansBoldWidths,baseMapping:_liberationsans_widths.LiberationSansBoldMapping},t["Arial-ItalicMT"]=t["Arial-Italic"]={name:"LiberationSans-Italic",baseWidths:_liberationsans_widths.LiberationSansItalicWidths,baseMapping:_liberationsans_widths.LiberationSansItalicMapping},t["Arial-BoldItalicMT"]=t["Arial-BoldItalic"]={name:"LiberationSans-BoldItalic",baseWidths:_liberationsans_widths.LiberationSansBoldItalicWidths,baseMapping:_liberationsans_widths.LiberationSansBoldItalicMapping},t["Calibri-Regular"]={name:"LiberationSans-Regular",factors:_calibri_factors.CalibriRegularFactors,baseWidths:_liberationsans_widths.LiberationSansRegularWidths,baseMapping:_liberationsans_widths.LiberationSansRegularMapping,metrics:_calibri_factors.CalibriRegularMetrics},t["Calibri-Bold"]={name:"LiberationSans-Bold",factors:_calibri_factors.CalibriBoldFactors,baseWidths:_liberationsans_widths.LiberationSansBoldWidths,baseMapping:_liberationsans_widths.LiberationSansBoldMapping,metrics:_calibri_factors.CalibriBoldMetrics},t["Calibri-Italic"]={name:"LiberationSans-Italic",factors:_calibri_factors.CalibriItalicFactors,baseWidths:_liberationsans_widths.LiberationSansItalicWidths,baseMapping:_liberationsans_widths.LiberationSansItalicMapping,metrics:_calibri_factors.CalibriItalicMetrics},t["Calibri-BoldItalic"]={name:"LiberationSans-BoldItalic",factors:_calibri_factors.CalibriBoldItalicFactors,baseWidths:_liberationsans_widths.LiberationSansBoldItalicWidths,baseMapping:_liberationsans_widths.LiberationSansBoldItalicMapping,metrics:_calibri_factors.CalibriBoldItalicMetrics},t["Segoeui-Regular"]={name:"LiberationSans-Regular",factors:_segoeui_factors.SegoeuiRegularFactors,baseWidths:_liberationsans_widths.LiberationSansRegularWidths,baseMapping:_liberationsans_widths.LiberationSansRegularMapping,metrics:_segoeui_factors.SegoeuiRegularMetrics},t["Segoeui-Bold"]={name:"LiberationSans-Bold",factors:_segoeui_factors.SegoeuiBoldFactors,baseWidths:_liberationsans_widths.LiberationSansBoldWidths,baseMapping:_liberationsans_widths.LiberationSansBoldMapping,metrics:_segoeui_factors.SegoeuiBoldMetrics},t["Segoeui-Italic"]={name:"LiberationSans-Italic",factors:_segoeui_factors.SegoeuiItalicFactors,baseWidths:_liberationsans_widths.LiberationSansItalicWidths,baseMapping:_liberationsans_widths.LiberationSansItalicMapping,metrics:_segoeui_factors.SegoeuiItalicMetrics},t["Segoeui-BoldItalic"]={name:"LiberationSans-BoldItalic",factors:_segoeui_factors.SegoeuiBoldItalicFactors,baseWidths:_liberationsans_widths.LiberationSansBoldItalicWidths,baseMapping:_liberationsans_widths.LiberationSansBoldItalicMapping,metrics:_segoeui_factors.SegoeuiBoldItalicMetrics},t["Helvetica-Regular"]=t.Helvetica={name:"LiberationSans-Regular",factors:_helvetica_factors.HelveticaRegularFactors,baseWidths:_liberationsans_widths.LiberationSansRegularWidths,baseMapping:_liberationsans_widths.LiberationSansRegularMapping,metrics:_helvetica_factors.HelveticaRegularMetrics},t["Helvetica-Bold"]={name:"LiberationSans-Bold",factors:_helvetica_factors.HelveticaBoldFactors,baseWidths:_liberationsans_widths.LiberationSansBoldWidths,baseMapping:_liberationsans_widths.LiberationSansBoldMapping,metrics:_helvetica_factors.HelveticaBoldMetrics},t["Helvetica-Italic"]={name:"LiberationSans-Italic",factors:_helvetica_factors.HelveticaItalicFactors,baseWidths:_liberationsans_widths.LiberationSansItalicWidths,baseMapping:_liberationsans_widths.LiberationSansItalicMapping,metrics:_helvetica_factors.HelveticaItalicMetrics},t["Helvetica-BoldItalic"]={name:"LiberationSans-BoldItalic",factors:_helvetica_factors.HelveticaBoldItalicFactors,baseWidths:_liberationsans_widths.LiberationSansBoldItalicWidths,baseMapping:_liberationsans_widths.LiberationSansBoldItalicMapping,metrics:_helvetica_factors.HelveticaBoldItalicMetrics}}));function getXfaFontName(name){const fontName=(0,_fonts_utils.normalizeFontName)(name);return getXFAFontMap()[fontName]}},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CalibriRegularMetrics=exports.CalibriRegularFactors=exports.CalibriItalicMetrics=exports.CalibriItalicFactors=exports.CalibriBoldMetrics=exports.CalibriBoldItalicMetrics=exports.CalibriBoldItalicFactors=exports.CalibriBoldFactors=void 0;exports.CalibriBoldFactors=[1.3877,1,1,1,.97801,.92482,.89552,.91133,.81988,.97566,.98152,.93548,.93548,1.2798,.85284,.92794,1,.96134,1.54657,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.82845,.82845,.85284,.85284,.85284,.75859,.92138,.83908,.7762,.73293,.87289,.73133,.7514,.81921,.87356,.95958,.59526,.75727,.69225,1.04924,.9121,.86943,.79795,.88198,.77958,.70864,.81055,.90399,.88653,.96017,.82577,.77892,.78257,.97507,1.54657,.97507,.85284,.89552,.90176,.88762,.8785,.75241,.8785,.90518,.95015,.77618,.8785,.88401,.91916,.86304,.88401,.91488,.8785,.8801,.8785,.8785,.91343,.7173,1.04106,.8785,.85075,.95794,.82616,.85162,.79492,.88331,1.69808,.88331,.85284,.97801,.89552,.91133,.89552,.91133,1.7801,.89552,1.24487,1.13254,1.12401,.96839,.85284,.68787,.70645,.85592,.90747,1.01466,1.0088,.90323,1,1.07463,1,.91056,.75806,1.19118,.96839,.78864,.82845,.84133,.75859,.83908,.83908,.83908,.83908,.83908,.83908,.77539,.73293,.73133,.73133,.73133,.73133,.95958,.95958,.95958,.95958,.88506,.9121,.86943,.86943,.86943,.86943,.86943,.85284,.87508,.90399,.90399,.90399,.90399,.77892,.79795,.90807,.88762,.88762,.88762,.88762,.88762,.88762,.8715,.75241,.90518,.90518,.90518,.90518,.88401,.88401,.88401,.88401,.8785,.8785,.8801,.8801,.8801,.8801,.8801,.90747,.89049,.8785,.8785,.8785,.8785,.85162,.8785,.85162,.83908,.88762,.83908,.88762,.83908,.88762,.73293,.75241,.73293,.75241,.73293,.75241,.73293,.75241,.87289,.83016,.88506,.93125,.73133,.90518,.73133,.90518,.73133,.90518,.73133,.90518,.73133,.90518,.81921,.77618,.81921,.77618,.81921,.77618,1,1,.87356,.8785,.91075,.89608,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.76229,.90167,.59526,.91916,1,1,.86304,.69225,.88401,1,1,.70424,.79468,.91926,.88175,.70823,.94903,.9121,.8785,1,1,.9121,.8785,.87802,.88656,.8785,.86943,.8801,.86943,.8801,.86943,.8801,.87402,.89291,.77958,.91343,1,1,.77958,.91343,.70864,.7173,.70864,.7173,.70864,.7173,.70864,.7173,1,1,.81055,.75841,.81055,1.06452,.90399,.8785,.90399,.8785,.90399,.8785,.90399,.8785,.90399,.8785,.90399,.8785,.96017,.95794,.77892,.85162,.77892,.78257,.79492,.78257,.79492,.78257,.79492,.9297,.56892,.83908,.88762,.77539,.8715,.87508,.89049,1,1,.81055,1.04106,1.20528,1.20528,1,1.15543,.70674,.98387,.94721,1.33431,1.45894,.95161,1.06303,.83908,.80352,.57184,.6965,.56289,.82001,.56029,.81235,1.02988,.83908,.7762,.68156,.80367,.73133,.78257,.87356,.86943,.95958,.75727,.89019,1.04924,.9121,.7648,.86943,.87356,.79795,.78275,.81055,.77892,.9762,.82577,.99819,.84896,.95958,.77892,.96108,1.01407,.89049,1.02988,.94211,.96108,.8936,.84021,.87842,.96399,.79109,.89049,1.00813,1.02988,.86077,.87445,.92099,.84723,.86513,.8801,.75638,.85714,.78216,.79586,.87965,.94211,.97747,.78287,.97926,.84971,1.02988,.94211,.8801,.94211,.84971,.73133,1,1,1,1,1,1,1,1,1,1,1,1,.90264,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.90518,1,1,1,1,1,1,1,1,1,1,1,1,.90548,1,1,1,1,1,1,.96017,.95794,.96017,.95794,.96017,.95794,.77892,.85162,1,1,.89552,.90527,1,.90363,.92794,.92794,.92794,.92794,.87012,.87012,.87012,.89552,.89552,1.42259,.71143,1.06152,1,1,1.03372,1.03372,.97171,1.4956,2.2807,.93835,.83406,.91133,.84107,.91133,1,1,1,.72021,1,1.23108,.83489,.88525,.88525,.81499,.90527,1.81055,.90527,1.81055,1.31006,1.53711,.94434,1.08696,1,.95018,.77192,.85284,.90747,1.17534,.69825,.9716,1.37077,.90747,.90747,.85356,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.08004,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,.90727,.90727,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.CalibriBoldMetrics={lineHeight:1.2207,lineGap:.2207};exports.CalibriBoldItalicFactors=[1.3877,1,1,1,.97801,.92482,.89552,.91133,.81988,.97566,.98152,.93548,.93548,1.2798,.85284,.92794,1,.96134,1.56239,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.82845,.82845,.85284,.85284,.85284,.75859,.92138,.83908,.7762,.71805,.87289,.73133,.7514,.81921,.87356,.95958,.59526,.75727,.69225,1.04924,.90872,.85938,.79795,.87068,.77958,.69766,.81055,.90399,.88653,.96068,.82577,.77892,.78257,.97507,1.529,.97507,.85284,.89552,.90176,.94908,.86411,.74012,.86411,.88323,.95015,.86411,.86331,.88401,.91916,.86304,.88401,.9039,.86331,.86331,.86411,.86411,.90464,.70852,1.04106,.86331,.84372,.95794,.82616,.84548,.79492,.88331,1.69808,.88331,.85284,.97801,.89552,.91133,.89552,.91133,1.7801,.89552,1.24487,1.13254,1.19129,.96839,.85284,.68787,.70645,.85592,.90747,1.01466,1.0088,.90323,1,1.07463,1,.91056,.75806,1.19118,.96839,.78864,.82845,.84133,.75859,.83908,.83908,.83908,.83908,.83908,.83908,.77539,.71805,.73133,.73133,.73133,.73133,.95958,.95958,.95958,.95958,.88506,.90872,.85938,.85938,.85938,.85938,.85938,.85284,.87068,.90399,.90399,.90399,.90399,.77892,.79795,.90807,.94908,.94908,.94908,.94908,.94908,.94908,.85887,.74012,.88323,.88323,.88323,.88323,.88401,.88401,.88401,.88401,.8785,.86331,.86331,.86331,.86331,.86331,.86331,.90747,.89049,.86331,.86331,.86331,.86331,.84548,.86411,.84548,.83908,.94908,.83908,.94908,.83908,.94908,.71805,.74012,.71805,.74012,.71805,.74012,.71805,.74012,.87289,.79538,.88506,.92726,.73133,.88323,.73133,.88323,.73133,.88323,.73133,.88323,.73133,.88323,.81921,.86411,.81921,.86411,.81921,.86411,1,1,.87356,.86331,.91075,.8777,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.76467,.90167,.59526,.91916,1,1,.86304,.69225,.88401,1,1,.70424,.77312,.91926,.88175,.70823,.94903,.90872,.86331,1,1,.90872,.86331,.86906,.88116,.86331,.85938,.86331,.85938,.86331,.85938,.86331,.87402,.86549,.77958,.90464,1,1,.77958,.90464,.69766,.70852,.69766,.70852,.69766,.70852,.69766,.70852,1,1,.81055,.75841,.81055,1.06452,.90399,.86331,.90399,.86331,.90399,.86331,.90399,.86331,.90399,.86331,.90399,.86331,.96068,.95794,.77892,.84548,.77892,.78257,.79492,.78257,.79492,.78257,.79492,.9297,.56892,.83908,.94908,.77539,.85887,.87068,.89049,1,1,.81055,1.04106,1.20528,1.20528,1,1.15543,.70088,.98387,.94721,1.33431,1.45894,.95161,1.48387,.83908,.80352,.57118,.6965,.56347,.79179,.55853,.80346,1.02988,.83908,.7762,.67174,.86036,.73133,.78257,.87356,.86441,.95958,.75727,.89019,1.04924,.90872,.74889,.85938,.87891,.79795,.7957,.81055,.77892,.97447,.82577,.97466,.87179,.95958,.77892,.94252,.95612,.8753,1.02988,.92733,.94252,.87411,.84021,.8728,.95612,.74081,.8753,1.02189,1.02988,.84814,.87445,.91822,.84723,.85668,.86331,.81344,.87581,.76422,.82046,.96057,.92733,.99375,.78022,.95452,.86015,1.02988,.92733,.86331,.92733,.86015,.73133,1,1,1,1,1,1,1,1,1,1,1,1,.90631,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.88323,1,1,1,1,1,1,1,1,1,1,1,1,.85174,1,1,1,1,1,1,.96068,.95794,.96068,.95794,.96068,.95794,.77892,.84548,1,1,.89552,.90527,1,.90363,.92794,.92794,.92794,.89807,.87012,.87012,.87012,.89552,.89552,1.42259,.71094,1.06152,1,1,1.03372,1.03372,.97171,1.4956,2.2807,.92972,.83406,.91133,.83326,.91133,1,1,1,.72021,1,1.23108,.83489,.88525,.88525,.81499,.90616,1.81055,.90527,1.81055,1.3107,1.53711,.94434,1.08696,1,.95018,.77192,.85284,.90747,1.17534,.69825,.9716,1.37077,.90747,.90747,.85356,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.08004,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,.90727,.90727,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.CalibriBoldItalicMetrics={lineHeight:1.2207,lineGap:.2207};exports.CalibriItalicFactors=[1.3877,1,1,1,1.17223,1.1293,.89552,.91133,.80395,1.02269,1.15601,.91056,.91056,1.2798,.85284,.89807,1,.90861,1.39543,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.96309,.96309,.85284,.85284,.85284,.83319,.88071,.8675,.81552,.72346,.85193,.73206,.7522,.81105,.86275,.90685,.6377,.77892,.75593,1.02638,.89249,.84118,.77452,.85374,.75186,.67789,.79776,.88844,.85066,.94309,.77818,.7306,.76659,1.10369,1.38313,1.10369,1.06139,.89552,.8739,.9245,.9245,.83203,.9245,.85865,1.09842,.9245,.9245,1.03297,1.07692,.90918,1.03297,.94959,.9245,.92274,.9245,.9245,1.02933,.77832,1.20562,.9245,.8916,.98986,.86621,.89453,.79004,.94152,1.77256,.94152,.85284,.97801,.89552,.91133,.89552,.91133,1.91729,.89552,1.17889,1.13254,1.16359,.92098,.85284,.68787,.71353,.84737,.90747,1.0088,1.0044,.87683,1,1.09091,1,.92229,.739,1.15642,.92098,.76288,.80504,.80972,.75859,.8675,.8675,.8675,.8675,.8675,.8675,.76318,.72346,.73206,.73206,.73206,.73206,.90685,.90685,.90685,.90685,.86477,.89249,.84118,.84118,.84118,.84118,.84118,.85284,.84557,.88844,.88844,.88844,.88844,.7306,.77452,.86331,.9245,.9245,.9245,.9245,.9245,.9245,.84843,.83203,.85865,.85865,.85865,.85865,.82601,.82601,.82601,.82601,.94469,.9245,.92274,.92274,.92274,.92274,.92274,.90747,.86651,.9245,.9245,.9245,.9245,.89453,.9245,.89453,.8675,.9245,.8675,.9245,.8675,.9245,.72346,.83203,.72346,.83203,.72346,.83203,.72346,.83203,.85193,.8875,.86477,.99034,.73206,.85865,.73206,.85865,.73206,.85865,.73206,.85865,.73206,.85865,.81105,.9245,.81105,.9245,.81105,.9245,1,1,.86275,.9245,.90872,.93591,.90685,.82601,.90685,.82601,.90685,.82601,.90685,1.03297,.90685,.82601,.77896,1.05611,.6377,1.07692,1,1,.90918,.75593,1.03297,1,1,.76032,.9375,.98156,.93407,.77261,1.11429,.89249,.9245,1,1,.89249,.9245,.92534,.86698,.9245,.84118,.92274,.84118,.92274,.84118,.92274,.8667,.86291,.75186,1.02933,1,1,.75186,1.02933,.67789,.77832,.67789,.77832,.67789,.77832,.67789,.77832,1,1,.79776,.97655,.79776,1.23023,.88844,.9245,.88844,.9245,.88844,.9245,.88844,.9245,.88844,.9245,.88844,.9245,.94309,.98986,.7306,.89453,.7306,.76659,.79004,.76659,.79004,.76659,.79004,1.09231,.54873,.8675,.9245,.76318,.84843,.84557,.86651,1,1,.79776,1.20562,1.18622,1.18622,1,1.1437,.67009,.96334,.93695,1.35191,1.40909,.95161,1.48387,.8675,.90861,.6192,.7363,.64824,.82411,.56321,.85696,1.23516,.8675,.81552,.7286,.84134,.73206,.76659,.86275,.84369,.90685,.77892,.85871,1.02638,.89249,.75828,.84118,.85984,.77452,.76466,.79776,.7306,.90782,.77818,.903,.87291,.90685,.7306,.99058,1.03667,.94635,1.23516,.9849,.99058,.92393,.8916,.942,1.03667,.75026,.94635,1.0297,1.23516,.90918,.94048,.98217,.89746,.84153,.92274,.82507,.88832,.84438,.88178,1.03525,.9849,1.00225,.78086,.97248,.89404,1.23516,.9849,.92274,.9849,.89404,.73206,1,1,1,1,1,1,1,1,1,1,1,1,.89693,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.85865,1,1,1,1,1,1,1,1,1,1,1,1,.90933,1,1,1,1,1,1,.94309,.98986,.94309,.98986,.94309,.98986,.7306,.89453,1,1,.89552,.90527,1,.90186,1.12308,1.12308,1.12308,1.12308,1.2566,1.2566,1.2566,.89552,.89552,1.42259,.68994,1.03809,1,1,1.0176,1.0176,1.11523,1.4956,2.01462,.97858,.82616,.91133,.83437,.91133,1,1,1,.70508,1,1.23108,.79801,.84426,.84426,.774,.90572,1.81055,.90749,1.81055,1.28809,1.55469,.94434,1.07806,1,.97094,.7589,.85284,.90747,1.19658,.69825,.97622,1.33512,.90747,.90747,.85284,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.0336,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,1.05859,1.05859,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.CalibriItalicMetrics={lineHeight:1.2207,lineGap:.2207};exports.CalibriRegularFactors=[1.3877,1,1,1,1.17223,1.1293,.89552,.91133,.80395,1.02269,1.15601,.91056,.91056,1.2798,.85284,.89807,1,.90861,1.39016,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.96309,.96309,.85284,.85284,.85284,.83319,.88071,.8675,.81552,.73834,.85193,.73206,.7522,.81105,.86275,.90685,.6377,.77892,.75593,1.02638,.89385,.85122,.77452,.86503,.75186,.68887,.79776,.88844,.85066,.94258,.77818,.7306,.76659,1.10369,1.39016,1.10369,1.06139,.89552,.8739,.86128,.94469,.8457,.94469,.89464,1.09842,.84636,.94469,1.03297,1.07692,.90918,1.03297,.95897,.94469,.9482,.94469,.94469,1.04692,.78223,1.20562,.94469,.90332,.98986,.86621,.90527,.79004,.94152,1.77256,.94152,.85284,.97801,.89552,.91133,.89552,.91133,1.91729,.89552,1.17889,1.13254,1.08707,.92098,.85284,.68787,.71353,.84737,.90747,1.0088,1.0044,.87683,1,1.09091,1,.92229,.739,1.15642,.92098,.76288,.80504,.80972,.75859,.8675,.8675,.8675,.8675,.8675,.8675,.76318,.73834,.73206,.73206,.73206,.73206,.90685,.90685,.90685,.90685,.86477,.89385,.85122,.85122,.85122,.85122,.85122,.85284,.85311,.88844,.88844,.88844,.88844,.7306,.77452,.86331,.86128,.86128,.86128,.86128,.86128,.86128,.8693,.8457,.89464,.89464,.89464,.89464,.82601,.82601,.82601,.82601,.94469,.94469,.9482,.9482,.9482,.9482,.9482,.90747,.86651,.94469,.94469,.94469,.94469,.90527,.94469,.90527,.8675,.86128,.8675,.86128,.8675,.86128,.73834,.8457,.73834,.8457,.73834,.8457,.73834,.8457,.85193,.92454,.86477,.9921,.73206,.89464,.73206,.89464,.73206,.89464,.73206,.89464,.73206,.89464,.81105,.84636,.81105,.84636,.81105,.84636,1,1,.86275,.94469,.90872,.95786,.90685,.82601,.90685,.82601,.90685,.82601,.90685,1.03297,.90685,.82601,.77741,1.05611,.6377,1.07692,1,1,.90918,.75593,1.03297,1,1,.76032,.90452,.98156,1.11842,.77261,1.11429,.89385,.94469,1,1,.89385,.94469,.95877,.86901,.94469,.85122,.9482,.85122,.9482,.85122,.9482,.8667,.90016,.75186,1.04692,1,1,.75186,1.04692,.68887,.78223,.68887,.78223,.68887,.78223,.68887,.78223,1,1,.79776,.92188,.79776,1.23023,.88844,.94469,.88844,.94469,.88844,.94469,.88844,.94469,.88844,.94469,.88844,.94469,.94258,.98986,.7306,.90527,.7306,.76659,.79004,.76659,.79004,.76659,.79004,1.09231,.54873,.8675,.86128,.76318,.8693,.85311,.86651,1,1,.79776,1.20562,1.18622,1.18622,1,1.1437,.67742,.96334,.93695,1.35191,1.40909,.95161,1.48387,.86686,.90861,.62267,.74359,.65649,.85498,.56963,.88254,1.23516,.8675,.81552,.75443,.84503,.73206,.76659,.86275,.85122,.90685,.77892,.85746,1.02638,.89385,.75657,.85122,.86275,.77452,.74171,.79776,.7306,.95165,.77818,.89772,.88831,.90685,.7306,.98142,1.02191,.96576,1.23516,.99018,.98142,.9236,.89258,.94035,1.02191,.78848,.96576,.9561,1.23516,.90918,.92578,.95424,.89746,.83969,.9482,.80113,.89442,.85208,.86155,.98022,.99018,1.00452,.81209,.99247,.89181,1.23516,.99018,.9482,.99018,.89181,.73206,1,1,1,1,1,1,1,1,1,1,1,1,.88844,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.89464,1,1,1,1,1,1,1,1,1,1,1,1,.96766,1,1,1,1,1,1,.94258,.98986,.94258,.98986,.94258,.98986,.7306,.90527,1,1,.89552,.90527,1,.90186,1.12308,1.12308,1.12308,1.12308,1.2566,1.2566,1.2566,.89552,.89552,1.42259,.69043,1.03809,1,1,1.0176,1.0176,1.11523,1.4956,2.01462,.99331,.82616,.91133,.84286,.91133,1,1,1,.70508,1,1.23108,.79801,.84426,.84426,.774,.90527,1.81055,.90527,1.81055,1.28809,1.55469,.94434,1.07806,1,.97094,.7589,.85284,.90747,1.19658,.69825,.97622,1.33512,.90747,.90747,.85356,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.0336,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,1.05859,1.05859,1,1,1,1.07185,.99413,.96334,1.08065,1,1,1,1,1,1,1,1,1,1,1];exports.CalibriRegularMetrics={lineHeight:1.2207,lineGap:.2207}},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HelveticaRegularMetrics=exports.HelveticaRegularFactors=exports.HelveticaItalicMetrics=exports.HelveticaItalicFactors=exports.HelveticaBoldMetrics=exports.HelveticaBoldItalicMetrics=exports.HelveticaBoldItalicFactors=exports.HelveticaBoldFactors=void 0;exports.HelveticaBoldFactors=[.76116,1,1,1.0006,.99998,.99974,.99973,.99973,.99982,.99977,1.00087,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99998,1,1.00003,1.00003,1.00003,1.00026,.9999,.99977,.99977,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,.99973,.99977,1.00026,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,.99998,1.0006,.99998,1.00003,.99973,.99998,.99973,1.00026,.99973,1.00026,.99973,.99998,1.00026,1.00026,1.0006,1.0006,.99973,1.0006,.99982,1.00026,1.00026,1.00026,1.00026,.99959,.99973,.99998,1.00026,.99973,1.00022,.99973,.99973,1,.99959,1.00077,.99959,1.00003,.99998,.99973,.99973,.99973,.99973,1.00077,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.99973,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,.99977,.99977,.99977,.99977,.99977,.99977,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,.99973,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.06409,1.00026,1.00026,1.00026,1.00026,1.00026,.99973,1.00026,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,1.03374,.99977,1.00026,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,.99977,1.00026,.99977,1.00026,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.00042,.99973,.99973,1.0006,.99977,.99973,.99973,1.00026,1.0006,1.00026,1.0006,1.00026,1.03828,1.00026,.99999,1.00026,1.0006,.99977,1.00026,.99977,1.00026,.99977,1.00026,.9993,.9998,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1,1.00016,.99977,.99959,.99977,.99959,.99977,.99959,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00026,.99998,1.00026,.8121,1.00026,.99998,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,1.00016,1.00022,1.00001,.99973,1.00001,1.00026,1,1.00026,1,1.00026,1,1.0006,.99973,.99977,.99973,1,.99982,1.00022,1.00026,1.00001,.99973,1.00026,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,1.00034,.99977,1,.99997,1.00026,1.00078,1.00036,.99973,1.00013,1.0006,.99977,.99977,.99988,.85148,1.00001,1.00026,.99977,1.00022,1.0006,.99977,1.00001,.99999,.99977,1.00069,1.00022,.99977,1.00001,.99984,1.00026,1.00001,1.00024,1.00001,.9999,1,1.0006,1.00001,1.00041,.99962,1.00026,1.0006,.99995,1.00041,.99942,.99973,.99927,1.00082,.99902,1.00026,1.00087,1.0006,1.00069,.99973,.99867,.99973,.9993,1.00026,1.00049,1.00056,1,.99988,.99935,.99995,.99954,1.00055,.99945,1.00032,1.0006,.99995,1.00026,.99995,1.00032,1.00001,1.00008,.99971,1.00019,.9994,1.00001,1.0006,1.00044,.99973,1.00023,1.00047,1,.99942,.99561,.99989,1.00035,.99977,1.00035,.99977,1.00019,.99944,1.00001,1.00021,.99926,1.00035,1.00035,.99942,1.00048,.99999,.99977,1.00022,1.00035,1.00001,.99977,1.00026,.99989,1.00057,1.00001,.99936,1.00052,1.00012,.99996,1.00043,1,1.00035,.9994,.99976,1.00035,.99973,1.00052,1.00041,1.00119,1.00037,.99973,1.00002,.99986,1.00041,1.00041,.99902,.9996,1.00034,.99999,1.00026,.99999,1.00026,.99973,1.00052,.99973,1,.99973,1.00041,1.00075,.9994,1.0003,.99999,1,1.00041,.99955,1,.99915,.99973,.99973,1.00026,1.00119,.99955,.99973,1.0006,.99911,1.0006,1.00026,.99972,1.00026,.99902,1.00041,.99973,.99999,1,1,1.00038,1.0005,1.00016,1.00022,1.00016,1.00022,1.00016,1.00022,1.00001,.99973,1,1,.99973,1,1,.99955,1.0006,1.0006,1.0006,1.0006,1,1,1,.99973,.99973,.99972,1,1,1.00106,.99999,.99998,.99998,.99999,.99998,1.66475,1,.99973,.99973,1.00023,.99973,.99971,1.00047,1.00023,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1,1,1,1,1,1,1,.99972,1,1.20985,1.39713,1.00003,1.00031,1.00015,1,.99561,1.00027,1.00031,1.00031,.99915,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.99972,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,.99998,.99998,.99998,.99998,1,1,1,1,1,1,1,1,1,1,1];exports.HelveticaBoldMetrics={lineHeight:1.2,lineGap:.2};exports.HelveticaBoldItalicFactors=[.76116,1,1,1.0006,.99998,.99974,.99973,.99973,.99982,.99977,1.00087,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99998,1,1.00003,1.00003,1.00003,1.00026,.9999,.99977,.99977,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,.99973,.99977,1.00026,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,.99998,1.0006,.99998,1.00003,.99973,.99998,.99973,1.00026,.99973,1.00026,.99973,.99998,1.00026,1.00026,1.0006,1.0006,.99973,1.0006,.99982,1.00026,1.00026,1.00026,1.00026,.99959,.99973,.99998,1.00026,.99973,1.00022,.99973,.99973,1,.99959,1.00077,.99959,1.00003,.99998,.99973,.99973,.99973,.99973,1.00077,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.99973,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,.99977,.99977,.99977,.99977,.99977,.99977,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,.99973,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.06409,1.00026,1.00026,1.00026,1.00026,1.00026,.99973,1.00026,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,1.0044,.99977,1.00026,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,.99977,1.00026,.99977,1.00026,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,.99971,.99973,.99973,1.0006,.99977,.99973,.99973,1.00026,1.0006,1.00026,1.0006,1.00026,1.01011,1.00026,.99999,1.00026,1.0006,.99977,1.00026,.99977,1.00026,.99977,1.00026,.9993,.9998,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1,1.00016,.99977,.99959,.99977,.99959,.99977,.99959,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00026,.99998,1.00026,.8121,1.00026,.99998,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,1.00016,1.00022,1.00001,.99973,1.00001,1.00026,1,1.00026,1,1.00026,1,1.0006,.99973,.99977,.99973,1,.99982,1.00022,1.00026,1.00001,.99973,1.00026,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99977,1,1,1.00026,.99969,.99972,.99981,.9998,1.0006,.99977,.99977,1.00022,.91155,1.00001,1.00026,.99977,1.00022,1.0006,.99977,1.00001,.99999,.99977,.99966,1.00022,1.00032,1.00001,.99944,1.00026,1.00001,.99968,1.00001,1.00047,1,1.0006,1.00001,.99981,1.00101,1.00026,1.0006,.99948,.99981,1.00064,.99973,.99942,1.00101,1.00061,1.00026,1.00069,1.0006,1.00014,.99973,1.01322,.99973,1.00065,1.00026,1.00012,.99923,1,1.00064,1.00076,.99948,1.00055,1.00063,1.00007,.99943,1.0006,.99948,1.00026,.99948,.99943,1.00001,1.00001,1.00029,1.00038,1.00035,1.00001,1.0006,1.0006,.99973,.99978,1.00001,1.00057,.99989,.99967,.99964,.99967,.99977,.99999,.99977,1.00038,.99977,1.00001,.99973,1.00066,.99967,.99967,1.00041,.99998,.99999,.99977,1.00022,.99967,1.00001,.99977,1.00026,.99964,1.00031,1.00001,.99999,.99999,1,1.00023,1,1,.99999,1.00035,1.00001,.99999,.99973,.99977,.99999,1.00058,.99973,.99973,.99955,.9995,1.00026,1.00026,1.00032,.99989,1.00034,.99999,1.00026,1.00026,1.00026,.99973,.45998,.99973,1.00026,.99973,1.00001,.99999,.99982,.99994,.99996,1,1.00042,1.00044,1.00029,1.00023,.99973,.99973,1.00026,.99949,1.00002,.99973,1.0006,1.0006,1.0006,.99975,1.00026,1.00026,1.00032,.98685,.99973,1.00026,1,1,.99966,1.00044,1.00016,1.00022,1.00016,1.00022,1.00016,1.00022,1.00001,.99973,1,1,.99973,1,1,.99955,1.0006,1.0006,1.0006,1.0006,1,1,1,.99973,.99973,.99972,1,1,1.00106,.99999,.99998,.99998,.99999,.99998,1.66475,1,.99973,.99973,1,.99973,.99971,.99978,1,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1.00098,1,1,1,1.00049,1,1,.99972,1,1.20985,1.39713,1.00003,1.00031,1.00015,1,.99561,1.00027,1.00031,1.00031,.99915,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.99972,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,.99998,.99998,.99998,.99998,1,1,1,1,1,1,1,1,1,1,1];exports.HelveticaBoldItalicMetrics={lineHeight:1.35,lineGap:.2};exports.HelveticaItalicFactors=[.76116,1,1,1.0006,1.0006,1.00006,.99973,.99973,.99982,1.00001,1.00043,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.0006,1,1.00003,1.00003,1.00003,.99973,.99987,1.00001,1.00001,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,1,1.00001,.99973,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,1.0006,1.0006,1.0006,.99949,.99973,.99998,.99973,.99973,1,.99973,.99973,1.0006,.99973,.99973,.99924,.99924,1,.99924,.99999,.99973,.99973,.99973,.99973,.99998,1,1.0006,.99973,1,.99977,1,1,1,1.00005,1.0009,1.00005,1.00003,.99998,.99973,.99973,.99973,.99973,1.0009,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.9998,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,1.00001,1.00001,1.00001,1.00001,1.00001,1.00001,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,1,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.06409,1.00026,.99973,.99973,.99973,.99973,1,.99973,1,1.00001,.99973,1.00001,.99973,1.00001,.99973,.99977,1,.99977,1,.99977,1,.99977,1,.99977,1.0288,.99977,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,.99977,.99973,.99977,.99973,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,.99924,1.0006,1.0006,.99946,1.00034,1,.99924,1.00001,1,1,.99973,.99924,.99973,.99924,.99973,1.06311,.99973,1.00024,.99973,.99924,.99977,.99973,.99977,.99973,.99977,.99973,1.00041,.9998,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1,1.00016,.99977,.99998,.99977,.99998,.99977,.99998,1.00001,1,1.00001,1,1.00001,1,1.00001,1,1.00026,1.0006,1.00026,.89547,1.00026,1.0006,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,1.00016,.99977,1.00001,1,1.00001,1.00026,1,1.00026,1,1.00026,1,.99924,.99973,1.00001,.99973,1,.99982,1.00022,1.00026,1.00001,1,1.00026,1.0006,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,1.00001,1,1.00054,.99977,1.00084,1.00007,.99973,1.00013,.99924,1.00001,1.00001,.99945,.91221,1.00001,1.00026,.99977,1.00022,1.0006,1.00001,1.00001,.99999,.99977,.99933,1.00022,1.00054,1.00001,1.00065,1.00026,1.00001,1.0001,1.00001,1.00052,1,1.0006,1.00001,.99945,.99897,.99968,.99924,1.00036,.99945,.99949,1,1.0006,.99897,.99918,.99968,.99911,.99924,1,.99962,1.01487,1,1.0005,.99973,1.00012,1.00043,1,.99995,.99994,1.00036,.99947,1.00019,1.00063,1.00025,.99924,1.00036,.99973,1.00036,1.00025,1.00001,1.00001,1.00027,1.0001,1.00068,1.00001,1.0006,1.0006,1,1.00008,.99957,.99972,.9994,.99954,.99975,1.00051,1.00001,1.00019,1.00001,1.0001,.99986,1.00001,1.00001,1.00038,.99954,.99954,.9994,1.00066,.99999,.99977,1.00022,1.00054,1.00001,.99977,1.00026,.99975,1.0001,1.00001,.99993,.9995,.99955,1.00016,.99978,.99974,1.00019,1.00022,.99955,1.00053,.99973,1.00089,1.00005,.99967,1.00048,.99973,1.00002,1.00034,.99973,.99973,.99964,1.00006,1.00066,.99947,.99973,.98894,.99973,1,.44898,1,.99946,1,1.00039,1.00082,.99991,.99991,.99985,1.00022,1.00023,1.00061,1.00006,.99966,.99973,.99973,.99973,1.00019,1.0008,1,.99924,.99924,.99924,.99983,1.00044,.99973,.99964,.98332,1,.99973,1,1,.99962,.99895,1.00016,.99977,1.00016,.99977,1.00016,.99977,1.00001,1,1,1,.99973,1,1,.99955,.99924,.99924,.99924,.99924,.99998,.99998,.99998,.99973,.99973,.99972,1,1,1.00267,.99999,.99998,.99998,1,.99998,1.66475,1,.99973,.99973,1.00023,.99973,1.00423,.99925,.99999,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1.00049,1,1.00245,1,1,1,1,.96329,1,1.20985,1.39713,1.00003,.8254,1.00015,1,1.00035,1.00027,1.00031,1.00031,1.00003,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.95317,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,.99998,.99998,.99998,.99998,1,1,1,1,1,1,1,1,1,1,1];exports.HelveticaItalicMetrics={lineHeight:1.35,lineGap:.2};exports.HelveticaRegularFactors=[.76116,1,1,1.0006,1.0006,1.00006,.99973,.99973,.99982,1.00001,1.00043,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.0006,1,1.00003,1.00003,1.00003,.99973,.99987,1.00001,1.00001,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,1,1.00001,.99973,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,1.0006,1.0006,1.0006,.99949,.99973,.99998,.99973,.99973,1,.99973,.99973,1.0006,.99973,.99973,.99924,.99924,1,.99924,.99999,.99973,.99973,.99973,.99973,.99998,1,1.0006,.99973,1,.99977,1,1,1,1.00005,1.0009,1.00005,1.00003,.99998,.99973,.99973,.99973,.99973,1.0009,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.9998,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,1.00001,1.00001,1.00001,1.00001,1.00001,1.00001,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,1,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.06409,1.00026,.99973,.99973,.99973,.99973,1,.99973,1,1.00001,.99973,1.00001,.99973,1.00001,.99973,.99977,1,.99977,1,.99977,1,.99977,1,.99977,1.04596,.99977,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,.99977,.99973,.99977,.99973,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,.99924,1.0006,1.0006,1.00019,1.00034,1,.99924,1.00001,1,1,.99973,.99924,.99973,.99924,.99973,1.02572,.99973,1.00005,.99973,.99924,.99977,.99973,.99977,.99973,.99977,.99973,.99999,.9998,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1,1.00016,.99977,.99998,.99977,.99998,.99977,.99998,1.00001,1,1.00001,1,1.00001,1,1.00001,1,1.00026,1.0006,1.00026,.84533,1.00026,1.0006,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,1.00016,.99977,1.00001,1,1.00001,1.00026,1,1.00026,1,1.00026,1,.99924,.99973,1.00001,.99973,1,.99982,1.00022,1.00026,1.00001,1,1.00026,1.0006,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99928,1,.99977,1.00013,1.00055,.99947,.99945,.99941,.99924,1.00001,1.00001,1.0004,.91621,1.00001,1.00026,.99977,1.00022,1.0006,1.00001,1.00005,.99999,.99977,1.00015,1.00022,.99977,1.00001,.99973,1.00026,1.00001,1.00019,1.00001,.99946,1,1.0006,1.00001,.99978,1.00045,.99973,.99924,1.00023,.99978,.99966,1,1.00065,1.00045,1.00019,.99973,.99973,.99924,1,1,.96499,1,1.00055,.99973,1.00008,1.00027,1,.9997,.99995,1.00023,.99933,1.00019,1.00015,1.00031,.99924,1.00023,.99973,1.00023,1.00031,1.00001,.99928,1.00029,1.00092,1.00035,1.00001,1.0006,1.0006,1,.99988,.99975,1,1.00082,.99561,.9996,1.00035,1.00001,.99962,1.00001,1.00092,.99964,1.00001,.99963,.99999,1.00035,1.00035,1.00082,.99962,.99999,.99977,1.00022,1.00035,1.00001,.99977,1.00026,.9996,.99967,1.00001,1.00034,1.00074,1.00054,1.00053,1.00063,.99971,.99962,1.00035,.99975,.99977,.99973,1.00043,.99953,1.0007,.99915,.99973,1.00008,.99892,1.00073,1.00073,1.00114,.99915,1.00073,.99955,.99973,1.00092,.99973,1,.99998,1,1.0003,1,1.00043,1.00001,.99969,1.0003,1,1.00035,1.00001,.9995,1,1.00092,.99973,.99973,.99973,1.0007,.9995,1,.99924,1.0006,.99924,.99972,1.00062,.99973,1.00114,1.00073,1,.99955,1,1,1.00047,.99968,1.00016,.99977,1.00016,.99977,1.00016,.99977,1.00001,1,1,1,.99973,1,1,.99955,.99924,.99924,.99924,.99924,.99998,.99998,.99998,.99973,.99973,.99972,1,1,1.00267,.99999,.99998,.99998,1,.99998,1.66475,1,.99973,.99973,1.00023,.99973,.99971,.99925,1.00023,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1,1,1,1,1,1,1,.96329,1,1.20985,1.39713,1.00003,.8254,1.00015,1,1.00035,1.00027,1.00031,1.00031,.99915,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.95317,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.HelveticaRegularMetrics={lineHeight:1.2,lineGap:.2}},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LiberationSansRegularWidths=exports.LiberationSansRegularMapping=exports.LiberationSansItalicWidths=exports.LiberationSansItalicMapping=exports.LiberationSansBoldWidths=exports.LiberationSansBoldMapping=exports.LiberationSansBoldItalicWidths=exports.LiberationSansBoldItalicMapping=void 0;exports.LiberationSansBoldWidths=[365,0,333,278,333,474,556,556,889,722,238,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,333,333,584,584,584,611,975,722,722,722,722,667,611,778,722,278,556,722,611,833,722,778,667,778,722,667,611,722,667,944,667,667,611,333,278,333,584,556,333,556,611,556,611,556,333,611,611,278,278,556,278,889,611,611,611,611,389,556,333,611,556,778,556,556,500,389,280,389,584,333,556,556,556,556,280,556,333,737,370,556,584,737,552,400,549,333,333,333,576,556,278,333,333,365,556,834,834,834,611,722,722,722,722,722,722,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,556,556,556,556,556,278,278,278,278,611,611,611,611,611,611,611,549,611,611,611,611,611,556,611,556,722,556,722,556,722,556,722,556,722,556,722,556,722,556,722,719,722,611,667,556,667,556,667,556,667,556,667,556,778,611,778,611,778,611,778,611,722,611,722,611,278,278,278,278,278,278,278,278,278,278,785,556,556,278,722,556,556,611,278,611,278,611,385,611,479,611,278,722,611,722,611,722,611,708,723,611,778,611,778,611,778,611,1e3,944,722,389,722,389,722,389,667,556,667,556,667,556,667,556,611,333,611,479,611,333,722,611,722,611,722,611,722,611,722,611,722,611,944,778,667,556,667,611,500,611,500,611,500,278,556,722,556,1e3,889,778,611,667,556,611,333,333,333,333,333,333,333,333,333,333,333,465,722,333,853,906,474,825,927,838,278,722,722,601,719,667,611,722,778,278,722,667,833,722,644,778,722,667,600,611,667,821,667,809,802,278,667,615,451,611,278,582,615,610,556,606,475,460,611,541,278,558,556,612,556,445,611,766,619,520,684,446,582,715,576,753,845,278,582,611,582,845,667,669,885,567,711,667,278,276,556,1094,1062,875,610,722,622,719,722,719,722,567,712,667,904,626,719,719,610,702,833,722,778,719,667,722,611,622,854,667,730,703,1005,1019,870,979,719,711,1031,719,556,618,615,417,635,556,709,497,615,615,500,635,740,604,611,604,611,556,490,556,875,556,615,581,833,844,729,854,615,552,854,583,556,556,611,417,552,556,278,281,278,969,906,611,500,615,556,604,778,611,487,447,944,778,944,778,944,778,667,556,333,333,556,1e3,1e3,552,278,278,278,278,500,500,500,556,556,350,1e3,1e3,240,479,333,333,604,333,167,396,556,556,1094,556,885,489,1115,1e3,768,600,834,834,834,834,1e3,500,1e3,500,1e3,500,500,494,612,823,713,584,549,713,979,722,274,549,549,583,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,611,611,333,333,333,333,333,333,333,333,222,222,333,333,333,333,333,333,333,333];exports.LiberationSansBoldMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];exports.LiberationSansBoldItalicWidths=[365,0,333,278,333,474,556,556,889,722,238,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,333,333,584,584,584,611,975,722,722,722,722,667,611,778,722,278,556,722,611,833,722,778,667,778,722,667,611,722,667,944,667,667,611,333,278,333,584,556,333,556,611,556,611,556,333,611,611,278,278,556,278,889,611,611,611,611,389,556,333,611,556,778,556,556,500,389,280,389,584,333,556,556,556,556,280,556,333,737,370,556,584,737,552,400,549,333,333,333,576,556,278,333,333,365,556,834,834,834,611,722,722,722,722,722,722,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,556,556,556,556,556,278,278,278,278,611,611,611,611,611,611,611,549,611,611,611,611,611,556,611,556,722,556,722,556,722,556,722,556,722,556,722,556,722,556,722,740,722,611,667,556,667,556,667,556,667,556,667,556,778,611,778,611,778,611,778,611,722,611,722,611,278,278,278,278,278,278,278,278,278,278,782,556,556,278,722,556,556,611,278,611,278,611,396,611,479,611,278,722,611,722,611,722,611,708,723,611,778,611,778,611,778,611,1e3,944,722,389,722,389,722,389,667,556,667,556,667,556,667,556,611,333,611,479,611,333,722,611,722,611,722,611,722,611,722,611,722,611,944,778,667,556,667,611,500,611,500,611,500,278,556,722,556,1e3,889,778,611,667,556,611,333,333,333,333,333,333,333,333,333,333,333,333,722,333,854,906,473,844,930,847,278,722,722,610,671,667,611,722,778,278,722,667,833,722,657,778,718,667,590,611,667,822,667,829,781,278,667,620,479,611,278,591,620,621,556,610,479,492,611,558,278,566,556,603,556,450,611,712,605,532,664,409,591,704,578,773,834,278,591,611,591,834,667,667,886,614,719,667,278,278,556,1094,1042,854,622,719,677,719,722,708,722,614,722,667,927,643,719,719,615,687,833,722,778,719,667,722,611,677,781,667,729,708,979,989,854,1e3,708,719,1042,729,556,619,604,534,618,556,736,510,611,611,507,622,740,604,611,611,611,556,889,556,885,556,646,583,889,935,707,854,594,552,865,589,556,556,611,469,563,556,278,278,278,969,906,611,507,619,556,611,778,611,575,467,944,778,944,778,944,778,667,556,333,333,556,1e3,1e3,552,278,278,278,278,500,500,500,556,556,350,1e3,1e3,240,479,333,333,604,333,167,396,556,556,1104,556,885,516,1146,1e3,768,600,834,834,834,834,999,500,1e3,500,1e3,500,500,494,612,823,713,584,549,713,979,722,274,549,549,583,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,611,611,333,333,333,333,333,333,333,333,222,222,333,333,333,333,333,333,333,333];exports.LiberationSansBoldItalicMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];exports.LiberationSansItalicWidths=[365,0,333,278,278,355,556,556,889,667,191,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,278,278,584,584,584,556,1015,667,667,722,722,667,611,778,722,278,500,667,556,833,722,778,667,778,722,667,611,722,667,944,667,667,611,278,278,278,469,556,333,556,556,500,556,556,278,556,556,222,222,500,222,833,556,556,556,556,333,500,278,556,500,722,500,500,500,334,260,334,584,333,556,556,556,556,260,556,333,737,370,556,584,737,552,400,549,333,333,333,576,537,278,333,333,365,556,834,834,834,611,667,667,667,667,667,667,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,500,556,556,556,556,278,278,278,278,556,556,556,556,556,556,556,549,611,556,556,556,556,500,556,500,667,556,667,556,667,556,722,500,722,500,722,500,722,500,722,625,722,556,667,556,667,556,667,556,667,556,667,556,778,556,778,556,778,556,778,556,722,556,722,556,278,278,278,278,278,278,278,222,278,278,733,444,500,222,667,500,500,556,222,556,222,556,281,556,400,556,222,722,556,722,556,722,556,615,723,556,778,556,778,556,778,556,1e3,944,722,333,722,333,722,333,667,500,667,500,667,500,667,500,611,278,611,354,611,278,722,556,722,556,722,556,722,556,722,556,722,556,944,722,667,500,667,611,500,611,500,611,500,222,556,667,556,1e3,889,778,611,667,500,611,278,333,333,333,333,333,333,333,333,333,333,333,667,278,789,846,389,794,865,775,222,667,667,570,671,667,611,722,778,278,667,667,833,722,648,778,725,667,600,611,667,837,667,831,761,278,667,570,439,555,222,550,570,571,500,556,439,463,555,542,222,500,492,548,500,447,556,670,573,486,603,374,550,652,546,728,779,222,550,556,550,779,667,667,843,544,708,667,278,278,500,1066,982,844,589,715,639,724,667,651,667,544,704,667,917,614,715,715,589,686,833,722,778,725,667,722,611,639,795,667,727,673,920,923,805,886,651,694,1022,682,556,562,522,493,553,556,688,465,556,556,472,564,686,550,556,556,556,500,833,500,835,500,572,518,830,851,621,736,526,492,752,534,556,556,556,378,496,500,222,222,222,910,828,556,472,565,500,556,778,556,492,339,944,722,944,722,944,722,667,500,333,333,556,1e3,1e3,552,222,222,222,222,333,333,333,556,556,350,1e3,1e3,188,354,333,333,500,333,167,365,556,556,1094,556,885,323,1083,1e3,768,600,834,834,834,834,1e3,500,998,500,1e3,500,500,494,612,823,713,584,549,713,979,719,274,549,549,584,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,500,500,333,333,333,333,333,333,333,333,222,222,294,294,324,324,316,328,398,285];exports.LiberationSansItalicMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];exports.LiberationSansRegularWidths=[365,0,333,278,278,355,556,556,889,667,191,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,278,278,584,584,584,556,1015,667,667,722,722,667,611,778,722,278,500,667,556,833,722,778,667,778,722,667,611,722,667,944,667,667,611,278,278,278,469,556,333,556,556,500,556,556,278,556,556,222,222,500,222,833,556,556,556,556,333,500,278,556,500,722,500,500,500,334,260,334,584,333,556,556,556,556,260,556,333,737,370,556,584,737,552,400,549,333,333,333,576,537,278,333,333,365,556,834,834,834,611,667,667,667,667,667,667,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,500,556,556,556,556,278,278,278,278,556,556,556,556,556,556,556,549,611,556,556,556,556,500,556,500,667,556,667,556,667,556,722,500,722,500,722,500,722,500,722,615,722,556,667,556,667,556,667,556,667,556,667,556,778,556,778,556,778,556,778,556,722,556,722,556,278,278,278,278,278,278,278,222,278,278,735,444,500,222,667,500,500,556,222,556,222,556,292,556,334,556,222,722,556,722,556,722,556,604,723,556,778,556,778,556,778,556,1e3,944,722,333,722,333,722,333,667,500,667,500,667,500,667,500,611,278,611,375,611,278,722,556,722,556,722,556,722,556,722,556,722,556,944,722,667,500,667,611,500,611,500,611,500,222,556,667,556,1e3,889,778,611,667,500,611,278,333,333,333,333,333,333,333,333,333,333,333,667,278,784,838,384,774,855,752,222,667,667,551,668,667,611,722,778,278,667,668,833,722,650,778,722,667,618,611,667,798,667,835,748,278,667,578,446,556,222,547,578,575,500,557,446,441,556,556,222,500,500,576,500,448,556,690,569,482,617,395,547,648,525,713,781,222,547,556,547,781,667,667,865,542,719,667,278,278,500,1057,1010,854,583,722,635,719,667,656,667,542,677,667,923,604,719,719,583,656,833,722,778,719,667,722,611,635,760,667,740,667,917,938,792,885,656,719,1010,722,556,573,531,365,583,556,669,458,559,559,438,583,688,552,556,542,556,500,458,500,823,500,573,521,802,823,625,719,521,510,750,542,556,556,556,365,510,500,222,278,222,906,812,556,438,559,500,552,778,556,489,411,944,722,944,722,944,722,667,500,333,333,556,1e3,1e3,552,222,222,222,222,333,333,333,556,556,350,1e3,1e3,188,354,333,333,500,333,167,365,556,556,1094,556,885,323,1073,1e3,768,600,834,834,834,834,1e3,500,1e3,500,1e3,500,500,494,612,823,713,584,549,713,979,719,274,549,549,583,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,500,500,333,333,333,333,333,333,333,333,222,222,294,294,324,324,316,328,398,285];exports.LiberationSansRegularMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MyriadProRegularMetrics=exports.MyriadProRegularFactors=exports.MyriadProItalicMetrics=exports.MyriadProItalicFactors=exports.MyriadProBoldMetrics=exports.MyriadProBoldItalicMetrics=exports.MyriadProBoldItalicFactors=exports.MyriadProBoldFactors=void 0;exports.MyriadProBoldFactors=[1.36898,1,1,.72706,.80479,.83734,.98894,.99793,.9897,.93884,.86209,.94292,.94292,1.16661,1.02058,.93582,.96694,.93582,1.19137,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.78076,.78076,1.02058,1.02058,1.02058,.72851,.78966,.90838,.83637,.82391,.96376,.80061,.86275,.8768,.95407,1.0258,.73901,.85022,.83655,1.0156,.95546,.92179,.87107,.92179,.82114,.8096,.89713,.94438,.95353,.94083,.91905,.90406,.9446,.94292,1.18777,.94292,1.02058,.89903,.90088,.94938,.97898,.81093,.97571,.94938,1.024,.9577,.95933,.98621,1.0474,.97455,.98981,.9672,.95933,.9446,.97898,.97407,.97646,.78036,1.10208,.95442,.95298,.97579,.9332,.94039,.938,.80687,1.01149,.80687,1.02058,.80479,.99793,.99793,.99793,.99793,1.01149,1.00872,.90088,.91882,1.0213,.8361,1.02058,.62295,.54324,.89022,1.08595,1,1,.90088,1,.97455,.93582,.90088,1,1.05686,.8361,.99642,.99642,.99642,.72851,.90838,.90838,.90838,.90838,.90838,.90838,.868,.82391,.80061,.80061,.80061,.80061,1.0258,1.0258,1.0258,1.0258,.97484,.95546,.92179,.92179,.92179,.92179,.92179,1.02058,.92179,.94438,.94438,.94438,.94438,.90406,.86958,.98225,.94938,.94938,.94938,.94938,.94938,.94938,.9031,.81093,.94938,.94938,.94938,.94938,.98621,.98621,.98621,.98621,.93969,.95933,.9446,.9446,.9446,.9446,.9446,1.08595,.9446,.95442,.95442,.95442,.95442,.94039,.97898,.94039,.90838,.94938,.90838,.94938,.90838,.94938,.82391,.81093,.82391,.81093,.82391,.81093,.82391,.81093,.96376,.84313,.97484,.97571,.80061,.94938,.80061,.94938,.80061,.94938,.80061,.94938,.80061,.94938,.8768,.9577,.8768,.9577,.8768,.9577,1,1,.95407,.95933,.97069,.95933,1.0258,.98621,1.0258,.98621,1.0258,.98621,1.0258,.98621,1.0258,.98621,.887,1.01591,.73901,1.0474,1,1,.97455,.83655,.98981,1,1,.83655,.73977,.83655,.73903,.84638,1.033,.95546,.95933,1,1,.95546,.95933,.8271,.95417,.95933,.92179,.9446,.92179,.9446,.92179,.9446,.936,.91964,.82114,.97646,1,1,.82114,.97646,.8096,.78036,.8096,.78036,1,1,.8096,.78036,1,1,.89713,.77452,.89713,1.10208,.94438,.95442,.94438,.95442,.94438,.95442,.94438,.95442,.94438,.95442,.94438,.95442,.94083,.97579,.90406,.94039,.90406,.9446,.938,.9446,.938,.9446,.938,1,.99793,.90838,.94938,.868,.9031,.92179,.9446,1,1,.89713,1.10208,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90989,.9358,.91945,.83181,.75261,.87992,.82976,.96034,.83689,.97268,1.0078,.90838,.83637,.8019,.90157,.80061,.9446,.95407,.92436,1.0258,.85022,.97153,1.0156,.95546,.89192,.92179,.92361,.87107,.96318,.89713,.93704,.95638,.91905,.91709,.92796,1.0258,.93704,.94836,1.0373,.95933,1.0078,.95871,.94836,.96174,.92601,.9498,.98607,.95776,.95933,1.05453,1.0078,.98275,.9314,.95617,.91701,1.05993,.9446,.78367,.9553,1,.86832,1.0128,.95871,.99394,.87548,.96361,.86774,1.0078,.95871,.9446,.95871,.86774,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.94083,.97579,.94083,.97579,.94083,.97579,.90406,.94039,.96694,1,.89903,1,1,1,.93582,.93582,.93582,1,.908,.908,.918,.94219,.94219,.96544,1,1.285,1,1,.81079,.81079,1,1,.74854,1,1,1,1,.99793,1,1,1,.65,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.17173,1,.80535,.76169,1.02058,1.0732,1.05486,1,1,1.30692,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.16161,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.MyriadProBoldMetrics={lineHeight:1.2,lineGap:.2};exports.MyriadProBoldItalicFactors=[1.36898,1,1,.66227,.80779,.81625,.97276,.97276,.97733,.92222,.83266,.94292,.94292,1.16148,1.02058,.93582,.96694,.93582,1.17337,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.78076,.78076,1.02058,1.02058,1.02058,.71541,.76813,.85576,.80591,.80729,.94299,.77512,.83655,.86523,.92222,.98621,.71743,.81698,.79726,.98558,.92222,.90637,.83809,.90637,.80729,.76463,.86275,.90699,.91605,.9154,.85308,.85458,.90531,.94292,1.21296,.94292,1.02058,.89903,1.18616,.99613,.91677,.78216,.91677,.90083,.98796,.9135,.92168,.95381,.98981,.95298,.95381,.93459,.92168,.91513,.92004,.91677,.95077,.748,1.04502,.91677,.92061,.94236,.89544,.89364,.9,.80687,.8578,.80687,1.02058,.80779,.97276,.97276,.97276,.97276,.8578,.99973,1.18616,.91339,1.08074,.82891,1.02058,.55509,.71526,.89022,1.08595,1,1,1.18616,1,.96736,.93582,1.18616,1,1.04864,.82711,.99043,.99043,.99043,.71541,.85576,.85576,.85576,.85576,.85576,.85576,.845,.80729,.77512,.77512,.77512,.77512,.98621,.98621,.98621,.98621,.95961,.92222,.90637,.90637,.90637,.90637,.90637,1.02058,.90251,.90699,.90699,.90699,.90699,.85458,.83659,.94951,.99613,.99613,.99613,.99613,.99613,.99613,.85811,.78216,.90083,.90083,.90083,.90083,.95381,.95381,.95381,.95381,.9135,.92168,.91513,.91513,.91513,.91513,.91513,1.08595,.91677,.91677,.91677,.91677,.91677,.89364,.92332,.89364,.85576,.99613,.85576,.99613,.85576,.99613,.80729,.78216,.80729,.78216,.80729,.78216,.80729,.78216,.94299,.76783,.95961,.91677,.77512,.90083,.77512,.90083,.77512,.90083,.77512,.90083,.77512,.90083,.86523,.9135,.86523,.9135,.86523,.9135,1,1,.92222,.92168,.92222,.92168,.98621,.95381,.98621,.95381,.98621,.95381,.98621,.95381,.98621,.95381,.86036,.97096,.71743,.98981,1,1,.95298,.79726,.95381,1,1,.79726,.6894,.79726,.74321,.81691,1.0006,.92222,.92168,1,1,.92222,.92168,.79464,.92098,.92168,.90637,.91513,.90637,.91513,.90637,.91513,.909,.87514,.80729,.95077,1,1,.80729,.95077,.76463,.748,.76463,.748,1,1,.76463,.748,1,1,.86275,.72651,.86275,1.04502,.90699,.91677,.90699,.91677,.90699,.91677,.90699,.91677,.90699,.91677,.90699,.91677,.9154,.94236,.85458,.89364,.85458,.90531,.9,.90531,.9,.90531,.9,1,.97276,.85576,.99613,.845,.85811,.90251,.91677,1,1,.86275,1.04502,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.00899,1.30628,.85576,.80178,.66862,.7927,.69323,.88127,.72459,.89711,.95381,.85576,.80591,.7805,.94729,.77512,.90531,.92222,.90637,.98621,.81698,.92655,.98558,.92222,.85359,.90637,.90976,.83809,.94523,.86275,.83509,.93157,.85308,.83392,.92346,.98621,.83509,.92886,.91324,.92168,.95381,.90646,.92886,.90557,.86847,.90276,.91324,.86842,.92168,.99531,.95381,.9224,.85408,.92699,.86847,1.0051,.91513,.80487,.93481,1,.88159,1.05214,.90646,.97355,.81539,.89398,.85923,.95381,.90646,.91513,.90646,.85923,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.9154,.94236,.9154,.94236,.9154,.94236,.85458,.89364,.96694,1,.89903,1,1,1,.91782,.91782,.91782,1,.896,.896,.896,.9332,.9332,.95973,1,1.26,1,1,.80479,.80178,1,1,.85633,1,1,1,1,.97276,1,1,1,.698,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.14542,1,.79199,.78694,1.02058,1.03493,1.05486,1,1,1.23026,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.20006,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.MyriadProBoldItalicMetrics={lineHeight:1.2,lineGap:.2};exports.MyriadProItalicFactors=[1.36898,1,1,.65507,.84943,.85639,.88465,.88465,.86936,.88307,.86948,.85283,.85283,1.06383,1.02058,.75945,.9219,.75945,1.17337,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.75945,.75945,1.02058,1.02058,1.02058,.69046,.70926,.85158,.77812,.76852,.89591,.70466,.76125,.80094,.86822,.83864,.728,.77212,.79475,.93637,.87514,.8588,.76013,.8588,.72421,.69866,.77598,.85991,.80811,.87832,.78112,.77512,.8562,1.0222,1.18417,1.0222,1.27014,.89903,1.15012,.93859,.94399,.846,.94399,.81453,1.0186,.94219,.96017,1.03075,1.02175,.912,1.03075,.96998,.96017,.93859,.94399,.94399,.95493,.746,1.12658,.94578,.91,.979,.882,.882,.83,.85034,.83537,.85034,1.02058,.70869,.88465,.88465,.88465,.88465,.83537,.90083,1.15012,.9161,.94565,.73541,1.02058,.53609,.69353,.79519,1.08595,1,1,1.15012,1,.91974,.75945,1.15012,1,.9446,.73361,.9005,.9005,.9005,.62864,.85158,.85158,.85158,.85158,.85158,.85158,.773,.76852,.70466,.70466,.70466,.70466,.83864,.83864,.83864,.83864,.90561,.87514,.8588,.8588,.8588,.8588,.8588,1.02058,.85751,.85991,.85991,.85991,.85991,.77512,.76013,.88075,.93859,.93859,.93859,.93859,.93859,.93859,.8075,.846,.81453,.81453,.81453,.81453,.82424,.82424,.82424,.82424,.9278,.96017,.93859,.93859,.93859,.93859,.93859,1.08595,.8562,.94578,.94578,.94578,.94578,.882,.94578,.882,.85158,.93859,.85158,.93859,.85158,.93859,.76852,.846,.76852,.846,.76852,.846,.76852,.846,.89591,.8544,.90561,.94399,.70466,.81453,.70466,.81453,.70466,.81453,.70466,.81453,.70466,.81453,.80094,.94219,.80094,.94219,.80094,.94219,1,1,.86822,.96017,.86822,.96017,.83864,.82424,.83864,.82424,.83864,.82424,.83864,1.03075,.83864,.82424,.81402,1.02738,.728,1.02175,1,1,.912,.79475,1.03075,1,1,.79475,.83911,.79475,.66266,.80553,1.06676,.87514,.96017,1,1,.87514,.96017,.86865,.87396,.96017,.8588,.93859,.8588,.93859,.8588,.93859,.867,.84759,.72421,.95493,1,1,.72421,.95493,.69866,.746,.69866,.746,1,1,.69866,.746,1,1,.77598,.88417,.77598,1.12658,.85991,.94578,.85991,.94578,.85991,.94578,.85991,.94578,.85991,.94578,.85991,.94578,.87832,.979,.77512,.882,.77512,.8562,.83,.8562,.83,.8562,.83,1,.88465,.85158,.93859,.773,.8075,.85751,.8562,1,1,.77598,1.12658,1.15012,1.15012,1.15012,1.15012,1.15012,1.15313,1.15012,1.15012,1.15012,1.08106,1.03901,.85158,.77025,.62264,.7646,.65351,.86026,.69461,.89947,1.03075,.85158,.77812,.76449,.88836,.70466,.8562,.86822,.8588,.83864,.77212,.85308,.93637,.87514,.82352,.8588,.85701,.76013,.89058,.77598,.8156,.82565,.78112,.77899,.89386,.83864,.8156,.9486,.92388,.96186,1.03075,.91123,.9486,.93298,.878,.93942,.92388,.84596,.96186,.95119,1.03075,.922,.88787,.95829,.88,.93559,.93859,.78815,.93758,1,.89217,1.03737,.91123,.93969,.77487,.85769,.86799,1.03075,.91123,.93859,.91123,.86799,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.87832,.979,.87832,.979,.87832,.979,.77512,.882,.9219,1,.89903,1,1,1,.87321,.87321,.87321,1,1.027,1.027,1.027,.86847,.86847,.79121,1,1.124,1,1,.73572,.73572,1,1,.85034,1,1,1,1,.88465,1,1,1,.669,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.04828,1,.74948,.75187,1.02058,.98391,1.02119,1,1,1.06233,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.05233,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.MyriadProItalicMetrics={lineHeight:1.2,lineGap:.2};exports.MyriadProRegularFactors=[1.36898,1,1,.76305,.82784,.94935,.89364,.92241,.89073,.90706,.98472,.85283,.85283,1.0664,1.02058,.74505,.9219,.74505,1.23456,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.74505,.74505,1.02058,1.02058,1.02058,.73002,.72601,.91755,.8126,.80314,.92222,.73764,.79726,.83051,.90284,.86023,.74,.8126,.84869,.96518,.91115,.8858,.79761,.8858,.74498,.73914,.81363,.89591,.83659,.89633,.85608,.8111,.90531,1.0222,1.22736,1.0222,1.27014,.89903,.90088,.86667,1.0231,.896,1.01411,.90083,1.05099,1.00512,.99793,1.05326,1.09377,.938,1.06226,1.00119,.99793,.98714,1.0231,1.01231,.98196,.792,1.19137,.99074,.962,1.01915,.926,.942,.856,.85034,.92006,.85034,1.02058,.69067,.92241,.92241,.92241,.92241,.92006,.9332,.90088,.91882,.93484,.75339,1.02058,.56866,.54324,.79519,1.08595,1,1,.90088,1,.95325,.74505,.90088,1,.97198,.75339,.91009,.91009,.91009,.66466,.91755,.91755,.91755,.91755,.91755,.91755,.788,.80314,.73764,.73764,.73764,.73764,.86023,.86023,.86023,.86023,.92915,.91115,.8858,.8858,.8858,.8858,.8858,1.02058,.8858,.89591,.89591,.89591,.89591,.8111,.79611,.89713,.86667,.86667,.86667,.86667,.86667,.86667,.86936,.896,.90083,.90083,.90083,.90083,.84224,.84224,.84224,.84224,.97276,.99793,.98714,.98714,.98714,.98714,.98714,1.08595,.89876,.99074,.99074,.99074,.99074,.942,1.0231,.942,.91755,.86667,.91755,.86667,.91755,.86667,.80314,.896,.80314,.896,.80314,.896,.80314,.896,.92222,.93372,.92915,1.01411,.73764,.90083,.73764,.90083,.73764,.90083,.73764,.90083,.73764,.90083,.83051,1.00512,.83051,1.00512,.83051,1.00512,1,1,.90284,.99793,.90976,.99793,.86023,.84224,.86023,.84224,.86023,.84224,.86023,1.05326,.86023,.84224,.82873,1.07469,.74,1.09377,1,1,.938,.84869,1.06226,1,1,.84869,.83704,.84869,.81441,.85588,1.08927,.91115,.99793,1,1,.91115,.99793,.91887,.90991,.99793,.8858,.98714,.8858,.98714,.8858,.98714,.894,.91434,.74498,.98196,1,1,.74498,.98196,.73914,.792,.73914,.792,1,1,.73914,.792,1,1,.81363,.904,.81363,1.19137,.89591,.99074,.89591,.99074,.89591,.99074,.89591,.99074,.89591,.99074,.89591,.99074,.89633,1.01915,.8111,.942,.8111,.90531,.856,.90531,.856,.90531,.856,1,.92241,.91755,.86667,.788,.86936,.8858,.89876,1,1,.81363,1.19137,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90388,1.03901,.92138,.78105,.7154,.86169,.80513,.94007,.82528,.98612,1.06226,.91755,.8126,.81884,.92819,.73764,.90531,.90284,.8858,.86023,.8126,.91172,.96518,.91115,.83089,.8858,.87791,.79761,.89297,.81363,.88157,.89992,.85608,.81992,.94307,.86023,.88157,.95308,.98699,.99793,1.06226,.95817,.95308,.97358,.928,.98088,.98699,.92761,.99793,.96017,1.06226,.986,.944,.95978,.938,.96705,.98714,.80442,.98972,1,.89762,1.04552,.95817,.99007,.87064,.91879,.88888,1.06226,.95817,.98714,.95817,.88888,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.89633,1.01915,.89633,1.01915,.89633,1.01915,.8111,.942,.9219,1,.89903,1,1,1,.93173,.93173,.93173,1,1.06304,1.06304,1.06904,.89903,.89903,.80549,1,1.156,1,1,.76575,.76575,1,1,.72458,1,1,1,1,.92241,1,1,1,.619,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.07257,1,.74705,.71119,1.02058,1.024,1.02119,1,1,1.1536,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.05638,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.MyriadProRegularMetrics={lineHeight:1.2,lineGap:.2}},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SegoeuiRegularMetrics=exports.SegoeuiRegularFactors=exports.SegoeuiItalicMetrics=exports.SegoeuiItalicFactors=exports.SegoeuiBoldMetrics=exports.SegoeuiBoldItalicMetrics=exports.SegoeuiBoldItalicFactors=exports.SegoeuiBoldFactors=void 0;exports.SegoeuiBoldFactors=[1.76738,1,1,.99297,.9824,1.04016,1.06497,1.03424,.97529,1.17647,1.23203,1.1085,1.1085,1.16939,1.2107,.9754,1.21408,.9754,1.59578,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,.81378,.81378,1.2107,1.2107,1.2107,.71703,.97847,.97363,.88776,.8641,1.02096,.79795,.85132,.914,1.06085,1.1406,.8007,.89858,.83693,1.14889,1.09398,.97489,.92094,.97489,.90399,.84041,.95923,1.00135,1,1.06467,.98243,.90996,.99361,1.1085,1.56942,1.1085,1.2107,.74627,.94282,.96752,1.01519,.86304,1.01359,.97278,1.15103,1.01359,.98561,1.02285,1.02285,1.00527,1.02285,1.0302,.99041,1.0008,1.01519,1.01359,1.02258,.79104,1.16862,.99041,.97454,1.02511,.99298,.96752,.95801,.94856,1.16579,.94856,1.2107,.9824,1.03424,1.03424,1,1.03424,1.16579,.8727,1.3871,1.18622,1.10818,1.04478,1.2107,1.18622,.75155,.94994,1.28826,1.21408,1.21408,.91056,1,.91572,.9754,.64663,1.18328,1.24866,1.04478,1.14169,1.15749,1.17389,.71703,.97363,.97363,.97363,.97363,.97363,.97363,.93506,.8641,.79795,.79795,.79795,.79795,1.1406,1.1406,1.1406,1.1406,1.02096,1.09398,.97426,.97426,.97426,.97426,.97426,1.2107,.97489,1.00135,1.00135,1.00135,1.00135,.90996,.92094,1.02798,.96752,.96752,.96752,.96752,.96752,.96752,.93136,.86304,.97278,.97278,.97278,.97278,1.02285,1.02285,1.02285,1.02285,.97122,.99041,1,1,1,1,1,1.28826,1.0008,.99041,.99041,.99041,.99041,.96752,1.01519,.96752,.97363,.96752,.97363,.96752,.97363,.96752,.8641,.86304,.8641,.86304,.8641,.86304,.8641,.86304,1.02096,1.03057,1.02096,1.03517,.79795,.97278,.79795,.97278,.79795,.97278,.79795,.97278,.79795,.97278,.914,1.01359,.914,1.01359,.914,1.01359,1,1,1.06085,.98561,1.06085,1.00879,1.1406,1.02285,1.1406,1.02285,1.1406,1.02285,1.1406,1.02285,1.1406,1.02285,.97138,1.08692,.8007,1.02285,1,1,1.00527,.83693,1.02285,1,1,.83693,.9455,.83693,.90418,.83693,1.13005,1.09398,.99041,1,1,1.09398,.99041,.96692,1.09251,.99041,.97489,1.0008,.97489,1.0008,.97489,1.0008,.93994,.97931,.90399,1.02258,1,1,.90399,1.02258,.84041,.79104,.84041,.79104,.84041,.79104,.84041,.79104,1,1,.95923,1.07034,.95923,1.16862,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.06467,1.02511,.90996,.96752,.90996,.99361,.95801,.99361,.95801,.99361,.95801,1.07733,1.03424,.97363,.96752,.93506,.93136,.97489,1.0008,1,1,.95923,1.16862,1.15103,1.15103,1.01173,1.03959,.75953,.81378,.79912,1.15103,1.21994,.95161,.87815,1.01149,.81525,.7676,.98167,1.01134,1.02546,.84097,1.03089,1.18102,.97363,.88776,.85134,.97826,.79795,.99361,1.06085,.97489,1.1406,.89858,1.0388,1.14889,1.09398,.86039,.97489,1.0595,.92094,.94793,.95923,.90996,.99346,.98243,1.02112,.95493,1.1406,.90996,1.03574,1.02597,1.0008,1.18102,1.06628,1.03574,1.0192,1.01932,1.00886,.97531,1.0106,1.0008,1.13189,1.18102,1.02277,.98683,1.0016,.99561,1.07237,1.0008,.90434,.99921,.93803,.8965,1.23085,1.06628,1.04983,.96268,1.0499,.98439,1.18102,1.06628,1.0008,1.06628,.98439,.79795,1,1,1,1,1,1,1,1,1,1,1,1,1.09466,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.97278,1,1,1,1,1,1,1,1,1,1,1,1,1.02065,1,1,1,1,1,1,1.06467,1.02511,1.06467,1.02511,1.06467,1.02511,.90996,.96752,1,1.21408,.89903,1,1,.75155,1.04394,1.04394,1.04394,1.04394,.98633,.98633,.98633,.73047,.73047,1.20642,.91211,1.25635,1.222,1.02956,1.03372,1.03372,.96039,1.24633,1,1.12454,.93503,1.03424,1.19687,1.03424,1,1,1,.771,1,1,1.15749,1.15749,1.15749,1.10948,.86279,.94434,.86279,.94434,.86182,1,1,1.16897,1,.96085,.90137,1.2107,1.18416,1.13973,.69825,.9716,2.10339,1.29004,1.29004,1.21172,1.29004,1.29004,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.18874,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.09193,1.09193,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.SegoeuiBoldMetrics={lineHeight:1.33008,lineGap:0};exports.SegoeuiBoldItalicFactors=[1.76738,1,1,.98946,1.03959,1.04016,1.02809,1.036,.97639,1.10953,1.23203,1.11144,1.11144,1.16939,1.21237,.9754,1.21261,.9754,1.59754,1.036,1.036,1.036,1.036,1.036,1.036,1.036,1.036,1.036,1.036,.81378,.81378,1.21237,1.21237,1.21237,.73541,.97847,.97363,.89723,.87897,1.0426,.79429,.85292,.91149,1.05815,1.1406,.79631,.90128,.83853,1.04396,1.10615,.97552,.94436,.97552,.88641,.80527,.96083,1.00135,1,1.06777,.9817,.91142,.99361,1.11144,1.57293,1.11144,1.21237,.74627,1.31818,1.06585,.97042,.83055,.97042,.93503,1.1261,.97042,.97922,1.14236,.94552,1.01054,1.14236,1.02471,.97922,.94165,.97042,.97042,1.0276,.78929,1.1261,.97922,.95874,1.02197,.98507,.96752,.97168,.95107,1.16579,.95107,1.21237,1.03959,1.036,1.036,1,1.036,1.16579,.87357,1.31818,1.18754,1.26781,1.05356,1.21237,1.18622,.79487,.94994,1.29004,1.24047,1.24047,1.31818,1,.91484,.9754,1.31818,1.1349,1.24866,1.05356,1.13934,1.15574,1.17389,.73541,.97363,.97363,.97363,.97363,.97363,.97363,.94385,.87897,.79429,.79429,.79429,.79429,1.1406,1.1406,1.1406,1.1406,1.0426,1.10615,.97552,.97552,.97552,.97552,.97552,1.21237,.97552,1.00135,1.00135,1.00135,1.00135,.91142,.94436,.98721,1.06585,1.06585,1.06585,1.06585,1.06585,1.06585,.96705,.83055,.93503,.93503,.93503,.93503,1.14236,1.14236,1.14236,1.14236,.93125,.97922,.94165,.94165,.94165,.94165,.94165,1.29004,.94165,.97922,.97922,.97922,.97922,.96752,.97042,.96752,.97363,1.06585,.97363,1.06585,.97363,1.06585,.87897,.83055,.87897,.83055,.87897,.83055,.87897,.83055,1.0426,1.0033,1.0426,.97042,.79429,.93503,.79429,.93503,.79429,.93503,.79429,.93503,.79429,.93503,.91149,.97042,.91149,.97042,.91149,.97042,1,1,1.05815,.97922,1.05815,.97922,1.1406,1.14236,1.1406,1.14236,1.1406,1.14236,1.1406,1.14236,1.1406,1.14236,.97441,1.04302,.79631,1.01582,1,1,1.01054,.83853,1.14236,1,1,.83853,1.09125,.83853,.90418,.83853,1.19508,1.10615,.97922,1,1,1.10615,.97922,1.01034,1.10466,.97922,.97552,.94165,.97552,.94165,.97552,.94165,.91602,.91981,.88641,1.0276,1,1,.88641,1.0276,.80527,.78929,.80527,.78929,.80527,.78929,.80527,.78929,1,1,.96083,1.05403,.95923,1.16862,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.06777,1.02197,.91142,.96752,.91142,.99361,.97168,.99361,.97168,.99361,.97168,1.23199,1.036,.97363,1.06585,.94385,.96705,.97552,.94165,1,1,.96083,1.1261,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,.95161,1.27126,1.00811,.83284,.77702,.99137,.95253,1.0347,.86142,1.07205,1.14236,.97363,.89723,.86869,1.09818,.79429,.99361,1.05815,.97552,1.1406,.90128,1.06662,1.04396,1.10615,.84918,.97552,1.04694,.94436,.98015,.96083,.91142,1.00356,.9817,1.01945,.98999,1.1406,.91142,1.04961,.9898,1.00639,1.14236,1.07514,1.04961,.99607,1.02897,1.008,.9898,.95134,1.00639,1.11121,1.14236,1.00518,.97981,1.02186,1,1.08578,.94165,.99314,.98387,.93028,.93377,1.35125,1.07514,1.10687,.93491,1.04232,1.00351,1.14236,1.07514,.94165,1.07514,1.00351,.79429,1,1,1,1,1,1,1,1,1,1,1,1,1.09097,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.93503,1,1,1,1,1,1,1,1,1,1,1,1,.96609,1,1,1,1,1,1,1.06777,1.02197,1.06777,1.02197,1.06777,1.02197,.91142,.96752,1,1.21261,.89903,1,1,.75155,1.04745,1.04745,1.04745,1.04394,.98633,.98633,.98633,.72959,.72959,1.20502,.91406,1.26514,1.222,1.02956,1.03372,1.03372,.96039,1.24633,1,1.09125,.93327,1.03336,1.16541,1.036,1,1,1,.771,1,1,1.15574,1.15574,1.15574,1.15574,.86364,.94434,.86279,.94434,.86224,1,1,1.16798,1,.96085,.90068,1.21237,1.18416,1.13904,.69825,.9716,2.10339,1.29004,1.29004,1.21339,1.29004,1.29004,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.18775,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.13269,1.13269,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.SegoeuiBoldItalicMetrics={lineHeight:1.33008,lineGap:0};exports.SegoeuiItalicFactors=[1.76738,1,1,.98946,1.14763,1.05365,1.06234,.96927,.92586,1.15373,1.18414,.91349,.91349,1.07403,1.17308,.78383,1.20088,.78383,1.42531,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.78383,.78383,1.17308,1.17308,1.17308,.77349,.94565,.94729,.85944,.88506,.9858,.74817,.80016,.88449,.98039,.95782,.69238,.89898,.83231,.98183,1.03989,.96924,.86237,.96924,.80595,.74524,.86091,.95402,.94143,.98448,.8858,.83089,.93285,1.0949,1.39016,1.0949,1.45994,.74627,1.04839,.97454,.97454,.87207,.97454,.87533,1.06151,.97454,1.00176,1.16484,1.08132,.98047,1.16484,1.02989,1.01054,.96225,.97454,.97454,1.06598,.79004,1.16344,1.00351,.94629,.9973,.91016,.96777,.9043,.91082,.92481,.91082,1.17308,.95748,.96927,.96927,1,.96927,.92481,.80597,1.04839,1.23393,1.1781,.9245,1.17308,1.20808,.63218,.94261,1.24822,1.09971,1.09971,1.04839,1,.85273,.78032,1.04839,1.09971,1.22326,.9245,1.09836,1.13525,1.15222,.70424,.94729,.94729,.94729,.94729,.94729,.94729,.85498,.88506,.74817,.74817,.74817,.74817,.95782,.95782,.95782,.95782,.9858,1.03989,.96924,.96924,.96924,.96924,.96924,1.17308,.96924,.95402,.95402,.95402,.95402,.83089,.86237,.88409,.97454,.97454,.97454,.97454,.97454,.97454,.92916,.87207,.87533,.87533,.87533,.87533,.93146,.93146,.93146,.93146,.93854,1.01054,.96225,.96225,.96225,.96225,.96225,1.24822,.8761,1.00351,1.00351,1.00351,1.00351,.96777,.97454,.96777,.94729,.97454,.94729,.97454,.94729,.97454,.88506,.87207,.88506,.87207,.88506,.87207,.88506,.87207,.9858,.95391,.9858,.97454,.74817,.87533,.74817,.87533,.74817,.87533,.74817,.87533,.74817,.87533,.88449,.97454,.88449,.97454,.88449,.97454,1,1,.98039,1.00176,.98039,1.00176,.95782,.93146,.95782,.93146,.95782,.93146,.95782,1.16484,.95782,.93146,.84421,1.12761,.69238,1.08132,1,1,.98047,.83231,1.16484,1,1,.84723,1.04861,.84723,.78755,.83231,1.23736,1.03989,1.01054,1,1,1.03989,1.01054,.9857,1.03849,1.01054,.96924,.96225,.96924,.96225,.96924,.96225,.92383,.90171,.80595,1.06598,1,1,.80595,1.06598,.74524,.79004,.74524,.79004,.74524,.79004,.74524,.79004,1,1,.86091,1.02759,.85771,1.16344,.95402,1.00351,.95402,1.00351,.95402,1.00351,.95402,1.00351,.95402,1.00351,.95402,1.00351,.98448,.9973,.83089,.96777,.83089,.93285,.9043,.93285,.9043,.93285,.9043,1.31868,.96927,.94729,.97454,.85498,.92916,.96924,.8761,1,1,.86091,1.16344,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,.81965,.81965,.94729,.78032,.71022,.90883,.84171,.99877,.77596,1.05734,1.2,.94729,.85944,.82791,.9607,.74817,.93285,.98039,.96924,.95782,.89898,.98316,.98183,1.03989,.78614,.96924,.97642,.86237,.86075,.86091,.83089,.90082,.8858,.97296,1.01284,.95782,.83089,1.0976,1.04,1.03342,1.2,1.0675,1.0976,.98205,1.03809,1.05097,1.04,.95364,1.03342,1.05401,1.2,1.02148,1.0119,1.04724,1.0127,1.02732,.96225,.8965,.97783,.93574,.94818,1.30679,1.0675,1.11826,.99821,1.0557,1.0326,1.2,1.0675,.96225,1.0675,1.0326,.74817,1,1,1,1,1,1,1,1,1,1,1,1,1.03754,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.87533,1,1,1,1,1,1,1,1,1,1,1,1,.98705,1,1,1,1,1,1,.98448,.9973,.98448,.9973,.98448,.9973,.83089,.96777,1,1.20088,.89903,1,1,.75155,.94945,.94945,.94945,.94945,1.12317,1.12317,1.12317,.67603,.67603,1.15621,.73584,1.21191,1.22135,1.06483,.94868,.94868,.95996,1.24633,1,1.07497,.87709,.96927,1.01473,.96927,1,1,1,.77295,1,1,1.09836,1.09836,1.09836,1.01522,.86321,.94434,.8649,.94434,.86182,1,1,1.083,1,.91578,.86438,1.17308,1.18416,1.14589,.69825,.97622,1.96791,1.24822,1.24822,1.17308,1.24822,1.24822,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.17984,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.10742,1.10742,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];exports.SegoeuiItalicMetrics={lineHeight:1.33008,lineGap:0};exports.SegoeuiRegularFactors=[1.76738,1,1,.98594,1.02285,1.10454,1.06234,.96927,.92037,1.19985,1.2046,.90616,.90616,1.07152,1.1714,.78032,1.20088,.78032,1.40246,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.78032,.78032,1.1714,1.1714,1.1714,.80597,.94084,.96706,.85944,.85734,.97093,.75842,.79936,.88198,.9831,.95782,.71387,.86969,.84636,1.07796,1.03584,.96924,.83968,.96924,.82826,.79649,.85771,.95132,.93119,.98965,.88433,.8287,.93365,1.08612,1.3638,1.08612,1.45786,.74627,.80499,.91484,1.05707,.92383,1.05882,.9403,1.12654,1.05882,1.01756,1.09011,1.09011,.99414,1.09011,1.034,1.01756,1.05356,1.05707,1.05882,1.04399,.84863,1.21968,1.01756,.95801,1.00068,.91797,.96777,.9043,.90351,.92105,.90351,1.1714,.85337,.96927,.96927,.99912,.96927,.92105,.80597,1.2434,1.20808,1.05937,.90957,1.1714,1.20808,.75155,.94261,1.24644,1.09971,1.09971,.84751,1,.85273,.78032,.61584,1.05425,1.17914,.90957,1.08665,1.11593,1.14169,.73381,.96706,.96706,.96706,.96706,.96706,.96706,.86035,.85734,.75842,.75842,.75842,.75842,.95782,.95782,.95782,.95782,.97093,1.03584,.96924,.96924,.96924,.96924,.96924,1.1714,.96924,.95132,.95132,.95132,.95132,.8287,.83968,.89049,.91484,.91484,.91484,.91484,.91484,.91484,.93575,.92383,.9403,.9403,.9403,.9403,.8717,.8717,.8717,.8717,1.00527,1.01756,1.05356,1.05356,1.05356,1.05356,1.05356,1.24644,.95923,1.01756,1.01756,1.01756,1.01756,.96777,1.05707,.96777,.96706,.91484,.96706,.91484,.96706,.91484,.85734,.92383,.85734,.92383,.85734,.92383,.85734,.92383,.97093,1.0969,.97093,1.05882,.75842,.9403,.75842,.9403,.75842,.9403,.75842,.9403,.75842,.9403,.88198,1.05882,.88198,1.05882,.88198,1.05882,1,1,.9831,1.01756,.9831,1.01756,.95782,.8717,.95782,.8717,.95782,.8717,.95782,1.09011,.95782,.8717,.84784,1.11551,.71387,1.09011,1,1,.99414,.84636,1.09011,1,1,.84636,1.0536,.84636,.94298,.84636,1.23297,1.03584,1.01756,1,1,1.03584,1.01756,1.00323,1.03444,1.01756,.96924,1.05356,.96924,1.05356,.96924,1.05356,.93066,.98293,.82826,1.04399,1,1,.82826,1.04399,.79649,.84863,.79649,.84863,.79649,.84863,.79649,.84863,1,1,.85771,1.17318,.85771,1.21968,.95132,1.01756,.95132,1.01756,.95132,1.01756,.95132,1.01756,.95132,1.01756,.95132,1.01756,.98965,1.00068,.8287,.96777,.8287,.93365,.9043,.93365,.9043,.93365,.9043,1.08571,.96927,.96706,.91484,.86035,.93575,.96924,.95923,1,1,.85771,1.21968,1.11437,1.11437,.93109,.91202,.60411,.84164,.55572,1.01173,.97361,.81818,.81818,.96635,.78032,.72727,.92366,.98601,1.03405,.77968,1.09799,1.2,.96706,.85944,.85638,.96491,.75842,.93365,.9831,.96924,.95782,.86969,.94152,1.07796,1.03584,.78437,.96924,.98715,.83968,.83491,.85771,.8287,.94492,.88433,.9287,1.0098,.95782,.8287,1.0625,.98248,1.03424,1.2,1.01071,1.0625,.95246,1.03809,1.04912,.98248,1.00221,1.03424,1.05443,1.2,1.04785,.99609,1.00169,1.05176,.99346,1.05356,.9087,1.03004,.95542,.93117,1.23362,1.01071,1.07831,1.02512,1.05205,1.03502,1.2,1.01071,1.05356,1.01071,1.03502,.75842,1,1,1,1,1,1,1,1,1,1,1,1,1.03719,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.9403,1,1,1,1,1,1,1,1,1,1,1,1,1.04021,1,1,1,1,1,1,.98965,1.00068,.98965,1.00068,.98965,1.00068,.8287,.96777,1,1.20088,.89903,1,1,.75155,1.03077,1.03077,1.03077,1.03077,1.13196,1.13196,1.13196,.67428,.67428,1.16039,.73291,1.20996,1.22135,1.06483,.94868,.94868,.95996,1.24633,1,1.07497,.87796,.96927,1.01518,.96927,1,1,1,.77295,1,1,1.10539,1.10539,1.11358,1.06967,.86279,.94434,.86279,.94434,.86182,1,1,1.083,1,.91578,.86507,1.1714,1.18416,1.14589,.69825,.97622,1.9697,1.24822,1.24822,1.17238,1.24822,1.24822,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.18083,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.10938,1.10938,1,1,1,1.05425,1.09971,1.09971,1.09971,1,1,1,1,1,1,1,1,1,1,1];exports.SegoeuiRegularMetrics={lineHeight:1.33008,lineGap:0}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PostScriptEvaluator=exports.PostScriptCompiler=exports.PDFFunctionFactory=void 0,exports.isPDFFunction=function isPDFFunction(v){let fnDict;if("object"!=typeof v)return!1;if(v instanceof _primitives.Dict)fnDict=v;else{if(!(v instanceof _base_stream.BaseStream))return!1;fnDict=v.dict}return fnDict.has("FunctionType")};var _primitives=__w_pdfjs_require__(5),_util=__w_pdfjs_require__(2),_ps_parser=__w_pdfjs_require__(58),_base_stream=__w_pdfjs_require__(7),_image_utils=__w_pdfjs_require__(59);function toNumberArray(arr){if(!Array.isArray(arr))return null;const length=arr.length;for(let i=0;i<length;i++)if("number"!=typeof arr[i]){const result=new Array(length);for(let j=0;j<length;j++)result[j]=+arr[j];return result}return arr}exports.PDFFunctionFactory=class PDFFunctionFactory{constructor({xref,isEvalSupported=!0}){this.xref=xref,this.isEvalSupported=!1!==isEvalSupported}create(fn){const cachedFunction=this.getCached(fn);if(cachedFunction)return cachedFunction;const parsedFunction=PDFFunction.parse({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:fn instanceof _primitives.Ref?this.xref.fetch(fn):fn});return this._cache(fn,parsedFunction),parsedFunction}createFromArray(fnObj){const cachedFunction=this.getCached(fnObj);if(cachedFunction)return cachedFunction;const parsedFunction=PDFFunction.parseArray({xref:this.xref,isEvalSupported:this.isEvalSupported,fnObj:fnObj instanceof _primitives.Ref?this.xref.fetch(fnObj):fnObj});return this._cache(fnObj,parsedFunction),parsedFunction}getCached(cacheKey){let fnRef;if(cacheKey instanceof _primitives.Ref?fnRef=cacheKey:cacheKey instanceof _primitives.Dict?fnRef=cacheKey.objId:cacheKey instanceof _base_stream.BaseStream&&(fnRef=cacheKey.dict&&cacheKey.dict.objId),fnRef){const localFunction=this._localFunctionCache.getByRef(fnRef);if(localFunction)return localFunction}return null}_cache(cacheKey,parsedFunction){if(!parsedFunction)throw new Error('PDFFunctionFactory._cache - expected "parsedFunction" argument.');let fnRef;cacheKey instanceof _primitives.Ref?fnRef=cacheKey:cacheKey instanceof _primitives.Dict?fnRef=cacheKey.objId:cacheKey instanceof _base_stream.BaseStream&&(fnRef=cacheKey.dict&&cacheKey.dict.objId),fnRef&&this._localFunctionCache.set(null,fnRef,parsedFunction)}get _localFunctionCache(){return(0,_util.shadow)(this,"_localFunctionCache",new _image_utils.LocalFunctionCache)}};class PDFFunction{static getSampleArray(size,outputSize,bps,stream){let i,ii,length=1;for(i=0,ii=size.length;i<ii;i++)length*=size[i];length*=outputSize;const array=new Array(length);let codeSize=0,codeBuf=0;const sampleMul=1/(2**bps-1),strBytes=stream.getBytes((length*bps+7)/8);let strIdx=0;for(i=0;i<length;i++){for(;codeSize<bps;)codeBuf<<=8,codeBuf|=strBytes[strIdx++],codeSize+=8;codeSize-=bps,array[i]=(codeBuf>>codeSize)*sampleMul,codeBuf&=(1<<codeSize)-1}return array}static parse({xref,isEvalSupported,fn}){const dict=fn.dict||fn;switch(dict.get("FunctionType")){case 0:return this.constructSampled({xref,isEvalSupported,fn,dict});case 1:break;case 2:return this.constructInterpolated({xref,isEvalSupported,dict});case 3:return this.constructStiched({xref,isEvalSupported,dict});case 4:return this.constructPostScript({xref,isEvalSupported,fn,dict})}throw new _util.FormatError("Unknown type of function")}static parseArray({xref,isEvalSupported,fnObj}){if(!Array.isArray(fnObj))return this.parse({xref,isEvalSupported,fn:fnObj});const fnArray=[];for(let j=0,jj=fnObj.length;j<jj;j++)fnArray.push(this.parse({xref,isEvalSupported,fn:xref.fetchIfRef(fnObj[j])}));return function(src,srcOffset,dest,destOffset){for(let i=0,ii=fnArray.length;i<ii;i++)fnArray[i](src,srcOffset,dest,destOffset+i)}}static constructSampled({xref,isEvalSupported,fn,dict}){function toMultiArray(arr){const inputLength=arr.length,out=[];let index=0;for(let i=0;i<inputLength;i+=2)out[index++]=[arr[i],arr[i+1]];return out}function interpolate(x,xmin,xmax,ymin,ymax){return ymin+(ymax-ymin)/(xmax-xmin)*(x-xmin)}let domain=toNumberArray(dict.getArray("Domain")),range=toNumberArray(dict.getArray("Range"));if(!domain||!range)throw new _util.FormatError("No domain or range");const inputSize=domain.length/2,outputSize=range.length/2;domain=toMultiArray(domain),range=toMultiArray(range);const size=toNumberArray(dict.getArray("Size")),bps=dict.get("BitsPerSample"),order=dict.get("Order")||1;1!==order&&(0,_util.info)("No support for cubic spline interpolation: "+order);let encode=toNumberArray(dict.getArray("Encode"));if(encode)encode=toMultiArray(encode);else{encode=[];for(let i=0;i<inputSize;++i)encode.push([0,size[i]-1])}let decode=toNumberArray(dict.getArray("Decode"));decode=decode?toMultiArray(decode):range;const samples=this.getSampleArray(size,outputSize,bps,fn);return function constructSampledFn(src,srcOffset,dest,destOffset){const cubeVertices=1<<inputSize,cubeN=new Float64Array(cubeVertices),cubeVertex=new Uint32Array(cubeVertices);let i,j;for(j=0;j<cubeVertices;j++)cubeN[j]=1;let k=outputSize,pos=1;for(i=0;i<inputSize;++i){const domain_2i=domain[i][0],domain_2i_1=domain[i][1];let e=interpolate(Math.min(Math.max(src[srcOffset+i],domain_2i),domain_2i_1),domain_2i,domain_2i_1,encode[i][0],encode[i][1]);const size_i=size[i];e=Math.min(Math.max(e,0),size_i-1);const e0=e<size_i-1?Math.floor(e):e-1,n0=e0+1-e,n1=e-e0,offset0=e0*k,offset1=offset0+k;for(j=0;j<cubeVertices;j++)j&pos?(cubeN[j]*=n1,cubeVertex[j]+=offset1):(cubeN[j]*=n0,cubeVertex[j]+=offset0);k*=size_i,pos<<=1}for(j=0;j<outputSize;++j){let rj=0;for(i=0;i<cubeVertices;i++)rj+=samples[cubeVertex[i]+j]*cubeN[i];rj=interpolate(rj,0,1,decode[j][0],decode[j][1]),dest[destOffset+j]=Math.min(Math.max(rj,range[j][0]),range[j][1])}}}static constructInterpolated({xref,isEvalSupported,dict}){const c0=toNumberArray(dict.getArray("C0"))||[0],c1=toNumberArray(dict.getArray("C1"))||[1],n=dict.get("N"),diff=[];for(let i=0,ii=c0.length;i<ii;++i)diff.push(c1[i]-c0[i]);const length=diff.length;return function constructInterpolatedFn(src,srcOffset,dest,destOffset){const x=1===n?src[srcOffset]:src[srcOffset]**n;for(let j=0;j<length;++j)dest[destOffset+j]=c0[j]+x*diff[j]}}static constructStiched({xref,isEvalSupported,dict}){const domain=toNumberArray(dict.getArray("Domain"));if(!domain)throw new _util.FormatError("No domain");if(1!==domain.length/2)throw new _util.FormatError("Bad domain for stiched function");const fnRefs=dict.get("Functions"),fns=[];for(let i=0,ii=fnRefs.length;i<ii;++i)fns.push(this.parse({xref,isEvalSupported,fn:xref.fetchIfRef(fnRefs[i])}));const bounds=toNumberArray(dict.getArray("Bounds")),encode=toNumberArray(dict.getArray("Encode")),tmpBuf=new Float32Array(1);return function constructStichedFn(src,srcOffset,dest,destOffset){const v=function constructStichedFromIRClip(v,min,max){return v>max?v=max:v<min&&(v=min),v}(src[srcOffset],domain[0],domain[1]),length=bounds.length;let i;for(i=0;i<length&&!(v<bounds[i]);++i);let dmin=domain[0];i>0&&(dmin=bounds[i-1]);let dmax=domain[1];i<bounds.length&&(dmax=bounds[i]);const rmin=encode[2*i],rmax=encode[2*i+1];tmpBuf[0]=dmin===dmax?rmin:rmin+(v-dmin)*(rmax-rmin)/(dmax-dmin),fns[i](tmpBuf,0,dest,destOffset)}}static constructPostScript({xref,isEvalSupported,fn,dict}){const domain=toNumberArray(dict.getArray("Domain")),range=toNumberArray(dict.getArray("Range"));if(!domain)throw new _util.FormatError("No domain.");if(!range)throw new _util.FormatError("No range.");const lexer=new _ps_parser.PostScriptLexer(fn),code=new _ps_parser.PostScriptParser(lexer).parse();if(isEvalSupported&&_util.FeatureTest.isEvalSupported){const compiled=(new PostScriptCompiler).compile(code,domain,range);if(compiled)return new Function("src","srcOffset","dest","destOffset",compiled)}(0,_util.info)("Unable to compile PS function");const numOutputs=range.length>>1,numInputs=domain.length>>1,evaluator=new PostScriptEvaluator(code),cache=Object.create(null);let cache_available=8192;const tmpBuf=new Float32Array(numInputs);return function constructPostScriptFn(src,srcOffset,dest,destOffset){let i,value,key="";const input=tmpBuf;for(i=0;i<numInputs;i++)value=src[srcOffset+i],input[i]=value,key+=value+"_";const cachedValue=cache[key];if(void 0!==cachedValue)return void dest.set(cachedValue,destOffset);const output=new Float32Array(numOutputs),stack=evaluator.execute(input),stackIndex=stack.length-numOutputs;for(i=0;i<numOutputs;i++){value=stack[stackIndex+i];let bound=range[2*i];value<bound?value=bound:(bound=range[2*i+1],value>bound&&(value=bound)),output[i]=value}cache_available>0&&(cache_available--,cache[key]=output),dest.set(output,destOffset)}}}class PostScriptStack{static get MAX_STACK_SIZE(){return(0,_util.shadow)(this,"MAX_STACK_SIZE",100)}constructor(initialStack){this.stack=initialStack?Array.prototype.slice.call(initialStack,0):[]}push(value){if(this.stack.length>=PostScriptStack.MAX_STACK_SIZE)throw new Error("PostScript function stack overflow.");this.stack.push(value)}pop(){if(this.stack.length<=0)throw new Error("PostScript function stack underflow.");return this.stack.pop()}copy(n){if(this.stack.length+n>=PostScriptStack.MAX_STACK_SIZE)throw new Error("PostScript function stack overflow.");const stack=this.stack;for(let i=stack.length-n,j=n-1;j>=0;j--,i++)stack.push(stack[i])}index(n){this.push(this.stack[this.stack.length-n-1])}roll(n,p){const stack=this.stack,l=stack.length-n,r=stack.length-1,c=l+(p-Math.floor(p/n)*n);for(let i=l,j=r;i<j;i++,j--){const t=stack[i];stack[i]=stack[j],stack[j]=t}for(let i=l,j=c-1;i<j;i++,j--){const t=stack[i];stack[i]=stack[j],stack[j]=t}for(let i=c,j=r;i<j;i++,j--){const t=stack[i];stack[i]=stack[j],stack[j]=t}}}class PostScriptEvaluator{constructor(operators){this.operators=operators}execute(initialStack){const stack=new PostScriptStack(initialStack);let counter=0;const operators=this.operators,length=operators.length;let operator,a,b;for(;counter<length;)if(operator=operators[counter++],"number"!=typeof operator)switch(operator){case"jz":b=stack.pop(),a=stack.pop(),a||(counter=b);break;case"j":a=stack.pop(),counter=a;break;case"abs":a=stack.pop(),stack.push(Math.abs(a));break;case"add":b=stack.pop(),a=stack.pop(),stack.push(a+b);break;case"and":b=stack.pop(),a=stack.pop(),"boolean"==typeof a&&"boolean"==typeof b?stack.push(a&&b):stack.push(a&b);break;case"atan":a=stack.pop(),stack.push(Math.atan(a));break;case"bitshift":b=stack.pop(),a=stack.pop(),a>0?stack.push(a<<b):stack.push(a>>b);break;case"ceiling":a=stack.pop(),stack.push(Math.ceil(a));break;case"copy":a=stack.pop(),stack.copy(a);break;case"cos":a=stack.pop(),stack.push(Math.cos(a));break;case"cvi":a=0|stack.pop(),stack.push(a);break;case"cvr":break;case"div":b=stack.pop(),a=stack.pop(),stack.push(a/b);break;case"dup":stack.copy(1);break;case"eq":b=stack.pop(),a=stack.pop(),stack.push(a===b);break;case"exch":stack.roll(2,1);break;case"exp":b=stack.pop(),a=stack.pop(),stack.push(a**b);break;case"false":stack.push(!1);break;case"floor":a=stack.pop(),stack.push(Math.floor(a));break;case"ge":b=stack.pop(),a=stack.pop(),stack.push(a>=b);break;case"gt":b=stack.pop(),a=stack.pop(),stack.push(a>b);break;case"idiv":b=stack.pop(),a=stack.pop(),stack.push(a/b|0);break;case"index":a=stack.pop(),stack.index(a);break;case"le":b=stack.pop(),a=stack.pop(),stack.push(a<=b);break;case"ln":a=stack.pop(),stack.push(Math.log(a));break;case"log":a=stack.pop(),stack.push(Math.log(a)/Math.LN10);break;case"lt":b=stack.pop(),a=stack.pop(),stack.push(a<b);break;case"mod":b=stack.pop(),a=stack.pop(),stack.push(a%b);break;case"mul":b=stack.pop(),a=stack.pop(),stack.push(a*b);break;case"ne":b=stack.pop(),a=stack.pop(),stack.push(a!==b);break;case"neg":a=stack.pop(),stack.push(-a);break;case"not":a=stack.pop(),"boolean"==typeof a?stack.push(!a):stack.push(~a);break;case"or":b=stack.pop(),a=stack.pop(),"boolean"==typeof a&&"boolean"==typeof b?stack.push(a||b):stack.push(a|b);break;case"pop":stack.pop();break;case"roll":b=stack.pop(),a=stack.pop(),stack.roll(a,b);break;case"round":a=stack.pop(),stack.push(Math.round(a));break;case"sin":a=stack.pop(),stack.push(Math.sin(a));break;case"sqrt":a=stack.pop(),stack.push(Math.sqrt(a));break;case"sub":b=stack.pop(),a=stack.pop(),stack.push(a-b);break;case"true":stack.push(!0);break;case"truncate":a=stack.pop(),a=a<0?Math.ceil(a):Math.floor(a),stack.push(a);break;case"xor":b=stack.pop(),a=stack.pop(),"boolean"==typeof a&&"boolean"==typeof b?stack.push(a!==b):stack.push(a^b);break;default:throw new _util.FormatError(`Unknown operator ${operator}`)}else stack.push(operator);return stack.stack}}exports.PostScriptEvaluator=PostScriptEvaluator;class AstNode{constructor(type){this.type=type}visit(visitor){(0,_util.unreachable)("abstract method")}}class AstArgument extends AstNode{constructor(index,min,max){super("args"),this.index=index,this.min=min,this.max=max}visit(visitor){visitor.visitArgument(this)}}class AstLiteral extends AstNode{constructor(number){super("literal"),this.number=number,this.min=number,this.max=number}visit(visitor){visitor.visitLiteral(this)}}class AstBinaryOperation extends AstNode{constructor(op,arg1,arg2,min,max){super("binary"),this.op=op,this.arg1=arg1,this.arg2=arg2,this.min=min,this.max=max}visit(visitor){visitor.visitBinaryOperation(this)}}class AstMin extends AstNode{constructor(arg,max){super("max"),this.arg=arg,this.min=arg.min,this.max=max}visit(visitor){visitor.visitMin(this)}}class AstVariable extends AstNode{constructor(index,min,max){super("var"),this.index=index,this.min=min,this.max=max}visit(visitor){visitor.visitVariable(this)}}class AstVariableDefinition extends AstNode{constructor(variable,arg){super("definition"),this.variable=variable,this.arg=arg}visit(visitor){visitor.visitVariableDefinition(this)}}class ExpressionBuilderVisitor{constructor(){this.parts=[]}visitArgument(arg){this.parts.push("Math.max(",arg.min,", Math.min(",arg.max,", src[srcOffset + ",arg.index,"]))")}visitVariable(variable){this.parts.push("v",variable.index)}visitLiteral(literal){this.parts.push(literal.number)}visitBinaryOperation(operation){this.parts.push("("),operation.arg1.visit(this),this.parts.push(" ",operation.op," "),operation.arg2.visit(this),this.parts.push(")")}visitVariableDefinition(definition){this.parts.push("var "),definition.variable.visit(this),this.parts.push(" = "),definition.arg.visit(this),this.parts.push(";")}visitMin(max){this.parts.push("Math.min("),max.arg.visit(this),this.parts.push(", ",max.max,")")}toString(){return this.parts.join("")}}function buildAddOperation(num1,num2){return"literal"===num2.type&&0===num2.number?num1:"literal"===num1.type&&0===num1.number?num2:"literal"===num2.type&&"literal"===num1.type?new AstLiteral(num1.number+num2.number):new AstBinaryOperation("+",num1,num2,num1.min+num2.min,num1.max+num2.max)}function buildMulOperation(num1,num2){if("literal"===num2.type){if(0===num2.number)return new AstLiteral(0);if(1===num2.number)return num1;if("literal"===num1.type)return new AstLiteral(num1.number*num2.number)}if("literal"===num1.type){if(0===num1.number)return new AstLiteral(0);if(1===num1.number)return num2}const min=Math.min(num1.min*num2.min,num1.min*num2.max,num1.max*num2.min,num1.max*num2.max),max=Math.max(num1.min*num2.min,num1.min*num2.max,num1.max*num2.min,num1.max*num2.max);return new AstBinaryOperation("*",num1,num2,min,max)}function buildSubOperation(num1,num2){if("literal"===num2.type){if(0===num2.number)return num1;if("literal"===num1.type)return new AstLiteral(num1.number-num2.number)}return"binary"===num2.type&&"-"===num2.op&&"literal"===num1.type&&1===num1.number&&"literal"===num2.arg1.type&&1===num2.arg1.number?num2.arg2:new AstBinaryOperation("-",num1,num2,num1.min-num2.max,num1.max-num2.min)}function buildMinOperation(num1,max){return num1.min>=max?new AstLiteral(max):num1.max<=max?num1:new AstMin(num1,max)}class PostScriptCompiler{compile(code,domain,range){const stack=[],instructions=[],inputSize=domain.length>>1,outputSize=range.length>>1;let n,j,num1,num2,ast1,ast2,tmpVar,item,lastRegister=0;for(let i=0;i<inputSize;i++)stack.push(new AstArgument(i,domain[2*i],domain[2*i+1]));for(let i=0,ii=code.length;i<ii;i++)if(item=code[i],"number"!=typeof item)switch(item){case"add":if(stack.length<2)return null;num2=stack.pop(),num1=stack.pop(),stack.push(buildAddOperation(num1,num2));break;case"cvr":if(stack.length<1)return null;break;case"mul":if(stack.length<2)return null;num2=stack.pop(),num1=stack.pop(),stack.push(buildMulOperation(num1,num2));break;case"sub":if(stack.length<2)return null;num2=stack.pop(),num1=stack.pop(),stack.push(buildSubOperation(num1,num2));break;case"exch":if(stack.length<2)return null;ast1=stack.pop(),ast2=stack.pop(),stack.push(ast1,ast2);break;case"pop":if(stack.length<1)return null;stack.pop();break;case"index":if(stack.length<1)return null;if(num1=stack.pop(),"literal"!==num1.type)return null;if(n=num1.number,n<0||!Number.isInteger(n)||stack.length<n)return null;if(ast1=stack[stack.length-n-1],"literal"===ast1.type||"var"===ast1.type){stack.push(ast1);break}tmpVar=new AstVariable(lastRegister++,ast1.min,ast1.max),stack[stack.length-n-1]=tmpVar,stack.push(tmpVar),instructions.push(new AstVariableDefinition(tmpVar,ast1));break;case"dup":if(stack.length<1)return null;if("number"==typeof code[i+1]&&"gt"===code[i+2]&&code[i+3]===i+7&&"jz"===code[i+4]&&"pop"===code[i+5]&&code[i+6]===code[i+1]){num1=stack.pop(),stack.push(buildMinOperation(num1,code[i+1])),i+=6;break}if(ast1=stack.at(-1),"literal"===ast1.type||"var"===ast1.type){stack.push(ast1);break}tmpVar=new AstVariable(lastRegister++,ast1.min,ast1.max),stack[stack.length-1]=tmpVar,stack.push(tmpVar),instructions.push(new AstVariableDefinition(tmpVar,ast1));break;case"roll":if(stack.length<2)return null;if(num2=stack.pop(),num1=stack.pop(),"literal"!==num2.type||"literal"!==num1.type)return null;if(j=num2.number,n=num1.number,n<=0||!Number.isInteger(n)||!Number.isInteger(j)||stack.length<n)return null;if(j=(j%n+n)%n,0===j)break;Array.prototype.push.apply(stack,stack.splice(stack.length-n,n-j));break;default:return null}else stack.push(new AstLiteral(item));if(stack.length!==outputSize)return null;const result=[];for(const instruction of instructions){const statementBuilder=new ExpressionBuilderVisitor;instruction.visit(statementBuilder),result.push(statementBuilder.toString())}for(let i=0,ii=stack.length;i<ii;i++){const expr=stack[i],statementBuilder=new ExpressionBuilderVisitor;expr.visit(statementBuilder);const min=range[2*i],max=range[2*i+1],out=[statementBuilder.toString()];min>expr.min&&(out.unshift("Math.max(",min,", "),out.push(")")),max<expr.max&&(out.unshift("Math.min(",max,", "),out.push(")")),out.unshift("dest[destOffset + ",i,"] = "),out.push(";"),result.push(out.join(""))}return result.join("\n")}}exports.PostScriptCompiler=PostScriptCompiler},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PostScriptParser=exports.PostScriptLexer=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_core_utils=__w_pdfjs_require__(6);exports.PostScriptParser=class PostScriptParser{constructor(lexer){this.lexer=lexer,this.operators=[],this.token=null,this.prev=null}nextToken(){this.prev=this.token,this.token=this.lexer.getToken()}accept(type){return this.token.type===type&&(this.nextToken(),!0)}expect(type){if(this.accept(type))return!0;throw new _util.FormatError(`Unexpected symbol: found ${this.token.type} expected ${type}.`)}parse(){return this.nextToken(),this.expect(PostScriptTokenTypes.LBRACE),this.parseBlock(),this.expect(PostScriptTokenTypes.RBRACE),this.operators}parseBlock(){for(;;)if(this.accept(PostScriptTokenTypes.NUMBER))this.operators.push(this.prev.value);else if(this.accept(PostScriptTokenTypes.OPERATOR))this.operators.push(this.prev.value);else{if(!this.accept(PostScriptTokenTypes.LBRACE))return;this.parseCondition()}}parseCondition(){const conditionLocation=this.operators.length;if(this.operators.push(null,null),this.parseBlock(),this.expect(PostScriptTokenTypes.RBRACE),this.accept(PostScriptTokenTypes.IF))this.operators[conditionLocation]=this.operators.length,this.operators[conditionLocation+1]="jz";else{if(!this.accept(PostScriptTokenTypes.LBRACE))throw new _util.FormatError("PS Function: error parsing conditional.");{const jumpLocation=this.operators.length;this.operators.push(null,null);const endOfTrue=this.operators.length;this.parseBlock(),this.expect(PostScriptTokenTypes.RBRACE),this.expect(PostScriptTokenTypes.IFELSE),this.operators[jumpLocation]=this.operators.length,this.operators[jumpLocation+1]="j",this.operators[conditionLocation]=endOfTrue,this.operators[conditionLocation+1]="jz"}}}};const PostScriptTokenTypes={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5};class PostScriptToken{static get opCache(){return(0,_util.shadow)(this,"opCache",Object.create(null))}constructor(type,value){this.type=type,this.value=value}static getOperator(op){const opValue=PostScriptToken.opCache[op];return opValue||(PostScriptToken.opCache[op]=new PostScriptToken(PostScriptTokenTypes.OPERATOR,op))}static get LBRACE(){return(0,_util.shadow)(this,"LBRACE",new PostScriptToken(PostScriptTokenTypes.LBRACE,"{"))}static get RBRACE(){return(0,_util.shadow)(this,"RBRACE",new PostScriptToken(PostScriptTokenTypes.RBRACE,"}"))}static get IF(){return(0,_util.shadow)(this,"IF",new PostScriptToken(PostScriptTokenTypes.IF,"IF"))}static get IFELSE(){return(0,_util.shadow)(this,"IFELSE",new PostScriptToken(PostScriptTokenTypes.IFELSE,"IFELSE"))}}exports.PostScriptLexer=class PostScriptLexer{constructor(stream){this.stream=stream,this.nextChar(),this.strBuf=[]}nextChar(){return this.currentChar=this.stream.getByte()}getToken(){let comment=!1,ch=this.currentChar;for(;;){if(ch<0)return _primitives.EOF;if(comment)10!==ch&&13!==ch||(comment=!1);else if(37===ch)comment=!0;else if(!(0,_core_utils.isWhiteSpace)(ch))break;ch=this.nextChar()}switch(0|ch){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return new PostScriptToken(PostScriptTokenTypes.NUMBER,this.getNumber());case 123:return this.nextChar(),PostScriptToken.LBRACE;case 125:return this.nextChar(),PostScriptToken.RBRACE}const strBuf=this.strBuf;for(strBuf.length=0,strBuf[0]=String.fromCharCode(ch);(ch=this.nextChar())>=0&&(ch>=65&&ch<=90||ch>=97&&ch<=122);)strBuf.push(String.fromCharCode(ch));const str=strBuf.join("");switch(str.toLowerCase()){case"if":return PostScriptToken.IF;case"ifelse":return PostScriptToken.IFELSE;default:return PostScriptToken.getOperator(str)}}getNumber(){let ch=this.currentChar;const strBuf=this.strBuf;for(strBuf.length=0,strBuf[0]=String.fromCharCode(ch);(ch=this.nextChar())>=0&&(ch>=48&&ch<=57||45===ch||46===ch);)strBuf.push(String.fromCharCode(ch));const value=parseFloat(strBuf.join(""));if(isNaN(value))throw new _util.FormatError(`Invalid floating point number: ${value}`);return value}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalTilingPatternCache=exports.LocalImageCache=exports.LocalGStateCache=exports.LocalFunctionCache=exports.LocalColorSpaceCache=exports.GlobalImageCache=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5);class BaseLocalCache{constructor(options){this.constructor===BaseLocalCache&&(0,_util.unreachable)("Cannot initialize BaseLocalCache."),this._onlyRefs=!0===(options&&options.onlyRefs),this._onlyRefs||(this._nameRefMap=new Map,this._imageMap=new Map),this._imageCache=new _primitives.RefSetCache}getByName(name){this._onlyRefs&&(0,_util.unreachable)("Should not call `getByName` method.");const ref=this._nameRefMap.get(name);return ref?this.getByRef(ref):this._imageMap.get(name)||null}getByRef(ref){return this._imageCache.get(ref)||null}set(name,ref,data){(0,_util.unreachable)("Abstract method `set` called.")}}exports.LocalImageCache=class LocalImageCache extends BaseLocalCache{set(name,ref=null,data){if("string"!=typeof name)throw new Error('LocalImageCache.set - expected "name" argument.');if(ref){if(this._imageCache.has(ref))return;return this._nameRefMap.set(name,ref),void this._imageCache.put(ref,data)}this._imageMap.has(name)||this._imageMap.set(name,data)}};exports.LocalColorSpaceCache=class LocalColorSpaceCache extends BaseLocalCache{set(name=null,ref=null,data){if("string"!=typeof name&&!ref)throw new Error('LocalColorSpaceCache.set - expected "name" and/or "ref" argument.');if(ref){if(this._imageCache.has(ref))return;return null!==name&&this._nameRefMap.set(name,ref),void this._imageCache.put(ref,data)}this._imageMap.has(name)||this._imageMap.set(name,data)}};exports.LocalFunctionCache=class LocalFunctionCache extends BaseLocalCache{constructor(options){super({onlyRefs:!0})}set(name=null,ref,data){if(!ref)throw new Error('LocalFunctionCache.set - expected "ref" argument.');this._imageCache.has(ref)||this._imageCache.put(ref,data)}};exports.LocalGStateCache=class LocalGStateCache extends BaseLocalCache{set(name,ref=null,data){if("string"!=typeof name)throw new Error('LocalGStateCache.set - expected "name" argument.');if(ref){if(this._imageCache.has(ref))return;return this._nameRefMap.set(name,ref),void this._imageCache.put(ref,data)}this._imageMap.has(name)||this._imageMap.set(name,data)}};exports.LocalTilingPatternCache=class LocalTilingPatternCache extends BaseLocalCache{constructor(options){super({onlyRefs:!0})}set(name=null,ref,data){if(!ref)throw new Error('LocalTilingPatternCache.set - expected "ref" argument.');this._imageCache.has(ref)||this._imageCache.put(ref,data)}};class GlobalImageCache{static get NUM_PAGES_THRESHOLD(){return(0,_util.shadow)(this,"NUM_PAGES_THRESHOLD",2)}static get MIN_IMAGES_TO_CACHE(){return(0,_util.shadow)(this,"MIN_IMAGES_TO_CACHE",10)}static get MAX_BYTE_SIZE(){return(0,_util.shadow)(this,"MAX_BYTE_SIZE",4e7)}constructor(){this._refCache=new _primitives.RefSetCache,this._imageCache=new _primitives.RefSetCache}get _byteSize(){let byteSize=0;for(const imageData of this._imageCache)byteSize+=imageData.byteSize;return byteSize}get _cacheLimitReached(){return!(this._imageCache.size<GlobalImageCache.MIN_IMAGES_TO_CACHE)&&!(this._byteSize<GlobalImageCache.MAX_BYTE_SIZE)}shouldCache(ref,pageIndex){const pageIndexSet=this._refCache.get(ref);return!((pageIndexSet?pageIndexSet.size+(pageIndexSet.has(pageIndex)?0:1):1)<GlobalImageCache.NUM_PAGES_THRESHOLD)&&!(!this._imageCache.has(ref)&&this._cacheLimitReached)}addPageIndex(ref,pageIndex){let pageIndexSet=this._refCache.get(ref);pageIndexSet||(pageIndexSet=new Set,this._refCache.put(ref,pageIndexSet)),pageIndexSet.add(pageIndex)}addByteSize(ref,byteSize){const imageData=this._imageCache.get(ref);imageData&&(imageData.byteSize||(imageData.byteSize=byteSize))}getData(ref,pageIndex){const pageIndexSet=this._refCache.get(ref);if(!pageIndexSet)return null;if(pageIndexSet.size<GlobalImageCache.NUM_PAGES_THRESHOLD)return null;const imageData=this._imageCache.get(ref);return imageData?(pageIndexSet.add(pageIndex),imageData):null}setData(ref,data){if(!this._refCache.has(ref))throw new Error('GlobalImageCache.setData - expected "addPageIndex" to have been called.');this._imageCache.has(ref)||(this._cacheLimitReached?(0,_util.warn)("GlobalImageCache.setData - cache limit reached."):this._imageCache.put(ref,data))}clear(onlyData=!1){onlyData||this._refCache.clear(),this._imageCache.clear()}}exports.GlobalImageCache=GlobalImageCache},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.bidi=function bidi(str,startLevel=-1,vertical=!1){let isLTR=!0;const strLength=str.length;if(0===strLength||vertical)return createBidiText(str,isLTR,vertical);chars.length=strLength,types.length=strLength;let i,ii,numBidi=0;for(i=0;i<strLength;++i){chars[i]=str.charAt(i);const charCode=str.charCodeAt(i);let charType="L";charCode<=255?charType=baseTypes[charCode]:1424<=charCode&&charCode<=1524?charType="R":1536<=charCode&&charCode<=1791?(charType=arabicTypes[255&charCode],charType||(0,_util.warn)("Bidi: invalid Unicode character "+charCode.toString(16))):1792<=charCode&&charCode<=2220&&(charType="AL"),"R"!==charType&&"AL"!==charType&&"AN"!==charType||numBidi++,types[i]=charType}if(0===numBidi)return isLTR=!0,createBidiText(str,isLTR);-1===startLevel&&(numBidi/strLength<.3&&strLength>4?(isLTR=!0,startLevel=0):(isLTR=!1,startLevel=1));const levels=[];for(i=0;i<strLength;++i)levels[i]=startLevel;const e=isOdd(startLevel)?"R":"L",sor=e,eor=sor;let t,lastType=sor;for(i=0;i<strLength;++i)"NSM"===types[i]?types[i]=lastType:lastType=types[i];for(lastType=sor,i=0;i<strLength;++i)t=types[i],"EN"===t?types[i]="AL"===lastType?"AN":"EN":"R"!==t&&"L"!==t&&"AL"!==t||(lastType=t);for(i=0;i<strLength;++i)t=types[i],"AL"===t&&(types[i]="R");for(i=1;i<strLength-1;++i)"ES"===types[i]&&"EN"===types[i-1]&&"EN"===types[i+1]&&(types[i]="EN"),"CS"!==types[i]||"EN"!==types[i-1]&&"AN"!==types[i-1]||types[i+1]!==types[i-1]||(types[i]=types[i-1]);for(i=0;i<strLength;++i)if("EN"===types[i]){for(let j=i-1;j>=0&&"ET"===types[j];--j)types[j]="EN";for(let j=i+1;j<strLength&&"ET"===types[j];++j)types[j]="EN"}for(i=0;i<strLength;++i)t=types[i],"WS"!==t&&"ES"!==t&&"ET"!==t&&"CS"!==t||(types[i]="ON");for(lastType=sor,i=0;i<strLength;++i)t=types[i],"EN"===t?types[i]="L"===lastType?"L":"EN":"R"!==t&&"L"!==t||(lastType=t);for(i=0;i<strLength;++i)if("ON"===types[i]){const end=findUnequal(types,i+1,"ON");let before=sor;i>0&&(before=types[i-1]);let after=eor;end+1<strLength&&(after=types[end+1]),"L"!==before&&(before="R"),"L"!==after&&(after="R"),before===after&&setValues(types,i,end,before),i=end-1}for(i=0;i<strLength;++i)"ON"===types[i]&&(types[i]=e);for(i=0;i<strLength;++i)t=types[i],isEven(levels[i])?"R"===t?levels[i]+=1:"AN"!==t&&"EN"!==t||(levels[i]+=2):"L"!==t&&"AN"!==t&&"EN"!==t||(levels[i]+=1);let level,highestLevel=-1,lowestOddLevel=99;for(i=0,ii=levels.length;i<ii;++i)level=levels[i],highestLevel<level&&(highestLevel=level),lowestOddLevel>level&&isOdd(level)&&(lowestOddLevel=level);for(level=highestLevel;level>=lowestOddLevel;--level){let start=-1;for(i=0,ii=levels.length;i<ii;++i)levels[i]<level?start>=0&&(reverseValues(chars,start,i),start=-1):start<0&&(start=i);start>=0&&reverseValues(chars,start,levels.length)}for(i=0,ii=chars.length;i<ii;++i){const ch=chars[i];"<"!==ch&&">"!==ch||(chars[i]="")}return createBidiText(chars.join(""),isLTR)};var _util=__w_pdfjs_require__(2);const baseTypes=["BN","BN","BN","BN","BN","BN","BN","BN","BN","S","B","S","WS","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","B","B","B","S","WS","ON","ON","ET","ET","ET","ON","ON","ON","ON","ON","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","ON","ON","ON","ON","ON","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","ON","ON","ON","ON","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","ON","ON","ON","BN","BN","BN","BN","BN","BN","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","CS","ON","ET","ET","ET","ET","ON","ON","ON","ON","L","ON","ON","BN","ON","ON","ET","ET","EN","EN","ON","L","ON","ON","ON","EN","L","ON","ON","ON","ON","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","L","L","L","L","L","L","L","L"],arabicTypes=["AN","AN","AN","AN","AN","AN","ON","ON","AL","ET","ET","AL","CS","AL","ON","ON","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","AN","AN","AN","AN","AN","AN","AN","AN","AN","ET","AN","AN","AL","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","ON","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","NSM","NSM","ON","NSM","NSM","NSM","NSM","AL","AL","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","AL","AL","AL","AL","AL","AL"];function isOdd(i){return 0!=(1&i)}function isEven(i){return 0==(1&i)}function findUnequal(arr,start,value){let j,jj;for(j=start,jj=arr.length;j<jj;++j)if(arr[j]!==value)return j;return j}function setValues(arr,start,end,value){for(let j=start;j<end;++j)arr[j]=value}function reverseValues(arr,start,end){for(let i=start,j=end-1;i<j;++i,--j){const temp=arr[i];arr[i]=arr[j],arr[j]=temp}}function createBidiText(str,isLTR,vertical=!1){let dir="ltr";return vertical?dir="ttb":isLTR||(dir="rtl"),{str,dir}}const chars=[],types=[]},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MurmurHash3_64=void 0;var _util=__w_pdfjs_require__(2);exports.MurmurHash3_64=class MurmurHash3_64{constructor(seed){this.h1=seed?4294967295&seed:3285377520,this.h2=seed?4294967295&seed:3285377520}update(input){let data,length;if("string"==typeof input){data=new Uint8Array(2*input.length),length=0;for(let i=0,ii=input.length;i<ii;i++){const code=input.charCodeAt(i);code<=255?data[length++]=code:(data[length++]=code>>>8,data[length++]=255&code)}}else{if(!(0,_util.isArrayBuffer)(input))throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");data=input.slice(),length=data.byteLength}const blockCounts=length>>2,tailLength=length-4*blockCounts,dataUint32=new Uint32Array(data.buffer,0,blockCounts);let k1=0,k2=0,h1=this.h1,h2=this.h2;const C1=3432918353,C2=461845907;for(let i=0;i<blockCounts;i++)1&i?(k1=dataUint32[i],k1=k1*C1&4294901760|11601*k1&65535,k1=k1<<15|k1>>>17,k1=k1*C2&4294901760|13715*k1&65535,h1^=k1,h1=h1<<13|h1>>>19,h1=5*h1+3864292196):(k2=dataUint32[i],k2=k2*C1&4294901760|11601*k2&65535,k2=k2<<15|k2>>>17,k2=k2*C2&4294901760|13715*k2&65535,h2^=k2,h2=h2<<13|h2>>>19,h2=5*h2+3864292196);switch(k1=0,tailLength){case 3:k1^=data[4*blockCounts+2]<<16;case 2:k1^=data[4*blockCounts+1]<<8;case 1:k1^=data[4*blockCounts],k1=k1*C1&4294901760|11601*k1&65535,k1=k1<<15|k1>>>17,k1=k1*C2&4294901760|13715*k1&65535,1&blockCounts?h1^=k1:h2^=k1}this.h1=h1,this.h2=h2}hexdigest(){let h1=this.h1,h2=this.h2;h1^=h2>>>1,h1=3981806797*h1&4294901760|36045*h1&65535,h2=4283543511*h2&4294901760|(2950163797*(h2<<16|h1>>>16)&4294901760)>>>16,h1^=h2>>>1,h1=444984403*h1&4294901760|60499*h1&65535,h2=3301882366*h2&4294901760|(3120437893*(h2<<16|h1>>>16)&4294901760)>>>16,h1^=h2>>>1;const hex1=(h1>>>0).toString(16),hex2=(h2>>>0).toString(16);return hex1.padStart(8,"0")+hex2.padStart(8,"0")}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.OperatorList=void 0;var _util=__w_pdfjs_require__(2);function addState(parentState,pattern,checkFn,iterateFn,processFn){let state=parentState;for(let i=0,ii=pattern.length-1;i<ii;i++){const item=pattern[i];state=state[item]||(state[item]=[])}state[pattern.at(-1)]={checkFn,iterateFn,processFn}}const InitialState=[];addState(InitialState,[_util.OPS.save,_util.OPS.transform,_util.OPS.paintInlineImageXObject,_util.OPS.restore],null,(function iterateInlineImageGroup(context,i){const fnArray=context.fnArray,pos=(i-(context.iCurr-3))%4;switch(pos){case 0:return fnArray[i]===_util.OPS.save;case 1:return fnArray[i]===_util.OPS.transform;case 2:return fnArray[i]===_util.OPS.paintInlineImageXObject;case 3:return fnArray[i]===_util.OPS.restore}throw new Error(`iterateInlineImageGroup - invalid pos: ${pos}`)}),(function foundInlineImageGroup(context,i){const fnArray=context.fnArray,argsArray=context.argsArray,curr=context.iCurr,iFirstSave=curr-3,iFirstTransform=curr-2,iFirstPIIXO=curr-1,count=Math.min(Math.floor((i-iFirstSave)/4),200);if(count<10)return i-(i-iFirstSave)%4;let maxX=0;const map=[];let maxLineHeight=0,currentX=1,currentY=1;for(let q=0;q<count;q++){const transform=argsArray[iFirstTransform+(q<<2)],img=argsArray[iFirstPIIXO+(q<<2)][0];currentX+img.width>1e3&&(maxX=Math.max(maxX,currentX),currentY+=maxLineHeight+2,currentX=0,maxLineHeight=0),map.push({transform,x:currentX,y:currentY,w:img.width,h:img.height}),currentX+=img.width+2,maxLineHeight=Math.max(maxLineHeight,img.height)}const imgWidth=Math.max(maxX,currentX)+1,imgHeight=currentY+maxLineHeight+1,imgData=new Uint8Array(imgWidth*imgHeight*4),imgRowSize=imgWidth<<2;for(let q=0;q<count;q++){const data=argsArray[iFirstPIIXO+(q<<2)][0].data,rowSize=map[q].w<<2;let dataOffset=0,offset=map[q].x+map[q].y*imgWidth<<2;imgData.set(data.subarray(0,rowSize),offset-imgRowSize);for(let k=0,kk=map[q].h;k<kk;k++)imgData.set(data.subarray(dataOffset,dataOffset+rowSize),offset),dataOffset+=rowSize,offset+=imgRowSize;for(imgData.set(data.subarray(dataOffset-rowSize,dataOffset),offset);offset>=0;)data[offset-4]=data[offset],data[offset-3]=data[offset+1],data[offset-2]=data[offset+2],data[offset-1]=data[offset+3],data[offset+rowSize]=data[offset+rowSize-4],data[offset+rowSize+1]=data[offset+rowSize-3],data[offset+rowSize+2]=data[offset+rowSize-2],data[offset+rowSize+3]=data[offset+rowSize-1],offset-=imgRowSize}return fnArray.splice(iFirstSave,4*count,_util.OPS.paintInlineImageXObjectGroup),argsArray.splice(iFirstSave,4*count,[{width:imgWidth,height:imgHeight,kind:_util.ImageKind.RGBA_32BPP,data:imgData},map]),iFirstSave+1})),addState(InitialState,[_util.OPS.save,_util.OPS.transform,_util.OPS.paintImageMaskXObject,_util.OPS.restore],null,(function iterateImageMaskGroup(context,i){const fnArray=context.fnArray,pos=(i-(context.iCurr-3))%4;switch(pos){case 0:return fnArray[i]===_util.OPS.save;case 1:return fnArray[i]===_util.OPS.transform;case 2:return fnArray[i]===_util.OPS.paintImageMaskXObject;case 3:return fnArray[i]===_util.OPS.restore}throw new Error(`iterateImageMaskGroup - invalid pos: ${pos}`)}),(function foundImageMaskGroup(context,i){const fnArray=context.fnArray,argsArray=context.argsArray,curr=context.iCurr,iFirstSave=curr-3,iFirstTransform=curr-2,iFirstPIMXO=curr-1;let count=Math.floor((i-iFirstSave)/4);if(count<10)return i-(i-iFirstSave)%4;let iTransform,transformArgs,isSameImage=!1;const firstPIMXOArg0=argsArray[iFirstPIMXO][0],firstTransformArg0=argsArray[iFirstTransform][0],firstTransformArg1=argsArray[iFirstTransform][1],firstTransformArg2=argsArray[iFirstTransform][2],firstTransformArg3=argsArray[iFirstTransform][3];if(firstTransformArg1===firstTransformArg2){isSameImage=!0,iTransform=iFirstTransform+4;let iPIMXO=iFirstPIMXO+4;for(let q=1;q<count;q++,iTransform+=4,iPIMXO+=4)if(transformArgs=argsArray[iTransform],argsArray[iPIMXO][0]!==firstPIMXOArg0||transformArgs[0]!==firstTransformArg0||transformArgs[1]!==firstTransformArg1||transformArgs[2]!==firstTransformArg2||transformArgs[3]!==firstTransformArg3){q<10?isSameImage=!1:count=q;break}}if(isSameImage){count=Math.min(count,1e3);const positions=new Float32Array(2*count);iTransform=iFirstTransform;for(let q=0;q<count;q++,iTransform+=4)transformArgs=argsArray[iTransform],positions[q<<1]=transformArgs[4],positions[1+(q<<1)]=transformArgs[5];fnArray.splice(iFirstSave,4*count,_util.OPS.paintImageMaskXObjectRepeat),argsArray.splice(iFirstSave,4*count,[firstPIMXOArg0,firstTransformArg0,firstTransformArg1,firstTransformArg2,firstTransformArg3,positions])}else{count=Math.min(count,100);const images=[];for(let q=0;q<count;q++){transformArgs=argsArray[iFirstTransform+(q<<2)];const maskParams=argsArray[iFirstPIMXO+(q<<2)][0];images.push({data:maskParams.data,width:maskParams.width,height:maskParams.height,interpolate:maskParams.interpolate,count:maskParams.count,transform:transformArgs})}fnArray.splice(iFirstSave,4*count,_util.OPS.paintImageMaskXObjectGroup),argsArray.splice(iFirstSave,4*count,[images])}return iFirstSave+1})),addState(InitialState,[_util.OPS.save,_util.OPS.transform,_util.OPS.paintImageXObject,_util.OPS.restore],(function(context){const argsArray=context.argsArray,iFirstTransform=context.iCurr-2;return 0===argsArray[iFirstTransform][1]&&0===argsArray[iFirstTransform][2]}),(function iterateImageGroup(context,i){const fnArray=context.fnArray,argsArray=context.argsArray,pos=(i-(context.iCurr-3))%4;switch(pos){case 0:return fnArray[i]===_util.OPS.save;case 1:if(fnArray[i]!==_util.OPS.transform)return!1;const iFirstTransform=context.iCurr-2,firstTransformArg0=argsArray[iFirstTransform][0],firstTransformArg3=argsArray[iFirstTransform][3];return argsArray[i][0]===firstTransformArg0&&0===argsArray[i][1]&&0===argsArray[i][2]&&argsArray[i][3]===firstTransformArg3;case 2:if(fnArray[i]!==_util.OPS.paintImageXObject)return!1;const firstPIXOArg0=argsArray[context.iCurr-1][0];return argsArray[i][0]===firstPIXOArg0;case 3:return fnArray[i]===_util.OPS.restore}throw new Error(`iterateImageGroup - invalid pos: ${pos}`)}),(function(context,i){const fnArray=context.fnArray,argsArray=context.argsArray,curr=context.iCurr,iFirstSave=curr-3,iFirstTransform=curr-2,firstPIXOArg0=argsArray[curr-1][0],firstTransformArg0=argsArray[iFirstTransform][0],firstTransformArg3=argsArray[iFirstTransform][3],count=Math.min(Math.floor((i-iFirstSave)/4),1e3);if(count<3)return i-(i-iFirstSave)%4;const positions=new Float32Array(2*count);let iTransform=iFirstTransform;for(let q=0;q<count;q++,iTransform+=4){const transformArgs=argsArray[iTransform];positions[q<<1]=transformArgs[4],positions[1+(q<<1)]=transformArgs[5]}const args=[firstPIXOArg0,firstTransformArg0,firstTransformArg3,positions];return fnArray.splice(iFirstSave,4*count,_util.OPS.paintImageXObjectRepeat),argsArray.splice(iFirstSave,4*count,args),iFirstSave+1})),addState(InitialState,[_util.OPS.beginText,_util.OPS.setFont,_util.OPS.setTextMatrix,_util.OPS.showText,_util.OPS.endText],null,(function iterateShowTextGroup(context,i){const fnArray=context.fnArray,argsArray=context.argsArray,pos=(i-(context.iCurr-4))%5;switch(pos){case 0:return fnArray[i]===_util.OPS.beginText;case 1:return fnArray[i]===_util.OPS.setFont;case 2:return fnArray[i]===_util.OPS.setTextMatrix;case 3:if(fnArray[i]!==_util.OPS.showText)return!1;const iFirstSetFont=context.iCurr-3,firstSetFontArg0=argsArray[iFirstSetFont][0],firstSetFontArg1=argsArray[iFirstSetFont][1];return argsArray[i][0]===firstSetFontArg0&&argsArray[i][1]===firstSetFontArg1;case 4:return fnArray[i]===_util.OPS.endText}throw new Error(`iterateShowTextGroup - invalid pos: ${pos}`)}),(function(context,i){const fnArray=context.fnArray,argsArray=context.argsArray,curr=context.iCurr,iFirstBeginText=curr-4,iFirstSetFont=curr-3,iFirstSetTextMatrix=curr-2,iFirstShowText=curr-1,iFirstEndText=curr,firstSetFontArg0=argsArray[iFirstSetFont][0],firstSetFontArg1=argsArray[iFirstSetFont][1];let count=Math.min(Math.floor((i-iFirstBeginText)/5),1e3);if(count<3)return i-(i-iFirstBeginText)%5;let iFirst=iFirstBeginText;iFirstBeginText>=4&&fnArray[iFirstBeginText-4]===fnArray[iFirstSetFont]&&fnArray[iFirstBeginText-3]===fnArray[iFirstSetTextMatrix]&&fnArray[iFirstBeginText-2]===fnArray[iFirstShowText]&&fnArray[iFirstBeginText-1]===fnArray[iFirstEndText]&&argsArray[iFirstBeginText-4][0]===firstSetFontArg0&&argsArray[iFirstBeginText-4][1]===firstSetFontArg1&&(count++,iFirst-=5);let iEndText=iFirst+4;for(let q=1;q<count;q++)fnArray.splice(iEndText,3),argsArray.splice(iEndText,3),iEndText+=2;return iEndText+1}));class NullOptimizer{constructor(queue){this.queue=queue}_optimize(){}push(fn,args){this.queue.fnArray.push(fn),this.queue.argsArray.push(args),this._optimize()}flush(){}reset(){}}class QueueOptimizer extends NullOptimizer{constructor(queue){super(queue),this.state=null,this.context={iCurr:0,fnArray:queue.fnArray,argsArray:queue.argsArray},this.match=null,this.lastProcessed=0}_optimize(){const fnArray=this.queue.fnArray;let i=this.lastProcessed,ii=fnArray.length,state=this.state,match=this.match;if(!state&&!match&&i+1===ii&&!InitialState[fnArray[i]])return void(this.lastProcessed=ii);const context=this.context;for(;i<ii;){if(match){if((0,match.iterateFn)(context,i)){i++;continue}if(i=(0,match.processFn)(context,i+1),ii=fnArray.length,match=null,state=null,i>=ii)break}state=(state||InitialState)[fnArray[i]],state&&!Array.isArray(state)?(context.iCurr=i,i++,!state.checkFn||(0,state.checkFn)(context)?(match=state,state=null):state=null):i++}this.state=state,this.match=match,this.lastProcessed=i}flush(){for(;this.match;){const length=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,length),this.match=null,this.state=null,this._optimize()}}reset(){this.state=null,this.match=null,this.lastProcessed=0}}class OperatorList{static get CHUNK_SIZE(){return(0,_util.shadow)(this,"CHUNK_SIZE",1e3)}static get CHUNK_SIZE_ABOUT(){return(0,_util.shadow)(this,"CHUNK_SIZE_ABOUT",this.CHUNK_SIZE-5)}constructor(intent=0,streamSink){this._streamSink=streamSink,this.fnArray=[],this.argsArray=[],!streamSink||intent&_util.RenderingIntentFlag.OPLIST?this.optimizer=new NullOptimizer(this):this.optimizer=new QueueOptimizer(this),this.dependencies=new Set,this._totalLength=0,this.weight=0,this._resolved=streamSink?null:Promise.resolve()}get length(){return this.argsArray.length}get ready(){return this._resolved||this._streamSink.ready}get totalLength(){return this._totalLength+this.length}addOp(fn,args){this.optimizer.push(fn,args),this.weight++,this._streamSink&&(this.weight>=OperatorList.CHUNK_SIZE||this.weight>=OperatorList.CHUNK_SIZE_ABOUT&&(fn===_util.OPS.restore||fn===_util.OPS.endText))&&this.flush()}addImageOps(fn,args,optionalContent){void 0!==optionalContent&&this.addOp(_util.OPS.beginMarkedContentProps,["OC",optionalContent]),this.addOp(fn,args),void 0!==optionalContent&&this.addOp(_util.OPS.endMarkedContent,[])}addDependency(dependency){this.dependencies.has(dependency)||(this.dependencies.add(dependency),this.addOp(_util.OPS.dependency,[dependency]))}addDependencies(dependencies){for(const dependency of dependencies)this.addDependency(dependency)}addOpList(opList){if(opList instanceof OperatorList){for(const dependency of opList.dependencies)this.dependencies.add(dependency);for(let i=0,ii=opList.length;i<ii;i++)this.addOp(opList.fnArray[i],opList.argsArray[i])}else(0,_util.warn)('addOpList - ignoring invalid "opList" parameter.')}getIR(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length}}get _transfers(){const transfers=[],{fnArray,argsArray,length}=this;for(let i=0;i<length;i++)switch(fnArray[i]){case _util.OPS.paintInlineImageXObject:case _util.OPS.paintInlineImageXObjectGroup:case _util.OPS.paintImageMaskXObject:const arg=argsArray[i][0];!arg.cached&&arg.data&&arg.data.buffer instanceof ArrayBuffer&&transfers.push(arg.data.buffer)}return transfers}flush(lastChunk=!1,separateAnnots=null){this.optimizer.flush();const length=this.length;this._totalLength+=length,this._streamSink.enqueue({fnArray:this.fnArray,argsArray:this.argsArray,lastChunk,separateAnnots,length},1,this._transfers),this.dependencies.clear(),this.fnArray.length=0,this.argsArray.length=0,this.weight=0,this.optimizer.reset()}}exports.OperatorList=OperatorList},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PDFImage=void 0;var _util=__w_pdfjs_require__(2),_image_utils=__w_pdfjs_require__(64),_base_stream=__w_pdfjs_require__(7),_colorspace=__w_pdfjs_require__(14),_decode_stream=__w_pdfjs_require__(19),_jpeg_stream=__w_pdfjs_require__(27),_jpx=__w_pdfjs_require__(30),_primitives=__w_pdfjs_require__(5);function decodeAndClamp(value,addend,coefficient,max){return(value=addend+value*coefficient)<0?value=0:value>max&&(value=max),value}function resizeImageMask(src,bpc,w1,h1,w2,h2){const length=w2*h2;let dest;dest=bpc<=8?new Uint8Array(length):bpc<=16?new Uint16Array(length):new Uint32Array(length);const xRatio=w1/w2,yRatio=h1/h2;let i,j,py,oldIndex,newIndex=0;const xScaled=new Uint16Array(w2),w1Scanline=w1;for(i=0;i<w2;i++)xScaled[i]=Math.floor(i*xRatio);for(i=0;i<h2;i++)for(py=Math.floor(i*yRatio)*w1Scanline,j=0;j<w2;j++)oldIndex=py+xScaled[j],dest[newIndex++]=src[oldIndex];return dest}class PDFImage{constructor({xref,res,image,isInline=!1,smask=null,mask=null,isMask=!1,pdfFunctionFactory,localColorSpaceCache}){this.image=image;const dict=image.dict,filter=dict.get("F","Filter");let filterName;if(filter instanceof _primitives.Name)filterName=filter.name;else if(Array.isArray(filter)){const filterZero=xref.fetchIfRef(filter[0]);filterZero instanceof _primitives.Name&&(filterName=filterZero.name)}switch(filterName){case"JPXDecode":const jpxImage=new _jpx.JpxImage;jpxImage.parseImageProperties(image.stream),image.stream.reset(),image.width=jpxImage.width,image.height=jpxImage.height,image.bitsPerComponent=jpxImage.bitsPerComponent,image.numComps=jpxImage.componentsCount;break;case"JBIG2Decode":image.bitsPerComponent=1,image.numComps=1}let width=dict.get("W","Width"),height=dict.get("H","Height");if(Number.isInteger(image.width)&&image.width>0&&Number.isInteger(image.height)&&image.height>0&&(image.width!==width||image.height!==height)&&((0,_util.warn)("PDFImage - using the Width/Height of the image data, rather than the image dictionary."),width=image.width,height=image.height),width<1||height<1)throw new _util.FormatError(`Invalid image width: ${width} or height: ${height}`);this.width=width,this.height=height,this.interpolate=dict.get("I","Interpolate"),this.imageMask=dict.get("IM","ImageMask")||!1,this.matte=dict.get("Matte")||!1;let bitsPerComponent=image.bitsPerComponent;if(!bitsPerComponent&&(bitsPerComponent=dict.get("BPC","BitsPerComponent"),!bitsPerComponent)){if(!this.imageMask)throw new _util.FormatError(`Bits per component missing in image: ${this.imageMask}`);bitsPerComponent=1}if(this.bpc=bitsPerComponent,!this.imageMask){let colorSpace=dict.getRaw("CS")||dict.getRaw("ColorSpace");if(!colorSpace)switch((0,_util.info)("JPX images (which do not require color spaces)"),image.numComps){case 1:colorSpace=_primitives.Name.get("DeviceGray");break;case 3:colorSpace=_primitives.Name.get("DeviceRGB");break;case 4:colorSpace=_primitives.Name.get("DeviceCMYK");break;default:throw new Error(`JPX images with ${image.numComps} color components not supported.`)}this.colorSpace=_colorspace.ColorSpace.parse({cs:colorSpace,xref,resources:isInline?res:null,pdfFunctionFactory,localColorSpaceCache}),this.numComps=this.colorSpace.numComps}if(this.decode=dict.getArray("D","Decode"),this.needsDecode=!1,this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode,bitsPerComponent)||isMask&&!_colorspace.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=!0;const max=(1<<bitsPerComponent)-1;this.decodeCoefficients=[],this.decodeAddends=[];const isIndexed=this.colorSpace&&"Indexed"===this.colorSpace.name;for(let i=0,j=0;i<this.decode.length;i+=2,++j){const dmin=this.decode[i],dmax=this.decode[i+1];this.decodeCoefficients[j]=isIndexed?(dmax-dmin)/max:dmax-dmin,this.decodeAddends[j]=isIndexed?dmin:max*dmin}}if(smask)this.smask=new PDFImage({xref,res,image:smask,isInline,pdfFunctionFactory,localColorSpaceCache});else if(mask)if(mask instanceof _base_stream.BaseStream){mask.dict.get("IM","ImageMask")?this.mask=new PDFImage({xref,res,image:mask,isInline,isMask:!0,pdfFunctionFactory,localColorSpaceCache}):(0,_util.warn)("Ignoring /Mask in image without /ImageMask.")}else this.mask=mask}static async buildImage({xref,res,image,isInline=!1,pdfFunctionFactory,localColorSpaceCache}){const imageData=image;let smaskData=null,maskData=null;const smask=image.dict.get("SMask"),mask=image.dict.get("Mask");return smask?smask instanceof _base_stream.BaseStream?smaskData=smask:(0,_util.warn)("Unsupported /SMask format."):mask&&(mask instanceof _base_stream.BaseStream||Array.isArray(mask)?maskData=mask:(0,_util.warn)("Unsupported /Mask format.")),new PDFImage({xref,res,image:imageData,isInline,smask:smaskData,mask:maskData,pdfFunctionFactory,localColorSpaceCache})}static createRawMask({imgArray,width,height,imageIsFromDecodeStream,inverseDecode,interpolate}){const computedLength=(width+7>>3)*height,actualLength=imgArray.byteLength;let data,i;if(!imageIsFromDecodeStream||inverseDecode&&!(computedLength===actualLength)?inverseDecode?(data=new Uint8Array(computedLength),data.set(imgArray),data.fill(255,actualLength)):data=new Uint8Array(imgArray):data=imgArray,inverseDecode)for(i=0;i<actualLength;i++)data[i]^=255;return{data,width,height,interpolate}}static createMask({imgArray,width,height,imageIsFromDecodeStream,inverseDecode,interpolate}){const isSingleOpaquePixel=1===width&&1===height&&inverseDecode===(0===imgArray.length||!!(128&imgArray[0]));if(isSingleOpaquePixel)return{isSingleOpaquePixel};if(_util.FeatureTest.isOffscreenCanvasSupported){const canvas=new OffscreenCanvas(width,height),ctx=canvas.getContext("2d"),imgData=ctx.createImageData(width,height);(0,_image_utils.applyMaskImageData)({src:imgArray,dest:imgData.data,width,height,inverseDecode}),ctx.putImageData(imgData,0,0);return{data:null,width,height,interpolate,bitmap:canvas.transferToImageBitmap()}}return this.createRawMask({imgArray,width,height,inverseDecode,imageIsFromDecodeStream,interpolate})}get drawWidth(){return Math.max(this.width,this.smask&&this.smask.width||0,this.mask&&this.mask.width||0)}get drawHeight(){return Math.max(this.height,this.smask&&this.smask.height||0,this.mask&&this.mask.height||0)}decodeBuffer(buffer){const bpc=this.bpc,numComps=this.numComps,decodeAddends=this.decodeAddends,decodeCoefficients=this.decodeCoefficients,max=(1<<bpc)-1;let i,ii;if(1===bpc){for(i=0,ii=buffer.length;i<ii;i++)buffer[i]=+!buffer[i];return}let index=0;for(i=0,ii=this.width*this.height;i<ii;i++)for(let j=0;j<numComps;j++)buffer[index]=decodeAndClamp(buffer[index],decodeAddends[j],decodeCoefficients[j],max),index++}getComponents(buffer){const bpc=this.bpc;if(8===bpc)return buffer;const width=this.width,height=this.height,numComps=this.numComps,length=width*height*numComps;let output,bufferPos=0;output=bpc<=8?new Uint8Array(length):bpc<=16?new Uint16Array(length):new Uint32Array(length);const rowComps=width*numComps,max=(1<<bpc)-1;let ii,buf,i=0;if(1===bpc){let mask,loop1End,loop2End;for(let j=0;j<height;j++){for(loop1End=i+(-8&rowComps),loop2End=i+rowComps;i<loop1End;)buf=buffer[bufferPos++],output[i]=buf>>7&1,output[i+1]=buf>>6&1,output[i+2]=buf>>5&1,output[i+3]=buf>>4&1,output[i+4]=buf>>3&1,output[i+5]=buf>>2&1,output[i+6]=buf>>1&1,output[i+7]=1&buf,i+=8;if(i<loop2End)for(buf=buffer[bufferPos++],mask=128;i<loop2End;)output[i++]=+!!(buf&mask),mask>>=1}}else{let bits=0;for(buf=0,i=0,ii=length;i<ii;++i){for(i%rowComps==0&&(buf=0,bits=0);bits<bpc;)buf=buf<<8|buffer[bufferPos++],bits+=8;const remainingBits=bits-bpc;let value=buf>>remainingBits;value<0?value=0:value>max&&(value=max),output[i]=value,buf&=(1<<remainingBits)-1,bits=remainingBits}}return output}fillOpacity(rgbaBuf,width,height,actualHeight,image){const smask=this.smask,mask=this.mask;let alphaBuf,sw,sh,i,ii,j;if(smask)sw=smask.width,sh=smask.height,alphaBuf=new Uint8ClampedArray(sw*sh),smask.fillGrayBuffer(alphaBuf),sw===width&&sh===height||(alphaBuf=resizeImageMask(alphaBuf,smask.bpc,sw,sh,width,height));else if(mask)if(mask instanceof PDFImage){for(sw=mask.width,sh=mask.height,alphaBuf=new Uint8ClampedArray(sw*sh),mask.numComps=1,mask.fillGrayBuffer(alphaBuf),i=0,ii=sw*sh;i<ii;++i)alphaBuf[i]=255-alphaBuf[i];sw===width&&sh===height||(alphaBuf=resizeImageMask(alphaBuf,mask.bpc,sw,sh,width,height))}else{if(!Array.isArray(mask))throw new _util.FormatError("Unknown mask format.");{alphaBuf=new Uint8ClampedArray(width*height);const numComps=this.numComps;for(i=0,ii=width*height;i<ii;++i){let opacity=0;const imageOffset=i*numComps;for(j=0;j<numComps;++j){const color=image[imageOffset+j],maskOffset=2*j;if(color<mask[maskOffset]||color>mask[maskOffset+1]){opacity=255;break}}alphaBuf[i]=opacity}}}if(alphaBuf)for(i=0,j=3,ii=width*actualHeight;i<ii;++i,j+=4)rgbaBuf[j]=alphaBuf[i];else for(i=0,j=3,ii=width*actualHeight;i<ii;++i,j+=4)rgbaBuf[j]=255}undoPreblend(buffer,width,height){const matte=this.smask&&this.smask.matte;if(!matte)return;const matteRgb=this.colorSpace.getRgb(matte,0),matteR=matteRgb[0],matteG=matteRgb[1],matteB=matteRgb[2],length=width*height*4;for(let i=0;i<length;i+=4){const alpha=buffer[i+3];if(0===alpha){buffer[i]=255,buffer[i+1]=255,buffer[i+2]=255;continue}const k=255/alpha;buffer[i]=(buffer[i]-matteR)*k+matteR,buffer[i+1]=(buffer[i+1]-matteG)*k+matteG,buffer[i+2]=(buffer[i+2]-matteB)*k+matteB}}createImageData(forceRGBA=!1){const drawWidth=this.drawWidth,drawHeight=this.drawHeight,imgData={width:drawWidth,height:drawHeight,interpolate:this.interpolate,kind:0,data:null},numComps=this.numComps,originalWidth=this.width,originalHeight=this.height,bpc=this.bpc,rowBytes=originalWidth*numComps*bpc+7>>3;if(!forceRGBA){let kind;if("DeviceGray"===this.colorSpace.name&&1===bpc?kind=_util.ImageKind.GRAYSCALE_1BPP:"DeviceRGB"!==this.colorSpace.name||8!==bpc||this.needsDecode||(kind=_util.ImageKind.RGB_24BPP),kind&&!this.smask&&!this.mask&&drawWidth===originalWidth&&drawHeight===originalHeight){if(imgData.kind=kind,imgData.data=this.getImageBytes(originalHeight*rowBytes,{}),this.needsDecode){(0,_util.assert)(kind===_util.ImageKind.GRAYSCALE_1BPP,"PDFImage.createImageData: The image must be grayscale.");const buffer=imgData.data;for(let i=0,ii=buffer.length;i<ii;i++)buffer[i]^=255}return imgData}if(this.image instanceof _jpeg_stream.JpegStream&&!this.smask&&!this.mask){let imageLength=originalHeight*rowBytes;switch(this.colorSpace.name){case"DeviceGray":imageLength*=3;case"DeviceRGB":case"DeviceCMYK":return imgData.kind=_util.ImageKind.RGB_24BPP,imgData.data=this.getImageBytes(imageLength,{drawWidth,drawHeight,forceRGB:!0}),imgData}}}const imgArray=this.getImageBytes(originalHeight*rowBytes,{internal:!0}),actualHeight=0|imgArray.length/rowBytes*drawHeight/originalHeight,comps=this.getComponents(imgArray);let alpha01,maybeUndoPreblend;return forceRGBA||this.smask||this.mask?(imgData.kind=_util.ImageKind.RGBA_32BPP,imgData.data=new Uint8ClampedArray(drawWidth*drawHeight*4),alpha01=1,maybeUndoPreblend=!0,this.fillOpacity(imgData.data,drawWidth,drawHeight,actualHeight,comps)):(imgData.kind=_util.ImageKind.RGB_24BPP,imgData.data=new Uint8ClampedArray(drawWidth*drawHeight*3),alpha01=0,maybeUndoPreblend=!1),this.needsDecode&&this.decodeBuffer(comps),this.colorSpace.fillRgb(imgData.data,originalWidth,originalHeight,drawWidth,drawHeight,actualHeight,bpc,comps,alpha01),maybeUndoPreblend&&this.undoPreblend(imgData.data,drawWidth,actualHeight),imgData}fillGrayBuffer(buffer){const numComps=this.numComps;if(1!==numComps)throw new _util.FormatError(`Reading gray scale from a color image: ${numComps}`);const width=this.width,height=this.height,bpc=this.bpc,rowBytes=width*numComps*bpc+7>>3,imgArray=this.getImageBytes(height*rowBytes,{internal:!0}),comps=this.getComponents(imgArray);let i,length;if(1===bpc){if(length=width*height,this.needsDecode)for(i=0;i<length;++i)buffer[i]=comps[i]-1&255;else for(i=0;i<length;++i)buffer[i]=255&-comps[i];return}this.needsDecode&&this.decodeBuffer(comps),length=width*height;const scale=255/((1<<bpc)-1);for(i=0;i<length;++i)buffer[i]=scale*comps[i]}getImageBytes(length,{drawWidth,drawHeight,forceRGB=!1,internal=!1}){this.image.reset(),this.image.drawWidth=drawWidth||this.width,this.image.drawHeight=drawHeight||this.height,this.image.forceRGB=!!forceRGB;const imageBytes=this.image.getBytes(length);return internal||this.image instanceof _decode_stream.DecodeStream?imageBytes:((0,_util.assert)(imageBytes instanceof Uint8Array,'PDFImage.getImageBytes: Unsupported "imageBytes" type.'),new Uint8Array(imageBytes))}}exports.PDFImage=PDFImage},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.applyMaskImageData=function applyMaskImageData({src,srcPos=0,dest,destPos=0,width,height,inverseDecode=!1}){const opaque=_util.FeatureTest.isLittleEndian?4278190080:255,[zeroMapping,oneMapping]=inverseDecode?[0,opaque]:[opaque,0],widthInSource=width>>3,widthRemainder=7&width,srcLength=src.length;dest=new Uint32Array(dest.buffer);for(let i=0;i<height;i++){for(const max=srcPos+widthInSource;srcPos<max;srcPos++){const elem=srcPos<srcLength?src[srcPos]:255;dest[destPos++]=128&elem?oneMapping:zeroMapping,dest[destPos++]=64&elem?oneMapping:zeroMapping,dest[destPos++]=32&elem?oneMapping:zeroMapping,dest[destPos++]=16&elem?oneMapping:zeroMapping,dest[destPos++]=8&elem?oneMapping:zeroMapping,dest[destPos++]=4&elem?oneMapping:zeroMapping,dest[destPos++]=2&elem?oneMapping:zeroMapping,dest[destPos++]=1&elem?oneMapping:zeroMapping}if(0===widthRemainder)continue;const elem=srcPos<srcLength?src[srcPos++]:255;for(let j=0;j<widthRemainder;j++)dest[destPos++]=elem&1<<7-j?oneMapping:zeroMapping}return{srcPos,destPos}};var _util=__w_pdfjs_require__(2)},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.incrementalUpdate=function incrementalUpdate({originalData,xrefInfo,newRefs,xref=null,hasXfa=!1,xfaDatasetsRef=null,hasXfaDatasetsEntry=!1,acroFormRef=null,acroForm=null,xfaData=null}){hasXfa&&function updateXFA({xfaData,xfaDatasetsRef,hasXfaDatasetsEntry,acroFormRef,acroForm,newRefs,xref,xrefInfo}){if(null===xref)return;if(!hasXfaDatasetsEntry){if(!acroFormRef)return void(0,_util.warn)("XFA - Cannot save it");const oldXfa=acroForm.get("XFA"),newXfa=oldXfa.slice();newXfa.splice(2,0,"datasets"),newXfa.splice(3,0,xfaDatasetsRef),acroForm.set("XFA",newXfa);const encrypt=xref.encrypt;let transform=null;encrypt&&(transform=encrypt.createCipherTransform(acroFormRef.num,acroFormRef.gen));const buffer=[`${acroFormRef.num} ${acroFormRef.gen} obj\n`];writeDict(acroForm,buffer,transform),buffer.push("\n"),acroForm.set("XFA",oldXfa),newRefs.push({ref:acroFormRef,data:buffer.join("")})}if(null===xfaData){xfaData=function writeXFADataForAcroform(str,newRefs){const xml=new _xml_parser.SimpleXMLParser({hasAttributes:!0}).parseFromString(str);for(const{xfa}of newRefs){if(!xfa)continue;const{path,value}=xfa;if(!path)continue;const node=xml.documentElement.searchNode((0,_core_utils.parseXFAPath)(path),0);node?Array.isArray(value)?node.childNodes=value.map((val=>new _xml_parser.SimpleDOMNode("value",val))):node.childNodes=[new _xml_parser.SimpleDOMNode("#text",value)]:(0,_util.warn)(`Node not found for path: ${path}`)}const buffer=[];return xml.documentElement.dump(buffer),buffer.join("")}(xref.fetchIfRef(xfaDatasetsRef).getString(),newRefs)}const encrypt=xref.encrypt;if(encrypt){xfaData=encrypt.createCipherTransform(xfaDatasetsRef.num,xfaDatasetsRef.gen).encryptString(xfaData)}const data=`${xfaDatasetsRef.num} ${xfaDatasetsRef.gen} obj\n<< /Type /EmbeddedFile /Length ${xfaData.length}>>\nstream\n`+xfaData+"\nendstream\nendobj\n";newRefs.push({ref:xfaDatasetsRef,data})}({xfaData,xfaDatasetsRef,hasXfaDatasetsEntry,acroFormRef,acroForm,newRefs,xref,xrefInfo});const newXref=new _primitives.Dict(null),refForXrefTable=xrefInfo.newRef;let buffer,baseOffset;const lastByte=originalData.at(-1);10===lastByte||13===lastByte?(buffer=[],baseOffset=originalData.length):(buffer=["\n"],baseOffset=originalData.length+1);newXref.set("Size",refForXrefTable.num+1),newXref.set("Prev",xrefInfo.startXRef),newXref.set("Type",_primitives.Name.get("XRef")),null!==xrefInfo.rootRef&&newXref.set("Root",xrefInfo.rootRef);null!==xrefInfo.infoRef&&newXref.set("Info",xrefInfo.infoRef);null!==xrefInfo.encryptRef&&newXref.set("Encrypt",xrefInfo.encryptRef);newRefs.push({ref:refForXrefTable,data:""}),newRefs=newRefs.sort(((a,b)=>a.ref.num-b.ref.num));const xrefTableData=[[0,1,65535]],indexes=[0,1];let maxOffset=0;for(const{ref,data}of newRefs)maxOffset=Math.max(maxOffset,baseOffset),xrefTableData.push([1,baseOffset,Math.min(ref.gen,65535)]),baseOffset+=data.length,indexes.push(ref.num,1),buffer.push(data);if(newXref.set("Index",indexes),Array.isArray(xrefInfo.fileIds)&&xrefInfo.fileIds.length>0){const md5=function computeMD5(filesize,xrefInfo){const time=Math.floor(Date.now()/1e3),filename=xrefInfo.filename||"",md5Buffer=[time.toString(),filename,filesize.toString()];let md5BufferLen=md5Buffer.reduce(((a,str)=>a+str.length),0);for(const value of Object.values(xrefInfo.info))md5Buffer.push(value),md5BufferLen+=value.length;const array=new Uint8Array(md5BufferLen);let offset=0;for(const str of md5Buffer)writeString(str,offset,array),offset+=str.length;return(0,_util.bytesToString)((0,_crypto.calculateMD5)(array))}(baseOffset,xrefInfo);newXref.set("ID",[xrefInfo.fileIds[0],md5])}const sizes=[1,Math.ceil(Math.log2(maxOffset)/8),2],tableLength=(sizes[0]+sizes[1]+sizes[2])*xrefTableData.length;newXref.set("W",sizes),newXref.set("Length",tableLength),buffer.push(`${refForXrefTable.num} ${refForXrefTable.gen} obj\n`),writeDict(newXref,buffer,null),buffer.push(" stream\n");const bufferLen=buffer.reduce(((a,str)=>a+str.length),0),footer=`\nendstream\nendobj\nstartxref\n${baseOffset}\n%%EOF\n`,array=new Uint8Array(originalData.length+bufferLen+tableLength+footer.length);array.set(originalData);let offset=originalData.length;for(const str of buffer)writeString(str,offset,array),offset+=str.length;for(const[type,objOffset,gen]of xrefTableData)offset=writeInt(type,sizes[0],offset,array),offset=writeInt(objOffset,sizes[1],offset,array),offset=writeInt(gen,sizes[2],offset,array);return writeString(footer,offset,array),array},exports.writeDict=writeDict,exports.writeObject=function writeObject(ref,obj,buffer,transform){buffer.push(`${ref.num} ${ref.gen} obj\n`),obj instanceof _primitives.Dict?writeDict(obj,buffer,transform):obj instanceof _base_stream.BaseStream&&writeStream(obj,buffer,transform);buffer.push("\nendobj\n")};var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_core_utils=__w_pdfjs_require__(6),_xml_parser=__w_pdfjs_require__(66),_base_stream=__w_pdfjs_require__(7),_crypto=__w_pdfjs_require__(67);function writeDict(dict,buffer,transform){buffer.push("<<");for(const key of dict.getKeys())buffer.push(` /${(0,_core_utils.escapePDFName)(key)} `),writeValue(dict.getRaw(key),buffer,transform);buffer.push(">>")}function writeStream(stream,buffer,transform){writeDict(stream.dict,buffer,transform),buffer.push(" stream\n");let string=stream.getString();null!==transform&&(string=transform.encryptString(string)),buffer.push(string,"\nendstream\n")}function writeValue(value,buffer,transform){value instanceof _primitives.Name?buffer.push(`/${(0,_core_utils.escapePDFName)(value.name)}`):value instanceof _primitives.Ref?buffer.push(`${value.num} ${value.gen} R`):Array.isArray(value)?function writeArray(array,buffer,transform){buffer.push("[");let first=!0;for(const val of array)first?first=!1:buffer.push(" "),writeValue(val,buffer,transform);buffer.push("]")}(value,buffer,transform):"string"==typeof value?(null!==transform&&(value=transform.encryptString(value)),buffer.push(`(${(0,_util.escapeString)(value)})`)):"number"==typeof value?buffer.push((0,_core_utils.numberToString)(value)):"boolean"==typeof value?buffer.push(value.toString()):value instanceof _primitives.Dict?writeDict(value,buffer,transform):value instanceof _base_stream.BaseStream?writeStream(value,buffer,transform):null===value?buffer.push("null"):(0,_util.warn)(`Unhandled value in writer: ${typeof value}, please file a bug.`)}function writeInt(number,size,offset,buffer){for(let i=size+offset-1;i>offset-1;i--)buffer[i]=255&number,number>>=8;return offset+size}function writeString(string,offset,buffer){for(let i=0,len=string.length;i<len;i++)buffer[offset+i]=255&string.charCodeAt(i)}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XMLParserErrorCode=exports.XMLParserBase=exports.SimpleXMLParser=exports.SimpleDOMNode=void 0;var _core_utils=__w_pdfjs_require__(6);const XMLParserErrorCode={NoError:0,EndOfDocument:-1,UnterminatedCdat:-2,UnterminatedXmlDeclaration:-3,UnterminatedDoctypeDeclaration:-4,UnterminatedComment:-5,MalformedElement:-6,OutOfMemory:-7,UnterminatedAttributeValue:-8,UnterminatedElement:-9,ElementNeverBegun:-10};function isWhitespace(s,index){const ch=s[index];return" "===ch||"\n"===ch||"\r"===ch||"\t"===ch}exports.XMLParserErrorCode=XMLParserErrorCode;class XMLParserBase{_resolveEntities(s){return s.replace(/&([^;]+);/g,((all,entity)=>{if("#x"===entity.substring(0,2))return String.fromCodePoint(parseInt(entity.substring(2),16));if("#"===entity.substring(0,1))return String.fromCodePoint(parseInt(entity.substring(1),10));switch(entity){case"lt":return"<";case"gt":return">";case"amp":return"&";case"quot":return'"';case"apos":return"'"}return this.onResolveEntity(entity)}))}_parseContent(s,start){const attributes=[];let pos=start;function skipWs(){for(;pos<s.length&&isWhitespace(s,pos);)++pos}for(;pos<s.length&&!isWhitespace(s,pos)&&">"!==s[pos]&&"/"!==s[pos];)++pos;const name=s.substring(start,pos);for(skipWs();pos<s.length&&">"!==s[pos]&&"/"!==s[pos]&&"?"!==s[pos];){skipWs();let attrName="",attrValue="";for(;pos<s.length&&!isWhitespace(s,pos)&&"="!==s[pos];)attrName+=s[pos],++pos;if(skipWs(),"="!==s[pos])return null;++pos,skipWs();const attrEndChar=s[pos];if('"'!==attrEndChar&&"'"!==attrEndChar)return null;const attrEndIndex=s.indexOf(attrEndChar,++pos);if(attrEndIndex<0)return null;attrValue=s.substring(pos,attrEndIndex),attributes.push({name:attrName,value:this._resolveEntities(attrValue)}),pos=attrEndIndex+1,skipWs()}return{name,attributes,parsed:pos-start}}_parseProcessingInstruction(s,start){let pos=start;for(;pos<s.length&&!isWhitespace(s,pos)&&">"!==s[pos]&&"?"!==s[pos]&&"/"!==s[pos];)++pos;const name=s.substring(start,pos);!function skipWs(){for(;pos<s.length&&isWhitespace(s,pos);)++pos}();const attrStart=pos;for(;pos<s.length&&("?"!==s[pos]||">"!==s[pos+1]);)++pos;return{name,value:s.substring(attrStart,pos),parsed:pos-start}}parseXml(s){let i=0;for(;i<s.length;){let j=i;if("<"===s[i]){++j;let q;switch(s[j]){case"/":if(++j,q=s.indexOf(">",j),q<0)return void this.onError(XMLParserErrorCode.UnterminatedElement);this.onEndElement(s.substring(j,q)),j=q+1;break;case"?":++j;const pi=this._parseProcessingInstruction(s,j);if("?>"!==s.substring(j+pi.parsed,j+pi.parsed+2))return void this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);this.onPi(pi.name,pi.value),j+=pi.parsed+2;break;case"!":if("--"===s.substring(j+1,j+3)){if(q=s.indexOf("--\x3e",j+3),q<0)return void this.onError(XMLParserErrorCode.UnterminatedComment);this.onComment(s.substring(j+3,q)),j=q+3}else if("[CDATA["===s.substring(j+1,j+8)){if(q=s.indexOf("]]>",j+8),q<0)return void this.onError(XMLParserErrorCode.UnterminatedCdat);this.onCdata(s.substring(j+8,q)),j=q+3}else{if("DOCTYPE"!==s.substring(j+1,j+8))return void this.onError(XMLParserErrorCode.MalformedElement);{const q2=s.indexOf("[",j+8);let complexDoctype=!1;if(q=s.indexOf(">",j+8),q<0)return void this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);if(q2>0&&q>q2){if(q=s.indexOf("]>",j+8),q<0)return void this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);complexDoctype=!0}const doctypeContent=s.substring(j+8,q+(complexDoctype?1:0));this.onDoctype(doctypeContent),j=q+(complexDoctype?2:1)}}break;default:const content=this._parseContent(s,j);if(null===content)return void this.onError(XMLParserErrorCode.MalformedElement);let isClosed=!1;if("/>"===s.substring(j+content.parsed,j+content.parsed+2))isClosed=!0;else if(">"!==s.substring(j+content.parsed,j+content.parsed+1))return void this.onError(XMLParserErrorCode.UnterminatedElement);this.onBeginElement(content.name,content.attributes,isClosed),j+=content.parsed+(isClosed?2:1)}}else{for(;j<s.length&&"<"!==s[j];)j++;const text=s.substring(i,j);this.onText(this._resolveEntities(text))}i=j}}onResolveEntity(name){return`&${name};`}onPi(name,value){}onComment(text){}onCdata(text){}onDoctype(doctypeContent){}onText(text){}onBeginElement(name,attributes,isEmpty){}onEndElement(name){}onError(code){}}exports.XMLParserBase=XMLParserBase;class SimpleDOMNode{constructor(nodeName,nodeValue){this.nodeName=nodeName,this.nodeValue=nodeValue,Object.defineProperty(this,"parentNode",{value:null,writable:!0})}get firstChild(){return this.childNodes&&this.childNodes[0]}get nextSibling(){const childNodes=this.parentNode.childNodes;if(!childNodes)return;const index=childNodes.indexOf(this);return-1!==index?childNodes[index+1]:void 0}get textContent(){return this.childNodes?this.childNodes.map((function(child){return child.textContent})).join(""):this.nodeValue||""}get children(){return this.childNodes||[]}hasChildNodes(){return this.childNodes&&this.childNodes.length>0}searchNode(paths,pos){if(pos>=paths.length)return this;const component=paths[pos],stack=[];let node=this;for(;;){if(component.name===node.nodeName){if(0!==component.pos){if(0===stack.length)return null;{const[parent]=stack.pop();let siblingPos=0;for(const child of parent.childNodes)if(component.name===child.nodeName){if(siblingPos===component.pos)return child.searchNode(paths,pos+1);siblingPos++}return node.searchNode(paths,pos+1)}}{const res=node.searchNode(paths,pos+1);if(null!==res)return res}}if(node.childNodes&&0!==node.childNodes.length)stack.push([node,0]),node=node.childNodes[0];else{if(0===stack.length)return null;for(;0!==stack.length;){const[parent,currentPos]=stack.pop(),newPos=currentPos+1;if(newPos<parent.childNodes.length){stack.push([parent,newPos]),node=parent.childNodes[newPos];break}}if(0===stack.length)return null}}}dump(buffer){if("#text"!==this.nodeName){if(buffer.push(`<${this.nodeName}`),this.attributes)for(const attribute of this.attributes)buffer.push(` ${attribute.name}="${(0,_core_utils.encodeToXmlString)(attribute.value)}"`);if(this.hasChildNodes()){buffer.push(">");for(const child of this.childNodes)child.dump(buffer);buffer.push(`</${this.nodeName}>`)}else this.nodeValue?buffer.push(`>${(0,_core_utils.encodeToXmlString)(this.nodeValue)}</${this.nodeName}>`):buffer.push("/>")}else buffer.push((0,_core_utils.encodeToXmlString)(this.nodeValue))}}exports.SimpleDOMNode=SimpleDOMNode;exports.SimpleXMLParser=class SimpleXMLParser extends XMLParserBase{constructor({hasAttributes=!1,lowerCaseName=!1}){super(),this._currentFragment=null,this._stack=null,this._errorCode=XMLParserErrorCode.NoError,this._hasAttributes=hasAttributes,this._lowerCaseName=lowerCaseName}parseFromString(data){if(this._currentFragment=[],this._stack=[],this._errorCode=XMLParserErrorCode.NoError,this.parseXml(data),this._errorCode!==XMLParserErrorCode.NoError)return;const[documentElement]=this._currentFragment;return documentElement?{documentElement}:void 0}onText(text){if(function isWhitespaceString(s){for(let i=0,ii=s.length;i<ii;i++)if(!isWhitespace(s,i))return!1;return!0}(text))return;const node=new SimpleDOMNode("#text",text);this._currentFragment.push(node)}onCdata(text){const node=new SimpleDOMNode("#text",text);this._currentFragment.push(node)}onBeginElement(name,attributes,isEmpty){this._lowerCaseName&&(name=name.toLowerCase());const node=new SimpleDOMNode(name);node.childNodes=[],this._hasAttributes&&(node.attributes=attributes),this._currentFragment.push(node),isEmpty||(this._stack.push(this._currentFragment),this._currentFragment=node.childNodes)}onEndElement(name){this._currentFragment=this._stack.pop()||[];const lastElement=this._currentFragment.at(-1);if(!lastElement)return null;for(let i=0,ii=lastElement.childNodes.length;i<ii;i++)lastElement.childNodes[i].parentNode=lastElement;return lastElement}onError(code){this._errorCode=code}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateSHA256=exports.calculateMD5=exports.PDF20=exports.PDF17=exports.CipherTransformFactory=exports.ARCFourCipher=exports.AES256Cipher=exports.AES128Cipher=void 0,exports.calculateSHA384=calculateSHA384,exports.calculateSHA512=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_decrypt_stream=__w_pdfjs_require__(68);class ARCFourCipher{constructor(key){this.a=0,this.b=0;const s=new Uint8Array(256),keyLength=key.length;for(let i=0;i<256;++i)s[i]=i;for(let i=0,j=0;i<256;++i){const tmp=s[i];j=j+tmp+key[i%keyLength]&255,s[i]=s[j],s[j]=tmp}this.s=s}encryptBlock(data){let a=this.a,b=this.b;const s=this.s,n=data.length,output=new Uint8Array(n);for(let i=0;i<n;++i){a=a+1&255;const tmp=s[a];b=b+tmp&255;const tmp2=s[b];s[a]=tmp2,s[b]=tmp,output[i]=data[i]^s[tmp+tmp2&255]}return this.a=a,this.b=b,output}decryptBlock(data){return this.encryptBlock(data)}encrypt(data){return this.encryptBlock(data)}}exports.ARCFourCipher=ARCFourCipher;const calculateMD5=function calculateMD5Closure(){const r=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),k=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]);return function hash(data,offset,length){let h0=1732584193,h1=-271733879,h2=-1732584194,h3=271733878;const paddedLength=length+72&-64,padded=new Uint8Array(paddedLength);let i,j;for(i=0;i<length;++i)padded[i]=data[offset++];padded[i++]=128;const n=paddedLength-8;for(;i<n;)padded[i++]=0;padded[i++]=length<<3&255,padded[i++]=length>>5&255,padded[i++]=length>>13&255,padded[i++]=length>>21&255,padded[i++]=length>>>29&255,padded[i++]=0,padded[i++]=0,padded[i++]=0;const w=new Int32Array(16);for(i=0;i<paddedLength;){for(j=0;j<16;++j,i+=4)w[j]=padded[i]|padded[i+1]<<8|padded[i+2]<<16|padded[i+3]<<24;let f,g,a=h0,b=h1,c=h2,d=h3;for(j=0;j<64;++j){j<16?(f=b&c|~b&d,g=j):j<32?(f=d&b|~d&c,g=5*j+1&15):j<48?(f=b^c^d,g=3*j+5&15):(f=c^(b|~d),g=7*j&15);const tmp=d,rotateArg=a+f+k[j]+w[g]|0,rotate=r[j];d=c,c=b,b=b+(rotateArg<<rotate|rotateArg>>>32-rotate)|0,a=tmp}h0=h0+a|0,h1=h1+b|0,h2=h2+c|0,h3=h3+d|0}return new Uint8Array([255&h0,h0>>8&255,h0>>16&255,h0>>>24&255,255&h1,h1>>8&255,h1>>16&255,h1>>>24&255,255&h2,h2>>8&255,h2>>16&255,h2>>>24&255,255&h3,h3>>8&255,h3>>16&255,h3>>>24&255])}}();exports.calculateMD5=calculateMD5;class Word64{constructor(highInteger,lowInteger){this.high=0|highInteger,this.low=0|lowInteger}and(word){this.high&=word.high,this.low&=word.low}xor(word){this.high^=word.high,this.low^=word.low}or(word){this.high|=word.high,this.low|=word.low}shiftRight(places){places>=32?(this.low=this.high>>>places-32|0,this.high=0):(this.low=this.low>>>places|this.high<<32-places,this.high=this.high>>>places|0)}shiftLeft(places){places>=32?(this.high=this.low<<places-32,this.low=0):(this.high=this.high<<places|this.low>>>32-places,this.low<<=places)}rotateRight(places){let low,high;32&places?(high=this.low,low=this.high):(low=this.low,high=this.high),places&=31,this.low=low>>>places|high<<32-places,this.high=high>>>places|low<<32-places}not(){this.high=~this.high,this.low=~this.low}add(word){const lowAdd=(this.low>>>0)+(word.low>>>0);let highAdd=(this.high>>>0)+(word.high>>>0);lowAdd>4294967295&&(highAdd+=1),this.low=0|lowAdd,this.high=0|highAdd}copyTo(bytes,offset){bytes[offset]=this.high>>>24&255,bytes[offset+1]=this.high>>16&255,bytes[offset+2]=this.high>>8&255,bytes[offset+3]=255&this.high,bytes[offset+4]=this.low>>>24&255,bytes[offset+5]=this.low>>16&255,bytes[offset+6]=this.low>>8&255,bytes[offset+7]=255&this.low}assign(word){this.high=word.high,this.low=word.low}}const calculateSHA256=function calculateSHA256Closure(){function rotr(x,n){return x>>>n|x<<32-n}function ch(x,y,z){return x&y^~x&z}function maj(x,y,z){return x&y^x&z^y&z}function sigma(x){return rotr(x,2)^rotr(x,13)^rotr(x,22)}function sigmaPrime(x){return rotr(x,6)^rotr(x,11)^rotr(x,25)}function littleSigma(x){return rotr(x,7)^rotr(x,18)^x>>>3}const k=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function hash(data,offset,length){let h0=1779033703,h1=3144134277,h2=1013904242,h3=2773480762,h4=1359893119,h5=2600822924,h6=528734635,h7=1541459225;const paddedLength=64*Math.ceil((length+9)/64),padded=new Uint8Array(paddedLength);let i,j;for(i=0;i<length;++i)padded[i]=data[offset++];padded[i++]=128;const n=paddedLength-8;for(;i<n;)padded[i++]=0;padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=length>>>29&255,padded[i++]=length>>21&255,padded[i++]=length>>13&255,padded[i++]=length>>5&255,padded[i++]=length<<3&255;const w=new Uint32Array(64);for(i=0;i<paddedLength;){for(j=0;j<16;++j)w[j]=padded[i]<<24|padded[i+1]<<16|padded[i+2]<<8|padded[i+3],i+=4;for(j=16;j<64;++j)w[j]=0|(rotr(x=w[j-2],17)^rotr(x,19)^x>>>10)+w[j-7]+littleSigma(w[j-15])+w[j-16];let t1,t2,a=h0,b=h1,c=h2,d=h3,e=h4,f=h5,g=h6,h=h7;for(j=0;j<64;++j)t1=h+sigmaPrime(e)+ch(e,f,g)+k[j]+w[j],t2=sigma(a)+maj(a,b,c),h=g,g=f,f=e,e=d+t1|0,d=c,c=b,b=a,a=t1+t2|0;h0=h0+a|0,h1=h1+b|0,h2=h2+c|0,h3=h3+d|0,h4=h4+e|0,h5=h5+f|0,h6=h6+g|0,h7=h7+h|0}var x;return new Uint8Array([h0>>24&255,h0>>16&255,h0>>8&255,255&h0,h1>>24&255,h1>>16&255,h1>>8&255,255&h1,h2>>24&255,h2>>16&255,h2>>8&255,255&h2,h3>>24&255,h3>>16&255,h3>>8&255,255&h3,h4>>24&255,h4>>16&255,h4>>8&255,255&h4,h5>>24&255,h5>>16&255,h5>>8&255,255&h5,h6>>24&255,h6>>16&255,h6>>8&255,255&h6,h7>>24&255,h7>>16&255,h7>>8&255,255&h7])}}();exports.calculateSHA256=calculateSHA256;const calculateSHA512=function calculateSHA512Closure(){function ch(result,x,y,z,tmp){result.assign(x),result.and(y),tmp.assign(x),tmp.not(),tmp.and(z),result.xor(tmp)}function maj(result,x,y,z,tmp){result.assign(x),result.and(y),tmp.assign(x),tmp.and(z),result.xor(tmp),tmp.assign(y),tmp.and(z),result.xor(tmp)}function sigma(result,x,tmp){result.assign(x),result.rotateRight(28),tmp.assign(x),tmp.rotateRight(34),result.xor(tmp),tmp.assign(x),tmp.rotateRight(39),result.xor(tmp)}function sigmaPrime(result,x,tmp){result.assign(x),result.rotateRight(14),tmp.assign(x),tmp.rotateRight(18),result.xor(tmp),tmp.assign(x),tmp.rotateRight(41),result.xor(tmp)}function littleSigma(result,x,tmp){result.assign(x),result.rotateRight(1),tmp.assign(x),tmp.rotateRight(8),result.xor(tmp),tmp.assign(x),tmp.shiftRight(7),result.xor(tmp)}function littleSigmaPrime(result,x,tmp){result.assign(x),result.rotateRight(19),tmp.assign(x),tmp.rotateRight(61),result.xor(tmp),tmp.assign(x),tmp.shiftRight(6),result.xor(tmp)}const k=[new Word64(1116352408,3609767458),new Word64(1899447441,602891725),new Word64(3049323471,3964484399),new Word64(3921009573,2173295548),new Word64(961987163,4081628472),new Word64(1508970993,3053834265),new Word64(2453635748,2937671579),new Word64(2870763221,3664609560),new Word64(3624381080,2734883394),new Word64(310598401,1164996542),new Word64(607225278,1323610764),new Word64(1426881987,3590304994),new Word64(1925078388,4068182383),new Word64(2162078206,991336113),new Word64(2614888103,633803317),new Word64(3248222580,3479774868),new Word64(3835390401,2666613458),new Word64(4022224774,944711139),new Word64(264347078,2341262773),new Word64(604807628,2007800933),new Word64(770255983,1495990901),new Word64(1249150122,1856431235),new Word64(1555081692,3175218132),new Word64(1996064986,2198950837),new Word64(2554220882,3999719339),new Word64(2821834349,766784016),new Word64(2952996808,2566594879),new Word64(3210313671,3203337956),new Word64(3336571891,1034457026),new Word64(3584528711,2466948901),new Word64(113926993,3758326383),new Word64(338241895,168717936),new Word64(666307205,1188179964),new Word64(773529912,1546045734),new Word64(1294757372,1522805485),new Word64(1396182291,2643833823),new Word64(1695183700,2343527390),new Word64(1986661051,1014477480),new Word64(2177026350,1206759142),new Word64(2456956037,344077627),new Word64(2730485921,1290863460),new Word64(2820302411,3158454273),new Word64(3259730800,3505952657),new Word64(3345764771,106217008),new Word64(3516065817,3606008344),new Word64(3600352804,1432725776),new Word64(4094571909,1467031594),new Word64(275423344,851169720),new Word64(430227734,3100823752),new Word64(506948616,1363258195),new Word64(659060556,3750685593),new Word64(883997877,3785050280),new Word64(958139571,3318307427),new Word64(1322822218,3812723403),new Word64(1537002063,2003034995),new Word64(1747873779,3602036899),new Word64(1955562222,1575990012),new Word64(2024104815,1125592928),new Word64(2227730452,2716904306),new Word64(2361852424,442776044),new Word64(2428436474,593698344),new Word64(2756734187,3733110249),new Word64(3204031479,2999351573),new Word64(3329325298,3815920427),new Word64(3391569614,3928383900),new Word64(3515267271,566280711),new Word64(3940187606,3454069534),new Word64(4118630271,4000239992),new Word64(116418474,1914138554),new Word64(174292421,2731055270),new Word64(289380356,3203993006),new Word64(460393269,320620315),new Word64(685471733,587496836),new Word64(852142971,1086792851),new Word64(1017036298,365543100),new Word64(1126000580,2618297676),new Word64(1288033470,3409855158),new Word64(1501505948,4234509866),new Word64(1607167915,987167468),new Word64(1816402316,1246189591)];return function hash(data,offset,length,mode384=!1){let h0,h1,h2,h3,h4,h5,h6,h7;mode384?(h0=new Word64(3418070365,3238371032),h1=new Word64(1654270250,914150663),h2=new Word64(2438529370,812702999),h3=new Word64(355462360,4144912697),h4=new Word64(1731405415,4290775857),h5=new Word64(2394180231,1750603025),h6=new Word64(3675008525,1694076839),h7=new Word64(1203062813,3204075428)):(h0=new Word64(1779033703,4089235720),h1=new Word64(3144134277,2227873595),h2=new Word64(1013904242,4271175723),h3=new Word64(2773480762,1595750129),h4=new Word64(1359893119,2917565137),h5=new Word64(2600822924,725511199),h6=new Word64(528734635,4215389547),h7=new Word64(1541459225,327033209));const paddedLength=128*Math.ceil((length+17)/128),padded=new Uint8Array(paddedLength);let i,j;for(i=0;i<length;++i)padded[i]=data[offset++];padded[i++]=128;const n=paddedLength-16;for(;i<n;)padded[i++]=0;padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=0,padded[i++]=length>>>29&255,padded[i++]=length>>21&255,padded[i++]=length>>13&255,padded[i++]=length>>5&255,padded[i++]=length<<3&255;const w=new Array(80);for(i=0;i<80;i++)w[i]=new Word64(0,0);let a=new Word64(0,0),b=new Word64(0,0),c=new Word64(0,0),d=new Word64(0,0),e=new Word64(0,0),f=new Word64(0,0),g=new Word64(0,0),h=new Word64(0,0);const t1=new Word64(0,0),t2=new Word64(0,0),tmp1=new Word64(0,0),tmp2=new Word64(0,0);let tmp3,result;for(i=0;i<paddedLength;){for(j=0;j<16;++j)w[j].high=padded[i]<<24|padded[i+1]<<16|padded[i+2]<<8|padded[i+3],w[j].low=padded[i+4]<<24|padded[i+5]<<16|padded[i+6]<<8|padded[i+7],i+=8;for(j=16;j<80;++j)tmp3=w[j],littleSigmaPrime(tmp3,w[j-2],tmp2),tmp3.add(w[j-7]),littleSigma(tmp1,w[j-15],tmp2),tmp3.add(tmp1),tmp3.add(w[j-16]);for(a.assign(h0),b.assign(h1),c.assign(h2),d.assign(h3),e.assign(h4),f.assign(h5),g.assign(h6),h.assign(h7),j=0;j<80;++j)t1.assign(h),sigmaPrime(tmp1,e,tmp2),t1.add(tmp1),ch(tmp1,e,f,g,tmp2),t1.add(tmp1),t1.add(k[j]),t1.add(w[j]),sigma(t2,a,tmp2),maj(tmp1,a,b,c,tmp2),t2.add(tmp1),tmp3=h,h=g,g=f,f=e,d.add(t1),e=d,d=c,c=b,b=a,tmp3.assign(t1),tmp3.add(t2),a=tmp3;h0.add(a),h1.add(b),h2.add(c),h3.add(d),h4.add(e),h5.add(f),h6.add(g),h7.add(h)}return mode384?(result=new Uint8Array(48),h0.copyTo(result,0),h1.copyTo(result,8),h2.copyTo(result,16),h3.copyTo(result,24),h4.copyTo(result,32),h5.copyTo(result,40)):(result=new Uint8Array(64),h0.copyTo(result,0),h1.copyTo(result,8),h2.copyTo(result,16),h3.copyTo(result,24),h4.copyTo(result,32),h5.copyTo(result,40),h6.copyTo(result,48),h7.copyTo(result,56)),result}}();function calculateSHA384(data,offset,length){return calculateSHA512(data,offset,length,!0)}exports.calculateSHA512=calculateSHA512;class NullCipher{decryptBlock(data){return data}encrypt(data){return data}}class AESBaseCipher{constructor(){this.constructor===AESBaseCipher&&(0,_util.unreachable)("Cannot initialize AESBaseCipher."),this._s=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),this._inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),this._mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]),this._mixCol=new Uint8Array(256);for(let i=0;i<256;i++)this._mixCol[i]=i<128?i<<1:i<<1^27;this.buffer=new Uint8Array(16),this.bufferPosition=0}_expandKey(cipherKey){(0,_util.unreachable)("Cannot call `_expandKey` on the base class")}_decrypt(input,key){let t,u,v;const state=new Uint8Array(16);state.set(input);for(let j=0,k=this._keySize;j<16;++j,++k)state[j]^=key[k];for(let i=this._cyclesOfRepetition-1;i>=1;--i){t=state[13],state[13]=state[9],state[9]=state[5],state[5]=state[1],state[1]=t,t=state[14],u=state[10],state[14]=state[6],state[10]=state[2],state[6]=t,state[2]=u,t=state[15],u=state[11],v=state[7],state[15]=state[3],state[11]=t,state[7]=u,state[3]=v;for(let j=0;j<16;++j)state[j]=this._inv_s[state[j]];for(let j=0,k=16*i;j<16;++j,++k)state[j]^=key[k];for(let j=0;j<16;j+=4){const s0=this._mix[state[j]],s1=this._mix[state[j+1]],s2=this._mix[state[j+2]],s3=this._mix[state[j+3]];t=s0^s1>>>8^s1<<24^s2>>>16^s2<<16^s3>>>24^s3<<8,state[j]=t>>>24&255,state[j+1]=t>>16&255,state[j+2]=t>>8&255,state[j+3]=255&t}}t=state[13],state[13]=state[9],state[9]=state[5],state[5]=state[1],state[1]=t,t=state[14],u=state[10],state[14]=state[6],state[10]=state[2],state[6]=t,state[2]=u,t=state[15],u=state[11],v=state[7],state[15]=state[3],state[11]=t,state[7]=u,state[3]=v;for(let j=0;j<16;++j)state[j]=this._inv_s[state[j]],state[j]^=key[j];return state}_encrypt(input,key){const s=this._s;let t,u,v;const state=new Uint8Array(16);state.set(input);for(let j=0;j<16;++j)state[j]^=key[j];for(let i=1;i<this._cyclesOfRepetition;i++){for(let j=0;j<16;++j)state[j]=s[state[j]];v=state[1],state[1]=state[5],state[5]=state[9],state[9]=state[13],state[13]=v,v=state[2],u=state[6],state[2]=state[10],state[6]=state[14],state[10]=v,state[14]=u,v=state[3],u=state[7],t=state[11],state[3]=state[15],state[7]=v,state[11]=u,state[15]=t;for(let j=0;j<16;j+=4){const s0=state[j+0],s1=state[j+1],s2=state[j+2],s3=state[j+3];t=s0^s1^s2^s3,state[j+0]^=t^this._mixCol[s0^s1],state[j+1]^=t^this._mixCol[s1^s2],state[j+2]^=t^this._mixCol[s2^s3],state[j+3]^=t^this._mixCol[s3^s0]}for(let j=0,k=16*i;j<16;++j,++k)state[j]^=key[k]}for(let j=0;j<16;++j)state[j]=s[state[j]];v=state[1],state[1]=state[5],state[5]=state[9],state[9]=state[13],state[13]=v,v=state[2],u=state[6],state[2]=state[10],state[6]=state[14],state[10]=v,state[14]=u,v=state[3],u=state[7],t=state[11],state[3]=state[15],state[7]=v,state[11]=u,state[15]=t;for(let j=0,k=this._keySize;j<16;++j,++k)state[j]^=key[k];return state}_decryptBlock2(data,finalize){const sourceLength=data.length;let buffer=this.buffer,bufferLength=this.bufferPosition;const result=[];let iv=this.iv;for(let i=0;i<sourceLength;++i){if(buffer[bufferLength]=data[i],++bufferLength,bufferLength<16)continue;const plain=this._decrypt(buffer,this._key);for(let j=0;j<16;++j)plain[j]^=iv[j];iv=buffer,result.push(plain),buffer=new Uint8Array(16),bufferLength=0}if(this.buffer=buffer,this.bufferLength=bufferLength,this.iv=iv,0===result.length)return new Uint8Array(0);let outputLength=16*result.length;if(finalize){const lastBlock=result.at(-1);let psLen=lastBlock[15];if(psLen<=16){for(let i=15,ii=16-psLen;i>=ii;--i)if(lastBlock[i]!==psLen){psLen=0;break}outputLength-=psLen,result[result.length-1]=lastBlock.subarray(0,16-psLen)}}const output=new Uint8Array(outputLength);for(let i=0,j=0,ii=result.length;i<ii;++i,j+=16)output.set(result[i],j);return output}decryptBlock(data,finalize,iv=null){const sourceLength=data.length,buffer=this.buffer;let bufferLength=this.bufferPosition;if(iv)this.iv=iv;else{for(let i=0;bufferLength<16&&i<sourceLength;++i,++bufferLength)buffer[bufferLength]=data[i];if(bufferLength<16)return this.bufferLength=bufferLength,new Uint8Array(0);this.iv=buffer,data=data.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=this._decryptBlock2,this.decryptBlock(data,finalize)}encrypt(data,iv){const sourceLength=data.length;let buffer=this.buffer,bufferLength=this.bufferPosition;const result=[];iv||(iv=new Uint8Array(16));for(let i=0;i<sourceLength;++i){if(buffer[bufferLength]=data[i],++bufferLength,bufferLength<16)continue;for(let j=0;j<16;++j)buffer[j]^=iv[j];const cipher=this._encrypt(buffer,this._key);iv=cipher,result.push(cipher),buffer=new Uint8Array(16),bufferLength=0}if(this.buffer=buffer,this.bufferLength=bufferLength,this.iv=iv,0===result.length)return new Uint8Array(0);const outputLength=16*result.length,output=new Uint8Array(outputLength);for(let i=0,j=0,ii=result.length;i<ii;++i,j+=16)output.set(result[i],j);return output}}class AES128Cipher extends AESBaseCipher{constructor(key){super(),this._cyclesOfRepetition=10,this._keySize=160,this._rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),this._key=this._expandKey(key)}_expandKey(cipherKey){const s=this._s,rcon=this._rcon,result=new Uint8Array(176);result.set(cipherKey);for(let j=16,i=1;j<176;++i){let t1=result[j-3],t2=result[j-2],t3=result[j-1],t4=result[j-4];t1=s[t1],t2=s[t2],t3=s[t3],t4=s[t4],t1^=rcon[i];for(let n=0;n<4;++n)result[j]=t1^=result[j-16],j++,result[j]=t2^=result[j-16],j++,result[j]=t3^=result[j-16],j++,result[j]=t4^=result[j-16],j++}return result}}exports.AES128Cipher=AES128Cipher;class AES256Cipher extends AESBaseCipher{constructor(key){super(),this._cyclesOfRepetition=14,this._keySize=224,this._key=this._expandKey(key)}_expandKey(cipherKey){const s=this._s,result=new Uint8Array(240);result.set(cipherKey);let t1,t2,t3,t4,r=1;for(let j=32,i=1;j<240;++i){j%32==16?(t1=s[t1],t2=s[t2],t3=s[t3],t4=s[t4]):j%32==0&&(t1=result[j-3],t2=result[j-2],t3=result[j-1],t4=result[j-4],t1=s[t1],t2=s[t2],t3=s[t3],t4=s[t4],t1^=r,(r<<=1)>=256&&(r=255&(27^r)));for(let n=0;n<4;++n)result[j]=t1^=result[j-32],j++,result[j]=t2^=result[j-32],j++,result[j]=t3^=result[j-32],j++,result[j]=t4^=result[j-32],j++}return result}}exports.AES256Cipher=AES256Cipher;class PDF17{checkOwnerPassword(password,ownerValidationSalt,userBytes,ownerPassword){const hashData=new Uint8Array(password.length+56);hashData.set(password,0),hashData.set(ownerValidationSalt,password.length),hashData.set(userBytes,password.length+ownerValidationSalt.length);const result=calculateSHA256(hashData,0,hashData.length);return(0,_util.isArrayEqual)(result,ownerPassword)}checkUserPassword(password,userValidationSalt,userPassword){const hashData=new Uint8Array(password.length+8);hashData.set(password,0),hashData.set(userValidationSalt,password.length);const result=calculateSHA256(hashData,0,hashData.length);return(0,_util.isArrayEqual)(result,userPassword)}getOwnerKey(password,ownerKeySalt,userBytes,ownerEncryption){const hashData=new Uint8Array(password.length+56);hashData.set(password,0),hashData.set(ownerKeySalt,password.length),hashData.set(userBytes,password.length+ownerKeySalt.length);const key=calculateSHA256(hashData,0,hashData.length);return new AES256Cipher(key).decryptBlock(ownerEncryption,!1,new Uint8Array(16))}getUserKey(password,userKeySalt,userEncryption){const hashData=new Uint8Array(password.length+8);hashData.set(password,0),hashData.set(userKeySalt,password.length);const key=calculateSHA256(hashData,0,hashData.length);return new AES256Cipher(key).decryptBlock(userEncryption,!1,new Uint8Array(16))}}exports.PDF17=PDF17;const PDF20=function PDF20Closure(){function calculatePDF20Hash(password,input,userBytes){let k=calculateSHA256(input,0,input.length).subarray(0,32),e=[0],i=0;for(;i<64||e.at(-1)>i-32;){const combinedLength=password.length+k.length+userBytes.length,combinedArray=new Uint8Array(combinedLength);let writeOffset=0;combinedArray.set(password,writeOffset),writeOffset+=password.length,combinedArray.set(k,writeOffset),writeOffset+=k.length,combinedArray.set(userBytes,writeOffset);const k1=new Uint8Array(64*combinedLength);for(let j=0,pos=0;j<64;j++,pos+=combinedLength)k1.set(combinedArray,pos);e=new AES128Cipher(k.subarray(0,16)).encrypt(k1,k.subarray(16,32));let remainder=0;for(let z=0;z<16;z++)remainder*=1,remainder%=3,remainder+=(e[z]>>>0)%3,remainder%=3;0===remainder?k=calculateSHA256(e,0,e.length):1===remainder?k=calculateSHA384(e,0,e.length):2===remainder&&(k=calculateSHA512(e,0,e.length)),i++}return k.subarray(0,32)}return class PDF20{hash(password,concatBytes,userBytes){return calculatePDF20Hash(password,concatBytes,userBytes)}checkOwnerPassword(password,ownerValidationSalt,userBytes,ownerPassword){const hashData=new Uint8Array(password.length+56);hashData.set(password,0),hashData.set(ownerValidationSalt,password.length),hashData.set(userBytes,password.length+ownerValidationSalt.length);const result=calculatePDF20Hash(password,hashData,userBytes);return(0,_util.isArrayEqual)(result,ownerPassword)}checkUserPassword(password,userValidationSalt,userPassword){const hashData=new Uint8Array(password.length+8);hashData.set(password,0),hashData.set(userValidationSalt,password.length);const result=calculatePDF20Hash(password,hashData,[]);return(0,_util.isArrayEqual)(result,userPassword)}getOwnerKey(password,ownerKeySalt,userBytes,ownerEncryption){const hashData=new Uint8Array(password.length+56);hashData.set(password,0),hashData.set(ownerKeySalt,password.length),hashData.set(userBytes,password.length+ownerKeySalt.length);const key=calculatePDF20Hash(password,hashData,userBytes);return new AES256Cipher(key).decryptBlock(ownerEncryption,!1,new Uint8Array(16))}getUserKey(password,userKeySalt,userEncryption){const hashData=new Uint8Array(password.length+8);hashData.set(password,0),hashData.set(userKeySalt,password.length);const key=calculatePDF20Hash(password,hashData,[]);return new AES256Cipher(key).decryptBlock(userEncryption,!1,new Uint8Array(16))}}}();exports.PDF20=PDF20;class CipherTransform{constructor(stringCipherConstructor,streamCipherConstructor){this.StringCipherConstructor=stringCipherConstructor,this.StreamCipherConstructor=streamCipherConstructor}createStream(stream,length){const cipher=new this.StreamCipherConstructor;return new _decrypt_stream.DecryptStream(stream,length,(function cipherTransformDecryptStream(data,finalize){return cipher.decryptBlock(data,finalize)}))}decryptString(s){const cipher=new this.StringCipherConstructor;let data=(0,_util.stringToBytes)(s);return data=cipher.decryptBlock(data,!0),(0,_util.bytesToString)(data)}encryptString(s){const cipher=new this.StringCipherConstructor;if(cipher instanceof AESBaseCipher){const pad=16-s.length%16;s+=String.fromCharCode(pad).repeat(pad);const iv=new Uint8Array(16);if("undefined"!=typeof crypto)crypto.getRandomValues(iv);else for(let i=0;i<16;i++)iv[i]=Math.floor(256*Math.random());let data=(0,_util.stringToBytes)(s);data=cipher.encrypt(data,iv);const buf=new Uint8Array(16+data.length);return buf.set(iv),buf.set(data,16),(0,_util.bytesToString)(buf)}let data=(0,_util.stringToBytes)(s);return data=cipher.encrypt(data),(0,_util.bytesToString)(data)}}const CipherTransformFactory=function CipherTransformFactoryClosure(){const defaultPasswordBytes=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]);function prepareKeyData(fileId,password,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata){const hashDataSize=40+ownerPassword.length+fileId.length,hashData=new Uint8Array(hashDataSize);let j,n,i=0;if(password)for(n=Math.min(32,password.length);i<n;++i)hashData[i]=password[i];for(j=0;i<32;)hashData[i++]=defaultPasswordBytes[j++];for(j=0,n=ownerPassword.length;j<n;++j)hashData[i++]=ownerPassword[j];for(hashData[i++]=255&flags,hashData[i++]=flags>>8&255,hashData[i++]=flags>>16&255,hashData[i++]=flags>>>24&255,j=0,n=fileId.length;j<n;++j)hashData[i++]=fileId[j];revision>=4&&!encryptMetadata&&(hashData[i++]=255,hashData[i++]=255,hashData[i++]=255,hashData[i++]=255);let hash=calculateMD5(hashData,0,i);const keyLengthInBytes=keyLength>>3;if(revision>=3)for(j=0;j<50;++j)hash=calculateMD5(hash,0,keyLengthInBytes);const encryptionKey=hash.subarray(0,keyLengthInBytes);let cipher,checkData;if(revision>=3){for(i=0;i<32;++i)hashData[i]=defaultPasswordBytes[i];for(j=0,n=fileId.length;j<n;++j)hashData[i++]=fileId[j];cipher=new ARCFourCipher(encryptionKey),checkData=cipher.encryptBlock(calculateMD5(hashData,0,i)),n=encryptionKey.length;const derivedKey=new Uint8Array(n);for(j=1;j<=19;++j){for(let k=0;k<n;++k)derivedKey[k]=encryptionKey[k]^j;cipher=new ARCFourCipher(derivedKey),checkData=cipher.encryptBlock(checkData)}for(j=0,n=checkData.length;j<n;++j)if(userPassword[j]!==checkData[j])return null}else for(cipher=new ARCFourCipher(encryptionKey),checkData=cipher.encryptBlock(defaultPasswordBytes),j=0,n=checkData.length;j<n;++j)if(userPassword[j]!==checkData[j])return null;return encryptionKey}const identityName=_primitives.Name.get("Identity");function buildObjectKey(num,gen,encryptionKey,isAes=!1){const key=new Uint8Array(encryptionKey.length+9),n=encryptionKey.length;let i;for(i=0;i<n;++i)key[i]=encryptionKey[i];key[i++]=255&num,key[i++]=num>>8&255,key[i++]=num>>16&255,key[i++]=255&gen,key[i++]=gen>>8&255,isAes&&(key[i++]=115,key[i++]=65,key[i++]=108,key[i++]=84);return calculateMD5(key,0,i).subarray(0,Math.min(encryptionKey.length+5,16))}function buildCipherConstructor(cf,name,num,gen,key){if(!(name instanceof _primitives.Name))throw new _util.FormatError("Invalid crypt filter name.");const cryptFilter=cf.get(name.name);let cfm;if(null!=cryptFilter&&(cfm=cryptFilter.get("CFM")),!cfm||"None"===cfm.name)return function cipherTransformFactoryBuildCipherConstructorNone(){return new NullCipher};if("V2"===cfm.name)return function cipherTransformFactoryBuildCipherConstructorV2(){return new ARCFourCipher(buildObjectKey(num,gen,key,!1))};if("AESV2"===cfm.name)return function cipherTransformFactoryBuildCipherConstructorAESV2(){return new AES128Cipher(buildObjectKey(num,gen,key,!0))};if("AESV3"===cfm.name)return function cipherTransformFactoryBuildCipherConstructorAESV3(){return new AES256Cipher(key)};throw new _util.FormatError("Unknown crypto method")}return class CipherTransformFactory{constructor(dict,fileId,password){const filter=dict.get("Filter");if(!(0,_primitives.isName)(filter,"Standard"))throw new _util.FormatError("unknown encryption method");this.filterName=filter.name,this.dict=dict;const algorithm=dict.get("V");if(!Number.isInteger(algorithm)||1!==algorithm&&2!==algorithm&&4!==algorithm&&5!==algorithm)throw new _util.FormatError("unsupported encryption algorithm");this.algorithm=algorithm;let keyLength=dict.get("Length");if(!keyLength)if(algorithm<=3)keyLength=40;else{const cfDict=dict.get("CF"),streamCryptoName=dict.get("StmF");if(cfDict instanceof _primitives.Dict&&streamCryptoName instanceof _primitives.Name){cfDict.suppressEncryption=!0;const handlerDict=cfDict.get(streamCryptoName.name);keyLength=handlerDict&&handlerDict.get("Length")||128,keyLength<40&&(keyLength<<=3)}}if(!Number.isInteger(keyLength)||keyLength<40||keyLength%8!=0)throw new _util.FormatError("invalid key length");const ownerPassword=(0,_util.stringToBytes)(dict.get("O")).subarray(0,32),userPassword=(0,_util.stringToBytes)(dict.get("U")).subarray(0,32),flags=dict.get("P"),revision=dict.get("R"),encryptMetadata=(4===algorithm||5===algorithm)&&!1!==dict.get("EncryptMetadata");this.encryptMetadata=encryptMetadata;const fileIdBytes=(0,_util.stringToBytes)(fileId);let passwordBytes,encryptionKey;if(password){if(6===revision)try{password=(0,_util.utf8StringToString)(password)}catch(ex){(0,_util.warn)("CipherTransformFactory: Unable to convert UTF8 encoded password.")}passwordBytes=(0,_util.stringToBytes)(password)}if(5!==algorithm)encryptionKey=prepareKeyData(fileIdBytes,passwordBytes,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata);else{const ownerValidationSalt=(0,_util.stringToBytes)(dict.get("O")).subarray(32,40),ownerKeySalt=(0,_util.stringToBytes)(dict.get("O")).subarray(40,48),uBytes=(0,_util.stringToBytes)(dict.get("U")).subarray(0,48),userValidationSalt=(0,_util.stringToBytes)(dict.get("U")).subarray(32,40),userKeySalt=(0,_util.stringToBytes)(dict.get("U")).subarray(40,48),ownerEncryption=(0,_util.stringToBytes)(dict.get("OE")),userEncryption=(0,_util.stringToBytes)(dict.get("UE"));(0,_util.stringToBytes)(dict.get("Perms"));encryptionKey=function createEncryptionKey20(revision,password,ownerPassword,ownerValidationSalt,ownerKeySalt,uBytes,userPassword,userValidationSalt,userKeySalt,ownerEncryption,userEncryption,perms){if(password){const passwordLength=Math.min(127,password.length);password=password.subarray(0,passwordLength)}else password=[];let pdfAlgorithm;return pdfAlgorithm=6===revision?new PDF20:new PDF17,pdfAlgorithm.checkUserPassword(password,userValidationSalt,userPassword)?pdfAlgorithm.getUserKey(password,userKeySalt,userEncryption):password.length&&pdfAlgorithm.checkOwnerPassword(password,ownerValidationSalt,uBytes,ownerPassword)?pdfAlgorithm.getOwnerKey(password,ownerKeySalt,uBytes,ownerEncryption):null}(revision,passwordBytes,ownerPassword,ownerValidationSalt,ownerKeySalt,uBytes,userPassword,userValidationSalt,userKeySalt,ownerEncryption,userEncryption)}if(!encryptionKey&&!password)throw new _util.PasswordException("No password given",_util.PasswordResponses.NEED_PASSWORD);if(!encryptionKey&&password){const decodedPassword=function decodeUserPassword(password,ownerPassword,revision,keyLength){const hashData=new Uint8Array(32);let i=0;const n=Math.min(32,password.length);for(;i<n;++i)hashData[i]=password[i];let j=0;for(;i<32;)hashData[i++]=defaultPasswordBytes[j++];let hash=calculateMD5(hashData,0,i);const keyLengthInBytes=keyLength>>3;if(revision>=3)for(j=0;j<50;++j)hash=calculateMD5(hash,0,hash.length);let cipher,userPassword;if(revision>=3){userPassword=ownerPassword;const derivedKey=new Uint8Array(keyLengthInBytes);for(j=19;j>=0;j--){for(let k=0;k<keyLengthInBytes;++k)derivedKey[k]=hash[k]^j;cipher=new ARCFourCipher(derivedKey),userPassword=cipher.encryptBlock(userPassword)}}else cipher=new ARCFourCipher(hash.subarray(0,keyLengthInBytes)),userPassword=cipher.encryptBlock(ownerPassword);return userPassword}(passwordBytes,ownerPassword,revision,keyLength);encryptionKey=prepareKeyData(fileIdBytes,decodedPassword,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata)}if(!encryptionKey)throw new _util.PasswordException("Incorrect Password",_util.PasswordResponses.INCORRECT_PASSWORD);if(this.encryptionKey=encryptionKey,algorithm>=4){const cf=dict.get("CF");cf instanceof _primitives.Dict&&(cf.suppressEncryption=!0),this.cf=cf,this.stmf=dict.get("StmF")||identityName,this.strf=dict.get("StrF")||identityName,this.eff=dict.get("EFF")||this.stmf}}createCipherTransform(num,gen){if(4===this.algorithm||5===this.algorithm)return new CipherTransform(buildCipherConstructor(this.cf,this.strf,num,gen,this.encryptionKey),buildCipherConstructor(this.cf,this.stmf,num,gen,this.encryptionKey));const key=buildObjectKey(num,gen,this.encryptionKey,!1),cipherConstructor=function buildCipherCipherConstructor(){return new ARCFourCipher(key)};return new CipherTransform(cipherConstructor,cipherConstructor)}}}();exports.CipherTransformFactory=CipherTransformFactory},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DecryptStream=void 0;var _decode_stream=__w_pdfjs_require__(19);class DecryptStream extends _decode_stream.DecodeStream{constructor(str,maybeLength,decrypt){super(maybeLength),this.str=str,this.dict=str.dict,this.decrypt=decrypt,this.nextChunk=null,this.initialized=!1}readBlock(){let chunk;if(this.initialized?chunk=this.nextChunk:(chunk=this.str.getBytes(512),this.initialized=!0),!chunk||0===chunk.length)return void(this.eof=!0);this.nextChunk=this.str.getBytes(512);const hasMoreData=this.nextChunk&&this.nextChunk.length>0;chunk=(0,this.decrypt)(chunk,!hasMoreData);let bufferLength=this.bufferLength;const n=chunk.length,buffer=this.ensureBuffer(bufferLength+n);for(let i=0;i<n;i++)buffer[bufferLength++]=chunk[i];this.bufferLength=bufferLength}}exports.DecryptStream=DecryptStream},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Catalog=void 0;var _core_utils=__w_pdfjs_require__(6),_util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_name_number_tree=__w_pdfjs_require__(70),_base_stream=__w_pdfjs_require__(7),_cleanup_helper=__w_pdfjs_require__(71),_colorspace=__w_pdfjs_require__(14),_file_spec=__w_pdfjs_require__(72),_image_utils=__w_pdfjs_require__(59),_metadata_parser=__w_pdfjs_require__(73),_struct_tree=__w_pdfjs_require__(74);function fetchDestination(dest){return dest instanceof _primitives.Dict&&(dest=dest.get("D")),Array.isArray(dest)?dest:null}class Catalog{constructor(pdfManager,xref){if(this.pdfManager=pdfManager,this.xref=xref,this._catDict=xref.getCatalogObj(),!(this._catDict instanceof _primitives.Dict))throw new _util.FormatError("Catalog object is not a dictionary.");this.toplevelPagesDict,this._actualNumPages=null,this.fontCache=new _primitives.RefSetCache,this.builtInCMapCache=new Map,this.standardFontDataCache=new Map,this.globalImageCache=new _image_utils.GlobalImageCache,this.pageKidsCountCache=new _primitives.RefSetCache,this.pageIndexCache=new _primitives.RefSetCache,this.nonBlendModesSet=new _primitives.RefSet}get version(){const version=this._catDict.get("Version");return(0,_util.shadow)(this,"version",version instanceof _primitives.Name?version.name:null)}get lang(){const lang=this._catDict.get("Lang");return(0,_util.shadow)(this,"lang","string"==typeof lang?(0,_util.stringToPDFString)(lang):null)}get needsRendering(){const needsRendering=this._catDict.get("NeedsRendering");return(0,_util.shadow)(this,"needsRendering","boolean"==typeof needsRendering&&needsRendering)}get collection(){let collection=null;try{const obj=this._catDict.get("Collection");obj instanceof _primitives.Dict&&obj.size>0&&(collection=obj)}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.info)("Cannot fetch Collection entry; assuming no collection is present.")}return(0,_util.shadow)(this,"collection",collection)}get acroForm(){let acroForm=null;try{const obj=this._catDict.get("AcroForm");obj instanceof _primitives.Dict&&obj.size>0&&(acroForm=obj)}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.info)("Cannot fetch AcroForm entry; assuming no forms are present.")}return(0,_util.shadow)(this,"acroForm",acroForm)}get acroFormRef(){const value=this._catDict.getRaw("AcroForm");return(0,_util.shadow)(this,"acroFormRef",value instanceof _primitives.Ref?value:null)}get metadata(){const streamRef=this._catDict.getRaw("Metadata");if(!(streamRef instanceof _primitives.Ref))return(0,_util.shadow)(this,"metadata",null);let metadata=null;try{const suppressEncryption=!(this.xref.encrypt&&this.xref.encrypt.encryptMetadata),stream=this.xref.fetch(streamRef,suppressEncryption);if(stream instanceof _base_stream.BaseStream&&stream.dict instanceof _primitives.Dict){const type=stream.dict.get("Type"),subtype=stream.dict.get("Subtype");if((0,_primitives.isName)(type,"Metadata")&&(0,_primitives.isName)(subtype,"XML")){const data=(0,_util.stringToUTF8String)(stream.getString());data&&(metadata=new _metadata_parser.MetadataParser(data).serializable)}}}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.info)(`Skipping invalid Metadata: "${ex}".`)}return(0,_util.shadow)(this,"metadata",metadata)}get markInfo(){let markInfo=null;try{markInfo=this._readMarkInfo()}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)("Unable to read mark info.")}return(0,_util.shadow)(this,"markInfo",markInfo)}_readMarkInfo(){const obj=this._catDict.get("MarkInfo");if(!(obj instanceof _primitives.Dict))return null;const markInfo={Marked:!1,UserProperties:!1,Suspects:!1};for(const key in markInfo){const value=obj.get(key);"boolean"==typeof value&&(markInfo[key]=value)}return markInfo}get structTreeRoot(){let structTree=null;try{structTree=this._readStructTreeRoot()}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)("Unable read to structTreeRoot info.")}return(0,_util.shadow)(this,"structTreeRoot",structTree)}_readStructTreeRoot(){const obj=this._catDict.get("StructTreeRoot");if(!(obj instanceof _primitives.Dict))return null;const root=new _struct_tree.StructTreeRoot(obj);return root.init(),root}get toplevelPagesDict(){const pagesObj=this._catDict.get("Pages");if(!(pagesObj instanceof _primitives.Dict))throw new _util.FormatError("Invalid top-level pages dictionary.");return(0,_util.shadow)(this,"toplevelPagesDict",pagesObj)}get documentOutline(){let obj=null;try{obj=this._readDocumentOutline()}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)("Unable to read document outline.")}return(0,_util.shadow)(this,"documentOutline",obj)}_readDocumentOutline(){let obj=this._catDict.get("Outlines");if(!(obj instanceof _primitives.Dict))return null;if(obj=obj.getRaw("First"),!(obj instanceof _primitives.Ref))return null;const root={items:[]},queue=[{obj,parent:root}],processed=new _primitives.RefSet;processed.put(obj);const xref=this.xref,blackColor=new Uint8ClampedArray(3);for(;queue.length>0;){const i=queue.shift(),outlineDict=xref.fetchIfRef(i.obj);if(null===outlineDict)continue;if(!outlineDict.has("Title"))throw new _util.FormatError("Invalid outline item encountered.");const data={url:null,dest:null};Catalog.parseDestDictionary({destDict:outlineDict,resultObj:data,docBaseUrl:this.pdfManager.docBaseUrl});const title=outlineDict.get("Title"),flags=outlineDict.get("F")||0,color=outlineDict.getArray("C"),count=outlineDict.get("Count");let rgbColor=blackColor;!Array.isArray(color)||3!==color.length||0===color[0]&&0===color[1]&&0===color[2]||(rgbColor=_colorspace.ColorSpace.singletons.rgb.getRgb(color,0));const outlineItem={dest:data.dest,url:data.url,unsafeUrl:data.unsafeUrl,newWindow:data.newWindow,title:(0,_util.stringToPDFString)(title),color:rgbColor,count:Number.isInteger(count)?count:void 0,bold:!!(2&flags),italic:!!(1&flags),items:[]};i.parent.items.push(outlineItem),obj=outlineDict.getRaw("First"),obj instanceof _primitives.Ref&&!processed.has(obj)&&(queue.push({obj,parent:outlineItem}),processed.put(obj)),obj=outlineDict.getRaw("Next"),obj instanceof _primitives.Ref&&!processed.has(obj)&&(queue.push({obj,parent:i.parent}),processed.put(obj))}return root.items.length>0?root.items:null}get permissions(){let permissions=null;try{permissions=this._readPermissions()}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)("Unable to read permissions.")}return(0,_util.shadow)(this,"permissions",permissions)}_readPermissions(){const encrypt=this.xref.trailer.get("Encrypt");if(!(encrypt instanceof _primitives.Dict))return null;let flags=encrypt.get("P");if("number"!=typeof flags)return null;flags+=2**32;const permissions=[];for(const key in _util.PermissionFlag){const value=_util.PermissionFlag[key];flags&value&&permissions.push(value)}return permissions}get optionalContentConfig(){let config=null;try{const properties=this._catDict.get("OCProperties");if(!properties)return(0,_util.shadow)(this,"optionalContentConfig",null);const defaultConfig=properties.get("D");if(!defaultConfig)return(0,_util.shadow)(this,"optionalContentConfig",null);const groupsData=properties.get("OCGs");if(!Array.isArray(groupsData))return(0,_util.shadow)(this,"optionalContentConfig",null);const groups=[],groupRefs=[];for(const groupRef of groupsData){if(!(groupRef instanceof _primitives.Ref))continue;groupRefs.push(groupRef);const group=this.xref.fetchIfRef(groupRef);groups.push({id:groupRef.toString(),name:"string"==typeof group.get("Name")?(0,_util.stringToPDFString)(group.get("Name")):null,intent:"string"==typeof group.get("Intent")?(0,_util.stringToPDFString)(group.get("Intent")):null})}config=this._readOptionalContentConfig(defaultConfig,groupRefs),config.groups=groups}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)(`Unable to read optional content config: ${ex}`)}return(0,_util.shadow)(this,"optionalContentConfig",config)}_readOptionalContentConfig(config,contentGroupRefs){function parseOnOff(refs){const onParsed=[];if(Array.isArray(refs))for(const value of refs)value instanceof _primitives.Ref&&contentGroupRefs.includes(value)&&onParsed.push(value.toString());return onParsed}function parseOrder(refs,nestedLevels=0){if(!Array.isArray(refs))return null;const order=[];for(const value of refs){if(value instanceof _primitives.Ref&&contentGroupRefs.includes(value)){parsedOrderRefs.put(value),order.push(value.toString());continue}const nestedOrder=parseNestedOrder(value,nestedLevels);nestedOrder&&order.push(nestedOrder)}if(nestedLevels>0)return order;const hiddenGroups=[];for(const groupRef of contentGroupRefs)parsedOrderRefs.has(groupRef)||hiddenGroups.push(groupRef.toString());return hiddenGroups.length&&order.push({name:null,order:hiddenGroups}),order}function parseNestedOrder(ref,nestedLevels){if(++nestedLevels>MAX_NESTED_LEVELS)return(0,_util.warn)("parseNestedOrder - reached MAX_NESTED_LEVELS."),null;const value=xref.fetchIfRef(ref);if(!Array.isArray(value))return null;const nestedName=xref.fetchIfRef(value[0]);if("string"!=typeof nestedName)return null;const nestedOrder=parseOrder(value.slice(1),nestedLevels);return nestedOrder&&nestedOrder.length?{name:(0,_util.stringToPDFString)(nestedName),order:nestedOrder}:null}const xref=this.xref,parsedOrderRefs=new _primitives.RefSet,MAX_NESTED_LEVELS=10;return{name:"string"==typeof config.get("Name")?(0,_util.stringToPDFString)(config.get("Name")):null,creator:"string"==typeof config.get("Creator")?(0,_util.stringToPDFString)(config.get("Creator")):null,baseState:config.get("BaseState")instanceof _primitives.Name?config.get("BaseState").name:null,on:parseOnOff(config.get("ON")),off:parseOnOff(config.get("OFF")),order:parseOrder(config.get("Order")),groups:null}}setActualNumPages(num=null){this._actualNumPages=num}get hasActualNumPages(){return null!==this._actualNumPages}get _pagesCount(){const obj=this.toplevelPagesDict.get("Count");if(!Number.isInteger(obj))throw new _util.FormatError("Page count in top-level pages dictionary is not an integer.");return(0,_util.shadow)(this,"_pagesCount",obj)}get numPages(){return this.hasActualNumPages?this._actualNumPages:this._pagesCount}get destinations(){const obj=this._readDests(),dests=Object.create(null);if(obj instanceof _name_number_tree.NameTree)for(const[key,value]of obj.getAll()){const dest=fetchDestination(value);dest&&(dests[(0,_util.stringToPDFString)(key)]=dest)}else obj instanceof _primitives.Dict&&obj.forEach((function(key,value){const dest=fetchDestination(value);dest&&(dests[key]=dest)}));return(0,_util.shadow)(this,"destinations",dests)}getDestination(id){const obj=this._readDests();if(obj instanceof _name_number_tree.NameTree){const dest=fetchDestination(obj.get(id));if(dest)return dest;const allDest=this.destinations[id];if(allDest)return(0,_util.warn)(`Found "${id}" at an incorrect position in the NameTree.`),allDest}else if(obj instanceof _primitives.Dict){const dest=fetchDestination(obj.get(id));if(dest)return dest}return null}_readDests(){const obj=this._catDict.get("Names");return obj&&obj.has("Dests")?new _name_number_tree.NameTree(obj.getRaw("Dests"),this.xref):this._catDict.has("Dests")?this._catDict.get("Dests"):void 0}get pageLabels(){let obj=null;try{obj=this._readPageLabels()}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)("Unable to read page labels.")}return(0,_util.shadow)(this,"pageLabels",obj)}_readPageLabels(){const obj=this._catDict.getRaw("PageLabels");if(!obj)return null;const pageLabels=new Array(this.numPages);let style=null,prefix="";const nums=new _name_number_tree.NumberTree(obj,this.xref).getAll();let currentLabel="",currentIndex=1;for(let i=0,ii=this.numPages;i<ii;i++){const labelDict=nums.get(i);if(void 0!==labelDict){if(!(labelDict instanceof _primitives.Dict))throw new _util.FormatError("PageLabel is not a dictionary.");if(labelDict.has("Type")&&!(0,_primitives.isName)(labelDict.get("Type"),"PageLabel"))throw new _util.FormatError("Invalid type in PageLabel dictionary.");if(labelDict.has("S")){const s=labelDict.get("S");if(!(s instanceof _primitives.Name))throw new _util.FormatError("Invalid style in PageLabel dictionary.");style=s.name}else style=null;if(labelDict.has("P")){const p=labelDict.get("P");if("string"!=typeof p)throw new _util.FormatError("Invalid prefix in PageLabel dictionary.");prefix=(0,_util.stringToPDFString)(p)}else prefix="";if(labelDict.has("St")){const st=labelDict.get("St");if(!(Number.isInteger(st)&&st>=1))throw new _util.FormatError("Invalid start in PageLabel dictionary.");currentIndex=st}else currentIndex=1}switch(style){case"D":currentLabel=currentIndex;break;case"R":case"r":currentLabel=(0,_core_utils.toRomanNumerals)(currentIndex,"r"===style);break;case"A":case"a":const LIMIT=26,A_UPPER_CASE=65,A_LOWER_CASE=97,baseCharCode="a"===style?A_LOWER_CASE:A_UPPER_CASE,letterIndex=currentIndex-1;currentLabel=String.fromCharCode(baseCharCode+letterIndex%LIMIT).repeat(Math.floor(letterIndex/LIMIT)+1);break;default:if(style)throw new _util.FormatError(`Invalid style "${style}" in PageLabel dictionary.`);currentLabel=""}pageLabels[i]=prefix+currentLabel,currentIndex++}return pageLabels}get pageLayout(){const obj=this._catDict.get("PageLayout");let pageLayout="";if(obj instanceof _primitives.Name)switch(obj.name){case"SinglePage":case"OneColumn":case"TwoColumnLeft":case"TwoColumnRight":case"TwoPageLeft":case"TwoPageRight":pageLayout=obj.name}return(0,_util.shadow)(this,"pageLayout",pageLayout)}get pageMode(){const obj=this._catDict.get("PageMode");let pageMode="UseNone";if(obj instanceof _primitives.Name)switch(obj.name){case"UseNone":case"UseOutlines":case"UseThumbs":case"FullScreen":case"UseOC":case"UseAttachments":pageMode=obj.name}return(0,_util.shadow)(this,"pageMode",pageMode)}get viewerPreferences(){const obj=this._catDict.get("ViewerPreferences");if(!(obj instanceof _primitives.Dict))return(0,_util.shadow)(this,"viewerPreferences",null);let prefs=null;for(const key of obj.getKeys()){const value=obj.get(key);let prefValue;switch(key){case"HideToolbar":case"HideMenubar":case"HideWindowUI":case"FitWindow":case"CenterWindow":case"DisplayDocTitle":case"PickTrayByPDFSize":"boolean"==typeof value&&(prefValue=value);break;case"NonFullScreenPageMode":if(value instanceof _primitives.Name)switch(value.name){case"UseNone":case"UseOutlines":case"UseThumbs":case"UseOC":prefValue=value.name;break;default:prefValue="UseNone"}break;case"Direction":if(value instanceof _primitives.Name)switch(value.name){case"L2R":case"R2L":prefValue=value.name;break;default:prefValue="L2R"}break;case"ViewArea":case"ViewClip":case"PrintArea":case"PrintClip":if(value instanceof _primitives.Name)switch(value.name){case"MediaBox":case"CropBox":case"BleedBox":case"TrimBox":case"ArtBox":prefValue=value.name;break;default:prefValue="CropBox"}break;case"PrintScaling":if(value instanceof _primitives.Name)switch(value.name){case"None":case"AppDefault":prefValue=value.name;break;default:prefValue="AppDefault"}break;case"Duplex":if(value instanceof _primitives.Name)switch(value.name){case"Simplex":case"DuplexFlipShortEdge":case"DuplexFlipLongEdge":prefValue=value.name;break;default:prefValue="None"}break;case"PrintPageRange":if(Array.isArray(value)&&value.length%2==0){value.every(((page,i,arr)=>Number.isInteger(page)&&page>0&&(0===i||page>=arr[i-1])&&page<=this.numPages))&&(prefValue=value)}break;case"NumCopies":Number.isInteger(value)&&value>0&&(prefValue=value);break;default:(0,_util.warn)(`Ignoring non-standard key in ViewerPreferences: ${key}.`);continue}void 0!==prefValue?(prefs||(prefs=Object.create(null)),prefs[key]=prefValue):(0,_util.warn)(`Bad value, for key "${key}", in ViewerPreferences: ${value}.`)}return(0,_util.shadow)(this,"viewerPreferences",prefs)}get openAction(){const obj=this._catDict.get("OpenAction"),openAction=Object.create(null);if(obj instanceof _primitives.Dict){const destDict=new _primitives.Dict(this.xref);destDict.set("A",obj);const resultObj={url:null,dest:null,action:null};Catalog.parseDestDictionary({destDict,resultObj}),Array.isArray(resultObj.dest)?openAction.dest=resultObj.dest:resultObj.action&&(openAction.action=resultObj.action)}else Array.isArray(obj)&&(openAction.dest=obj);return(0,_util.shadow)(this,"openAction",(0,_util.objectSize)(openAction)>0?openAction:null)}get attachments(){const obj=this._catDict.get("Names");let attachments=null;if(obj instanceof _primitives.Dict&&obj.has("EmbeddedFiles")){const nameTree=new _name_number_tree.NameTree(obj.getRaw("EmbeddedFiles"),this.xref);for(const[key,value]of nameTree.getAll()){const fs=new _file_spec.FileSpec(value,this.xref);attachments||(attachments=Object.create(null)),attachments[(0,_util.stringToPDFString)(key)]=fs.serializable}}return(0,_util.shadow)(this,"attachments",attachments)}get xfaImages(){const obj=this._catDict.get("Names");let xfaImages=null;if(obj instanceof _primitives.Dict&&obj.has("XFAImages")){const nameTree=new _name_number_tree.NameTree(obj.getRaw("XFAImages"),this.xref);for(const[key,value]of nameTree.getAll())xfaImages||(xfaImages=new _primitives.Dict(this.xref)),xfaImages.set((0,_util.stringToPDFString)(key),value)}return(0,_util.shadow)(this,"xfaImages",xfaImages)}_collectJavaScript(){const obj=this._catDict.get("Names");let javaScript=null;function appendIfJavaScriptDict(name,jsDict){if(!(jsDict instanceof _primitives.Dict))return;if(!(0,_primitives.isName)(jsDict.get("S"),"JavaScript"))return;let js=jsDict.get("JS");if(js instanceof _base_stream.BaseStream)js=js.getString();else if("string"!=typeof js)return;null===javaScript&&(javaScript=new Map),js=(0,_util.stringToPDFString)(js).replace(/\u0000/g,""),javaScript.set(name,js)}if(obj instanceof _primitives.Dict&&obj.has("JavaScript")){const nameTree=new _name_number_tree.NameTree(obj.getRaw("JavaScript"),this.xref);for(const[key,value]of nameTree.getAll())appendIfJavaScriptDict((0,_util.stringToPDFString)(key),value)}const openAction=this._catDict.get("OpenAction");return openAction&&appendIfJavaScriptDict("OpenAction",openAction),javaScript}get javaScript(){const javaScript=this._collectJavaScript();return(0,_util.shadow)(this,"javaScript",javaScript?[...javaScript.values()]:null)}get jsActions(){const javaScript=this._collectJavaScript();let actions=(0,_core_utils.collectActions)(this.xref,this._catDict,_util.DocumentActionEventType);if(javaScript){actions||(actions=Object.create(null));for(const[key,val]of javaScript)key in actions?actions[key].push(val):actions[key]=[val]}return(0,_util.shadow)(this,"jsActions",actions)}async fontFallback(id,handler){const translatedFonts=await Promise.all(this.fontCache);for(const translatedFont of translatedFonts)if(translatedFont.loadedName===id)return void translatedFont.fallback(handler)}async cleanup(manuallyTriggered=!1){(0,_cleanup_helper.clearGlobalCaches)(),this.globalImageCache.clear(manuallyTriggered),this.pageKidsCountCache.clear(),this.pageIndexCache.clear(),this.nonBlendModesSet.clear();const translatedFonts=await Promise.all(this.fontCache);for(const{dict}of translatedFonts)delete dict.cacheKey;this.fontCache.clear(),this.builtInCMapCache.clear(),this.standardFontDataCache.clear()}async getPageDict(pageIndex){const nodesToVisit=[this.toplevelPagesDict],visitedNodes=new _primitives.RefSet,pagesRef=this._catDict.getRaw("Pages");pagesRef instanceof _primitives.Ref&&visitedNodes.put(pagesRef);const xref=this.xref,pageKidsCountCache=this.pageKidsCountCache,pageIndexCache=this.pageIndexCache;let currentPageIndex=0;for(;nodesToVisit.length;){const currentNode=nodesToVisit.pop();if(currentNode instanceof _primitives.Ref){const count=pageKidsCountCache.get(currentNode);if(count>=0&&currentPageIndex+count<=pageIndex){currentPageIndex+=count;continue}if(visitedNodes.has(currentNode))throw new _util.FormatError("Pages tree contains circular reference.");visitedNodes.put(currentNode);const obj=await xref.fetchAsync(currentNode);if(obj instanceof _primitives.Dict){let type=obj.getRaw("Type");if(type instanceof _primitives.Ref&&(type=await xref.fetchAsync(type)),(0,_primitives.isName)(type,"Page")||!obj.has("Kids")){if(pageKidsCountCache.has(currentNode)||pageKidsCountCache.put(currentNode,1),pageIndexCache.has(currentNode)||pageIndexCache.put(currentNode,currentPageIndex),currentPageIndex===pageIndex)return[obj,currentNode];currentPageIndex++;continue}}nodesToVisit.push(obj);continue}if(!(currentNode instanceof _primitives.Dict))throw new _util.FormatError("Page dictionary kid reference points to wrong type of object.");const{objId}=currentNode;let count=currentNode.getRaw("Count");if(count instanceof _primitives.Ref&&(count=await xref.fetchAsync(count)),Number.isInteger(count)&&count>=0&&(objId&&!pageKidsCountCache.has(objId)&&pageKidsCountCache.put(objId,count),currentPageIndex+count<=pageIndex)){currentPageIndex+=count;continue}let kids=currentNode.getRaw("Kids");if(kids instanceof _primitives.Ref&&(kids=await xref.fetchAsync(kids)),!Array.isArray(kids)){let type=currentNode.getRaw("Type");if(type instanceof _primitives.Ref&&(type=await xref.fetchAsync(type)),(0,_primitives.isName)(type,"Page")||!currentNode.has("Kids")){if(currentPageIndex===pageIndex)return[currentNode,null];currentPageIndex++;continue}throw new _util.FormatError("Page dictionary kids object is not an array.")}for(let last=kids.length-1;last>=0;last--)nodesToVisit.push(kids[last])}throw new Error(`Page index ${pageIndex} not found.`)}async getAllPageDicts(recoveryMode=!1){const queue=[{currentNode:this.toplevelPagesDict,posInKids:0}],visitedNodes=new _primitives.RefSet,pagesRef=this._catDict.getRaw("Pages");pagesRef instanceof _primitives.Ref&&visitedNodes.put(pagesRef);const map=new Map,xref=this.xref,pageIndexCache=this.pageIndexCache;let pageIndex=0;function addPageError(error){if(error instanceof _core_utils.XRefEntryException&&!recoveryMode)throw error;map.set(pageIndex++,[error,null])}for(;queue.length>0;){const queueItem=queue.at(-1),{currentNode,posInKids}=queueItem;let kids=currentNode.getRaw("Kids");if(kids instanceof _primitives.Ref)try{kids=await xref.fetchAsync(kids)}catch(ex){addPageError(ex);break}if(!Array.isArray(kids)){addPageError(new _util.FormatError("Page dictionary kids object is not an array."));break}if(posInKids>=kids.length){queue.pop();continue}const kidObj=kids[posInKids];let obj;if(kidObj instanceof _primitives.Ref){if(visitedNodes.has(kidObj)){addPageError(new _util.FormatError("Pages tree contains circular reference."));break}visitedNodes.put(kidObj);try{obj=await xref.fetchAsync(kidObj)}catch(ex){addPageError(ex);break}}else obj=kidObj;if(!(obj instanceof _primitives.Dict)){addPageError(new _util.FormatError("Page dictionary kid reference points to wrong type of object."));break}let type=obj.getRaw("Type");if(type instanceof _primitives.Ref)try{type=await xref.fetchAsync(type)}catch(ex){addPageError(ex);break}(0,_primitives.isName)(type,"Page")||!obj.has("Kids")?(pageDict=obj,(pageRef=kidObj instanceof _primitives.Ref?kidObj:null)&&!pageIndexCache.has(pageRef)&&pageIndexCache.put(pageRef,pageIndex),map.set(pageIndex++,[pageDict,pageRef])):queue.push({currentNode:obj,posInKids:0}),queueItem.posInKids++}var pageDict,pageRef;return map}getPageIndex(pageRef){const cachedPageIndex=this.pageIndexCache.get(pageRef);if(void 0!==cachedPageIndex)return Promise.resolve(cachedPageIndex);const xref=this.xref;let total=0;const next=ref=>function pagesBeforeRef(kidRef){let parentRef,total=0;return xref.fetchAsync(kidRef).then((function(node){if((0,_primitives.isRefsEqual)(kidRef,pageRef)&&!(0,_primitives.isDict)(node,"Page")&&!(node instanceof _primitives.Dict&&!node.has("Type")&&node.has("Contents")))throw new _util.FormatError("The reference does not point to a /Page dictionary.");if(!node)return null;if(!(node instanceof _primitives.Dict))throw new _util.FormatError("Node must be a dictionary.");return parentRef=node.getRaw("Parent"),node.getAsync("Parent")})).then((function(parent){if(!parent)return null;if(!(parent instanceof _primitives.Dict))throw new _util.FormatError("Parent must be a dictionary.");return parent.getAsync("Kids")})).then((function(kids){if(!kids)return null;const kidPromises=[];let found=!1;for(let i=0,ii=kids.length;i<ii;i++){const kid=kids[i];if(!(kid instanceof _primitives.Ref))throw new _util.FormatError("Kid must be a reference.");if((0,_primitives.isRefsEqual)(kid,kidRef)){found=!0;break}kidPromises.push(xref.fetchAsync(kid).then((function(obj){if(!(obj instanceof _primitives.Dict))throw new _util.FormatError("Kid node must be a dictionary.");obj.has("Count")?total+=obj.get("Count"):total++})))}if(!found)throw new _util.FormatError("Kid reference not found in parent's kids.");return Promise.all(kidPromises).then((function(){return[total,parentRef]}))}))}(ref).then((args=>{if(!args)return this.pageIndexCache.put(pageRef,total),total;const[count,parentRef]=args;return total+=count,next(parentRef)}));return next(pageRef)}get baseUrl(){const uri=this._catDict.get("URI");if(uri instanceof _primitives.Dict){const base=uri.get("Base");if("string"==typeof base){const absoluteUrl=(0,_util.createValidAbsoluteUrl)(base,null,{tryConvertEncoding:!0});if(absoluteUrl)return(0,_util.shadow)(this,"baseUrl",absoluteUrl.href)}}return(0,_util.shadow)(this,"baseUrl",null)}static parseDestDictionary(params){const destDict=params.destDict;if(!(destDict instanceof _primitives.Dict))return void(0,_util.warn)("parseDestDictionary: `destDict` must be a dictionary.");const resultObj=params.resultObj;if("object"!=typeof resultObj)return void(0,_util.warn)("parseDestDictionary: `resultObj` must be an object.");const docBaseUrl=params.docBaseUrl||null;let url,dest,action=destDict.get("A");if(action instanceof _primitives.Dict||(destDict.has("Dest")?action=destDict.get("Dest"):(action=destDict.get("AA"),action instanceof _primitives.Dict&&(action.has("D")?action=action.get("D"):action.has("U")&&(action=action.get("U"))))),action instanceof _primitives.Dict){const actionType=action.get("S");if(!(actionType instanceof _primitives.Name))return void(0,_util.warn)("parseDestDictionary: Invalid type in Action dictionary.");const actionName=actionType.name;switch(actionName){case"ResetForm":const flags=action.get("Flags"),include=0==(1&("number"==typeof flags?flags:0)),fields=[],refs=[];for(const obj of action.get("Fields")||[])obj instanceof _primitives.Ref?refs.push(obj.toString()):"string"==typeof obj&&fields.push((0,_util.stringToPDFString)(obj));resultObj.resetForm={fields,refs,include};break;case"URI":url=action.get("URI"),url instanceof _primitives.Name&&(url="/"+url.name);break;case"GoTo":dest=action.get("D");break;case"Launch":case"GoToR":const urlDict=action.get("F");urlDict instanceof _primitives.Dict?url=urlDict.get("F")||null:"string"==typeof urlDict&&(url=urlDict);let remoteDest=action.get("D");if(remoteDest&&(remoteDest instanceof _primitives.Name&&(remoteDest=remoteDest.name),"string"==typeof url)){const baseUrl=url.split("#")[0];"string"==typeof remoteDest?url=baseUrl+"#"+remoteDest:Array.isArray(remoteDest)&&(url=baseUrl+"#"+JSON.stringify(remoteDest))}const newWindow=action.get("NewWindow");"boolean"==typeof newWindow&&(resultObj.newWindow=newWindow);break;case"Named":const namedAction=action.get("N");namedAction instanceof _primitives.Name&&(resultObj.action=namedAction.name);break;case"JavaScript":const jsAction=action.get("JS");let js;jsAction instanceof _base_stream.BaseStream?js=jsAction.getString():"string"==typeof jsAction&&(js=jsAction);const jsURL=js&&(0,_core_utils.recoverJsURL)((0,_util.stringToPDFString)(js));if(jsURL){url=jsURL.url,resultObj.newWindow=jsURL.newWindow;break}default:if("JavaScript"===actionName||"SubmitForm"===actionName)break;(0,_util.warn)(`parseDestDictionary - unsupported action: "${actionName}".`)}}else destDict.has("Dest")&&(dest=destDict.get("Dest"));if("string"==typeof url){const absoluteUrl=(0,_util.createValidAbsoluteUrl)(url,docBaseUrl,{addDefaultProtocol:!0,tryConvertEncoding:!0});absoluteUrl&&(resultObj.url=absoluteUrl.href),resultObj.unsafeUrl=url}dest&&(dest instanceof _primitives.Name&&(dest=dest.name),"string"==typeof dest?resultObj.dest=(0,_util.stringToPDFString)(dest):Array.isArray(dest)&&(resultObj.dest=dest))}}exports.Catalog=Catalog},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NumberTree=exports.NameTree=void 0;var _primitives=__w_pdfjs_require__(5),_util=__w_pdfjs_require__(2);class NameOrNumberTree{constructor(root,xref,type){this.constructor===NameOrNumberTree&&(0,_util.unreachable)("Cannot initialize NameOrNumberTree."),this.root=root,this.xref=xref,this._type=type}getAll(){const map=new Map;if(!this.root)return map;const xref=this.xref,processed=new _primitives.RefSet;processed.put(this.root);const queue=[this.root];for(;queue.length>0;){const obj=xref.fetchIfRef(queue.shift());if(!(obj instanceof _primitives.Dict))continue;if(obj.has("Kids")){const kids=obj.get("Kids");if(!Array.isArray(kids))continue;for(const kid of kids){if(processed.has(kid))throw new _util.FormatError(`Duplicate entry in "${this._type}" tree.`);queue.push(kid),processed.put(kid)}continue}const entries=obj.get(this._type);if(Array.isArray(entries))for(let i=0,ii=entries.length;i<ii;i+=2)map.set(xref.fetchIfRef(entries[i]),xref.fetchIfRef(entries[i+1]))}return map}get(key){if(!this.root)return null;const xref=this.xref;let kidsOrEntries=xref.fetchIfRef(this.root),loopCount=0;for(;kidsOrEntries.has("Kids");){if(++loopCount>10)return(0,_util.warn)(`Search depth limit reached for "${this._type}" tree.`),null;const kids=kidsOrEntries.get("Kids");if(!Array.isArray(kids))return null;let l=0,r=kids.length-1;for(;l<=r;){const m=l+r>>1,kid=xref.fetchIfRef(kids[m]),limits=kid.get("Limits");if(key<xref.fetchIfRef(limits[0]))r=m-1;else{if(!(key>xref.fetchIfRef(limits[1]))){kidsOrEntries=kid;break}l=m+1}}if(l>r)return null}const entries=kidsOrEntries.get(this._type);if(Array.isArray(entries)){let l=0,r=entries.length-2;for(;l<=r;){const tmp=l+r>>1,m=tmp+(1&tmp),currentKey=xref.fetchIfRef(entries[m]);if(key<currentKey)r=m-2;else{if(!(key>currentKey))return xref.fetchIfRef(entries[m+1]);l=m+2}}}return null}}exports.NameTree=class NameTree extends NameOrNumberTree{constructor(root,xref){super(root,xref,"Names")}};exports.NumberTree=class NumberTree extends NameOrNumberTree{constructor(root,xref){super(root,xref,"Nums")}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.clearGlobalCaches=function clearGlobalCaches(){(0,_primitives.clearPrimitiveCaches)(),(0,_unicode.clearUnicodeCaches)()};var _primitives=__w_pdfjs_require__(5),_unicode=__w_pdfjs_require__(40)},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FileSpec=void 0;var _util=__w_pdfjs_require__(2),_base_stream=__w_pdfjs_require__(7),_primitives=__w_pdfjs_require__(5);function pickPlatformItem(dict){return dict.has("UF")?dict.get("UF"):dict.has("F")?dict.get("F"):dict.has("Unix")?dict.get("Unix"):dict.has("Mac")?dict.get("Mac"):dict.has("DOS")?dict.get("DOS"):null}exports.FileSpec=class FileSpec{constructor(root,xref){root instanceof _primitives.Dict&&(this.xref=xref,this.root=root,root.has("FS")&&(this.fs=root.get("FS")),this.description=root.has("Desc")?(0,_util.stringToPDFString)(root.get("Desc")):"",root.has("RF")&&(0,_util.warn)("Related file specifications are not supported"),this.contentAvailable=!0,root.has("EF")||(this.contentAvailable=!1,(0,_util.warn)("Non-embedded file specifications are not supported")))}get filename(){if(!this._filename&&this.root){const filename=pickPlatformItem(this.root)||"unnamed";this._filename=(0,_util.stringToPDFString)(filename).replace(/\\\\/g,"\\").replace(/\\\//g,"/").replace(/\\/g,"/")}return this._filename}get content(){if(!this.contentAvailable)return null;!this.contentRef&&this.root&&(this.contentRef=pickPlatformItem(this.root.get("EF")));let content=null;if(this.contentRef){const fileObj=this.xref.fetchIfRef(this.contentRef);fileObj instanceof _base_stream.BaseStream?content=fileObj.getBytes():(0,_util.warn)("Embedded file specification points to non-existing/invalid content")}else(0,_util.warn)("Embedded file specification does not have a content");return content}get serializable(){return{filename:this.filename,content:this.content}}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetadataParser=void 0;var _xml_parser=__w_pdfjs_require__(66);exports.MetadataParser=class MetadataParser{constructor(data){data=this._repair(data);const xmlDocument=new _xml_parser.SimpleXMLParser({lowerCaseName:!0}).parseFromString(data);this._metadataMap=new Map,this._data=data,xmlDocument&&this._parse(xmlDocument)}_repair(data){return data.replace(/^[^<]+/,"").replace(/>\\376\\377([^<]+)/g,(function(all,codes){const bytes=codes.replace(/\\([0-3])([0-7])([0-7])/g,(function(code,d1,d2,d3){return String.fromCharCode(64*d1+8*d2+1*d3)})).replace(/&(amp|apos|gt|lt|quot);/g,(function(str,name){switch(name){case"amp":return"&";case"apos":return"'";case"gt":return">";case"lt":return"<";case"quot":return'"'}throw new Error(`_repair: ${name} isn't defined.`)})),charBuf=[];for(let i=0,ii=bytes.length;i<ii;i+=2){const code=256*bytes.charCodeAt(i)+bytes.charCodeAt(i+1);code>=32&&code<127&&60!==code&&62!==code&&38!==code?charBuf.push(String.fromCharCode(code)):charBuf.push("&#x"+(65536+code).toString(16).substring(1)+";")}return">"+charBuf.join("")}))}_getSequence(entry){const name=entry.nodeName;return"rdf:bag"!==name&&"rdf:seq"!==name&&"rdf:alt"!==name?null:entry.childNodes.filter((node=>"rdf:li"===node.nodeName))}_parseArray(entry){if(!entry.hasChildNodes())return;const[seqNode]=entry.childNodes,sequence=this._getSequence(seqNode)||[];this._metadataMap.set(entry.nodeName,sequence.map((node=>node.textContent.trim())))}_parse(xmlDocument){let rdf=xmlDocument.documentElement;if("rdf:rdf"!==rdf.nodeName)for(rdf=rdf.firstChild;rdf&&"rdf:rdf"!==rdf.nodeName;)rdf=rdf.nextSibling;if(rdf&&"rdf:rdf"===rdf.nodeName&&rdf.hasChildNodes())for(const desc of rdf.childNodes)if("rdf:description"===desc.nodeName)for(const entry of desc.childNodes){const name=entry.nodeName;switch(name){case"#text":continue;case"dc:creator":case"dc:subject":this._parseArray(entry);continue}this._metadataMap.set(name,entry.textContent.trim())}}get serializable(){return{parsedData:this._metadataMap,rawData:this._data}}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StructTreeRoot=exports.StructTreePage=void 0;var _primitives=__w_pdfjs_require__(5),_util=__w_pdfjs_require__(2),_name_number_tree=__w_pdfjs_require__(70);const StructElementType_PAGE_CONTENT="PAGE_CONTENT",StructElementType_STREAM_CONTENT="STREAM_CONTENT",StructElementType_OBJECT="OBJECT",StructElementType_ELEMENT="ELEMENT";exports.StructTreeRoot=class StructTreeRoot{constructor(rootDict){this.dict=rootDict,this.roleMap=new Map}init(){this.readRoleMap()}readRoleMap(){const roleMapDict=this.dict.get("RoleMap");roleMapDict instanceof _primitives.Dict&&roleMapDict.forEach(((key,value)=>{value instanceof _primitives.Name&&this.roleMap.set(key,value.name)}))}};class StructElementNode{constructor(tree,dict){this.tree=tree,this.dict=dict,this.kids=[],this.parseKids()}get role(){const nameObj=this.dict.get("S"),name=nameObj instanceof _primitives.Name?nameObj.name:"",{root}=this.tree;return root.roleMap.has(name)?root.roleMap.get(name):name}parseKids(){let pageObjId=null;const objRef=this.dict.getRaw("Pg");objRef instanceof _primitives.Ref&&(pageObjId=objRef.toString());const kids=this.dict.get("K");if(Array.isArray(kids))for(const kid of kids){const element=this.parseKid(pageObjId,kid);element&&this.kids.push(element)}else{const element=this.parseKid(pageObjId,kids);element&&this.kids.push(element)}}parseKid(pageObjId,kid){if(Number.isInteger(kid))return this.tree.pageDict.objId!==pageObjId?null:new StructElement({type:StructElementType_PAGE_CONTENT,mcid:kid,pageObjId});let kidDict=null;if(kid instanceof _primitives.Ref?kidDict=this.dict.xref.fetch(kid):kid instanceof _primitives.Dict&&(kidDict=kid),!kidDict)return null;const pageRef=kidDict.getRaw("Pg");pageRef instanceof _primitives.Ref&&(pageObjId=pageRef.toString());const type=kidDict.get("Type")instanceof _primitives.Name?kidDict.get("Type").name:null;return"MCR"===type?this.tree.pageDict.objId!==pageObjId?null:new StructElement({type:StructElementType_STREAM_CONTENT,refObjId:kidDict.getRaw("Stm")instanceof _primitives.Ref?kidDict.getRaw("Stm").toString():null,pageObjId,mcid:kidDict.get("MCID")}):"OBJR"===type?this.tree.pageDict.objId!==pageObjId?null:new StructElement({type:StructElementType_OBJECT,refObjId:kidDict.getRaw("Obj")instanceof _primitives.Ref?kidDict.getRaw("Obj").toString():null,pageObjId}):new StructElement({type:StructElementType_ELEMENT,dict:kidDict})}}class StructElement{constructor({type,dict=null,mcid=null,pageObjId=null,refObjId=null}){this.type=type,this.dict=dict,this.mcid=mcid,this.pageObjId=pageObjId,this.refObjId=refObjId,this.parentNode=null}}exports.StructTreePage=class StructTreePage{constructor(structTreeRoot,pageDict){this.root=structTreeRoot,this.rootDict=structTreeRoot?structTreeRoot.dict:null,this.pageDict=pageDict,this.nodes=[]}parse(){if(!this.root||!this.rootDict)return;const parentTree=this.rootDict.get("ParentTree");if(!parentTree)return;const id=this.pageDict.get("StructParents");if(!Number.isInteger(id))return;const parentArray=new _name_number_tree.NumberTree(parentTree,this.rootDict.xref).get(id);if(!Array.isArray(parentArray))return;const map=new Map;for(const ref of parentArray)ref instanceof _primitives.Ref&&this.addNode(this.rootDict.xref.fetch(ref),map)}addNode(dict,map,level=0){if(level>40)return(0,_util.warn)("StructTree MAX_DEPTH reached."),null;if(map.has(dict))return map.get(dict);const element=new StructElementNode(this,dict);map.set(dict,element);const parent=dict.get("P");if(!parent||(0,_primitives.isName)(parent.get("Type"),"StructTreeRoot"))return this.addTopLevelNode(dict,element)||map.delete(dict),element;const parentNode=this.addNode(parent,map,level+1);if(!parentNode)return element;let save=!1;for(const kid of parentNode.kids)kid.type===StructElementType_ELEMENT&&kid.dict===dict&&(kid.parentNode=element,save=!0);return save||map.delete(dict),element}addTopLevelNode(dict,element){const obj=this.rootDict.get("K");if(!obj)return!1;if(obj instanceof _primitives.Dict)return obj.objId===dict.objId&&(this.nodes[0]=element,!0);if(!Array.isArray(obj))return!0;let save=!1;for(let i=0;i<obj.length;i++){const kidRef=obj[i];kidRef&&kidRef.toString()===dict.objId&&(this.nodes[i]=element,save=!0)}return save}get serializable(){function nodeToSerializable(node,parent,level=0){if(level>40)return void(0,_util.warn)("StructTree too deep to be fully serialized.");const obj=Object.create(null);obj.role=node.role,obj.children=[],parent.children.push(obj);const alt=node.dict.get("Alt");"string"==typeof alt&&(obj.alt=(0,_util.stringToPDFString)(alt));const lang=node.dict.get("Lang");"string"==typeof lang&&(obj.lang=(0,_util.stringToPDFString)(lang));for(const kid of node.kids){const kidElement=kid.type===StructElementType_ELEMENT?kid.parentNode:null;kidElement?nodeToSerializable(kidElement,obj,level+1):kid.type===StructElementType_PAGE_CONTENT||kid.type===StructElementType_STREAM_CONTENT?obj.children.push({type:"content",id:`page${kid.pageObjId}_mcid${kid.mcid}`}):kid.type===StructElementType_OBJECT&&obj.children.push({type:"object",id:kid.refObjId})}}const root=Object.create(null);root.children=[],root.role="Root";for(const child of this.nodes)child&&nodeToSerializable(child,root);return root}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ObjectLoader=void 0;var _primitives=__w_pdfjs_require__(5),_base_stream=__w_pdfjs_require__(7),_core_utils=__w_pdfjs_require__(6),_util=__w_pdfjs_require__(2);function addChildren(node,nodesToVisit){if(node instanceof _primitives.Dict)node=node.getRawValues();else if(node instanceof _base_stream.BaseStream)node=node.dict.getRawValues();else if(!Array.isArray(node))return;for(const rawValue of node)((value=rawValue)instanceof _primitives.Ref||value instanceof _primitives.Dict||value instanceof _base_stream.BaseStream||Array.isArray(value))&&nodesToVisit.push(rawValue);var value}exports.ObjectLoader=class ObjectLoader{constructor(dict,keys,xref){this.dict=dict,this.keys=keys,this.xref=xref,this.refSet=null}async load(){if(this.xref.stream.isDataLoaded)return;const{keys,dict}=this;this.refSet=new _primitives.RefSet;const nodesToVisit=[];for(let i=0,ii=keys.length;i<ii;i++){const rawValue=dict.getRaw(keys[i]);void 0!==rawValue&&nodesToVisit.push(rawValue)}return this._walk(nodesToVisit)}async _walk(nodesToVisit){const nodesToRevisit=[],pendingRequests=[];for(;nodesToVisit.length;){let currentNode=nodesToVisit.pop();if(currentNode instanceof _primitives.Ref){if(this.refSet.has(currentNode))continue;try{this.refSet.put(currentNode),currentNode=this.xref.fetch(currentNode)}catch(ex){if(!(ex instanceof _core_utils.MissingDataException)){(0,_util.warn)(`ObjectLoader._walk - requesting all data: "${ex}".`),this.refSet=null;const{manager}=this.xref.stream;return manager.requestAllChunks()}nodesToRevisit.push(currentNode),pendingRequests.push({begin:ex.begin,end:ex.end})}}if(currentNode instanceof _base_stream.BaseStream){const baseStreams=currentNode.getBaseStreams();if(baseStreams){let foundMissingData=!1;for(const stream of baseStreams)stream.isDataLoaded||(foundMissingData=!0,pendingRequests.push({begin:stream.start,end:stream.end}));foundMissingData&&nodesToRevisit.push(currentNode)}}addChildren(currentNode,nodesToVisit)}if(pendingRequests.length){await this.xref.stream.manager.requestRanges(pendingRequests);for(const node of nodesToRevisit)node instanceof _primitives.Ref&&this.refSet.remove(node);return this._walk(nodesToRevisit)}this.refSet=null}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XFAFactory=void 0;var _xfa_object=__w_pdfjs_require__(77),_bind=__w_pdfjs_require__(81),_data=__w_pdfjs_require__(87),_fonts=__w_pdfjs_require__(85),_utils=__w_pdfjs_require__(78),_util=__w_pdfjs_require__(2),_parser=__w_pdfjs_require__(88),_xhtml=__w_pdfjs_require__(98);class XFAFactory{constructor(data){try{this.root=(new _parser.XFAParser).parse(XFAFactory._createDocument(data));const binder=new _bind.Binder(this.root);this.form=binder.bind(),this.dataHandler=new _data.DataHandler(this.root,binder.getData()),this.form[_xfa_object.$globalData].template=this.form}catch(e){(0,_util.warn)(`XFA - an error occurred during parsing and binding: ${e}`)}}isValid(){return this.root&&this.form}_createPagesHelper(){const iterator=this.form[_xfa_object.$toPages]();return new Promise(((resolve,reject)=>{const nextIteration=()=>{try{const value=iterator.next();value.done?resolve(value.value):setTimeout(nextIteration,0)}catch(e){reject(e)}};setTimeout(nextIteration,0)}))}async _createPages(){try{this.pages=await this._createPagesHelper(),this.dims=this.pages.children.map((c=>{const{width,height}=c.attributes.style;return[0,0,parseInt(width),parseInt(height)]}))}catch(e){(0,_util.warn)(`XFA - an error occurred during layout: ${e}`)}}getBoundingBox(pageIndex){return this.dims[pageIndex]}async getNumPages(){return this.pages||await this._createPages(),this.dims.length}setImages(images){this.form[_xfa_object.$globalData].images=images}setFonts(fonts){this.form[_xfa_object.$globalData].fontFinder=new _fonts.FontFinder(fonts);const missingFonts=[];for(let typeface of this.form[_xfa_object.$globalData].usedTypefaces){typeface=(0,_utils.stripQuotes)(typeface);this.form[_xfa_object.$globalData].fontFinder.find(typeface)||missingFonts.push(typeface)}return missingFonts.length>0?missingFonts:null}appendFonts(fonts,reallyMissingFonts){this.form[_xfa_object.$globalData].fontFinder.add(fonts,reallyMissingFonts)}async getPages(){this.pages||await this._createPages();const pages=this.pages;return this.pages=null,pages}serializeData(storage){return this.dataHandler.serialize(storage)}static _createDocument(data){return data["/xdp:xdp"]?Object.values(data).join(""):data["xdp:xdp"]}static getRichTextAsHtml(rc){if(!rc||"string"!=typeof rc)return null;try{let root=new _parser.XFAParser(_xhtml.XhtmlNamespace,!0).parse(rc);if(!["body","xhtml"].includes(root[_xfa_object.$nodeName])){const newRoot=_xhtml.XhtmlNamespace.body({});newRoot[_xfa_object.$appendChild](root),root=newRoot}const result=root[_xfa_object.$toHTML]();if(!result.success)return null;const{html}=result,{attributes}=html;return attributes&&(attributes.class&&(attributes.class=attributes.class.filter((attr=>!attr.startsWith("xfa")))),attributes.dir="auto"),{html,str:root[_xfa_object.$text]()}}catch(e){(0,_util.warn)(`XFA - an error occurred during parsing of rich text: ${e}`)}return null}}exports.XFAFactory=XFAFactory},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XmlObject=exports.XFAObjectArray=exports.XFAObject=exports.XFAAttribute=exports.StringObject=exports.OptionObject=exports.Option10=exports.Option01=exports.IntegerObject=exports.ContentObject=exports.$uid=exports.$toStyle=exports.$toString=exports.$toPages=exports.$toHTML=exports.$text=exports.$tabIndex=exports.$setValue=exports.$setSetAttributes=exports.$setId=exports.$searchNode=exports.$root=exports.$resolvePrototypes=exports.$removeChild=exports.$pushPara=exports.$pushGlyphs=exports.$popPara=exports.$onText=exports.$onChildCheck=exports.$onChild=exports.$nsAttributes=exports.$nodeName=exports.$namespaceId=exports.$isUsable=exports.$isTransparent=exports.$isThereMoreWidth=exports.$isSplittable=exports.$isNsAgnostic=exports.$isDescendent=exports.$isDataValue=exports.$isCDATAXml=exports.$isBindable=exports.$insertAt=exports.$indexOf=exports.$ids=exports.$hasSettableValue=exports.$globalData=exports.$getTemplateRoot=exports.$getSubformParent=exports.$getRealChildrenByNameIt=exports.$getParent=exports.$getNextPage=exports.$getExtra=exports.$getDataValue=exports.$getContainedChildren=exports.$getChildrenByNameIt=exports.$getChildrenByName=exports.$getChildrenByClass=exports.$getChildren=exports.$getAvailableSpace=exports.$getAttributes=exports.$getAttributeIt=exports.$flushHTML=exports.$finalize=exports.$extra=exports.$dump=exports.$data=exports.$content=exports.$consumed=exports.$clone=exports.$cleanup=exports.$cleanPage=exports.$clean=exports.$childrenToHTML=exports.$appendChild=exports.$addHTML=exports.$acceptWhitespace=void 0;var _utils=__w_pdfjs_require__(78),_util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_namespaces=__w_pdfjs_require__(79),_som=__w_pdfjs_require__(80);const $acceptWhitespace=Symbol();exports.$acceptWhitespace=$acceptWhitespace;const $addHTML=Symbol();exports.$addHTML=$addHTML;const $appendChild=Symbol();exports.$appendChild=$appendChild;const $childrenToHTML=Symbol();exports.$childrenToHTML=$childrenToHTML;const $clean=Symbol();exports.$clean=$clean;const $cleanPage=Symbol();exports.$cleanPage=$cleanPage;const $cleanup=Symbol();exports.$cleanup=$cleanup;const $clone=Symbol();exports.$clone=$clone;const $consumed=Symbol();exports.$consumed=$consumed;const $content=Symbol("content");exports.$content=$content;const $data=Symbol("data");exports.$data=$data;const $dump=Symbol();exports.$dump=$dump;const $extra=Symbol("extra");exports.$extra=$extra;const $finalize=Symbol();exports.$finalize=$finalize;const $flushHTML=Symbol();exports.$flushHTML=$flushHTML;const $getAttributeIt=Symbol();exports.$getAttributeIt=$getAttributeIt;const $getAttributes=Symbol();exports.$getAttributes=$getAttributes;const $getAvailableSpace=Symbol();exports.$getAvailableSpace=$getAvailableSpace;const $getChildrenByClass=Symbol();exports.$getChildrenByClass=$getChildrenByClass;const $getChildrenByName=Symbol();exports.$getChildrenByName=$getChildrenByName;const $getChildrenByNameIt=Symbol();exports.$getChildrenByNameIt=$getChildrenByNameIt;const $getDataValue=Symbol();exports.$getDataValue=$getDataValue;const $getExtra=Symbol();exports.$getExtra=$getExtra;const $getRealChildrenByNameIt=Symbol();exports.$getRealChildrenByNameIt=$getRealChildrenByNameIt;const $getChildren=Symbol();exports.$getChildren=$getChildren;const $getContainedChildren=Symbol();exports.$getContainedChildren=$getContainedChildren;const $getNextPage=Symbol();exports.$getNextPage=$getNextPage;const $getSubformParent=Symbol();exports.$getSubformParent=$getSubformParent;const $getParent=Symbol();exports.$getParent=$getParent;const $getTemplateRoot=Symbol();exports.$getTemplateRoot=$getTemplateRoot;const $globalData=Symbol();exports.$globalData=$globalData;const $hasSettableValue=Symbol();exports.$hasSettableValue=$hasSettableValue;const $ids=Symbol();exports.$ids=$ids;const $indexOf=Symbol();exports.$indexOf=$indexOf;const $insertAt=Symbol();exports.$insertAt=$insertAt;const $isCDATAXml=Symbol();exports.$isCDATAXml=$isCDATAXml;const $isBindable=Symbol();exports.$isBindable=$isBindable;const $isDataValue=Symbol();exports.$isDataValue=$isDataValue;const $isDescendent=Symbol();exports.$isDescendent=$isDescendent;const $isNsAgnostic=Symbol();exports.$isNsAgnostic=$isNsAgnostic;const $isSplittable=Symbol();exports.$isSplittable=$isSplittable;const $isThereMoreWidth=Symbol();exports.$isThereMoreWidth=$isThereMoreWidth;const $isTransparent=Symbol();exports.$isTransparent=$isTransparent;const $isUsable=Symbol();exports.$isUsable=$isUsable;const $lastAttribute=Symbol(),$namespaceId=Symbol("namespaceId");exports.$namespaceId=$namespaceId;const $nodeName=Symbol("nodeName");exports.$nodeName=$nodeName;const $nsAttributes=Symbol();exports.$nsAttributes=$nsAttributes;const $onChild=Symbol();exports.$onChild=$onChild;const $onChildCheck=Symbol();exports.$onChildCheck=$onChildCheck;const $onText=Symbol();exports.$onText=$onText;const $pushGlyphs=Symbol();exports.$pushGlyphs=$pushGlyphs;const $popPara=Symbol();exports.$popPara=$popPara;const $pushPara=Symbol();exports.$pushPara=$pushPara;const $removeChild=Symbol();exports.$removeChild=$removeChild;const $root=Symbol("root");exports.$root=$root;const $resolvePrototypes=Symbol();exports.$resolvePrototypes=$resolvePrototypes;const $searchNode=Symbol();exports.$searchNode=$searchNode;const $setId=Symbol();exports.$setId=$setId;const $setSetAttributes=Symbol();exports.$setSetAttributes=$setSetAttributes;const $setValue=Symbol();exports.$setValue=$setValue;const $tabIndex=Symbol();exports.$tabIndex=$tabIndex;const $text=Symbol();exports.$text=$text;const $toPages=Symbol();exports.$toPages=$toPages;const $toHTML=Symbol();exports.$toHTML=$toHTML;const $toString=Symbol();exports.$toString=$toString;const $toStyle=Symbol();exports.$toStyle=$toStyle;const $uid=Symbol("uid");exports.$uid=$uid;const _applyPrototype=Symbol(),_attributes=Symbol(),_attributeNames=Symbol(),_children=Symbol("_children"),_cloneAttribute=Symbol(),_dataValue=Symbol(),_defaultValue=Symbol(),_filteredChildrenGenerator=Symbol(),_getPrototype=Symbol(),_getUnsetAttributes=Symbol(),_hasChildren=Symbol(),_max=Symbol(),_options=Symbol(),_parent=Symbol("parent"),_resolvePrototypesHelper=Symbol(),_setAttributes=Symbol(),_validator=Symbol();let uid=0;const NS_DATASETS=_namespaces.NamespaceIds.datasets.id;class XFAObject{constructor(nsId,name,hasChildren=!1){this[$namespaceId]=nsId,this[$nodeName]=name,this[_hasChildren]=hasChildren,this[_parent]=null,this[_children]=[],this[$uid]=`${name}${uid++}`,this[$globalData]=null}[$onChild](child){if(!this[_hasChildren]||!this[$onChildCheck](child))return!1;const name=child[$nodeName],node=this[name];if(!(node instanceof XFAObjectArray))return null!==node&&this[$removeChild](node),this[name]=child,this[$appendChild](child),!0;if(node.push(child))return this[$appendChild](child),!0;let id="";return this.id?id=` (id: ${this.id})`:this.name&&(id=` (name: ${this.name} ${this.h.value})`),(0,_util.warn)(`XFA - node "${this[$nodeName]}"${id} has already enough "${name}"!`),!1}[$onChildCheck](child){return this.hasOwnProperty(child[$nodeName])&&child[$namespaceId]===this[$namespaceId]}[$isNsAgnostic](){return!1}[$acceptWhitespace](){return!1}[$isCDATAXml](){return!1}[$isBindable](){return!1}[$popPara](){this.para&&this[$getTemplateRoot]()[$extra].paraStack.pop()}[$pushPara](){this[$getTemplateRoot]()[$extra].paraStack.push(this.para)}[$setId](ids){this.id&&this[$namespaceId]===_namespaces.NamespaceIds.template.id&&ids.set(this.id,this)}[$getTemplateRoot](){return this[$globalData].template}[$isSplittable](){return!1}[$isThereMoreWidth](){return!1}[$appendChild](child){child[_parent]=this,this[_children].push(child),!child[$globalData]&&this[$globalData]&&(child[$globalData]=this[$globalData])}[$removeChild](child){const i=this[_children].indexOf(child);this[_children].splice(i,1)}[$hasSettableValue](){return this.hasOwnProperty("value")}[$setValue](_){}[$onText](_){}[$finalize](){}[$clean](builder){delete this[_hasChildren],this[$cleanup]&&(builder.clean(this[$cleanup]),delete this[$cleanup])}[$indexOf](child){return this[_children].indexOf(child)}[$insertAt](i,child){child[_parent]=this,this[_children].splice(i,0,child),!child[$globalData]&&this[$globalData]&&(child[$globalData]=this[$globalData])}[$isTransparent](){return!this.name}[$lastAttribute](){return""}[$text](){return 0===this[_children].length?this[$content]:this[_children].map((c=>c[$text]())).join("")}get[_attributeNames](){const proto=Object.getPrototypeOf(this);if(!proto._attributes){const attributes=proto._attributes=new Set;for(const name of Object.getOwnPropertyNames(this)){if(null===this[name]||this[name]instanceof XFAObject||this[name]instanceof XFAObjectArray)break;attributes.add(name)}}return(0,_util.shadow)(this,_attributeNames,proto._attributes)}[$isDescendent](parent){let node=this;for(;node;){if(node===parent)return!0;node=node[$getParent]()}return!1}[$getParent](){return this[_parent]}[$getSubformParent](){return this[$getParent]()}[$getChildren](name=null){return name?this[name]:this[_children]}[$dump](){const dumped=Object.create(null);this[$content]&&(dumped.$content=this[$content]);for(const name of Object.getOwnPropertyNames(this)){const value=this[name];null!==value&&(value instanceof XFAObject?dumped[name]=value[$dump]():value instanceof XFAObjectArray?value.isEmpty()||(dumped[name]=value.dump()):dumped[name]=value)}return dumped}[$toStyle](){return null}[$toHTML](){return _utils.HTMLResult.EMPTY}*[$getContainedChildren](){for(const node of this[$getChildren]())yield node}*[_filteredChildrenGenerator](filter,include){for(const node of this[$getContainedChildren]())if(!filter||include===filter.has(node[$nodeName])){const availableSpace=this[$getAvailableSpace](),res=node[$toHTML](availableSpace);res.success||(this[$extra].failingNode=node),yield res}}[$flushHTML](){return null}[$addHTML](html,bbox){this[$extra].children.push(html)}[$getAvailableSpace](){}[$childrenToHTML]({filter=null,include=!0}){if(this[$extra].generator){const availableSpace=this[$getAvailableSpace](),res=this[$extra].failingNode[$toHTML](availableSpace);if(!res.success)return res;res.html&&this[$addHTML](res.html,res.bbox),delete this[$extra].failingNode}else this[$extra].generator=this[_filteredChildrenGenerator](filter,include);for(;;){const gen=this[$extra].generator.next();if(gen.done)break;const res=gen.value;if(!res.success)return res;res.html&&this[$addHTML](res.html,res.bbox)}return this[$extra].generator=null,_utils.HTMLResult.EMPTY}[$setSetAttributes](attributes){this[_setAttributes]=new Set(Object.keys(attributes))}[_getUnsetAttributes](protoAttributes){const allAttr=this[_attributeNames],setAttr=this[_setAttributes];return[...protoAttributes].filter((x=>allAttr.has(x)&&!setAttr.has(x)))}[$resolvePrototypes](ids,ancestors=new Set){for(const child of this[_children])child[_resolvePrototypesHelper](ids,ancestors)}[_resolvePrototypesHelper](ids,ancestors){const proto=this[_getPrototype](ids,ancestors);proto?this[_applyPrototype](proto,ids,ancestors):this[$resolvePrototypes](ids,ancestors)}[_getPrototype](ids,ancestors){const{use,usehref}=this;if(!use&&!usehref)return null;let proto=null,somExpression=null,id=null,ref=use;if(usehref?(ref=usehref,usehref.startsWith("#som(")&&usehref.endsWith(")")?somExpression=usehref.slice("#som(".length,usehref.length-1):usehref.startsWith(".#som(")&&usehref.endsWith(")")?somExpression=usehref.slice(".#som(".length,usehref.length-1):usehref.startsWith("#")?id=usehref.slice(1):usehref.startsWith(".#")&&(id=usehref.slice(2))):use.startsWith("#")?id=use.slice(1):somExpression=use,this.use=this.usehref="",id?proto=ids.get(id):(proto=(0,_som.searchNode)(ids.get($root),this,somExpression,!0,!1),proto&&(proto=proto[0])),!proto)return(0,_util.warn)(`XFA - Invalid prototype reference: ${ref}.`),null;if(proto[$nodeName]!==this[$nodeName])return(0,_util.warn)(`XFA - Incompatible prototype: ${proto[$nodeName]} !== ${this[$nodeName]}.`),null;if(ancestors.has(proto))return(0,_util.warn)("XFA - Cycle detected in prototypes use."),null;ancestors.add(proto);const protoProto=proto[_getPrototype](ids,ancestors);return protoProto&&proto[_applyPrototype](protoProto,ids,ancestors),proto[$resolvePrototypes](ids,ancestors),ancestors.delete(proto),proto}[_applyPrototype](proto,ids,ancestors){if(ancestors.has(proto))return void(0,_util.warn)("XFA - Cycle detected in prototypes use.");!this[$content]&&proto[$content]&&(this[$content]=proto[$content]);new Set(ancestors).add(proto);for(const unsetAttrName of this[_getUnsetAttributes](proto[_setAttributes]))this[unsetAttrName]=proto[unsetAttrName],this[_setAttributes]&&this[_setAttributes].add(unsetAttrName);for(const name of Object.getOwnPropertyNames(this)){if(this[_attributeNames].has(name))continue;const value=this[name],protoValue=proto[name];if(value instanceof XFAObjectArray){for(const child of value[_children])child[_resolvePrototypesHelper](ids,ancestors);for(let i=value[_children].length,ii=protoValue[_children].length;i<ii;i++){const child=proto[_children][i][$clone]();if(!value.push(child))break;child[_parent]=this,this[_children].push(child),child[_resolvePrototypesHelper](ids,ancestors)}}else if(null===value){if(null!==protoValue){const child=protoValue[$clone]();child[_parent]=this,this[name]=child,this[_children].push(child),child[_resolvePrototypesHelper](ids,ancestors)}}else value[$resolvePrototypes](ids,ancestors),protoValue&&value[_applyPrototype](protoValue,ids,ancestors)}}static[_cloneAttribute](obj){return Array.isArray(obj)?obj.map((x=>XFAObject[_cloneAttribute](x))):"object"==typeof obj&&null!==obj?Object.assign({},obj):obj}[$clone](){const clone=Object.create(Object.getPrototypeOf(this));for(const $symbol of Object.getOwnPropertySymbols(this))try{clone[$symbol]=this[$symbol]}catch(_){(0,_util.shadow)(clone,$symbol,this[$symbol])}clone[$uid]=`${clone[$nodeName]}${uid++}`,clone[_children]=[];for(const name of Object.getOwnPropertyNames(this)){if(this[_attributeNames].has(name)){clone[name]=XFAObject[_cloneAttribute](this[name]);continue}const value=this[name];clone[name]=value instanceof XFAObjectArray?new XFAObjectArray(value[_max]):null}for(const child of this[_children]){const name=child[$nodeName],clonedChild=child[$clone]();clone[_children].push(clonedChild),clonedChild[_parent]=clone,null===clone[name]?clone[name]=clonedChild:clone[name][_children].push(clonedChild)}return clone}[$getChildren](name=null){return name?this[_children].filter((c=>c[$nodeName]===name)):this[_children]}[$getChildrenByClass](name){return this[name]}[$getChildrenByName](name,allTransparent,first=!0){return Array.from(this[$getChildrenByNameIt](name,allTransparent,first))}*[$getChildrenByNameIt](name,allTransparent,first=!0){if("parent"!==name){for(const child of this[_children])child[$nodeName]===name&&(yield child),child.name===name&&(yield child),(allTransparent||child[$isTransparent]())&&(yield*child[$getChildrenByNameIt](name,allTransparent,!1));first&&this[_attributeNames].has(name)&&(yield new XFAAttribute(this,name,this[name]))}else yield this[_parent]}}exports.XFAObject=XFAObject;class XFAObjectArray{constructor(max=1/0){this[_max]=max,this[_children]=[]}push(child){return this[_children].length<=this[_max]?(this[_children].push(child),!0):((0,_util.warn)(`XFA - node "${child[$nodeName]}" accepts no more than ${this[_max]} children`),!1)}isEmpty(){return 0===this[_children].length}dump(){return 1===this[_children].length?this[_children][0][$dump]():this[_children].map((x=>x[$dump]()))}[$clone](){const clone=new XFAObjectArray(this[_max]);return clone[_children]=this[_children].map((c=>c[$clone]())),clone}get children(){return this[_children]}clear(){this[_children].length=0}}exports.XFAObjectArray=XFAObjectArray;class XFAAttribute{constructor(node,name,value){this[_parent]=node,this[$nodeName]=name,this[$content]=value,this[$consumed]=!1,this[$uid]="attribute"+uid++}[$getParent](){return this[_parent]}[$isDataValue](){return!0}[$getDataValue](){return this[$content].trim()}[$setValue](value){value=value.value||"",this[$content]=value.toString()}[$text](){return this[$content]}[$isDescendent](parent){return this[_parent]===parent||this[_parent][$isDescendent](parent)}}exports.XFAAttribute=XFAAttribute;class XmlObject extends XFAObject{constructor(nsId,name,attributes={}){if(super(nsId,name),this[$content]="",this[_dataValue]=null,"#text"!==name){const map=new Map;this[_attributes]=map;for(const[attrName,value]of Object.entries(attributes))map.set(attrName,new XFAAttribute(this,attrName,value));if(attributes.hasOwnProperty($nsAttributes)){const dataNode=attributes[$nsAttributes].xfa.dataNode;void 0!==dataNode&&("dataGroup"===dataNode?this[_dataValue]=!1:"dataValue"===dataNode&&(this[_dataValue]=!0))}}this[$consumed]=!1}[$toString](buf){const tagName=this[$nodeName];if("#text"===tagName)return void buf.push((0,_core_utils.encodeToXmlString)(this[$content]));const utf8TagName=(0,_util.utf8StringToString)(tagName),prefix=this[$namespaceId]===NS_DATASETS?"xfa:":"";buf.push(`<${prefix}${utf8TagName}`);for(const[name,value]of this[_attributes].entries()){const utf8Name=(0,_util.utf8StringToString)(name);buf.push(` ${utf8Name}="${(0,_core_utils.encodeToXmlString)(value[$content])}"`)}if(null!==this[_dataValue]&&(this[_dataValue]?buf.push(' xfa:dataNode="dataValue"'):buf.push(' xfa:dataNode="dataGroup"')),this[$content]||0!==this[_children].length){if(buf.push(">"),this[$content])"string"==typeof this[$content]?buf.push((0,_core_utils.encodeToXmlString)(this[$content])):this[$content][$toString](buf);else for(const child of this[_children])child[$toString](buf);buf.push(`</${prefix}${utf8TagName}>`)}else buf.push("/>")}[$onChild](child){if(this[$content]){const node=new XmlObject(this[$namespaceId],"#text");this[$appendChild](node),node[$content]=this[$content],this[$content]=""}return this[$appendChild](child),!0}[$onText](str){this[$content]+=str}[$finalize](){if(this[$content]&&this[_children].length>0){const node=new XmlObject(this[$namespaceId],"#text");this[$appendChild](node),node[$content]=this[$content],delete this[$content]}}[$toHTML](){return"#text"===this[$nodeName]?_utils.HTMLResult.success({name:"#text",value:this[$content]}):_utils.HTMLResult.EMPTY}[$getChildren](name=null){return name?this[_children].filter((c=>c[$nodeName]===name)):this[_children]}[$getAttributes](){return this[_attributes]}[$getChildrenByClass](name){const value=this[_attributes].get(name);return void 0!==value?value:this[$getChildren](name)}*[$getChildrenByNameIt](name,allTransparent){const value=this[_attributes].get(name);value&&(yield value);for(const child of this[_children])child[$nodeName]===name&&(yield child),allTransparent&&(yield*child[$getChildrenByNameIt](name,allTransparent))}*[$getAttributeIt](name,skipConsumed){const value=this[_attributes].get(name);!value||skipConsumed&&value[$consumed]||(yield value);for(const child of this[_children])yield*child[$getAttributeIt](name,skipConsumed)}*[$getRealChildrenByNameIt](name,allTransparent,skipConsumed){for(const child of this[_children])child[$nodeName]!==name||skipConsumed&&child[$consumed]||(yield child),allTransparent&&(yield*child[$getRealChildrenByNameIt](name,allTransparent,skipConsumed))}[$isDataValue](){return null===this[_dataValue]?0===this[_children].length||this[_children][0][$namespaceId]===_namespaces.NamespaceIds.xhtml.id:this[_dataValue]}[$getDataValue](){return null===this[_dataValue]?0===this[_children].length?this[$content].trim():this[_children][0][$namespaceId]===_namespaces.NamespaceIds.xhtml.id?this[_children][0][$text]().trim():null:this[$content].trim()}[$setValue](value){value=value.value||"",this[$content]=value.toString()}[$dump](hasNS=!1){const dumped=Object.create(null);hasNS&&(dumped.$ns=this[$namespaceId]),this[$content]&&(dumped.$content=this[$content]),dumped.$name=this[$nodeName],dumped.children=[];for(const child of this[_children])dumped.children.push(child[$dump](hasNS));dumped.attributes=Object.create(null);for(const[name,value]of this[_attributes])dumped.attributes[name]=value[$content];return dumped}}exports.XmlObject=XmlObject;class ContentObject extends XFAObject{constructor(nsId,name){super(nsId,name),this[$content]=""}[$onText](text){this[$content]+=text}[$finalize](){}}exports.ContentObject=ContentObject;exports.OptionObject=class OptionObject extends ContentObject{constructor(nsId,name,options){super(nsId,name),this[_options]=options}[$finalize](){this[$content]=(0,_utils.getKeyword)({data:this[$content],defaultValue:this[_options][0],validate:k=>this[_options].includes(k)})}[$clean](builder){super[$clean](builder),delete this[_options]}};exports.StringObject=class StringObject extends ContentObject{[$finalize](){this[$content]=this[$content].trim()}};class IntegerObject extends ContentObject{constructor(nsId,name,defaultValue,validator){super(nsId,name),this[_defaultValue]=defaultValue,this[_validator]=validator}[$finalize](){this[$content]=(0,_utils.getInteger)({data:this[$content],defaultValue:this[_defaultValue],validate:this[_validator]})}[$clean](builder){super[$clean](builder),delete this[_defaultValue],delete this[_validator]}}exports.IntegerObject=IntegerObject;exports.Option01=class Option01 extends IntegerObject{constructor(nsId,name){super(nsId,name,0,(n=>1===n))}};exports.Option10=class Option10 extends IntegerObject{constructor(nsId,name){super(nsId,name,1,(n=>0===n))}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HTMLResult=void 0,exports.getBBox=function getBBox(data){if(!data)return{x:-1,y:-1,width:-1,height:-1};const bbox=data.trim().split(/\s*,\s*/).map((m=>getMeasurement(m,"-1")));if(bbox.length<4||bbox[2]<0||bbox[3]<0)return{x:-1,y:-1,width:-1,height:-1};const[x,y,width,height]=bbox;return{x,y,width,height}},exports.getColor=function getColor(data,def=[0,0,0]){let[r,g,b]=def;if(!data)return{r,g,b};const color=data.trim().split(/\s*,\s*/).map((c=>Math.min(Math.max(0,parseInt(c.trim(),10)),255))).map((c=>isNaN(c)?0:c));if(color.length<3)return{r,g,b};return[r,g,b]=color,{r,g,b}},exports.getFloat=function getFloat({data,defaultValue,validate}){if(!data)return defaultValue;data=data.trim();const n=parseFloat(data);if(!isNaN(n)&&validate(n))return n;return defaultValue},exports.getInteger=function getInteger({data,defaultValue,validate}){if(!data)return defaultValue;data=data.trim();const n=parseInt(data,10);if(!isNaN(n)&&validate(n))return n;return defaultValue},exports.getKeyword=getKeyword,exports.getMeasurement=getMeasurement,exports.getRatio=function getRatio(data){if(!data)return{num:1,den:1};const ratio=data.trim().split(/\s*:\s*/).map((x=>parseFloat(x))).filter((x=>!isNaN(x)));1===ratio.length&&ratio.push(1);if(0===ratio.length)return{num:1,den:1};const[num,den]=ratio;return{num,den}},exports.getRelevant=function getRelevant(data){if(!data)return[];return data.trim().split(/\s+/).map((e=>({excluded:"-"===e[0],viewname:e.substring(1)})))},exports.getStringOption=function getStringOption(data,options){return getKeyword({data,defaultValue:options[0],validate:k=>options.includes(k)})},exports.stripQuotes=function stripQuotes(str){if(str.startsWith("'")||str.startsWith('"'))return str.slice(1,str.length-1);return str};var _util=__w_pdfjs_require__(2);const dimConverters={pt:x=>x,cm:x=>x/2.54*72,mm:x=>x/25.4*72,in:x=>72*x,px:x=>x},measurementPattern=/([+-]?\d+\.?\d*)(.*)/;function getKeyword({data,defaultValue,validate}){return data&&validate(data=data.trim())?data:defaultValue}function getMeasurement(str,def="0"){if(def=def||"0",!str)return getMeasurement(def);const match=str.trim().match(measurementPattern);if(!match)return getMeasurement(def);const[,valueStr,unit]=match,value=parseFloat(valueStr);if(isNaN(value))return getMeasurement(def);if(0===value)return 0;const conv=dimConverters[unit];return conv?conv(value):value}class HTMLResult{static get FAILURE(){return(0,_util.shadow)(this,"FAILURE",new HTMLResult(!1,null,null,null))}static get EMPTY(){return(0,_util.shadow)(this,"EMPTY",new HTMLResult(!0,null,null,null))}constructor(success,html,bbox,breakNode){this.success=success,this.html=html,this.bbox=bbox,this.breakNode=breakNode}isBreak(){return!!this.breakNode}static breakNode(node){return new HTMLResult(!1,null,null,node)}static success(html,bbox=null){return new HTMLResult(!0,html,bbox,null)}}exports.HTMLResult=HTMLResult},(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NamespaceIds=exports.$buildXFAObject=void 0;const $buildXFAObject=Symbol();exports.$buildXFAObject=$buildXFAObject;exports.NamespaceIds={config:{id:0,check:ns=>ns.startsWith("http://www.xfa.org/schema/xci/")},connectionSet:{id:1,check:ns=>ns.startsWith("http://www.xfa.org/schema/xfa-connection-set/")},datasets:{id:2,check:ns=>ns.startsWith("http://www.xfa.org/schema/xfa-data/")},form:{id:3,check:ns=>ns.startsWith("http://www.xfa.org/schema/xfa-form/")},localeSet:{id:4,check:ns=>ns.startsWith("http://www.xfa.org/schema/xfa-locale-set/")},pdf:{id:5,check:ns=>"http://ns.adobe.com/xdp/pdf/"===ns},signature:{id:6,check:ns=>"http://www.w3.org/2000/09/xmldsig#"===ns},sourceSet:{id:7,check:ns=>ns.startsWith("http://www.xfa.org/schema/xfa-source-set/")},stylesheet:{id:8,check:ns=>"http://www.w3.org/1999/XSL/Transform"===ns},template:{id:9,check:ns=>ns.startsWith("http://www.xfa.org/schema/xfa-template/")},xdc:{id:10,check:ns=>ns.startsWith("http://www.xfa.org/schema/xdc/")},xdp:{id:11,check:ns=>"http://ns.adobe.com/xdp/"===ns},xfdf:{id:12,check:ns=>"http://ns.adobe.com/xfdf/"===ns},xhtml:{id:13,check:ns=>"http://www.w3.org/1999/xhtml"===ns},xmpmeta:{id:14,check:ns=>"http://ns.adobe.com/xmpmeta/"===ns}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.createDataNode=function createDataNode(root,container,expr){const parsed=parseExpression(expr);if(!parsed)return null;if(parsed.some((x=>x.operator===operators_dotDot)))return null;const fn=shortcuts.get(parsed[0].name);let i=0;fn?(root=fn(root,container),i=1):root=container||root;for(let ii=parsed.length;i<ii;i++){const{name,operator,index}=parsed[i];if(!isFinite(index))return parsed[i].index=0,createNodes(root,parsed.slice(i));let children;switch(operator){case operators_dot:children=root[_xfa_object.$getChildrenByName](name,!1);break;case operators_dotDot:children=root[_xfa_object.$getChildrenByName](name,!0);break;case operators_dotHash:children=root[_xfa_object.$getChildrenByClass](name),children=children instanceof _xfa_object.XFAObjectArray?children.children:[children]}if(0===children.length)return createNodes(root,parsed.slice(i));if(!(index<children.length))return parsed[i].index=index-children.length,createNodes(root,parsed.slice(i));{const child=children[index];if(!(child instanceof _xfa_object.XFAObject))return(0,_util.warn)("XFA - Cannot create a node."),null;root=child}}return null},exports.searchNode=function searchNode(root,container,expr,dotDotAllowed=!0,useCache=!0){const parsed=parseExpression(expr,dotDotAllowed);if(!parsed)return null;const fn=shortcuts.get(parsed[0].name);let isQualified,i=0;fn?(isQualified=!0,root=[fn(root,container)],i=1):(isQualified=null===container,root=[container||root]);for(let ii=parsed.length;i<ii;i++){const{name,cacheName,operator,index}=parsed[i],nodes=[];for(const node of root){if(!(node instanceof _xfa_object.XFAObject))continue;let children,cached;if(useCache&&(cached=somCache.get(node),cached||(cached=new Map,somCache.set(node,cached)),children=cached.get(cacheName)),!children){switch(operator){case operators_dot:children=node[_xfa_object.$getChildrenByName](name,!1);break;case operators_dotDot:children=node[_xfa_object.$getChildrenByName](name,!0);break;case operators_dotHash:children=node[_xfa_object.$getChildrenByClass](name),children=children instanceof _xfa_object.XFAObjectArray?children.children:[children]}useCache&&cached.set(cacheName,children)}children.length>0&&nodes.push(children)}if(0!==nodes.length||isQualified||0!==i)root=isFinite(index)?nodes.filter((node=>index<node.length)).map((node=>node[index])):nodes.flat();else{const parent=container[_xfa_object.$getParent]();if(!(container=parent))return null;i=-1,root=[container]}}if(0===root.length)return null;return root};var _xfa_object=__w_pdfjs_require__(77),_namespaces=__w_pdfjs_require__(79),_util=__w_pdfjs_require__(2);const namePattern=/^[^.[]+/,indexPattern=/^[^\]]+/,operators_dot=0,operators_dotDot=1,operators_dotHash=2,operators_dotBracket=3,operators_dotParen=4,shortcuts=new Map([["$data",(root,current)=>root.datasets?root.datasets.data:root],["$record",(root,current)=>(root.datasets?root.datasets.data:root)[_xfa_object.$getChildren]()[0]],["$template",(root,current)=>root.template],["$connectionSet",(root,current)=>root.connectionSet],["$form",(root,current)=>root.form],["$layout",(root,current)=>root.layout],["$host",(root,current)=>root.host],["$dataWindow",(root,current)=>root.dataWindow],["$event",(root,current)=>root.event],["!",(root,current)=>root.datasets],["$xfa",(root,current)=>root],["xfa",(root,current)=>root],["$",(root,current)=>current]]),somCache=new WeakMap,NS_DATASETS=_namespaces.NamespaceIds.datasets.id;function parseExpression(expr,dotDotAllowed,noExpr=!0){let match=expr.match(namePattern);if(!match)return null;let[name]=match;const parsed=[{name,cacheName:"."+name,index:0,js:null,formCalc:null,operator:operators_dot}];let pos=name.length;for(;pos<expr.length;){const spos=pos;if("["===expr.charAt(pos++)){if(match=expr.slice(pos).match(indexPattern),!match)return(0,_util.warn)("XFA - Invalid index in SOM expression"),null;parsed.at(-1).index="*"===(index=(index=match[0]).trim())?1/0:parseInt(index,10)||0,pos+=match[0].length+1;continue}let operator;switch(expr.charAt(pos)){case".":if(!dotDotAllowed)return null;pos++,operator=operators_dotDot;break;case"#":pos++,operator=operators_dotHash;break;case"[":if(noExpr)return(0,_util.warn)("XFA - SOM expression contains a FormCalc subexpression which is not supported for now."),null;operator=operators_dotBracket;break;case"(":if(noExpr)return(0,_util.warn)("XFA - SOM expression contains a JavaScript subexpression which is not supported for now."),null;operator=operators_dotParen;break;default:operator=operators_dot}if(match=expr.slice(pos).match(namePattern),!match)break;[name]=match,pos+=name.length,parsed.push({name,cacheName:expr.slice(spos,pos),operator,index:0,js:null,formCalc:null})}var index;return parsed}function createNodes(root,path){let node=null;for(const{name,index}of path){for(let i=0,ii=isFinite(index)?index:0;i<=ii;i++){const nsId=root[_xfa_object.$namespaceId]===NS_DATASETS?-1:root[_xfa_object.$namespaceId];node=new _xfa_object.XmlObject(nsId,name),root[_xfa_object.$appendChild](node)}root=node}return node}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Binder=void 0;var _xfa_object=__w_pdfjs_require__(77),_template=__w_pdfjs_require__(82),_som=__w_pdfjs_require__(80),_namespaces=__w_pdfjs_require__(79),_util=__w_pdfjs_require__(2);const NS_DATASETS=_namespaces.NamespaceIds.datasets.id;function createText(content){const node=new _template.Text({});return node[_xfa_object.$content]=content,node}exports.Binder=class Binder{constructor(root){this.root=root,this.datasets=root.datasets,root.datasets&&root.datasets.data?this.data=root.datasets.data:this.data=new _xfa_object.XmlObject(_namespaces.NamespaceIds.datasets.id,"data"),this.emptyMerge=0===this.data[_xfa_object.$getChildren]().length,this.root.form=this.form=root.template[_xfa_object.$clone]()}_isConsumeData(){return!this.emptyMerge&&this._mergeMode}_isMatchTemplate(){return!this._isConsumeData()}bind(){return this._bindElement(this.form,this.data),this.form}getData(){return this.data}_bindValue(formNode,data,picture){if(formNode[_xfa_object.$data]=data,formNode[_xfa_object.$hasSettableValue]())if(data[_xfa_object.$isDataValue]()){const value=data[_xfa_object.$getDataValue]();formNode[_xfa_object.$setValue](createText(value))}else if(formNode instanceof _template.Field&&formNode.ui&&formNode.ui.choiceList&&"multiSelect"===formNode.ui.choiceList.open){const value=data[_xfa_object.$getChildren]().map((child=>child[_xfa_object.$content].trim())).join("\n");formNode[_xfa_object.$setValue](createText(value))}else this._isConsumeData()&&(0,_util.warn)("XFA - Nodes haven't the same type.");else!data[_xfa_object.$isDataValue]()||this._isMatchTemplate()?this._bindElement(formNode,data):(0,_util.warn)("XFA - Nodes haven't the same type.")}_findDataByNameToConsume(name,isValue,dataNode,global){if(!name)return null;let generator,match;for(let i=0;i<3;i++){for(generator=dataNode[_xfa_object.$getRealChildrenByNameIt](name,!1,!0);match=generator.next().value,match;)if(isValue===match[_xfa_object.$isDataValue]())return match;if(dataNode[_xfa_object.$namespaceId]===_namespaces.NamespaceIds.datasets.id&&"data"===dataNode[_xfa_object.$nodeName])break;dataNode=dataNode[_xfa_object.$getParent]()}return global?(generator=this.data[_xfa_object.$getRealChildrenByNameIt](name,!0,!1),match=generator.next().value,match||(generator=this.data[_xfa_object.$getAttributeIt](name,!0),match=generator.next().value,match&&match[_xfa_object.$isDataValue]()?match:null)):null}_setProperties(formNode,dataNode){if(formNode.hasOwnProperty("setProperty"))for(const{ref,target,connection}of formNode.setProperty.children){if(connection)continue;if(!ref)continue;const nodes=(0,_som.searchNode)(this.root,dataNode,ref,!1,!1);if(!nodes){(0,_util.warn)(`XFA - Invalid reference: ${ref}.`);continue}const[node]=nodes;if(!node[_xfa_object.$isDescendent](this.data)){(0,_util.warn)("XFA - Invalid node: must be a data node.");continue}const targetNodes=(0,_som.searchNode)(this.root,formNode,target,!1,!1);if(!targetNodes){(0,_util.warn)(`XFA - Invalid target: ${target}.`);continue}const[targetNode]=targetNodes;if(!targetNode[_xfa_object.$isDescendent](formNode)){(0,_util.warn)("XFA - Invalid target: must be a property or subproperty.");continue}const targetParent=targetNode[_xfa_object.$getParent]();if(targetNode instanceof _template.SetProperty||targetParent instanceof _template.SetProperty){(0,_util.warn)("XFA - Invalid target: cannot be a setProperty or one of its properties.");continue}if(targetNode instanceof _template.BindItems||targetParent instanceof _template.BindItems){(0,_util.warn)("XFA - Invalid target: cannot be a bindItems or one of its properties.");continue}const content=node[_xfa_object.$text](),name=targetNode[_xfa_object.$nodeName];if(targetNode instanceof _xfa_object.XFAAttribute){const attrs=Object.create(null);attrs[name]=content;const obj=Reflect.construct(Object.getPrototypeOf(targetParent).constructor,[attrs]);targetParent[name]=obj[name]}else targetNode.hasOwnProperty(_xfa_object.$content)?(targetNode[_xfa_object.$data]=node,targetNode[_xfa_object.$content]=content,targetNode[_xfa_object.$finalize]()):(0,_util.warn)("XFA - Invalid node to use in setProperty")}}_bindItems(formNode,dataNode){if(!formNode.hasOwnProperty("items")||!formNode.hasOwnProperty("bindItems")||formNode.bindItems.isEmpty())return;for(const item of formNode.items.children)formNode[_xfa_object.$removeChild](item);formNode.items.clear();const labels=new _template.Items({}),values=new _template.Items({});formNode[_xfa_object.$appendChild](labels),formNode.items.push(labels),formNode[_xfa_object.$appendChild](values),formNode.items.push(values);for(const{ref,labelRef,valueRef,connection}of formNode.bindItems.children){if(connection)continue;if(!ref)continue;const nodes=(0,_som.searchNode)(this.root,dataNode,ref,!1,!1);if(nodes)for(const node of nodes){if(!node[_xfa_object.$isDescendent](this.datasets)){(0,_util.warn)(`XFA - Invalid ref (${ref}): must be a datasets child.`);continue}const labelNodes=(0,_som.searchNode)(this.root,node,labelRef,!0,!1);if(!labelNodes){(0,_util.warn)(`XFA - Invalid label: ${labelRef}.`);continue}const[labelNode]=labelNodes;if(!labelNode[_xfa_object.$isDescendent](this.datasets)){(0,_util.warn)("XFA - Invalid label: must be a datasets child.");continue}const valueNodes=(0,_som.searchNode)(this.root,node,valueRef,!0,!1);if(!valueNodes){(0,_util.warn)(`XFA - Invalid value: ${valueRef}.`);continue}const[valueNode]=valueNodes;if(!valueNode[_xfa_object.$isDescendent](this.datasets)){(0,_util.warn)("XFA - Invalid value: must be a datasets child.");continue}const label=createText(labelNode[_xfa_object.$text]()),value=createText(valueNode[_xfa_object.$text]());labels[_xfa_object.$appendChild](label),labels.text.push(label),values[_xfa_object.$appendChild](value),values.text.push(value)}else(0,_util.warn)(`XFA - Invalid reference: ${ref}.`)}}_bindOccurrences(formNode,matches,picture){let baseClone;if(matches.length>1&&(baseClone=formNode[_xfa_object.$clone](),baseClone[_xfa_object.$removeChild](baseClone.occur),baseClone.occur=null),this._bindValue(formNode,matches[0],picture),this._setProperties(formNode,matches[0]),this._bindItems(formNode,matches[0]),1===matches.length)return;const parent=formNode[_xfa_object.$getParent](),name=formNode[_xfa_object.$nodeName],pos=parent[_xfa_object.$indexOf](formNode);for(let i=1,ii=matches.length;i<ii;i++){const match=matches[i],clone=baseClone[_xfa_object.$clone]();parent[name].push(clone),parent[_xfa_object.$insertAt](pos+i,clone),this._bindValue(clone,match,picture),this._setProperties(clone,match),this._bindItems(clone,match)}}_createOccurrences(formNode){if(!this.emptyMerge)return;const{occur}=formNode;if(!occur||occur.initial<=1)return;const parent=formNode[_xfa_object.$getParent](),name=formNode[_xfa_object.$nodeName];if(!(parent[name]instanceof _xfa_object.XFAObjectArray))return;let currentNumber;currentNumber=formNode.name?parent[name].children.filter((e=>e.name===formNode.name)).length:parent[name].children.length;const pos=parent[_xfa_object.$indexOf](formNode)+1,ii=occur.initial-currentNumber;if(ii){const nodeClone=formNode[_xfa_object.$clone]();nodeClone[_xfa_object.$removeChild](nodeClone.occur),nodeClone.occur=null,parent[name].push(nodeClone),parent[_xfa_object.$insertAt](pos,nodeClone);for(let i=1;i<ii;i++){const clone=nodeClone[_xfa_object.$clone]();parent[name].push(clone),parent[_xfa_object.$insertAt](pos+i,clone)}}}_getOccurInfo(formNode){const{name,occur}=formNode;if(!occur||!name)return[1,1];const max=-1===occur.max?1/0:occur.max;return[occur.min,max]}_setAndBind(formNode,dataNode){this._setProperties(formNode,dataNode),this._bindItems(formNode,dataNode),this._bindElement(formNode,dataNode)}_bindElement(formNode,dataNode){const uselessNodes=[];this._createOccurrences(formNode);for(const child of formNode[_xfa_object.$getChildren]()){if(child[_xfa_object.$data])continue;if(void 0===this._mergeMode&&"subform"===child[_xfa_object.$nodeName]){this._mergeMode="consumeData"===child.mergeMode;const dataChildren=dataNode[_xfa_object.$getChildren]();if(dataChildren.length>0)this._bindOccurrences(child,[dataChildren[0]],null);else if(this.emptyMerge){const nsId=dataNode[_xfa_object.$namespaceId]===NS_DATASETS?-1:dataNode[_xfa_object.$namespaceId],dataChild=child[_xfa_object.$data]=new _xfa_object.XmlObject(nsId,child.name||"root");dataNode[_xfa_object.$appendChild](dataChild),this._bindElement(child,dataChild)}continue}if(!child[_xfa_object.$isBindable]())continue;let global=!1,picture=null,ref=null,match=null;if(child.bind){switch(child.bind.match){case"none":this._setAndBind(child,dataNode);continue;case"global":global=!0;break;case"dataRef":if(!child.bind.ref){(0,_util.warn)(`XFA - ref is empty in node ${child[_xfa_object.$nodeName]}.`),this._setAndBind(child,dataNode);continue}ref=child.bind.ref}child.bind.picture&&(picture=child.bind.picture[_xfa_object.$content])}const[min,max]=this._getOccurInfo(child);if(ref){if(match=(0,_som.searchNode)(this.root,dataNode,ref,!0,!1),null===match){if(match=(0,_som.createDataNode)(this.data,dataNode,ref),!match)continue;this._isConsumeData()&&(match[_xfa_object.$consumed]=!0),this._setAndBind(child,match);continue}this._isConsumeData()&&(match=match.filter((node=>!node[_xfa_object.$consumed]))),match.length>max?match=match.slice(0,max):0===match.length&&(match=null),match&&this._isConsumeData()&&match.forEach((node=>{node[_xfa_object.$consumed]=!0}))}else{if(!child.name){this._setAndBind(child,dataNode);continue}if(this._isConsumeData()){const matches=[];for(;matches.length<max;){const found=this._findDataByNameToConsume(child.name,child[_xfa_object.$hasSettableValue](),dataNode,global);if(!found)break;found[_xfa_object.$consumed]=!0,matches.push(found)}match=matches.length>0?matches:null}else{if(match=dataNode[_xfa_object.$getRealChildrenByNameIt](child.name,!1,this.emptyMerge).next().value,!match){if(0===min){uselessNodes.push(child);continue}const nsId=dataNode[_xfa_object.$namespaceId]===NS_DATASETS?-1:dataNode[_xfa_object.$namespaceId];match=child[_xfa_object.$data]=new _xfa_object.XmlObject(nsId,child.name),this.emptyMerge&&(match[_xfa_object.$consumed]=!0),dataNode[_xfa_object.$appendChild](match),this._setAndBind(child,match);continue}this.emptyMerge&&(match[_xfa_object.$consumed]=!0),match=[match]}}match?this._bindOccurrences(child,match,picture):min>0?this._setAndBind(child,dataNode):uselessNodes.push(child)}uselessNodes.forEach((node=>node[_xfa_object.$getParent]()[_xfa_object.$removeChild](node)))}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Value=exports.Text=exports.TemplateNamespace=exports.Template=exports.SetProperty=exports.Items=exports.Field=exports.BindItems=void 0;var _xfa_object=__w_pdfjs_require__(77),_namespaces=__w_pdfjs_require__(79),_layout=__w_pdfjs_require__(83),_html_utils=__w_pdfjs_require__(84),_utils=__w_pdfjs_require__(78),_util=__w_pdfjs_require__(2),_fonts=__w_pdfjs_require__(85),_core_utils=__w_pdfjs_require__(6),_som=__w_pdfjs_require__(80);const TEMPLATE_NS_ID=_namespaces.NamespaceIds.template.id,SVG_NS="http://www.w3.org/2000/svg",HEADING_PATTERN=/^H(\d+)$/,MIMES=new Set(["image/gif","image/jpeg","image/jpg","image/pjpeg","image/png","image/apng","image/x-png","image/bmp","image/x-ms-bmp","image/tiff","image/tif","application/octet-stream"]),IMAGES_HEADERS=[[[66,77],"image/bmp"],[[255,216,255],"image/jpeg"],[[73,73,42,0],"image/tiff"],[[77,77,0,42],"image/tiff"],[[71,73,70,56,57,97],"image/gif"],[[137,80,78,71,13,10,26,10],"image/png"]];function getBorderDims(node){if(!node||!node.border)return{w:0,h:0};const borderExtra=node.border[_xfa_object.$getExtra]();return borderExtra?{w:borderExtra.widths[0]+borderExtra.widths[2]+borderExtra.insets[0]+borderExtra.insets[2],h:borderExtra.widths[1]+borderExtra.widths[3]+borderExtra.insets[1]+borderExtra.insets[3]}:{w:0,h:0}}function hasMargin(node){return node.margin&&(node.margin.topInset||node.margin.rightInset||node.margin.bottomInset||node.margin.leftInset)}function _setValue(templateNode,value){if(!templateNode.value){const nodeValue=new Value({});templateNode[_xfa_object.$appendChild](nodeValue),templateNode.value=nodeValue}templateNode.value[_xfa_object.$setValue](value)}function*getContainedChildren(node){for(const child of node[_xfa_object.$getChildren]())child instanceof SubformSet?yield*child[_xfa_object.$getContainedChildren]():yield child}function isRequired(node){return node.validate&&"error"===node.validate.nullTest}function setTabIndex(node){for(;node;){if(!node.traversal)return void(node[_xfa_object.$tabIndex]=node[_xfa_object.$getParent]()[_xfa_object.$tabIndex]);if(node[_xfa_object.$tabIndex])return;let next=null;for(const child of node.traversal[_xfa_object.$getChildren]())if("next"===child.operation){next=child;break}if(!next||!next.ref)return void(node[_xfa_object.$tabIndex]=node[_xfa_object.$getParent]()[_xfa_object.$tabIndex]);const root=node[_xfa_object.$getTemplateRoot]();node[_xfa_object.$tabIndex]=++root[_xfa_object.$tabIndex];const ref=root[_xfa_object.$searchNode](next.ref,node);if(!ref)return;node=ref[0]}}function applyAssist(obj,attributes){const assist=obj.assist;if(assist){const assistTitle=assist[_xfa_object.$toHTML]();assistTitle&&(attributes.title=assistTitle);const match=assist.role.match(HEADING_PATTERN);if(match){const ariaRole="heading",ariaLevel=match[1];attributes.role=ariaRole,attributes["aria-level"]=ariaLevel}}if("table"===obj.layout)attributes.role="table";else if("row"===obj.layout)attributes.role="row";else{const parent=obj[_xfa_object.$getParent]();"row"===parent.layout&&(parent.assist&&"TH"===parent.assist.role?attributes.role="columnheader":attributes.role="cell")}}function ariaLabel(obj){if(!obj.assist)return null;const assist=obj.assist;return assist.speak&&""!==assist.speak[_xfa_object.$content]?assist.speak[_xfa_object.$content]:assist.toolTip?assist.toolTip[_xfa_object.$content]:null}function valueToHtml(value){return _utils.HTMLResult.success({name:"div",attributes:{class:["xfaRich"],style:Object.create(null)},children:[{name:"span",attributes:{style:Object.create(null)},value}]})}function setFirstUnsplittable(node){const root=node[_xfa_object.$getTemplateRoot]();null===root[_xfa_object.$extra].firstUnsplittable&&(root[_xfa_object.$extra].firstUnsplittable=node,root[_xfa_object.$extra].noLayoutFailure=!0)}function unsetFirstUnsplittable(node){const root=node[_xfa_object.$getTemplateRoot]();root[_xfa_object.$extra].firstUnsplittable===node&&(root[_xfa_object.$extra].noLayoutFailure=!1)}function handleBreak(node){if(node[_xfa_object.$extra])return!1;if(node[_xfa_object.$extra]=Object.create(null),"auto"===node.targetType)return!1;const root=node[_xfa_object.$getTemplateRoot]();let target=null;if(node.target){if(target=root[_xfa_object.$searchNode](node.target,node[_xfa_object.$getParent]()),!target)return!1;target=target[0]}const{currentPageArea,currentContentArea}=root[_xfa_object.$extra];if("pageArea"===node.targetType)return target instanceof PageArea||(target=null),node.startNew?(node[_xfa_object.$extra].target=target||currentPageArea,!0):!(!target||target===currentPageArea)&&(node[_xfa_object.$extra].target=target,!0);target instanceof ContentArea||(target=null);const pageArea=target&&target[_xfa_object.$getParent]();let index,nextPageArea=pageArea;if(node.startNew)if(target){const contentAreas=pageArea.contentArea.children,indexForCurrent=contentAreas.indexOf(currentContentArea),indexForTarget=contentAreas.indexOf(target);-1!==indexForCurrent&&indexForCurrent<indexForTarget&&(nextPageArea=null),index=indexForTarget-1}else index=currentPageArea.contentArea.children.indexOf(currentContentArea);else{if(!target||target===currentContentArea)return!1;index=pageArea.contentArea.children.indexOf(target)-1,nextPageArea=pageArea===currentPageArea?null:pageArea}return node[_xfa_object.$extra].target=nextPageArea,node[_xfa_object.$extra].index=index,!0}function handleOverflow(node,extraNode,space){const root=node[_xfa_object.$getTemplateRoot](),saved=root[_xfa_object.$extra].noLayoutFailure,savedMethod=extraNode[_xfa_object.$getSubformParent];extraNode[_xfa_object.$getSubformParent]=()=>node,root[_xfa_object.$extra].noLayoutFailure=!0;const res=extraNode[_xfa_object.$toHTML](space);node[_xfa_object.$addHTML](res.html,res.bbox),root[_xfa_object.$extra].noLayoutFailure=saved,extraNode[_xfa_object.$getSubformParent]=savedMethod}class AppearanceFilter extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"appearanceFilter"),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Arc extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"arc",!0),this.circular=(0,_utils.getInteger)({data:attributes.circular,defaultValue:0,validate:x=>1===x}),this.hand=(0,_utils.getStringOption)(attributes.hand,["even","left","right"]),this.id=attributes.id||"",this.startAngle=(0,_utils.getFloat)({data:attributes.startAngle,defaultValue:0,validate:x=>!0}),this.sweepAngle=(0,_utils.getFloat)({data:attributes.sweepAngle,defaultValue:360,validate:x=>!0}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.edge=null,this.fill=null}[_xfa_object.$toHTML](){const edge=this.edge||new Edge({}),edgeStyle=edge[_xfa_object.$toStyle](),style=Object.create(null);let arc;this.fill&&"visible"===this.fill.presence?Object.assign(style,this.fill[_xfa_object.$toStyle]()):style.fill="transparent",style.strokeWidth=(0,_html_utils.measureToString)("visible"===edge.presence?edge.thickness:0),style.stroke=edgeStyle.color;const attributes={xmlns:SVG_NS,style:{width:"100%",height:"100%",overflow:"visible"}};if(360===this.sweepAngle)arc={name:"ellipse",attributes:{xmlns:SVG_NS,cx:"50%",cy:"50%",rx:"50%",ry:"50%",style}};else{const startAngle=this.startAngle*Math.PI/180,sweepAngle=this.sweepAngle*Math.PI/180,largeArc=this.sweepAngle>180?1:0,[x1,y1,x2,y2]=[50*(1+Math.cos(startAngle)),50*(1-Math.sin(startAngle)),50*(1+Math.cos(startAngle+sweepAngle)),50*(1-Math.sin(startAngle+sweepAngle))];arc={name:"path",attributes:{xmlns:SVG_NS,d:`M ${x1} ${y1} A 50 50 0 ${largeArc} 0 ${x2} ${y2}`,vectorEffect:"non-scaling-stroke",style}},Object.assign(attributes,{viewBox:"0 0 100 100",preserveAspectRatio:"none"})}const svg={name:"svg",children:[arc],attributes};return hasMargin(this[_xfa_object.$getParent]()[_xfa_object.$getParent]())?_utils.HTMLResult.success({name:"div",attributes:{style:{display:"inline",width:"100%",height:"100%"}},children:[svg]}):(svg.attributes.style.position="absolute",_utils.HTMLResult.success(svg))}}class Area extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"area",!0),this.colSpan=(0,_utils.getInteger)({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||-1===n}),this.id=attributes.id||"",this.name=attributes.name||"",this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.x=(0,_utils.getMeasurement)(attributes.x,"0pt"),this.y=(0,_utils.getMeasurement)(attributes.y,"0pt"),this.desc=null,this.extras=null,this.area=new _xfa_object.XFAObjectArray,this.draw=new _xfa_object.XFAObjectArray,this.exObject=new _xfa_object.XFAObjectArray,this.exclGroup=new _xfa_object.XFAObjectArray,this.field=new _xfa_object.XFAObjectArray,this.subform=new _xfa_object.XFAObjectArray,this.subformSet=new _xfa_object.XFAObjectArray}*[_xfa_object.$getContainedChildren](){yield*getContainedChildren(this)}[_xfa_object.$isTransparent](){return!0}[_xfa_object.$isBindable](){return!0}[_xfa_object.$addHTML](html,bbox){const[x,y,w,h]=bbox;this[_xfa_object.$extra].width=Math.max(this[_xfa_object.$extra].width,x+w),this[_xfa_object.$extra].height=Math.max(this[_xfa_object.$extra].height,y+h),this[_xfa_object.$extra].children.push(html)}[_xfa_object.$getAvailableSpace](){return this[_xfa_object.$extra].availableSpace}[_xfa_object.$toHTML](availableSpace){const style=(0,_html_utils.toStyle)(this,"position"),attributes={style,id:this[_xfa_object.$uid],class:["xfaArea"]};(0,_html_utils.isPrintOnly)(this)&&attributes.class.push("xfaPrintOnly"),this.name&&(attributes.xfaName=this.name);const children=[];this[_xfa_object.$extra]={children,width:0,height:0,availableSpace};const result=this[_xfa_object.$childrenToHTML]({filter:new Set(["area","draw","field","exclGroup","subform","subformSet"]),include:!0});if(!result.success)return result.isBreak()?result:(delete this[_xfa_object.$extra],_utils.HTMLResult.FAILURE);style.width=(0,_html_utils.measureToString)(this[_xfa_object.$extra].width),style.height=(0,_html_utils.measureToString)(this[_xfa_object.$extra].height);const html={name:"div",attributes,children},bbox=[this.x,this.y,this[_xfa_object.$extra].width,this[_xfa_object.$extra].height];return delete this[_xfa_object.$extra],_utils.HTMLResult.success(html,bbox)}}class Assist extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"assist",!0),this.id=attributes.id||"",this.role=attributes.role||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.speak=null,this.toolTip=null}[_xfa_object.$toHTML](){return this.toolTip&&this.toolTip[_xfa_object.$content]?this.toolTip[_xfa_object.$content]:null}}class Barcode extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"barcode",!0),this.charEncoding=(0,_utils.getKeyword)({data:attributes.charEncoding?attributes.charEncoding.toLowerCase():"",defaultValue:"",validate:k=>["utf-8","big-five","fontspecific","gbk","gb-18030","gb-2312","ksc-5601","none","shift-jis","ucs-2","utf-16"].includes(k)||k.match(/iso-8859-\d{2}/)}),this.checksum=(0,_utils.getStringOption)(attributes.checksum,["none","1mod10","1mod10_1mod11","2mod10","auto"]),this.dataColumnCount=(0,_utils.getInteger)({data:attributes.dataColumnCount,defaultValue:-1,validate:x=>x>=0}),this.dataLength=(0,_utils.getInteger)({data:attributes.dataLength,defaultValue:-1,validate:x=>x>=0}),this.dataPrep=(0,_utils.getStringOption)(attributes.dataPrep,["none","flateCompress"]),this.dataRowCount=(0,_utils.getInteger)({data:attributes.dataRowCount,defaultValue:-1,validate:x=>x>=0}),this.endChar=attributes.endChar||"",this.errorCorrectionLevel=(0,_utils.getInteger)({data:attributes.errorCorrectionLevel,defaultValue:-1,validate:x=>x>=0&&x<=8}),this.id=attributes.id||"",this.moduleHeight=(0,_utils.getMeasurement)(attributes.moduleHeight,"5mm"),this.moduleWidth=(0,_utils.getMeasurement)(attributes.moduleWidth,"0.25mm"),this.printCheckDigit=(0,_utils.getInteger)({data:attributes.printCheckDigit,defaultValue:0,validate:x=>1===x}),this.rowColumnRatio=(0,_utils.getRatio)(attributes.rowColumnRatio),this.startChar=attributes.startChar||"",this.textLocation=(0,_utils.getStringOption)(attributes.textLocation,["below","above","aboveEmbedded","belowEmbedded","none"]),this.truncate=(0,_utils.getInteger)({data:attributes.truncate,defaultValue:0,validate:x=>1===x}),this.type=(0,_utils.getStringOption)(attributes.type?attributes.type.toLowerCase():"",["aztec","codabar","code2of5industrial","code2of5interleaved","code2of5matrix","code2of5standard","code3of9","code3of9extended","code11","code49","code93","code128","code128a","code128b","code128c","code128sscc","datamatrix","ean8","ean8add2","ean8add5","ean13","ean13add2","ean13add5","ean13pwcd","fim","logmars","maxicode","msi","pdf417","pdf417macro","plessey","postauscust2","postauscust3","postausreplypaid","postausstandard","postukrm4scc","postusdpbc","postusimb","postusstandard","postus5zip","qrcode","rfid","rss14","rss14expanded","rss14limited","rss14stacked","rss14stackedomni","rss14truncated","telepen","ucc128","ucc128random","ucc128sscc","upca","upcaadd2","upcaadd5","upcapwcd","upce","upceadd2","upceadd5","upcean2","upcean5","upsmaxicode"]),this.upsMode=(0,_utils.getStringOption)(attributes.upsMode,["usCarrier","internationalCarrier","secureSymbol","standardSymbol"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.wideNarrowRatio=(0,_utils.getRatio)(attributes.wideNarrowRatio),this.encrypt=null,this.extras=null}}class Bind extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"bind",!0),this.match=(0,_utils.getStringOption)(attributes.match,["once","dataRef","global","none"]),this.ref=attributes.ref||"",this.picture=null}}class BindItems extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"bindItems"),this.connection=attributes.connection||"",this.labelRef=attributes.labelRef||"",this.ref=attributes.ref||"",this.valueRef=attributes.valueRef||""}}exports.BindItems=BindItems;class Bookend extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"bookend"),this.id=attributes.id||"",this.leader=attributes.leader||"",this.trailer=attributes.trailer||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class BooleanElement extends _xfa_object.Option01{constructor(attributes){super(TEMPLATE_NS_ID,"boolean"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$toHTML](availableSpace){return valueToHtml(1===this[_xfa_object.$content]?"1":"0")}}class Border extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"border",!0),this.break=(0,_utils.getStringOption)(attributes.break,["close","open"]),this.hand=(0,_utils.getStringOption)(attributes.hand,["even","left","right"]),this.id=attributes.id||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.corner=new _xfa_object.XFAObjectArray(4),this.edge=new _xfa_object.XFAObjectArray(4),this.extras=null,this.fill=null,this.margin=null}[_xfa_object.$getExtra](){if(!this[_xfa_object.$extra]){const edges=this.edge.children.slice();if(edges.length<4){const defaultEdge=edges.at(-1)||new Edge({});for(let i=edges.length;i<4;i++)edges.push(defaultEdge)}const widths=edges.map((edge=>edge.thickness)),insets=[0,0,0,0];this.margin&&(insets[0]=this.margin.topInset,insets[1]=this.margin.rightInset,insets[2]=this.margin.bottomInset,insets[3]=this.margin.leftInset),this[_xfa_object.$extra]={widths,insets,edges}}return this[_xfa_object.$extra]}[_xfa_object.$toStyle](){const{edges}=this[_xfa_object.$getExtra](),edgeStyles=edges.map((node=>{const style=node[_xfa_object.$toStyle]();return style.color=style.color||"#000000",style})),style=Object.create(null);if(this.margin&&Object.assign(style,this.margin[_xfa_object.$toStyle]()),this.fill&&"visible"===this.fill.presence&&Object.assign(style,this.fill[_xfa_object.$toStyle]()),this.corner.children.some((node=>0!==node.radius))){const cornerStyles=this.corner.children.map((node=>node[_xfa_object.$toStyle]()));if(2===cornerStyles.length||3===cornerStyles.length){const last=cornerStyles.at(-1);for(let i=cornerStyles.length;i<4;i++)cornerStyles.push(last)}style.borderRadius=cornerStyles.map((s=>s.radius)).join(" ")}switch(this.presence){case"invisible":case"hidden":style.borderStyle="";break;case"inactive":style.borderStyle="none";break;default:style.borderStyle=edgeStyles.map((s=>s.style)).join(" ")}return style.borderWidth=edgeStyles.map((s=>s.width)).join(" "),style.borderColor=edgeStyles.map((s=>s.color)).join(" "),style}}class Break extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"break",!0),this.after=(0,_utils.getStringOption)(attributes.after,["auto","contentArea","pageArea","pageEven","pageOdd"]),this.afterTarget=attributes.afterTarget||"",this.before=(0,_utils.getStringOption)(attributes.before,["auto","contentArea","pageArea","pageEven","pageOdd"]),this.beforeTarget=attributes.beforeTarget||"",this.bookendLeader=attributes.bookendLeader||"",this.bookendTrailer=attributes.bookendTrailer||"",this.id=attributes.id||"",this.overflowLeader=attributes.overflowLeader||"",this.overflowTarget=attributes.overflowTarget||"",this.overflowTrailer=attributes.overflowTrailer||"",this.startNew=(0,_utils.getInteger)({data:attributes.startNew,defaultValue:0,validate:x=>1===x}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}}class BreakAfter extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"breakAfter",!0),this.id=attributes.id||"",this.leader=attributes.leader||"",this.startNew=(0,_utils.getInteger)({data:attributes.startNew,defaultValue:0,validate:x=>1===x}),this.target=attributes.target||"",this.targetType=(0,_utils.getStringOption)(attributes.targetType,["auto","contentArea","pageArea"]),this.trailer=attributes.trailer||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.script=null}}class BreakBefore extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"breakBefore",!0),this.id=attributes.id||"",this.leader=attributes.leader||"",this.startNew=(0,_utils.getInteger)({data:attributes.startNew,defaultValue:0,validate:x=>1===x}),this.target=attributes.target||"",this.targetType=(0,_utils.getStringOption)(attributes.targetType,["auto","contentArea","pageArea"]),this.trailer=attributes.trailer||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.script=null}[_xfa_object.$toHTML](availableSpace){return this[_xfa_object.$extra]={},_utils.HTMLResult.FAILURE}}class Button extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"button",!0),this.highlight=(0,_utils.getStringOption)(attributes.highlight,["inverted","none","outline","push"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}[_xfa_object.$toHTML](availableSpace){const grandpa=this[_xfa_object.$getParent]()[_xfa_object.$getParent](),htmlButton={name:"button",attributes:{id:this[_xfa_object.$uid],class:["xfaButton"],style:{}},children:[]};for(const event of grandpa.event.children){if("click"!==event.activity||!event.script)continue;const jsURL=(0,_core_utils.recoverJsURL)(event.script[_xfa_object.$content]);if(!jsURL)continue;const href=(0,_html_utils.fixURL)(jsURL.url);href&&htmlButton.children.push({name:"a",attributes:{id:"link"+this[_xfa_object.$uid],href,newWindow:jsURL.newWindow,class:["xfaLink"],style:{}},children:[]})}return _utils.HTMLResult.success(htmlButton)}}class Calculate extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"calculate",!0),this.id=attributes.id||"",this.override=(0,_utils.getStringOption)(attributes.override,["disabled","error","ignore","warning"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.message=null,this.script=null}}class Caption extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"caption",!0),this.id=attributes.id||"",this.placement=(0,_utils.getStringOption)(attributes.placement,["left","bottom","inline","right","top"]),this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.reserve=Math.ceil((0,_utils.getMeasurement)(attributes.reserve)),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.font=null,this.margin=null,this.para=null,this.value=null}[_xfa_object.$setValue](value){_setValue(this,value)}[_xfa_object.$getExtra](availableSpace){if(!this[_xfa_object.$extra]){let{width,height}=availableSpace;switch(this.placement){case"left":case"right":case"inline":width=this.reserve<=0?width:this.reserve;break;case"top":case"bottom":height=this.reserve<=0?height:this.reserve}this[_xfa_object.$extra]=(0,_html_utils.layoutNode)(this,{width,height})}return this[_xfa_object.$extra]}[_xfa_object.$toHTML](availableSpace){if(!this.value)return _utils.HTMLResult.EMPTY;this[_xfa_object.$pushPara]();const value=this.value[_xfa_object.$toHTML](availableSpace).html;if(!value)return this[_xfa_object.$popPara](),_utils.HTMLResult.EMPTY;const savedReserve=this.reserve;if(this.reserve<=0){const{w,h}=this[_xfa_object.$getExtra](availableSpace);switch(this.placement){case"left":case"right":case"inline":this.reserve=w;break;case"top":case"bottom":this.reserve=h}}const children=[];"string"==typeof value?children.push({name:"#text",value}):children.push(value);const style=(0,_html_utils.toStyle)(this,"font","margin","visibility");switch(this.placement){case"left":case"right":this.reserve>0&&(style.width=(0,_html_utils.measureToString)(this.reserve));break;case"top":case"bottom":this.reserve>0&&(style.height=(0,_html_utils.measureToString)(this.reserve))}return(0,_html_utils.setPara)(this,null,value),this[_xfa_object.$popPara](),this.reserve=savedReserve,_utils.HTMLResult.success({name:"div",attributes:{style,class:["xfaCaption"]},children})}}class Certificate extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"certificate"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Certificates extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"certificates",!0),this.credentialServerPolicy=(0,_utils.getStringOption)(attributes.credentialServerPolicy,["optional","required"]),this.id=attributes.id||"",this.url=attributes.url||"",this.urlPolicy=attributes.urlPolicy||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.encryption=null,this.issuers=null,this.keyUsage=null,this.oids=null,this.signing=null,this.subjectDNs=null}}class CheckButton extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"checkButton",!0),this.id=attributes.id||"",this.mark=(0,_utils.getStringOption)(attributes.mark,["default","check","circle","cross","diamond","square","star"]),this.shape=(0,_utils.getStringOption)(attributes.shape,["square","round"]),this.size=(0,_utils.getMeasurement)(attributes.size,"10pt"),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.extras=null,this.margin=null}[_xfa_object.$toHTML](availableSpace){const style=(0,_html_utils.toStyle)("margin"),size=(0,_html_utils.measureToString)(this.size);let type,className,groupId;style.width=style.height=size;const field=this[_xfa_object.$getParent]()[_xfa_object.$getParent](),items=field.items.children.length&&field.items.children[0][_xfa_object.$toHTML]().html||[],exportedValue={on:(void 0!==items[0]?items[0]:"on").toString(),off:(void 0!==items[1]?items[1]:"off").toString()},checked=(field.value&&field.value[_xfa_object.$text]()||"off")===exportedValue.on||void 0,container=field[_xfa_object.$getSubformParent](),fieldId=field[_xfa_object.$uid];let dataId;container instanceof ExclGroup?(groupId=container[_xfa_object.$uid],type="radio",className="xfaRadio",dataId=container[_xfa_object.$data]&&container[_xfa_object.$data][_xfa_object.$uid]||container[_xfa_object.$uid]):(type="checkbox",className="xfaCheckbox",dataId=field[_xfa_object.$data]&&field[_xfa_object.$data][_xfa_object.$uid]||field[_xfa_object.$uid]);const input={name:"input",attributes:{class:[className],style,fieldId,dataId,type,checked,xfaOn:exportedValue.on,xfaOff:exportedValue.off,"aria-label":ariaLabel(field),"aria-required":!1}};return groupId&&(input.attributes.name=groupId),isRequired(field)&&(input.attributes["aria-required"]=!0,input.attributes.required=!0),_utils.HTMLResult.success({name:"label",attributes:{class:["xfaLabel"]},children:[input]})}}class ChoiceList extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"choiceList",!0),this.commitOn=(0,_utils.getStringOption)(attributes.commitOn,["select","exit"]),this.id=attributes.id||"",this.open=(0,_utils.getStringOption)(attributes.open,["userControl","always","multiSelect","onEntry"]),this.textEntry=(0,_utils.getInteger)({data:attributes.textEntry,defaultValue:0,validate:x=>1===x}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.extras=null,this.margin=null}[_xfa_object.$toHTML](availableSpace){const style=(0,_html_utils.toStyle)(this,"border","margin"),field=this[_xfa_object.$getParent]()[_xfa_object.$getParent](),optionStyle={fontSize:`calc(${field.font&&field.font.size||10}px * var(--scale-factor))`},children=[];if(field.items.children.length>0){const items=field.items;let displayedIndex=0,saveIndex=0;2===items.children.length&&(displayedIndex=items.children[0].save,saveIndex=1-displayedIndex);const displayed=items.children[displayedIndex][_xfa_object.$toHTML]().html,values=items.children[saveIndex][_xfa_object.$toHTML]().html;let selected=!1;const value=field.value&&field.value[_xfa_object.$text]()||"";for(let i=0,ii=displayed.length;i<ii;i++){const option={name:"option",attributes:{value:values[i]||displayed[i],style:optionStyle},value:displayed[i]};values[i]===value&&(option.attributes.selected=selected=!0),children.push(option)}selected||children.splice(0,0,{name:"option",attributes:{hidden:!0,selected:!0},value:" "})}const selectAttributes={class:["xfaSelect"],fieldId:field[_xfa_object.$uid],dataId:field[_xfa_object.$data]&&field[_xfa_object.$data][_xfa_object.$uid]||field[_xfa_object.$uid],style,"aria-label":ariaLabel(field),"aria-required":!1};return isRequired(field)&&(selectAttributes["aria-required"]=!0,selectAttributes.required=!0),"multiSelect"===this.open&&(selectAttributes.multiple=!0),_utils.HTMLResult.success({name:"label",attributes:{class:["xfaLabel"]},children:[{name:"select",children,attributes:selectAttributes}]})}}class Color extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"color",!0),this.cSpace=(0,_utils.getStringOption)(attributes.cSpace,["SRGB"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.value=attributes.value?(0,_utils.getColor)(attributes.value):"",this.extras=null}[_xfa_object.$hasSettableValue](){return!1}[_xfa_object.$toStyle](){return this.value?_util.Util.makeHexColor(this.value.r,this.value.g,this.value.b):null}}class Comb extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"comb"),this.id=attributes.id||"",this.numberOfCells=(0,_utils.getInteger)({data:attributes.numberOfCells,defaultValue:0,validate:x=>x>=0}),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Connect extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"connect",!0),this.connection=attributes.connection||"",this.id=attributes.id||"",this.ref=attributes.ref||"",this.usage=(0,_utils.getStringOption)(attributes.usage,["exportAndImport","exportOnly","importOnly"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.picture=null}}class ContentArea extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"contentArea",!0),this.h=(0,_utils.getMeasurement)(attributes.h),this.id=attributes.id||"",this.name=attributes.name||"",this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.w=(0,_utils.getMeasurement)(attributes.w),this.x=(0,_utils.getMeasurement)(attributes.x,"0pt"),this.y=(0,_utils.getMeasurement)(attributes.y,"0pt"),this.desc=null,this.extras=null}[_xfa_object.$toHTML](availableSpace){const style={left:(0,_html_utils.measureToString)(this.x),top:(0,_html_utils.measureToString)(this.y),width:(0,_html_utils.measureToString)(this.w),height:(0,_html_utils.measureToString)(this.h)},classNames=["xfaContentarea"];return(0,_html_utils.isPrintOnly)(this)&&classNames.push("xfaPrintOnly"),_utils.HTMLResult.success({name:"div",children:[],attributes:{style,class:classNames,id:this[_xfa_object.$uid]}})}}class Corner extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"corner",!0),this.id=attributes.id||"",this.inverted=(0,_utils.getInteger)({data:attributes.inverted,defaultValue:0,validate:x=>1===x}),this.join=(0,_utils.getStringOption)(attributes.join,["square","round"]),this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.radius=(0,_utils.getMeasurement)(attributes.radius),this.stroke=(0,_utils.getStringOption)(attributes.stroke,["solid","dashDot","dashDotDot","dashed","dotted","embossed","etched","lowered","raised"]),this.thickness=(0,_utils.getMeasurement)(attributes.thickness,"0.5pt"),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null}[_xfa_object.$toStyle](){const style=(0,_html_utils.toStyle)(this,"visibility");return style.radius=(0,_html_utils.measureToString)("square"===this.join?0:this.radius),style}}class DateElement extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"date"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){const date=this[_xfa_object.$content].trim();this[_xfa_object.$content]=date?new Date(date):null}[_xfa_object.$toHTML](availableSpace){return valueToHtml(this[_xfa_object.$content]?this[_xfa_object.$content].toString():"")}}class DateTime extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"dateTime"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){const date=this[_xfa_object.$content].trim();this[_xfa_object.$content]=date?new Date(date):null}[_xfa_object.$toHTML](availableSpace){return valueToHtml(this[_xfa_object.$content]?this[_xfa_object.$content].toString():"")}}class DateTimeEdit extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"dateTimeEdit",!0),this.hScrollPolicy=(0,_utils.getStringOption)(attributes.hScrollPolicy,["auto","off","on"]),this.id=attributes.id||"",this.picker=(0,_utils.getStringOption)(attributes.picker,["host","none"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.comb=null,this.extras=null,this.margin=null}[_xfa_object.$toHTML](availableSpace){const style=(0,_html_utils.toStyle)(this,"border","font","margin"),field=this[_xfa_object.$getParent]()[_xfa_object.$getParent](),html={name:"input",attributes:{type:"text",fieldId:field[_xfa_object.$uid],dataId:field[_xfa_object.$data]&&field[_xfa_object.$data][_xfa_object.$uid]||field[_xfa_object.$uid],class:["xfaTextfield"],style,"aria-label":ariaLabel(field),"aria-required":!1}};return isRequired(field)&&(html.attributes["aria-required"]=!0,html.attributes.required=!0),_utils.HTMLResult.success({name:"label",attributes:{class:["xfaLabel"]},children:[html]})}}class Decimal extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"decimal"),this.fracDigits=(0,_utils.getInteger)({data:attributes.fracDigits,defaultValue:2,validate:x=>!0}),this.id=attributes.id||"",this.leadDigits=(0,_utils.getInteger)({data:attributes.leadDigits,defaultValue:-1,validate:x=>!0}),this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){const number=parseFloat(this[_xfa_object.$content].trim());this[_xfa_object.$content]=isNaN(number)?null:number}[_xfa_object.$toHTML](availableSpace){return valueToHtml(null!==this[_xfa_object.$content]?this[_xfa_object.$content].toString():"")}}class DefaultUi extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"defaultUi",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}}class Desc extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"desc",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.boolean=new _xfa_object.XFAObjectArray,this.date=new _xfa_object.XFAObjectArray,this.dateTime=new _xfa_object.XFAObjectArray,this.decimal=new _xfa_object.XFAObjectArray,this.exData=new _xfa_object.XFAObjectArray,this.float=new _xfa_object.XFAObjectArray,this.image=new _xfa_object.XFAObjectArray,this.integer=new _xfa_object.XFAObjectArray,this.text=new _xfa_object.XFAObjectArray,this.time=new _xfa_object.XFAObjectArray}}class DigestMethod extends _xfa_object.OptionObject{constructor(attributes){super(TEMPLATE_NS_ID,"digestMethod",["","SHA1","SHA256","SHA512","RIPEMD160"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class DigestMethods extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"digestMethods",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.digestMethod=new _xfa_object.XFAObjectArray}}class Draw extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"draw",!0),this.anchorType=(0,_utils.getStringOption)(attributes.anchorType,["topLeft","bottomCenter","bottomLeft","bottomRight","middleCenter","middleLeft","middleRight","topCenter","topRight"]),this.colSpan=(0,_utils.getInteger)({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||-1===n}),this.h=attributes.h?(0,_utils.getMeasurement)(attributes.h):"",this.hAlign=(0,_utils.getStringOption)(attributes.hAlign,["left","center","justify","justifyAll","radix","right"]),this.id=attributes.id||"",this.locale=attributes.locale||"",this.maxH=(0,_utils.getMeasurement)(attributes.maxH,"0pt"),this.maxW=(0,_utils.getMeasurement)(attributes.maxW,"0pt"),this.minH=(0,_utils.getMeasurement)(attributes.minH,"0pt"),this.minW=(0,_utils.getMeasurement)(attributes.minW,"0pt"),this.name=attributes.name||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.rotate=(0,_utils.getInteger)({data:attributes.rotate,defaultValue:0,validate:x=>x%90==0}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.w=attributes.w?(0,_utils.getMeasurement)(attributes.w):"",this.x=(0,_utils.getMeasurement)(attributes.x,"0pt"),this.y=(0,_utils.getMeasurement)(attributes.y,"0pt"),this.assist=null,this.border=null,this.caption=null,this.desc=null,this.extras=null,this.font=null,this.keep=null,this.margin=null,this.para=null,this.traversal=null,this.ui=null,this.value=null,this.setProperty=new _xfa_object.XFAObjectArray}[_xfa_object.$setValue](value){_setValue(this,value)}[_xfa_object.$toHTML](availableSpace){if(setTabIndex(this),"hidden"===this.presence||"inactive"===this.presence)return _utils.HTMLResult.EMPTY;(0,_html_utils.fixDimensions)(this),this[_xfa_object.$pushPara]();const savedW=this.w,savedH=this.h,{w,h,isBroken}=(0,_html_utils.layoutNode)(this,availableSpace);if(w&&""===this.w){if(isBroken&&this[_xfa_object.$getSubformParent]()[_xfa_object.$isThereMoreWidth]())return this[_xfa_object.$popPara](),_utils.HTMLResult.FAILURE;this.w=w}if(h&&""===this.h&&(this.h=h),setFirstUnsplittable(this),!(0,_layout.checkDimensions)(this,availableSpace))return this.w=savedW,this.h=savedH,this[_xfa_object.$popPara](),_utils.HTMLResult.FAILURE;unsetFirstUnsplittable(this);const style=(0,_html_utils.toStyle)(this,"font","hAlign","dimensions","position","presence","rotate","anchorType","border","margin");(0,_html_utils.setMinMaxDimensions)(this,style),style.margin&&(style.padding=style.margin,delete style.margin);const classNames=["xfaDraw"];this.font&&classNames.push("xfaFont"),(0,_html_utils.isPrintOnly)(this)&&classNames.push("xfaPrintOnly");const attributes={style,id:this[_xfa_object.$uid],class:classNames};this.name&&(attributes.xfaName=this.name);const html={name:"div",attributes,children:[]};applyAssist(this,attributes);const bbox=(0,_html_utils.computeBbox)(this,html,availableSpace),value=this.value?this.value[_xfa_object.$toHTML](availableSpace).html:null;return null===value?(this.w=savedW,this.h=savedH,this[_xfa_object.$popPara](),_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox)):(html.children.push(value),(0,_html_utils.setPara)(this,style,value),this.w=savedW,this.h=savedH,this[_xfa_object.$popPara](),_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox))}}class Edge extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"edge",!0),this.cap=(0,_utils.getStringOption)(attributes.cap,["square","butt","round"]),this.id=attributes.id||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.stroke=(0,_utils.getStringOption)(attributes.stroke,["solid","dashDot","dashDotDot","dashed","dotted","embossed","etched","lowered","raised"]),this.thickness=(0,_utils.getMeasurement)(attributes.thickness,"0.5pt"),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null}[_xfa_object.$toStyle](){const style=(0,_html_utils.toStyle)(this,"visibility");if(Object.assign(style,{linecap:this.cap,width:(0,_html_utils.measureToString)(this.thickness),color:this.color?this.color[_xfa_object.$toStyle]():"#000000",style:""}),"visible"!==this.presence)style.style="none";else switch(this.stroke){case"solid":style.style="solid";break;case"dashDot":case"dashDotDot":case"dashed":style.style="dashed";break;case"dotted":style.style="dotted";break;case"embossed":style.style="ridge";break;case"etched":style.style="groove";break;case"lowered":style.style="inset";break;case"raised":style.style="outset"}return style}}class Encoding extends _xfa_object.OptionObject{constructor(attributes){super(TEMPLATE_NS_ID,"encoding",["adbe.x509.rsa_sha1","adbe.pkcs7.detached","adbe.pkcs7.sha1"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Encodings extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"encodings",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.encoding=new _xfa_object.XFAObjectArray}}class Encrypt extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"encrypt",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.certificate=null}}class EncryptData extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"encryptData",!0),this.id=attributes.id||"",this.operation=(0,_utils.getStringOption)(attributes.operation,["encrypt","decrypt"]),this.target=attributes.target||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.filter=null,this.manifest=null}}class Encryption extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"encryption",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.certificate=new _xfa_object.XFAObjectArray}}class EncryptionMethod extends _xfa_object.OptionObject{constructor(attributes){super(TEMPLATE_NS_ID,"encryptionMethod",["","AES256-CBC","TRIPLEDES-CBC","AES128-CBC","AES192-CBC"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class EncryptionMethods extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"encryptionMethods",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.encryptionMethod=new _xfa_object.XFAObjectArray}}class Event extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"event",!0),this.activity=(0,_utils.getStringOption)(attributes.activity,["click","change","docClose","docReady","enter","exit","full","indexChange","initialize","mouseDown","mouseEnter","mouseExit","mouseUp","postExecute","postOpen","postPrint","postSave","postSign","postSubmit","preExecute","preOpen","prePrint","preSave","preSign","preSubmit","ready","validationState"]),this.id=attributes.id||"",this.listen=(0,_utils.getStringOption)(attributes.listen,["refOnly","refAndDescendents"]),this.name=attributes.name||"",this.ref=attributes.ref||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.encryptData=null,this.execute=null,this.script=null,this.signData=null,this.submit=null}}class ExData extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"exData"),this.contentType=attributes.contentType||"",this.href=attributes.href||"",this.id=attributes.id||"",this.maxLength=(0,_utils.getInteger)({data:attributes.maxLength,defaultValue:-1,validate:x=>x>=-1}),this.name=attributes.name||"",this.rid=attributes.rid||"",this.transferEncoding=(0,_utils.getStringOption)(attributes.transferEncoding,["none","base64","package"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$isCDATAXml](){return"text/html"===this.contentType}[_xfa_object.$onChild](child){return("text/html"===this.contentType&&child[_xfa_object.$namespaceId]===_namespaces.NamespaceIds.xhtml.id||"text/xml"===this.contentType)&&(this[_xfa_object.$content]=child,!0)}[_xfa_object.$toHTML](availableSpace){return"text/html"===this.contentType&&this[_xfa_object.$content]?this[_xfa_object.$content][_xfa_object.$toHTML](availableSpace):_utils.HTMLResult.EMPTY}}class ExObject extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"exObject",!0),this.archive=attributes.archive||"",this.classId=attributes.classId||"",this.codeBase=attributes.codeBase||"",this.codeType=attributes.codeType||"",this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.boolean=new _xfa_object.XFAObjectArray,this.date=new _xfa_object.XFAObjectArray,this.dateTime=new _xfa_object.XFAObjectArray,this.decimal=new _xfa_object.XFAObjectArray,this.exData=new _xfa_object.XFAObjectArray,this.exObject=new _xfa_object.XFAObjectArray,this.float=new _xfa_object.XFAObjectArray,this.image=new _xfa_object.XFAObjectArray,this.integer=new _xfa_object.XFAObjectArray,this.text=new _xfa_object.XFAObjectArray,this.time=new _xfa_object.XFAObjectArray}}class ExclGroup extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"exclGroup",!0),this.access=(0,_utils.getStringOption)(attributes.access,["open","nonInteractive","protected","readOnly"]),this.accessKey=attributes.accessKey||"",this.anchorType=(0,_utils.getStringOption)(attributes.anchorType,["topLeft","bottomCenter","bottomLeft","bottomRight","middleCenter","middleLeft","middleRight","topCenter","topRight"]),this.colSpan=(0,_utils.getInteger)({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||-1===n}),this.h=attributes.h?(0,_utils.getMeasurement)(attributes.h):"",this.hAlign=(0,_utils.getStringOption)(attributes.hAlign,["left","center","justify","justifyAll","radix","right"]),this.id=attributes.id||"",this.layout=(0,_utils.getStringOption)(attributes.layout,["position","lr-tb","rl-row","rl-tb","row","table","tb"]),this.maxH=(0,_utils.getMeasurement)(attributes.maxH,"0pt"),this.maxW=(0,_utils.getMeasurement)(attributes.maxW,"0pt"),this.minH=(0,_utils.getMeasurement)(attributes.minH,"0pt"),this.minW=(0,_utils.getMeasurement)(attributes.minW,"0pt"),this.name=attributes.name||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.w=attributes.w?(0,_utils.getMeasurement)(attributes.w):"",this.x=(0,_utils.getMeasurement)(attributes.x,"0pt"),this.y=(0,_utils.getMeasurement)(attributes.y,"0pt"),this.assist=null,this.bind=null,this.border=null,this.calculate=null,this.caption=null,this.desc=null,this.extras=null,this.margin=null,this.para=null,this.traversal=null,this.validate=null,this.connect=new _xfa_object.XFAObjectArray,this.event=new _xfa_object.XFAObjectArray,this.field=new _xfa_object.XFAObjectArray,this.setProperty=new _xfa_object.XFAObjectArray}[_xfa_object.$isBindable](){return!0}[_xfa_object.$hasSettableValue](){return!0}[_xfa_object.$setValue](value){for(const field of this.field.children){if(!field.value){const nodeValue=new Value({});field[_xfa_object.$appendChild](nodeValue),field.value=nodeValue}field.value[_xfa_object.$setValue](value)}}[_xfa_object.$isThereMoreWidth](){return this.layout.endsWith("-tb")&&0===this[_xfa_object.$extra].attempt&&this[_xfa_object.$extra].numberInLine>0||this[_xfa_object.$getParent]()[_xfa_object.$isThereMoreWidth]()}[_xfa_object.$isSplittable](){const parent=this[_xfa_object.$getSubformParent]();return!!parent[_xfa_object.$isSplittable]()&&(void 0!==this[_xfa_object.$extra]._isSplittable?this[_xfa_object.$extra]._isSplittable:"position"===this.layout||this.layout.includes("row")?(this[_xfa_object.$extra]._isSplittable=!1,!1):(!parent.layout||!parent.layout.endsWith("-tb")||0===parent[_xfa_object.$extra].numberInLine)&&(this[_xfa_object.$extra]._isSplittable=!0,!0))}[_xfa_object.$flushHTML](){return(0,_layout.flushHTML)(this)}[_xfa_object.$addHTML](html,bbox){(0,_layout.addHTML)(this,html,bbox)}[_xfa_object.$getAvailableSpace](){return(0,_layout.getAvailableSpace)(this)}[_xfa_object.$toHTML](availableSpace){if(setTabIndex(this),"hidden"===this.presence||"inactive"===this.presence||0===this.h||0===this.w)return _utils.HTMLResult.EMPTY;(0,_html_utils.fixDimensions)(this);const children=[],attributes={id:this[_xfa_object.$uid],class:[]};(0,_html_utils.setAccess)(this,attributes.class),this[_xfa_object.$extra]||(this[_xfa_object.$extra]=Object.create(null)),Object.assign(this[_xfa_object.$extra],{children,attributes,attempt:0,line:null,numberInLine:0,availableSpace:{width:Math.min(this.w||1/0,availableSpace.width),height:Math.min(this.h||1/0,availableSpace.height)},width:0,height:0,prevHeight:0,currentWidth:0});const isSplittable=this[_xfa_object.$isSplittable]();if(isSplittable||setFirstUnsplittable(this),!(0,_layout.checkDimensions)(this,availableSpace))return _utils.HTMLResult.FAILURE;const filter=new Set(["field"]);if(this.layout.includes("row")){const columnWidths=this[_xfa_object.$getSubformParent]().columnWidths;Array.isArray(columnWidths)&&columnWidths.length>0&&(this[_xfa_object.$extra].columnWidths=columnWidths,this[_xfa_object.$extra].currentColumn=0)}const style=(0,_html_utils.toStyle)(this,"anchorType","dimensions","position","presence","border","margin","hAlign"),classNames=["xfaExclgroup"],cl=(0,_html_utils.layoutClass)(this);cl&&classNames.push(cl),(0,_html_utils.isPrintOnly)(this)&&classNames.push("xfaPrintOnly"),attributes.style=style,attributes.class=classNames,this.name&&(attributes.xfaName=this.name),this[_xfa_object.$pushPara]();const isLrTb="lr-tb"===this.layout||"rl-tb"===this.layout,maxRun=isLrTb?2:1;for(;this[_xfa_object.$extra].attempt<maxRun;this[_xfa_object.$extra].attempt++){isLrTb&&1===this[_xfa_object.$extra].attempt&&(this[_xfa_object.$extra].numberInLine=0);const result=this[_xfa_object.$childrenToHTML]({filter,include:!0});if(result.success)break;if(result.isBreak())return this[_xfa_object.$popPara](),result;if(isLrTb&&0===this[_xfa_object.$extra].attempt&&0===this[_xfa_object.$extra].numberInLine&&!this[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].noLayoutFailure){this[_xfa_object.$extra].attempt=maxRun;break}}if(this[_xfa_object.$popPara](),isSplittable||unsetFirstUnsplittable(this),this[_xfa_object.$extra].attempt===maxRun)return isSplittable||delete this[_xfa_object.$extra],_utils.HTMLResult.FAILURE;let marginH=0,marginV=0;this.margin&&(marginH=this.margin.leftInset+this.margin.rightInset,marginV=this.margin.topInset+this.margin.bottomInset);const width=Math.max(this[_xfa_object.$extra].width+marginH,this.w||0),height=Math.max(this[_xfa_object.$extra].height+marginV,this.h||0),bbox=[this.x,this.y,width,height];""===this.w&&(style.width=(0,_html_utils.measureToString)(width)),""===this.h&&(style.height=(0,_html_utils.measureToString)(height));const html={name:"div",attributes,children};return applyAssist(this,attributes),delete this[_xfa_object.$extra],_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox)}}class Execute extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"execute"),this.connection=attributes.connection||"",this.executeType=(0,_utils.getStringOption)(attributes.executeType,["import","remerge"]),this.id=attributes.id||"",this.runAt=(0,_utils.getStringOption)(attributes.runAt,["client","both","server"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Extras extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"extras",!0),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.boolean=new _xfa_object.XFAObjectArray,this.date=new _xfa_object.XFAObjectArray,this.dateTime=new _xfa_object.XFAObjectArray,this.decimal=new _xfa_object.XFAObjectArray,this.exData=new _xfa_object.XFAObjectArray,this.extras=new _xfa_object.XFAObjectArray,this.float=new _xfa_object.XFAObjectArray,this.image=new _xfa_object.XFAObjectArray,this.integer=new _xfa_object.XFAObjectArray,this.text=new _xfa_object.XFAObjectArray,this.time=new _xfa_object.XFAObjectArray}}class Field extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"field",!0),this.access=(0,_utils.getStringOption)(attributes.access,["open","nonInteractive","protected","readOnly"]),this.accessKey=attributes.accessKey||"",this.anchorType=(0,_utils.getStringOption)(attributes.anchorType,["topLeft","bottomCenter","bottomLeft","bottomRight","middleCenter","middleLeft","middleRight","topCenter","topRight"]),this.colSpan=(0,_utils.getInteger)({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||-1===n}),this.h=attributes.h?(0,_utils.getMeasurement)(attributes.h):"",this.hAlign=(0,_utils.getStringOption)(attributes.hAlign,["left","center","justify","justifyAll","radix","right"]),this.id=attributes.id||"",this.locale=attributes.locale||"",this.maxH=(0,_utils.getMeasurement)(attributes.maxH,"0pt"),this.maxW=(0,_utils.getMeasurement)(attributes.maxW,"0pt"),this.minH=(0,_utils.getMeasurement)(attributes.minH,"0pt"),this.minW=(0,_utils.getMeasurement)(attributes.minW,"0pt"),this.name=attributes.name||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.rotate=(0,_utils.getInteger)({data:attributes.rotate,defaultValue:0,validate:x=>x%90==0}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.w=attributes.w?(0,_utils.getMeasurement)(attributes.w):"",this.x=(0,_utils.getMeasurement)(attributes.x,"0pt"),this.y=(0,_utils.getMeasurement)(attributes.y,"0pt"),this.assist=null,this.bind=null,this.border=null,this.calculate=null,this.caption=null,this.desc=null,this.extras=null,this.font=null,this.format=null,this.items=new _xfa_object.XFAObjectArray(2),this.keep=null,this.margin=null,this.para=null,this.traversal=null,this.ui=null,this.validate=null,this.value=null,this.bindItems=new _xfa_object.XFAObjectArray,this.connect=new _xfa_object.XFAObjectArray,this.event=new _xfa_object.XFAObjectArray,this.setProperty=new _xfa_object.XFAObjectArray}[_xfa_object.$isBindable](){return!0}[_xfa_object.$setValue](value){_setValue(this,value)}[_xfa_object.$toHTML](availableSpace){if(setTabIndex(this),!this.ui){let node;switch(this.ui=new Ui({}),this.ui[_xfa_object.$globalData]=this[_xfa_object.$globalData],this[_xfa_object.$appendChild](this.ui),this.items.children.length){case 0:node=new TextEdit({}),this.ui.textEdit=node;break;case 1:node=new CheckButton({}),this.ui.checkButton=node;break;case 2:node=new ChoiceList({}),this.ui.choiceList=node}this.ui[_xfa_object.$appendChild](node)}if(!this.ui||"hidden"===this.presence||"inactive"===this.presence||0===this.h||0===this.w)return _utils.HTMLResult.EMPTY;this.caption&&delete this.caption[_xfa_object.$extra],this[_xfa_object.$pushPara]();const caption=this.caption?this.caption[_xfa_object.$toHTML](availableSpace).html:null,savedW=this.w,savedH=this.h;let marginH=0,marginV=0;this.margin&&(marginH=this.margin.leftInset+this.margin.rightInset,marginV=this.margin.topInset+this.margin.bottomInset);let borderDims=null;if(""===this.w||""===this.h){let width=null,height=null,uiW=0,uiH=0;if(this.ui.checkButton)uiW=uiH=this.ui.checkButton.size;else{const{w,h}=(0,_html_utils.layoutNode)(this,availableSpace);null!==w?(uiW=w,uiH=h):uiH=(0,_fonts.getMetrics)(this.font,!0).lineNoGap}if(borderDims=getBorderDims(this.ui[_xfa_object.$getExtra]()),uiW+=borderDims.w,uiH+=borderDims.h,this.caption){const{w,h,isBroken}=this.caption[_xfa_object.$getExtra](availableSpace);if(isBroken&&this[_xfa_object.$getSubformParent]()[_xfa_object.$isThereMoreWidth]())return this[_xfa_object.$popPara](),_utils.HTMLResult.FAILURE;switch(width=w,height=h,this.caption.placement){case"left":case"right":case"inline":width+=uiW;break;case"top":case"bottom":height+=uiH}}else width=uiW,height=uiH;width&&""===this.w&&(width+=marginH,this.w=Math.min(this.maxW<=0?1/0:this.maxW,this.minW+1<width?width:this.minW)),height&&""===this.h&&(height+=marginV,this.h=Math.min(this.maxH<=0?1/0:this.maxH,this.minH+1<height?height:this.minH))}if(this[_xfa_object.$popPara](),(0,_html_utils.fixDimensions)(this),setFirstUnsplittable(this),!(0,_layout.checkDimensions)(this,availableSpace))return this.w=savedW,this.h=savedH,this[_xfa_object.$popPara](),_utils.HTMLResult.FAILURE;unsetFirstUnsplittable(this);const style=(0,_html_utils.toStyle)(this,"font","dimensions","position","rotate","anchorType","presence","margin","hAlign");(0,_html_utils.setMinMaxDimensions)(this,style);const classNames=["xfaField"];this.font&&classNames.push("xfaFont"),(0,_html_utils.isPrintOnly)(this)&&classNames.push("xfaPrintOnly");const attributes={style,id:this[_xfa_object.$uid],class:classNames};style.margin&&(style.padding=style.margin,delete style.margin),(0,_html_utils.setAccess)(this,classNames),this.name&&(attributes.xfaName=this.name);const children=[],html={name:"div",attributes,children};applyAssist(this,attributes);const borderStyle=this.border?this.border[_xfa_object.$toStyle]():null,bbox=(0,_html_utils.computeBbox)(this,html,availableSpace),ui=this.ui[_xfa_object.$toHTML]().html;if(!ui)return Object.assign(style,borderStyle),_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox);this[_xfa_object.$tabIndex]&&(ui.children&&ui.children[0]?ui.children[0].attributes.tabindex=this[_xfa_object.$tabIndex]:ui.attributes.tabindex=this[_xfa_object.$tabIndex]),ui.attributes.style||(ui.attributes.style=Object.create(null));let aElement=null;if(this.ui.button?(1===ui.children.length&&([aElement]=ui.children.splice(0,1)),Object.assign(ui.attributes.style,borderStyle)):Object.assign(style,borderStyle),children.push(ui),this.value)if(this.ui.imageEdit)ui.children.push(this.value[_xfa_object.$toHTML]().html);else if(!this.ui.button){let value="";if(this.value.exData)value=this.value.exData[_xfa_object.$text]();else if(this.value.text)value=this.value.text[_xfa_object.$getExtra]();else{const htmlValue=this.value[_xfa_object.$toHTML]().html;null!==htmlValue&&(value=htmlValue.children[0].value)}this.ui.textEdit&&this.value.text&&this.value.text.maxChars&&(ui.children[0].attributes.maxLength=this.value.text.maxChars),value&&(this.ui.numericEdit&&(value=parseFloat(value),value=isNaN(value)?"":value.toString()),"textarea"===ui.children[0].name?ui.children[0].attributes.textContent=value:ui.children[0].attributes.value=value)}if(!this.ui.imageEdit&&ui.children&&ui.children[0]&&this.h){borderDims=borderDims||getBorderDims(this.ui[_xfa_object.$getExtra]());let captionHeight=0;if(this.caption&&["top","bottom"].includes(this.caption.placement)){captionHeight=this.caption.reserve,captionHeight<=0&&(captionHeight=this.caption[_xfa_object.$getExtra](availableSpace).h);const inputHeight=this.h-captionHeight-marginV-borderDims.h;ui.children[0].attributes.style.height=(0,_html_utils.measureToString)(inputHeight)}else ui.children[0].attributes.style.height="100%"}if(aElement&&ui.children.push(aElement),!caption)return ui.attributes.class&&ui.attributes.class.push("xfaLeft"),this.w=savedW,this.h=savedH,_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox);if(this.ui.button)return style.padding&&delete style.padding,"div"===caption.name&&(caption.name="span"),ui.children.push(caption),_utils.HTMLResult.success(html,bbox);switch(this.ui.checkButton&&(caption.attributes.class[0]="xfaCaptionForCheckButton"),ui.attributes.class||(ui.attributes.class=[]),ui.children.splice(0,0,caption),this.caption.placement){case"left":case"inline":ui.attributes.class.push("xfaLeft");break;case"right":ui.attributes.class.push("xfaRight");break;case"top":ui.attributes.class.push("xfaTop");break;case"bottom":ui.attributes.class.push("xfaBottom")}return this.w=savedW,this.h=savedH,_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox)}}exports.Field=Field;class Fill extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"fill",!0),this.id=attributes.id||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null,this.linear=null,this.pattern=null,this.radial=null,this.solid=null,this.stipple=null}[_xfa_object.$toStyle](){const parent=this[_xfa_object.$getParent](),ggrandpa=parent[_xfa_object.$getParent]()[_xfa_object.$getParent](),style=Object.create(null);let propName="color",altPropName=propName;parent instanceof Border&&(propName="background-color",altPropName="background",ggrandpa instanceof Ui&&(style.backgroundColor="white")),(parent instanceof Rectangle||parent instanceof Arc)&&(propName=altPropName="fill",style.fill="white");for(const name of Object.getOwnPropertyNames(this)){if("extras"===name||"color"===name)continue;const obj=this[name];if(!(obj instanceof _xfa_object.XFAObject))continue;const color=obj[_xfa_object.$toStyle](this.color);return color&&(style[color.startsWith("#")?propName:altPropName]=color),style}if(this.color&&this.color.value){const color=this.color[_xfa_object.$toStyle]();style[color.startsWith("#")?propName:altPropName]=color}return style}}class Filter extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"filter",!0),this.addRevocationInfo=(0,_utils.getStringOption)(attributes.addRevocationInfo,["","required","optional","none"]),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.version=(0,_utils.getInteger)({data:this.version,defaultValue:5,validate:x=>x>=1&&x<=5}),this.appearanceFilter=null,this.certificates=null,this.digestMethods=null,this.encodings=null,this.encryptionMethods=null,this.handler=null,this.lockDocument=null,this.mdp=null,this.reasons=null,this.timeStamp=null}}class Float extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"float"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){const number=parseFloat(this[_xfa_object.$content].trim());this[_xfa_object.$content]=isNaN(number)?null:number}[_xfa_object.$toHTML](availableSpace){return valueToHtml(null!==this[_xfa_object.$content]?this[_xfa_object.$content].toString():"")}}class Font extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"font",!0),this.baselineShift=(0,_utils.getMeasurement)(attributes.baselineShift),this.fontHorizontalScale=(0,_utils.getFloat)({data:attributes.fontHorizontalScale,defaultValue:100,validate:x=>x>=0}),this.fontVerticalScale=(0,_utils.getFloat)({data:attributes.fontVerticalScale,defaultValue:100,validate:x=>x>=0}),this.id=attributes.id||"",this.kerningMode=(0,_utils.getStringOption)(attributes.kerningMode,["none","pair"]),this.letterSpacing=(0,_utils.getMeasurement)(attributes.letterSpacing,"0"),this.lineThrough=(0,_utils.getInteger)({data:attributes.lineThrough,defaultValue:0,validate:x=>1===x||2===x}),this.lineThroughPeriod=(0,_utils.getStringOption)(attributes.lineThroughPeriod,["all","word"]),this.overline=(0,_utils.getInteger)({data:attributes.overline,defaultValue:0,validate:x=>1===x||2===x}),this.overlinePeriod=(0,_utils.getStringOption)(attributes.overlinePeriod,["all","word"]),this.posture=(0,_utils.getStringOption)(attributes.posture,["normal","italic"]),this.size=(0,_utils.getMeasurement)(attributes.size,"10pt"),this.typeface=attributes.typeface||"Courier",this.underline=(0,_utils.getInteger)({data:attributes.underline,defaultValue:0,validate:x=>1===x||2===x}),this.underlinePeriod=(0,_utils.getStringOption)(attributes.underlinePeriod,["all","word"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.weight=(0,_utils.getStringOption)(attributes.weight,["normal","bold"]),this.extras=null,this.fill=null}[_xfa_object.$clean](builder){super[_xfa_object.$clean](builder),this[_xfa_object.$globalData].usedTypefaces.add(this.typeface)}[_xfa_object.$toStyle](){const style=(0,_html_utils.toStyle)(this,"fill"),color=style.color;return color&&("#000000"===color?delete style.color:color.startsWith("#")||(style.background=color,style.backgroundClip="text",style.color="transparent")),this.baselineShift&&(style.verticalAlign=(0,_html_utils.measureToString)(this.baselineShift)),style.fontKerning="none"===this.kerningMode?"none":"normal",style.letterSpacing=(0,_html_utils.measureToString)(this.letterSpacing),0!==this.lineThrough&&(style.textDecoration="line-through",2===this.lineThrough&&(style.textDecorationStyle="double")),0!==this.overline&&(style.textDecoration="overline",2===this.overline&&(style.textDecorationStyle="double")),style.fontStyle=this.posture,style.fontSize=(0,_html_utils.measureToString)(.99*this.size),(0,_html_utils.setFontFamily)(this,this,this[_xfa_object.$globalData].fontFinder,style),0!==this.underline&&(style.textDecoration="underline",2===this.underline&&(style.textDecorationStyle="double")),style.fontWeight=this.weight,style}}class Format extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"format",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.picture=null}}class Handler extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"handler"),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Hyphenation extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"hyphenation"),this.excludeAllCaps=(0,_utils.getInteger)({data:attributes.excludeAllCaps,defaultValue:0,validate:x=>1===x}),this.excludeInitialCap=(0,_utils.getInteger)({data:attributes.excludeInitialCap,defaultValue:0,validate:x=>1===x}),this.hyphenate=(0,_utils.getInteger)({data:attributes.hyphenate,defaultValue:0,validate:x=>1===x}),this.id=attributes.id||"",this.pushCharacterCount=(0,_utils.getInteger)({data:attributes.pushCharacterCount,defaultValue:3,validate:x=>x>=0}),this.remainCharacterCount=(0,_utils.getInteger)({data:attributes.remainCharacterCount,defaultValue:3,validate:x=>x>=0}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.wordCharacterCount=(0,_utils.getInteger)({data:attributes.wordCharacterCount,defaultValue:7,validate:x=>x>=0})}}class Image extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"image"),this.aspect=(0,_utils.getStringOption)(attributes.aspect,["fit","actual","height","none","width"]),this.contentType=attributes.contentType||"",this.href=attributes.href||"",this.id=attributes.id||"",this.name=attributes.name||"",this.transferEncoding=(0,_utils.getStringOption)(attributes.transferEncoding,["base64","none","package"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$toHTML](){if(this.contentType&&!MIMES.has(this.contentType.toLowerCase()))return _utils.HTMLResult.EMPTY;let buffer=this[_xfa_object.$globalData].images&&this[_xfa_object.$globalData].images.get(this.href);if(!buffer&&(this.href||!this[_xfa_object.$content]))return _utils.HTMLResult.EMPTY;if(buffer||"base64"!==this.transferEncoding||(buffer=(0,_util.stringToBytes)(atob(this[_xfa_object.$content]))),!buffer)return _utils.HTMLResult.EMPTY;if(!this.contentType){for(const[header,type]of IMAGES_HEADERS)if(buffer.length>header.length&&header.every(((x,i)=>x===buffer[i]))){this.contentType=type;break}if(!this.contentType)return _utils.HTMLResult.EMPTY}const blob=new Blob([buffer],{type:this.contentType});let style;switch(this.aspect){case"fit":case"actual":break;case"height":style={height:"100%",objectFit:"fill"};break;case"none":style={width:"100%",height:"100%",objectFit:"fill"};break;case"width":style={width:"100%",objectFit:"fill"}}const parent=this[_xfa_object.$getParent]();return _utils.HTMLResult.success({name:"img",attributes:{class:["xfaImage"],style,src:URL.createObjectURL(blob),alt:parent?ariaLabel(parent[_xfa_object.$getParent]()):null}})}}class ImageEdit extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"imageEdit",!0),this.data=(0,_utils.getStringOption)(attributes.data,["link","embed"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.extras=null,this.margin=null}[_xfa_object.$toHTML](availableSpace){return"embed"===this.data?_utils.HTMLResult.success({name:"div",children:[],attributes:{}}):_utils.HTMLResult.EMPTY}}class Integer extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"integer"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){const number=parseInt(this[_xfa_object.$content].trim(),10);this[_xfa_object.$content]=isNaN(number)?null:number}[_xfa_object.$toHTML](availableSpace){return valueToHtml(null!==this[_xfa_object.$content]?this[_xfa_object.$content].toString():"")}}class Issuers extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"issuers",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.certificate=new _xfa_object.XFAObjectArray}}class Items extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"items",!0),this.id=attributes.id||"",this.name=attributes.name||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.ref=attributes.ref||"",this.save=(0,_utils.getInteger)({data:attributes.save,defaultValue:0,validate:x=>1===x}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.boolean=new _xfa_object.XFAObjectArray,this.date=new _xfa_object.XFAObjectArray,this.dateTime=new _xfa_object.XFAObjectArray,this.decimal=new _xfa_object.XFAObjectArray,this.exData=new _xfa_object.XFAObjectArray,this.float=new _xfa_object.XFAObjectArray,this.image=new _xfa_object.XFAObjectArray,this.integer=new _xfa_object.XFAObjectArray,this.text=new _xfa_object.XFAObjectArray,this.time=new _xfa_object.XFAObjectArray}[_xfa_object.$toHTML](){const output=[];for(const child of this[_xfa_object.$getChildren]())output.push(child[_xfa_object.$text]());return _utils.HTMLResult.success(output)}}exports.Items=Items;class Keep extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"keep",!0),this.id=attributes.id||"";const options=["none","contentArea","pageArea"];this.intact=(0,_utils.getStringOption)(attributes.intact,options),this.next=(0,_utils.getStringOption)(attributes.next,options),this.previous=(0,_utils.getStringOption)(attributes.previous,options),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}}class KeyUsage extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"keyUsage");const options=["","yes","no"];this.crlSign=(0,_utils.getStringOption)(attributes.crlSign,options),this.dataEncipherment=(0,_utils.getStringOption)(attributes.dataEncipherment,options),this.decipherOnly=(0,_utils.getStringOption)(attributes.decipherOnly,options),this.digitalSignature=(0,_utils.getStringOption)(attributes.digitalSignature,options),this.encipherOnly=(0,_utils.getStringOption)(attributes.encipherOnly,options),this.id=attributes.id||"",this.keyAgreement=(0,_utils.getStringOption)(attributes.keyAgreement,options),this.keyCertSign=(0,_utils.getStringOption)(attributes.keyCertSign,options),this.keyEncipherment=(0,_utils.getStringOption)(attributes.keyEncipherment,options),this.nonRepudiation=(0,_utils.getStringOption)(attributes.nonRepudiation,options),this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Line extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"line",!0),this.hand=(0,_utils.getStringOption)(attributes.hand,["even","left","right"]),this.id=attributes.id||"",this.slope=(0,_utils.getStringOption)(attributes.slope,["\\","/"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.edge=null}[_xfa_object.$toHTML](){const parent=this[_xfa_object.$getParent]()[_xfa_object.$getParent](),edge=this.edge||new Edge({}),edgeStyle=edge[_xfa_object.$toStyle](),style=Object.create(null),thickness="visible"===edge.presence?edge.thickness:0;let x1,y1,x2,y2;style.strokeWidth=(0,_html_utils.measureToString)(thickness),style.stroke=edgeStyle.color;let width="100%",height="100%";parent.w<=thickness?([x1,y1,x2,y2]=["50%",0,"50%","100%"],width=style.strokeWidth):parent.h<=thickness?([x1,y1,x2,y2]=[0,"50%","100%","50%"],height=style.strokeWidth):"\\"===this.slope?[x1,y1,x2,y2]=[0,0,"100%","100%"]:[x1,y1,x2,y2]=[0,"100%","100%",0];const svg={name:"svg",children:[{name:"line",attributes:{xmlns:SVG_NS,x1,y1,x2,y2,style}}],attributes:{xmlns:SVG_NS,width,height,style:{overflow:"visible"}}};return hasMargin(parent)?_utils.HTMLResult.success({name:"div",attributes:{style:{display:"inline",width:"100%",height:"100%"}},children:[svg]}):(svg.attributes.style.position="absolute",_utils.HTMLResult.success(svg))}}class Linear extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"linear",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["toRight","toBottom","toLeft","toTop"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null}[_xfa_object.$toStyle](startColor){startColor=startColor?startColor[_xfa_object.$toStyle]():"#FFFFFF";return`linear-gradient(${this.type.replace(/([RBLT])/," $1").toLowerCase()}, ${startColor}, ${this.color?this.color[_xfa_object.$toStyle]():"#000000"})`}}class LockDocument extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"lockDocument"),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){this[_xfa_object.$content]=(0,_utils.getStringOption)(this[_xfa_object.$content],["auto","0","1"])}}class Manifest extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"manifest",!0),this.action=(0,_utils.getStringOption)(attributes.action,["include","all","exclude"]),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.ref=new _xfa_object.XFAObjectArray}}class Margin extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"margin",!0),this.bottomInset=(0,_utils.getMeasurement)(attributes.bottomInset,"0"),this.id=attributes.id||"",this.leftInset=(0,_utils.getMeasurement)(attributes.leftInset,"0"),this.rightInset=(0,_utils.getMeasurement)(attributes.rightInset,"0"),this.topInset=(0,_utils.getMeasurement)(attributes.topInset,"0"),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}[_xfa_object.$toStyle](){return{margin:(0,_html_utils.measureToString)(this.topInset)+" "+(0,_html_utils.measureToString)(this.rightInset)+" "+(0,_html_utils.measureToString)(this.bottomInset)+" "+(0,_html_utils.measureToString)(this.leftInset)}}}class Mdp extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"mdp"),this.id=attributes.id||"",this.permissions=(0,_utils.getInteger)({data:attributes.permissions,defaultValue:2,validate:x=>1===x||3===x}),this.signatureType=(0,_utils.getStringOption)(attributes.signatureType,["filler","author"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Medium extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"medium"),this.id=attributes.id||"",this.imagingBBox=(0,_utils.getBBox)(attributes.imagingBBox),this.long=(0,_utils.getMeasurement)(attributes.long),this.orientation=(0,_utils.getStringOption)(attributes.orientation,["portrait","landscape"]),this.short=(0,_utils.getMeasurement)(attributes.short),this.stock=attributes.stock||"",this.trayIn=(0,_utils.getStringOption)(attributes.trayIn,["auto","delegate","pageFront"]),this.trayOut=(0,_utils.getStringOption)(attributes.trayOut,["auto","delegate"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Message extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"message",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.text=new _xfa_object.XFAObjectArray}}class NumericEdit extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"numericEdit",!0),this.hScrollPolicy=(0,_utils.getStringOption)(attributes.hScrollPolicy,["auto","off","on"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.comb=null,this.extras=null,this.margin=null}[_xfa_object.$toHTML](availableSpace){const style=(0,_html_utils.toStyle)(this,"border","font","margin"),field=this[_xfa_object.$getParent]()[_xfa_object.$getParent](),html={name:"input",attributes:{type:"text",fieldId:field[_xfa_object.$uid],dataId:field[_xfa_object.$data]&&field[_xfa_object.$data][_xfa_object.$uid]||field[_xfa_object.$uid],class:["xfaTextfield"],style,"aria-label":ariaLabel(field),"aria-required":!1}};return isRequired(field)&&(html.attributes["aria-required"]=!0,html.attributes.required=!0),_utils.HTMLResult.success({name:"label",attributes:{class:["xfaLabel"]},children:[html]})}}class Occur extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"occur",!0),this.id=attributes.id||"",this.initial=""!==attributes.initial?(0,_utils.getInteger)({data:attributes.initial,defaultValue:"",validate:x=>!0}):"",this.max=""!==attributes.max?(0,_utils.getInteger)({data:attributes.max,defaultValue:1,validate:x=>!0}):"",this.min=""!==attributes.min?(0,_utils.getInteger)({data:attributes.min,defaultValue:1,validate:x=>!0}):"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}[_xfa_object.$clean](){const parent=this[_xfa_object.$getParent](),originalMin=this.min;""===this.min&&(this.min=parent instanceof PageArea||parent instanceof PageSet?0:1),""===this.max&&(this.max=""===originalMin?parent instanceof PageArea||parent instanceof PageSet?-1:1:this.min),-1!==this.max&&this.max<this.min&&(this.max=this.min),""===this.initial&&(this.initial=parent instanceof Template?1:this.min)}}class Oid extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"oid"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Oids extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"oids",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.oid=new _xfa_object.XFAObjectArray}}class Overflow extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"overflow"),this.id=attributes.id||"",this.leader=attributes.leader||"",this.target=attributes.target||"",this.trailer=attributes.trailer||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$getExtra](){if(!this[_xfa_object.$extra]){const parent=this[_xfa_object.$getParent](),root=this[_xfa_object.$getTemplateRoot](),target=root[_xfa_object.$searchNode](this.target,parent),leader=root[_xfa_object.$searchNode](this.leader,parent),trailer=root[_xfa_object.$searchNode](this.trailer,parent);this[_xfa_object.$extra]={target:target&&target[0]||null,leader:leader&&leader[0]||null,trailer:trailer&&trailer[0]||null,addLeader:!1,addTrailer:!1}}return this[_xfa_object.$extra]}}class PageArea extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"pageArea",!0),this.blankOrNotBlank=(0,_utils.getStringOption)(attributes.blankOrNotBlank,["any","blank","notBlank"]),this.id=attributes.id||"",this.initialNumber=(0,_utils.getInteger)({data:attributes.initialNumber,defaultValue:1,validate:x=>!0}),this.name=attributes.name||"",this.numbered=(0,_utils.getInteger)({data:attributes.numbered,defaultValue:1,validate:x=>!0}),this.oddOrEven=(0,_utils.getStringOption)(attributes.oddOrEven,["any","even","odd"]),this.pagePosition=(0,_utils.getStringOption)(attributes.pagePosition,["any","first","last","only","rest"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.desc=null,this.extras=null,this.medium=null,this.occur=null,this.area=new _xfa_object.XFAObjectArray,this.contentArea=new _xfa_object.XFAObjectArray,this.draw=new _xfa_object.XFAObjectArray,this.exclGroup=new _xfa_object.XFAObjectArray,this.field=new _xfa_object.XFAObjectArray,this.subform=new _xfa_object.XFAObjectArray}[_xfa_object.$isUsable](){return this[_xfa_object.$extra]?!this.occur||-1===this.occur.max||this[_xfa_object.$extra].numberOfUse<this.occur.max:(this[_xfa_object.$extra]={numberOfUse:0},!0)}[_xfa_object.$cleanPage](){delete this[_xfa_object.$extra]}[_xfa_object.$getNextPage](){this[_xfa_object.$extra]||(this[_xfa_object.$extra]={numberOfUse:0});const parent=this[_xfa_object.$getParent]();return"orderedOccurrence"===parent.relation&&this[_xfa_object.$isUsable]()?(this[_xfa_object.$extra].numberOfUse+=1,this):parent[_xfa_object.$getNextPage]()}[_xfa_object.$getAvailableSpace](){return this[_xfa_object.$extra].space||{width:0,height:0}}[_xfa_object.$toHTML](){this[_xfa_object.$extra]||(this[_xfa_object.$extra]={numberOfUse:1});const children=[];this[_xfa_object.$extra].children=children;const style=Object.create(null);if(this.medium&&this.medium.short&&this.medium.long){if(style.width=(0,_html_utils.measureToString)(this.medium.short),style.height=(0,_html_utils.measureToString)(this.medium.long),this[_xfa_object.$extra].space={width:this.medium.short,height:this.medium.long},"landscape"===this.medium.orientation){const x=style.width;style.width=style.height,style.height=x,this[_xfa_object.$extra].space={width:this.medium.long,height:this.medium.short}}}else(0,_util.warn)("XFA - No medium specified in pageArea: please file a bug.");return this[_xfa_object.$childrenToHTML]({filter:new Set(["area","draw","field","subform"]),include:!0}),this[_xfa_object.$childrenToHTML]({filter:new Set(["contentArea"]),include:!0}),_utils.HTMLResult.success({name:"div",children,attributes:{class:["xfaPage"],id:this[_xfa_object.$uid],style,xfaName:this.name}})}}class PageSet extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"pageSet",!0),this.duplexImposition=(0,_utils.getStringOption)(attributes.duplexImposition,["longEdge","shortEdge"]),this.id=attributes.id||"",this.name=attributes.name||"",this.relation=(0,_utils.getStringOption)(attributes.relation,["orderedOccurrence","duplexPaginated","simplexPaginated"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.occur=null,this.pageArea=new _xfa_object.XFAObjectArray,this.pageSet=new _xfa_object.XFAObjectArray}[_xfa_object.$cleanPage](){for(const page of this.pageArea.children)page[_xfa_object.$cleanPage]();for(const page of this.pageSet.children)page[_xfa_object.$cleanPage]()}[_xfa_object.$isUsable](){return!this.occur||-1===this.occur.max||this[_xfa_object.$extra].numberOfUse<this.occur.max}[_xfa_object.$getNextPage](){if(this[_xfa_object.$extra]||(this[_xfa_object.$extra]={numberOfUse:1,pageIndex:-1,pageSetIndex:-1}),"orderedOccurrence"===this.relation){if(this[_xfa_object.$extra].pageIndex+1<this.pageArea.children.length){this[_xfa_object.$extra].pageIndex+=1;return this.pageArea.children[this[_xfa_object.$extra].pageIndex][_xfa_object.$getNextPage]()}if(this[_xfa_object.$extra].pageSetIndex+1<this.pageSet.children.length)return this[_xfa_object.$extra].pageSetIndex+=1,this.pageSet.children[this[_xfa_object.$extra].pageSetIndex][_xfa_object.$getNextPage]();if(this[_xfa_object.$isUsable]())return this[_xfa_object.$extra].numberOfUse+=1,this[_xfa_object.$extra].pageIndex=-1,this[_xfa_object.$extra].pageSetIndex=-1,this[_xfa_object.$getNextPage]();const parent=this[_xfa_object.$getParent]();return parent instanceof PageSet?parent[_xfa_object.$getNextPage]():(this[_xfa_object.$cleanPage](),this[_xfa_object.$getNextPage]())}const pageNumber=this[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].pageNumber,parity=pageNumber%2==0?"even":"odd",position=0===pageNumber?"first":"rest";let page=this.pageArea.children.find((p=>p.oddOrEven===parity&&p.pagePosition===position));return page||(page=this.pageArea.children.find((p=>"any"===p.oddOrEven&&p.pagePosition===position)),page||(page=this.pageArea.children.find((p=>"any"===p.oddOrEven&&"any"===p.pagePosition)),page||this.pageArea.children[0]))}}class Para extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"para",!0),this.hAlign=(0,_utils.getStringOption)(attributes.hAlign,["left","center","justify","justifyAll","radix","right"]),this.id=attributes.id||"",this.lineHeight=attributes.lineHeight?(0,_utils.getMeasurement)(attributes.lineHeight,"0pt"):"",this.marginLeft=attributes.marginLeft?(0,_utils.getMeasurement)(attributes.marginLeft,"0pt"):"",this.marginRight=attributes.marginRight?(0,_utils.getMeasurement)(attributes.marginRight,"0pt"):"",this.orphans=(0,_utils.getInteger)({data:attributes.orphans,defaultValue:0,validate:x=>x>=0}),this.preserve=attributes.preserve||"",this.radixOffset=attributes.radixOffset?(0,_utils.getMeasurement)(attributes.radixOffset,"0pt"):"",this.spaceAbove=attributes.spaceAbove?(0,_utils.getMeasurement)(attributes.spaceAbove,"0pt"):"",this.spaceBelow=attributes.spaceBelow?(0,_utils.getMeasurement)(attributes.spaceBelow,"0pt"):"",this.tabDefault=attributes.tabDefault?(0,_utils.getMeasurement)(this.tabDefault):"",this.tabStops=(attributes.tabStops||"").trim().split(/\s+/).map(((x,i)=>i%2==1?(0,_utils.getMeasurement)(x):x)),this.textIndent=attributes.textIndent?(0,_utils.getMeasurement)(attributes.textIndent,"0pt"):"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.vAlign=(0,_utils.getStringOption)(attributes.vAlign,["top","bottom","middle"]),this.widows=(0,_utils.getInteger)({data:attributes.widows,defaultValue:0,validate:x=>x>=0}),this.hyphenation=null}[_xfa_object.$toStyle](){const style=(0,_html_utils.toStyle)(this,"hAlign");return""!==this.marginLeft&&(style.paddingLeft=(0,_html_utils.measureToString)(this.marginLeft)),""!==this.marginRight&&(style.paddingight=(0,_html_utils.measureToString)(this.marginRight)),""!==this.spaceAbove&&(style.paddingTop=(0,_html_utils.measureToString)(this.spaceAbove)),""!==this.spaceBelow&&(style.paddingBottom=(0,_html_utils.measureToString)(this.spaceBelow)),""!==this.textIndent&&(style.textIndent=(0,_html_utils.measureToString)(this.textIndent),(0,_html_utils.fixTextIndent)(style)),this.lineHeight>0&&(style.lineHeight=(0,_html_utils.measureToString)(this.lineHeight)),""!==this.tabDefault&&(style.tabSize=(0,_html_utils.measureToString)(this.tabDefault)),this.tabStops.length,this.hyphenatation&&Object.assign(style,this.hyphenatation[_xfa_object.$toStyle]()),style}}class PasswordEdit extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"passwordEdit",!0),this.hScrollPolicy=(0,_utils.getStringOption)(attributes.hScrollPolicy,["auto","off","on"]),this.id=attributes.id||"",this.passwordChar=attributes.passwordChar||"*",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.extras=null,this.margin=null}}class Pattern extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"pattern",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["crossHatch","crossDiagonal","diagonalLeft","diagonalRight","horizontal","vertical"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null}[_xfa_object.$toStyle](startColor){startColor=startColor?startColor[_xfa_object.$toStyle]():"#FFFFFF";const endColor=this.color?this.color[_xfa_object.$toStyle]():"#000000",cmd="repeating-linear-gradient",colors=`${startColor},${startColor} 5px,${endColor} 5px,${endColor} 10px`;switch(this.type){case"crossHatch":return`${cmd}(to top,${colors}) ${cmd}(to right,${colors})`;case"crossDiagonal":return`${cmd}(45deg,${colors}) ${cmd}(-45deg,${colors})`;case"diagonalLeft":return`${cmd}(45deg,${colors})`;case"diagonalRight":return`${cmd}(-45deg,${colors})`;case"horizontal":return`${cmd}(to top,${colors})`;case"vertical":return`${cmd}(to right,${colors})`}return""}}class Picture extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"picture"),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Proto extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"proto",!0),this.appearanceFilter=new _xfa_object.XFAObjectArray,this.arc=new _xfa_object.XFAObjectArray,this.area=new _xfa_object.XFAObjectArray,this.assist=new _xfa_object.XFAObjectArray,this.barcode=new _xfa_object.XFAObjectArray,this.bindItems=new _xfa_object.XFAObjectArray,this.bookend=new _xfa_object.XFAObjectArray,this.boolean=new _xfa_object.XFAObjectArray,this.border=new _xfa_object.XFAObjectArray,this.break=new _xfa_object.XFAObjectArray,this.breakAfter=new _xfa_object.XFAObjectArray,this.breakBefore=new _xfa_object.XFAObjectArray,this.button=new _xfa_object.XFAObjectArray,this.calculate=new _xfa_object.XFAObjectArray,this.caption=new _xfa_object.XFAObjectArray,this.certificate=new _xfa_object.XFAObjectArray,this.certificates=new _xfa_object.XFAObjectArray,this.checkButton=new _xfa_object.XFAObjectArray,this.choiceList=new _xfa_object.XFAObjectArray,this.color=new _xfa_object.XFAObjectArray,this.comb=new _xfa_object.XFAObjectArray,this.connect=new _xfa_object.XFAObjectArray,this.contentArea=new _xfa_object.XFAObjectArray,this.corner=new _xfa_object.XFAObjectArray,this.date=new _xfa_object.XFAObjectArray,this.dateTime=new _xfa_object.XFAObjectArray,this.dateTimeEdit=new _xfa_object.XFAObjectArray,this.decimal=new _xfa_object.XFAObjectArray,this.defaultUi=new _xfa_object.XFAObjectArray,this.desc=new _xfa_object.XFAObjectArray,this.digestMethod=new _xfa_object.XFAObjectArray,this.digestMethods=new _xfa_object.XFAObjectArray,this.draw=new _xfa_object.XFAObjectArray,this.edge=new _xfa_object.XFAObjectArray,this.encoding=new _xfa_object.XFAObjectArray,this.encodings=new _xfa_object.XFAObjectArray,this.encrypt=new _xfa_object.XFAObjectArray,this.encryptData=new _xfa_object.XFAObjectArray,this.encryption=new _xfa_object.XFAObjectArray,this.encryptionMethod=new _xfa_object.XFAObjectArray,this.encryptionMethods=new _xfa_object.XFAObjectArray,this.event=new _xfa_object.XFAObjectArray,this.exData=new _xfa_object.XFAObjectArray,this.exObject=new _xfa_object.XFAObjectArray,this.exclGroup=new _xfa_object.XFAObjectArray,this.execute=new _xfa_object.XFAObjectArray,this.extras=new _xfa_object.XFAObjectArray,this.field=new _xfa_object.XFAObjectArray,this.fill=new _xfa_object.XFAObjectArray,this.filter=new _xfa_object.XFAObjectArray,this.float=new _xfa_object.XFAObjectArray,this.font=new _xfa_object.XFAObjectArray,this.format=new _xfa_object.XFAObjectArray,this.handler=new _xfa_object.XFAObjectArray,this.hyphenation=new _xfa_object.XFAObjectArray,this.image=new _xfa_object.XFAObjectArray,this.imageEdit=new _xfa_object.XFAObjectArray,this.integer=new _xfa_object.XFAObjectArray,this.issuers=new _xfa_object.XFAObjectArray,this.items=new _xfa_object.XFAObjectArray,this.keep=new _xfa_object.XFAObjectArray,this.keyUsage=new _xfa_object.XFAObjectArray,this.line=new _xfa_object.XFAObjectArray,this.linear=new _xfa_object.XFAObjectArray,this.lockDocument=new _xfa_object.XFAObjectArray,this.manifest=new _xfa_object.XFAObjectArray,this.margin=new _xfa_object.XFAObjectArray,this.mdp=new _xfa_object.XFAObjectArray,this.medium=new _xfa_object.XFAObjectArray,this.message=new _xfa_object.XFAObjectArray,this.numericEdit=new _xfa_object.XFAObjectArray,this.occur=new _xfa_object.XFAObjectArray,this.oid=new _xfa_object.XFAObjectArray,this.oids=new _xfa_object.XFAObjectArray,this.overflow=new _xfa_object.XFAObjectArray,this.pageArea=new _xfa_object.XFAObjectArray,this.pageSet=new _xfa_object.XFAObjectArray,this.para=new _xfa_object.XFAObjectArray,this.passwordEdit=new _xfa_object.XFAObjectArray,this.pattern=new _xfa_object.XFAObjectArray,this.picture=new _xfa_object.XFAObjectArray,this.radial=new _xfa_object.XFAObjectArray,this.reason=new _xfa_object.XFAObjectArray,this.reasons=new _xfa_object.XFAObjectArray,this.rectangle=new _xfa_object.XFAObjectArray,this.ref=new _xfa_object.XFAObjectArray,this.script=new _xfa_object.XFAObjectArray,this.setProperty=new _xfa_object.XFAObjectArray,this.signData=new _xfa_object.XFAObjectArray,this.signature=new _xfa_object.XFAObjectArray,this.signing=new _xfa_object.XFAObjectArray,this.solid=new _xfa_object.XFAObjectArray,this.speak=new _xfa_object.XFAObjectArray,this.stipple=new _xfa_object.XFAObjectArray,this.subform=new _xfa_object.XFAObjectArray,this.subformSet=new _xfa_object.XFAObjectArray,this.subjectDN=new _xfa_object.XFAObjectArray,this.subjectDNs=new _xfa_object.XFAObjectArray,this.submit=new _xfa_object.XFAObjectArray,this.text=new _xfa_object.XFAObjectArray,this.textEdit=new _xfa_object.XFAObjectArray,this.time=new _xfa_object.XFAObjectArray,this.timeStamp=new _xfa_object.XFAObjectArray,this.toolTip=new _xfa_object.XFAObjectArray,this.traversal=new _xfa_object.XFAObjectArray,this.traverse=new _xfa_object.XFAObjectArray,this.ui=new _xfa_object.XFAObjectArray,this.validate=new _xfa_object.XFAObjectArray,this.value=new _xfa_object.XFAObjectArray,this.variables=new _xfa_object.XFAObjectArray}}class Radial extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"radial",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["toEdge","toCenter"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null}[_xfa_object.$toStyle](startColor){startColor=startColor?startColor[_xfa_object.$toStyle]():"#FFFFFF";const endColor=this.color?this.color[_xfa_object.$toStyle]():"#000000";return`radial-gradient(circle at center, ${"toEdge"===this.type?`${startColor},${endColor}`:`${endColor},${startColor}`})`}}class Reason extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"reason"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Reasons extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"reasons",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.reason=new _xfa_object.XFAObjectArray}}class Rectangle extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"rectangle",!0),this.hand=(0,_utils.getStringOption)(attributes.hand,["even","left","right"]),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.corner=new _xfa_object.XFAObjectArray(4),this.edge=new _xfa_object.XFAObjectArray(4),this.fill=null}[_xfa_object.$toHTML](){const edge=this.edge.children.length?this.edge.children[0]:new Edge({}),edgeStyle=edge[_xfa_object.$toStyle](),style=Object.create(null);this.fill&&"visible"===this.fill.presence?Object.assign(style,this.fill[_xfa_object.$toStyle]()):style.fill="transparent",style.strokeWidth=(0,_html_utils.measureToString)("visible"===edge.presence?edge.thickness:0),style.stroke=edgeStyle.color;const cornerStyle=(this.corner.children.length?this.corner.children[0]:new Corner({}))[_xfa_object.$toStyle](),svg={name:"svg",children:[{name:"rect",attributes:{xmlns:SVG_NS,width:"100%",height:"100%",x:0,y:0,rx:cornerStyle.radius,ry:cornerStyle.radius,style}}],attributes:{xmlns:SVG_NS,style:{overflow:"visible"},width:"100%",height:"100%"}};return hasMargin(this[_xfa_object.$getParent]()[_xfa_object.$getParent]())?_utils.HTMLResult.success({name:"div",attributes:{style:{display:"inline",width:"100%",height:"100%"}},children:[svg]}):(svg.attributes.style.position="absolute",_utils.HTMLResult.success(svg))}}class RefElement extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"ref"),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Script extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"script"),this.binding=attributes.binding||"",this.contentType=attributes.contentType||"",this.id=attributes.id||"",this.name=attributes.name||"",this.runAt=(0,_utils.getStringOption)(attributes.runAt,["client","both","server"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class SetProperty extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"setProperty"),this.connection=attributes.connection||"",this.ref=attributes.ref||"",this.target=attributes.target||""}}exports.SetProperty=SetProperty;class SignData extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"signData",!0),this.id=attributes.id||"",this.operation=(0,_utils.getStringOption)(attributes.operation,["sign","clear","verify"]),this.ref=attributes.ref||"",this.target=attributes.target||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.filter=null,this.manifest=null}}class Signature extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"signature",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["PDF1.3","PDF1.6"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.border=null,this.extras=null,this.filter=null,this.manifest=null,this.margin=null}}class Signing extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"signing",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.certificate=new _xfa_object.XFAObjectArray}}class Solid extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"solid",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null}[_xfa_object.$toStyle](startColor){return startColor?startColor[_xfa_object.$toStyle]():"#FFFFFF"}}class Speak extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"speak"),this.disable=(0,_utils.getInteger)({data:attributes.disable,defaultValue:0,validate:x=>1===x}),this.id=attributes.id||"",this.priority=(0,_utils.getStringOption)(attributes.priority,["custom","caption","name","toolTip"]),this.rid=attributes.rid||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Stipple extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"stipple",!0),this.id=attributes.id||"",this.rate=(0,_utils.getInteger)({data:attributes.rate,defaultValue:50,validate:x=>x>=0&&x<=100}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.color=null,this.extras=null}[_xfa_object.$toStyle](bgColor){const alpha=this.rate/100;return _util.Util.makeHexColor(Math.round(bgColor.value.r*(1-alpha)+this.value.r*alpha),Math.round(bgColor.value.g*(1-alpha)+this.value.g*alpha),Math.round(bgColor.value.b*(1-alpha)+this.value.b*alpha))}}class Subform extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"subform",!0),this.access=(0,_utils.getStringOption)(attributes.access,["open","nonInteractive","protected","readOnly"]),this.allowMacro=(0,_utils.getInteger)({data:attributes.allowMacro,defaultValue:0,validate:x=>1===x}),this.anchorType=(0,_utils.getStringOption)(attributes.anchorType,["topLeft","bottomCenter","bottomLeft","bottomRight","middleCenter","middleLeft","middleRight","topCenter","topRight"]),this.colSpan=(0,_utils.getInteger)({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||-1===n}),this.columnWidths=(attributes.columnWidths||"").trim().split(/\s+/).map((x=>"-1"===x?-1:(0,_utils.getMeasurement)(x))),this.h=attributes.h?(0,_utils.getMeasurement)(attributes.h):"",this.hAlign=(0,_utils.getStringOption)(attributes.hAlign,["left","center","justify","justifyAll","radix","right"]),this.id=attributes.id||"",this.layout=(0,_utils.getStringOption)(attributes.layout,["position","lr-tb","rl-row","rl-tb","row","table","tb"]),this.locale=attributes.locale||"",this.maxH=(0,_utils.getMeasurement)(attributes.maxH,"0pt"),this.maxW=(0,_utils.getMeasurement)(attributes.maxW,"0pt"),this.mergeMode=(0,_utils.getStringOption)(attributes.mergeMode,["consumeData","matchTemplate"]),this.minH=(0,_utils.getMeasurement)(attributes.minH,"0pt"),this.minW=(0,_utils.getMeasurement)(attributes.minW,"0pt"),this.name=attributes.name||"",this.presence=(0,_utils.getStringOption)(attributes.presence,["visible","hidden","inactive","invisible"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.restoreState=(0,_utils.getStringOption)(attributes.restoreState,["manual","auto"]),this.scope=(0,_utils.getStringOption)(attributes.scope,["name","none"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.w=attributes.w?(0,_utils.getMeasurement)(attributes.w):"",this.x=(0,_utils.getMeasurement)(attributes.x,"0pt"),this.y=(0,_utils.getMeasurement)(attributes.y,"0pt"),this.assist=null,this.bind=null,this.bookend=null,this.border=null,this.break=null,this.calculate=null,this.desc=null,this.extras=null,this.keep=null,this.margin=null,this.occur=null,this.overflow=null,this.pageSet=null,this.para=null,this.traversal=null,this.validate=null,this.variables=null,this.area=new _xfa_object.XFAObjectArray,this.breakAfter=new _xfa_object.XFAObjectArray,this.breakBefore=new _xfa_object.XFAObjectArray,this.connect=new _xfa_object.XFAObjectArray,this.draw=new _xfa_object.XFAObjectArray,this.event=new _xfa_object.XFAObjectArray,this.exObject=new _xfa_object.XFAObjectArray,this.exclGroup=new _xfa_object.XFAObjectArray,this.field=new _xfa_object.XFAObjectArray,this.proto=new _xfa_object.XFAObjectArray,this.setProperty=new _xfa_object.XFAObjectArray,this.subform=new _xfa_object.XFAObjectArray,this.subformSet=new _xfa_object.XFAObjectArray}[_xfa_object.$getSubformParent](){const parent=this[_xfa_object.$getParent]();return parent instanceof SubformSet?parent[_xfa_object.$getSubformParent]():parent}[_xfa_object.$isBindable](){return!0}[_xfa_object.$isThereMoreWidth](){return this.layout.endsWith("-tb")&&0===this[_xfa_object.$extra].attempt&&this[_xfa_object.$extra].numberInLine>0||this[_xfa_object.$getParent]()[_xfa_object.$isThereMoreWidth]()}*[_xfa_object.$getContainedChildren](){yield*getContainedChildren(this)}[_xfa_object.$flushHTML](){return(0,_layout.flushHTML)(this)}[_xfa_object.$addHTML](html,bbox){(0,_layout.addHTML)(this,html,bbox)}[_xfa_object.$getAvailableSpace](){return(0,_layout.getAvailableSpace)(this)}[_xfa_object.$isSplittable](){const parent=this[_xfa_object.$getSubformParent]();return!!parent[_xfa_object.$isSplittable]()&&(void 0!==this[_xfa_object.$extra]._isSplittable?this[_xfa_object.$extra]._isSplittable:"position"===this.layout||this.layout.includes("row")||this.keep&&"none"!==this.keep.intact?(this[_xfa_object.$extra]._isSplittable=!1,!1):(!parent.layout||!parent.layout.endsWith("-tb")||0===parent[_xfa_object.$extra].numberInLine)&&(this[_xfa_object.$extra]._isSplittable=!0,!0))}[_xfa_object.$toHTML](availableSpace){if(setTabIndex(this),this.break){if("auto"!==this.break.after||""!==this.break.afterTarget){const node=new BreakAfter({targetType:this.break.after,target:this.break.afterTarget,startNew:this.break.startNew.toString()});node[_xfa_object.$globalData]=this[_xfa_object.$globalData],this[_xfa_object.$appendChild](node),this.breakAfter.push(node)}if("auto"!==this.break.before||""!==this.break.beforeTarget){const node=new BreakBefore({targetType:this.break.before,target:this.break.beforeTarget,startNew:this.break.startNew.toString()});node[_xfa_object.$globalData]=this[_xfa_object.$globalData],this[_xfa_object.$appendChild](node),this.breakBefore.push(node)}if(""!==this.break.overflowTarget){const node=new Overflow({target:this.break.overflowTarget,leader:this.break.overflowLeader,trailer:this.break.overflowTrailer});node[_xfa_object.$globalData]=this[_xfa_object.$globalData],this[_xfa_object.$appendChild](node),this.overflow.push(node)}this[_xfa_object.$removeChild](this.break),this.break=null}if("hidden"===this.presence||"inactive"===this.presence)return _utils.HTMLResult.EMPTY;if((this.breakBefore.children.length>1||this.breakAfter.children.length>1)&&(0,_util.warn)("XFA - Several breakBefore or breakAfter in subforms: please file a bug."),this.breakBefore.children.length>=1){const breakBefore=this.breakBefore.children[0];if(handleBreak(breakBefore))return _utils.HTMLResult.breakNode(breakBefore)}if(this[_xfa_object.$extra]&&this[_xfa_object.$extra].afterBreakAfter)return _utils.HTMLResult.EMPTY;(0,_html_utils.fixDimensions)(this);const children=[],attributes={id:this[_xfa_object.$uid],class:[]};(0,_html_utils.setAccess)(this,attributes.class),this[_xfa_object.$extra]||(this[_xfa_object.$extra]=Object.create(null)),Object.assign(this[_xfa_object.$extra],{children,line:null,attributes,attempt:0,numberInLine:0,availableSpace:{width:Math.min(this.w||1/0,availableSpace.width),height:Math.min(this.h||1/0,availableSpace.height)},width:0,height:0,prevHeight:0,currentWidth:0});const root=this[_xfa_object.$getTemplateRoot](),savedNoLayoutFailure=root[_xfa_object.$extra].noLayoutFailure,isSplittable=this[_xfa_object.$isSplittable]();if(isSplittable||setFirstUnsplittable(this),!(0,_layout.checkDimensions)(this,availableSpace))return _utils.HTMLResult.FAILURE;const filter=new Set(["area","draw","exclGroup","field","subform","subformSet"]);if(this.layout.includes("row")){const columnWidths=this[_xfa_object.$getSubformParent]().columnWidths;Array.isArray(columnWidths)&&columnWidths.length>0&&(this[_xfa_object.$extra].columnWidths=columnWidths,this[_xfa_object.$extra].currentColumn=0)}const style=(0,_html_utils.toStyle)(this,"anchorType","dimensions","position","presence","border","margin","hAlign"),classNames=["xfaSubform"],cl=(0,_html_utils.layoutClass)(this);if(cl&&classNames.push(cl),attributes.style=style,attributes.class=classNames,this.name&&(attributes.xfaName=this.name),this.overflow){const overflowExtra=this.overflow[_xfa_object.$getExtra]();overflowExtra.addLeader&&(overflowExtra.addLeader=!1,handleOverflow(this,overflowExtra.leader,availableSpace))}this[_xfa_object.$pushPara]();const isLrTb="lr-tb"===this.layout||"rl-tb"===this.layout,maxRun=isLrTb?2:1;for(;this[_xfa_object.$extra].attempt<maxRun;this[_xfa_object.$extra].attempt++){isLrTb&&1===this[_xfa_object.$extra].attempt&&(this[_xfa_object.$extra].numberInLine=0);const result=this[_xfa_object.$childrenToHTML]({filter,include:!0});if(result.success)break;if(result.isBreak())return this[_xfa_object.$popPara](),result;if(isLrTb&&0===this[_xfa_object.$extra].attempt&&0===this[_xfa_object.$extra].numberInLine&&!root[_xfa_object.$extra].noLayoutFailure){this[_xfa_object.$extra].attempt=maxRun;break}}if(this[_xfa_object.$popPara](),isSplittable||unsetFirstUnsplittable(this),root[_xfa_object.$extra].noLayoutFailure=savedNoLayoutFailure,this[_xfa_object.$extra].attempt===maxRun)return this.overflow&&(this[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].overflowNode=this.overflow),isSplittable||delete this[_xfa_object.$extra],_utils.HTMLResult.FAILURE;if(this.overflow){const overflowExtra=this.overflow[_xfa_object.$getExtra]();overflowExtra.addTrailer&&(overflowExtra.addTrailer=!1,handleOverflow(this,overflowExtra.trailer,availableSpace))}let marginH=0,marginV=0;this.margin&&(marginH=this.margin.leftInset+this.margin.rightInset,marginV=this.margin.topInset+this.margin.bottomInset);const width=Math.max(this[_xfa_object.$extra].width+marginH,this.w||0),height=Math.max(this[_xfa_object.$extra].height+marginV,this.h||0),bbox=[this.x,this.y,width,height];if(""===this.w&&(style.width=(0,_html_utils.measureToString)(width)),""===this.h&&(style.height=(0,_html_utils.measureToString)(height)),("0px"===style.width||"0px"===style.height)&&0===children.length)return _utils.HTMLResult.EMPTY;const html={name:"div",attributes,children};applyAssist(this,attributes);const result=_utils.HTMLResult.success((0,_html_utils.createWrapper)(this,html),bbox);if(this.breakAfter.children.length>=1){const breakAfter=this.breakAfter.children[0];if(handleBreak(breakAfter))return this[_xfa_object.$extra].afterBreakAfter=result,_utils.HTMLResult.breakNode(breakAfter)}return delete this[_xfa_object.$extra],result}}class SubformSet extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"subformSet",!0),this.id=attributes.id||"",this.name=attributes.name||"",this.relation=(0,_utils.getStringOption)(attributes.relation,["ordered","choice","unordered"]),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.bookend=null,this.break=null,this.desc=null,this.extras=null,this.occur=null,this.overflow=null,this.breakAfter=new _xfa_object.XFAObjectArray,this.breakBefore=new _xfa_object.XFAObjectArray,this.subform=new _xfa_object.XFAObjectArray,this.subformSet=new _xfa_object.XFAObjectArray}*[_xfa_object.$getContainedChildren](){yield*getContainedChildren(this)}[_xfa_object.$getSubformParent](){let parent=this[_xfa_object.$getParent]();for(;!(parent instanceof Subform);)parent=parent[_xfa_object.$getParent]();return parent}[_xfa_object.$isBindable](){return!0}}class SubjectDN extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"subjectDN"),this.delimiter=attributes.delimiter||",",this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){this[_xfa_object.$content]=new Map(this[_xfa_object.$content].split(this.delimiter).map((kv=>((kv=kv.split("=",2))[0]=kv[0].trim(),kv))))}}class SubjectDNs extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"subjectDNs",!0),this.id=attributes.id||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.subjectDN=new _xfa_object.XFAObjectArray}}class Submit extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"submit",!0),this.embedPDF=(0,_utils.getInteger)({data:attributes.embedPDF,defaultValue:0,validate:x=>1===x}),this.format=(0,_utils.getStringOption)(attributes.format,["xdp","formdata","pdf","urlencoded","xfd","xml"]),this.id=attributes.id||"",this.target=attributes.target||"",this.textEncoding=(0,_utils.getKeyword)({data:attributes.textEncoding?attributes.textEncoding.toLowerCase():"",defaultValue:"",validate:k=>["utf-8","big-five","fontspecific","gbk","gb-18030","gb-2312","ksc-5601","none","shift-jis","ucs-2","utf-16"].includes(k)||k.match(/iso-8859-\d{2}/)}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.xdpContent=attributes.xdpContent||"",this.encrypt=null,this.encryptData=new _xfa_object.XFAObjectArray,this.signData=new _xfa_object.XFAObjectArray}}class Template extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"template",!0),this.baseProfile=(0,_utils.getStringOption)(attributes.baseProfile,["full","interactiveForms"]),this.extras=null,this.subform=new _xfa_object.XFAObjectArray}[_xfa_object.$finalize](){0===this.subform.children.length&&(0,_util.warn)("XFA - No subforms in template node."),this.subform.children.length>=2&&(0,_util.warn)("XFA - Several subforms in template node: please file a bug."),this[_xfa_object.$tabIndex]=5e3}[_xfa_object.$isSplittable](){return!0}[_xfa_object.$searchNode](expr,container){return expr.startsWith("#")?[this[_xfa_object.$ids].get(expr.slice(1))]:(0,_som.searchNode)(this,container,expr,!0,!0)}*[_xfa_object.$toPages](){if(!this.subform.children.length)return _utils.HTMLResult.success({name:"div",children:[]});this[_xfa_object.$extra]={overflowNode:null,firstUnsplittable:null,currentContentArea:null,currentPageArea:null,noLayoutFailure:!1,pageNumber:1,pagePosition:"first",oddOrEven:"odd",blankOrNotBlank:"nonBlank",paraStack:[]};const root=this.subform.children[0];root.pageSet[_xfa_object.$cleanPage]();const pageAreas=root.pageSet.pageArea.children,mainHtml={name:"div",children:[]};let pageArea=null,breakBefore=null,breakBeforeTarget=null;if(root.breakBefore.children.length>=1?(breakBefore=root.breakBefore.children[0],breakBeforeTarget=breakBefore.target):root.subform.children.length>=1&&root.subform.children[0].breakBefore.children.length>=1?(breakBefore=root.subform.children[0].breakBefore.children[0],breakBeforeTarget=breakBefore.target):root.break&&root.break.beforeTarget?(breakBefore=root.break,breakBeforeTarget=breakBefore.beforeTarget):root.subform.children.length>=1&&root.subform.children[0].break&&root.subform.children[0].break.beforeTarget&&(breakBefore=root.subform.children[0].break,breakBeforeTarget=breakBefore.beforeTarget),breakBefore){const target=this[_xfa_object.$searchNode](breakBeforeTarget,breakBefore[_xfa_object.$getParent]());target instanceof PageArea&&(pageArea=target,breakBefore[_xfa_object.$extra]={})}pageArea||(pageArea=pageAreas[0]),pageArea[_xfa_object.$extra]={numberOfUse:1};const pageAreaParent=pageArea[_xfa_object.$getParent]();let targetPageArea;pageAreaParent[_xfa_object.$extra]={numberOfUse:1,pageIndex:pageAreaParent.pageArea.children.indexOf(pageArea),pageSetIndex:0};let leader=null,trailer=null,hasSomething=!0,hasSomethingCounter=0,startIndex=0;for(;;){if(hasSomething)hasSomethingCounter=0;else if(mainHtml.children.pop(),3==++hasSomethingCounter)return(0,_util.warn)("XFA - Something goes wrong: please file a bug."),mainHtml;targetPageArea=null,this[_xfa_object.$extra].currentPageArea=pageArea;const page=pageArea[_xfa_object.$toHTML]().html;mainHtml.children.push(page),leader&&(this[_xfa_object.$extra].noLayoutFailure=!0,page.children.push(leader[_xfa_object.$toHTML](pageArea[_xfa_object.$extra].space).html),leader=null),trailer&&(this[_xfa_object.$extra].noLayoutFailure=!0,page.children.push(trailer[_xfa_object.$toHTML](pageArea[_xfa_object.$extra].space).html),trailer=null);const contentAreas=pageArea.contentArea.children,htmlContentAreas=page.children.filter((node=>node.attributes.class.includes("xfaContentarea")));hasSomething=!1,this[_xfa_object.$extra].firstUnsplittable=null,this[_xfa_object.$extra].noLayoutFailure=!1;const flush=index=>{const html=root[_xfa_object.$flushHTML]();html&&(hasSomething=hasSomething||html.children&&0!==html.children.length,htmlContentAreas[index].children.push(html))};for(let i=startIndex,ii=contentAreas.length;i<ii;i++){const contentArea=this[_xfa_object.$extra].currentContentArea=contentAreas[i],space={width:contentArea.w,height:contentArea.h};startIndex=0,leader&&(htmlContentAreas[i].children.push(leader[_xfa_object.$toHTML](space).html),leader=null),trailer&&(htmlContentAreas[i].children.push(trailer[_xfa_object.$toHTML](space).html),trailer=null);const html=root[_xfa_object.$toHTML](space);if(html.success)return html.html?(hasSomething=hasSomething||html.html.children&&0!==html.html.children.length,htmlContentAreas[i].children.push(html.html)):!hasSomething&&mainHtml.children.length>1&&mainHtml.children.pop(),mainHtml;if(html.isBreak()){const node=html.breakNode;if(flush(i),"auto"===node.targetType)continue;node.leader&&(leader=this[_xfa_object.$searchNode](node.leader,node[_xfa_object.$getParent]()),leader=leader?leader[0]:null),node.trailer&&(trailer=this[_xfa_object.$searchNode](node.trailer,node[_xfa_object.$getParent]()),trailer=trailer?trailer[0]:null),"pageArea"===node.targetType?(targetPageArea=node[_xfa_object.$extra].target,i=1/0):node[_xfa_object.$extra].target?(targetPageArea=node[_xfa_object.$extra].target,startIndex=node[_xfa_object.$extra].index+1,i=1/0):i=node[_xfa_object.$extra].index}else if(this[_xfa_object.$extra].overflowNode){const node=this[_xfa_object.$extra].overflowNode;this[_xfa_object.$extra].overflowNode=null;const overflowExtra=node[_xfa_object.$getExtra](),target=overflowExtra.target;overflowExtra.addLeader=null!==overflowExtra.leader,overflowExtra.addTrailer=null!==overflowExtra.trailer,flush(i);const currentIndex=i;if(i=1/0,target instanceof PageArea)targetPageArea=target;else if(target instanceof ContentArea){const index=contentAreas.indexOf(target);-1!==index?index>currentIndex?i=index-1:startIndex=index:(targetPageArea=target[_xfa_object.$getParent](),startIndex=targetPageArea.contentArea.children.indexOf(target))}}else flush(i)}this[_xfa_object.$extra].pageNumber+=1,targetPageArea&&(targetPageArea[_xfa_object.$isUsable]()?targetPageArea[_xfa_object.$extra].numberOfUse+=1:targetPageArea=null),pageArea=targetPageArea||pageArea[_xfa_object.$getNextPage](),yield null}}}exports.Template=Template;class Text extends _xfa_object.ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,"text"),this.id=attributes.id||"",this.maxChars=(0,_utils.getInteger)({data:attributes.maxChars,defaultValue:0,validate:x=>x>=0}),this.name=attributes.name||"",this.rid=attributes.rid||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$acceptWhitespace](){return!0}[_xfa_object.$onChild](child){return child[_xfa_object.$namespaceId]===_namespaces.NamespaceIds.xhtml.id?(this[_xfa_object.$content]=child,!0):((0,_util.warn)(`XFA - Invalid content in Text: ${child[_xfa_object.$nodeName]}.`),!1)}[_xfa_object.$onText](str){this[_xfa_object.$content]instanceof _xfa_object.XFAObject||super[_xfa_object.$onText](str)}[_xfa_object.$finalize](){"string"==typeof this[_xfa_object.$content]&&(this[_xfa_object.$content]=this[_xfa_object.$content].replace(/\r\n/g,"\n"))}[_xfa_object.$getExtra](){return"string"==typeof this[_xfa_object.$content]?this[_xfa_object.$content].split(/[\u2029\u2028\n]/).reduce(((acc,line)=>(line&&acc.push(line),acc)),[]).join("\n"):this[_xfa_object.$content][_xfa_object.$text]()}[_xfa_object.$toHTML](availableSpace){if("string"==typeof this[_xfa_object.$content]){const html=valueToHtml(this[_xfa_object.$content]).html;return this[_xfa_object.$content].includes("\u2029")?(html.name="div",html.children=[],this[_xfa_object.$content].split("\u2029").map((para=>para.split(/[\u2028\n]/).reduce(((acc,line)=>(acc.push({name:"span",value:line},{name:"br"}),acc)),[]))).forEach((lines=>{html.children.push({name:"p",children:lines})}))):/[\u2028\n]/.test(this[_xfa_object.$content])&&(html.name="div",html.children=[],this[_xfa_object.$content].split(/[\u2028\n]/).forEach((line=>{html.children.push({name:"span",value:line},{name:"br"})}))),_utils.HTMLResult.success(html)}return this[_xfa_object.$content][_xfa_object.$toHTML](availableSpace)}}exports.Text=Text;class TextEdit extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"textEdit",!0),this.allowRichText=(0,_utils.getInteger)({data:attributes.allowRichText,defaultValue:0,validate:x=>1===x}),this.hScrollPolicy=(0,_utils.getStringOption)(attributes.hScrollPolicy,["auto","off","on"]),this.id=attributes.id||"",this.multiLine=(0,_utils.getInteger)({data:attributes.multiLine,defaultValue:"",validate:x=>0===x||1===x}),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.vScrollPolicy=(0,_utils.getStringOption)(attributes.vScrollPolicy,["auto","off","on"]),this.border=null,this.comb=null,this.extras=null,this.margin=null}[_xfa_object.$toHTML](availableSpace){const style=(0,_html_utils.toStyle)(this,"border","font","margin");let html;const field=this[_xfa_object.$getParent]()[_xfa_object.$getParent]();return""===this.multiLine&&(this.multiLine=field instanceof Draw?1:0),html=1===this.multiLine?{name:"textarea",attributes:{dataId:field[_xfa_object.$data]&&field[_xfa_object.$data][_xfa_object.$uid]||field[_xfa_object.$uid],fieldId:field[_xfa_object.$uid],class:["xfaTextfield"],style,"aria-label":ariaLabel(field),"aria-required":!1}}:{name:"input",attributes:{type:"text",dataId:field[_xfa_object.$data]&&field[_xfa_object.$data][_xfa_object.$uid]||field[_xfa_object.$uid],fieldId:field[_xfa_object.$uid],class:["xfaTextfield"],style,"aria-label":ariaLabel(field),"aria-required":!1}},isRequired(field)&&(html.attributes["aria-required"]=!0,html.attributes.required=!0),_utils.HTMLResult.success({name:"label",attributes:{class:["xfaLabel"]},children:[html]})}}class Time extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"time"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}[_xfa_object.$finalize](){const date=this[_xfa_object.$content].trim();this[_xfa_object.$content]=date?new Date(date):null}[_xfa_object.$toHTML](availableSpace){return valueToHtml(this[_xfa_object.$content]?this[_xfa_object.$content].toString():"")}}class TimeStamp extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"timeStamp"),this.id=attributes.id||"",this.server=attributes.server||"",this.type=(0,_utils.getStringOption)(attributes.type,["optional","required"]),this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class ToolTip extends _xfa_object.StringObject{constructor(attributes){super(TEMPLATE_NS_ID,"toolTip"),this.id=attributes.id||"",this.rid=attributes.rid||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Traversal extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"traversal",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.traverse=new _xfa_object.XFAObjectArray}}class Traverse extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"traverse",!0),this.id=attributes.id||"",this.operation=(0,_utils.getStringOption)(attributes.operation,["next","back","down","first","left","right","up"]),this.ref=attributes.ref||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.script=null}get name(){return this.operation}[_xfa_object.$isTransparent](){return!1}}class Ui extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"ui",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.picture=null,this.barcode=null,this.button=null,this.checkButton=null,this.choiceList=null,this.dateTimeEdit=null,this.defaultUi=null,this.imageEdit=null,this.numericEdit=null,this.passwordEdit=null,this.signature=null,this.textEdit=null}[_xfa_object.$getExtra](){if(void 0===this[_xfa_object.$extra]){for(const name of Object.getOwnPropertyNames(this)){if("extras"===name||"picture"===name)continue;const obj=this[name];if(obj instanceof _xfa_object.XFAObject)return this[_xfa_object.$extra]=obj,obj}this[_xfa_object.$extra]=null}return this[_xfa_object.$extra]}[_xfa_object.$toHTML](availableSpace){const obj=this[_xfa_object.$getExtra]();return obj?obj[_xfa_object.$toHTML](availableSpace):_utils.HTMLResult.EMPTY}}class Validate extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"validate",!0),this.formatTest=(0,_utils.getStringOption)(attributes.formatTest,["warning","disabled","error"]),this.id=attributes.id||"",this.nullTest=(0,_utils.getStringOption)(attributes.nullTest,["disabled","error","warning"]),this.scriptTest=(0,_utils.getStringOption)(attributes.scriptTest,["error","disabled","warning"]),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.extras=null,this.message=null,this.picture=null,this.script=null}}class Value extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"value",!0),this.id=attributes.id||"",this.override=(0,_utils.getInteger)({data:attributes.override,defaultValue:0,validate:x=>1===x}),this.relevant=(0,_utils.getRelevant)(attributes.relevant),this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.arc=null,this.boolean=null,this.date=null,this.dateTime=null,this.decimal=null,this.exData=null,this.float=null,this.image=null,this.integer=null,this.line=null,this.rectangle=null,this.text=null,this.time=null}[_xfa_object.$setValue](value){const parent=this[_xfa_object.$getParent]();if(parent instanceof Field&&parent.ui&&parent.ui.imageEdit)return this.image||(this.image=new Image({}),this[_xfa_object.$appendChild](this.image)),void(this.image[_xfa_object.$content]=value[_xfa_object.$content]);const valueName=value[_xfa_object.$nodeName];if(null===this[valueName]){for(const name of Object.getOwnPropertyNames(this)){const obj=this[name];obj instanceof _xfa_object.XFAObject&&(this[name]=null,this[_xfa_object.$removeChild](obj))}this[value[_xfa_object.$nodeName]]=value,this[_xfa_object.$appendChild](value)}else this[valueName][_xfa_object.$content]=value[_xfa_object.$content]}[_xfa_object.$text](){if(this.exData)return"string"==typeof this.exData[_xfa_object.$content]?this.exData[_xfa_object.$content].trim():this.exData[_xfa_object.$content][_xfa_object.$text]().trim();for(const name of Object.getOwnPropertyNames(this)){if("image"===name)continue;const obj=this[name];if(obj instanceof _xfa_object.XFAObject)return(obj[_xfa_object.$content]||"").toString().trim()}return null}[_xfa_object.$toHTML](availableSpace){for(const name of Object.getOwnPropertyNames(this)){const obj=this[name];if(obj instanceof _xfa_object.XFAObject)return obj[_xfa_object.$toHTML](availableSpace)}return _utils.HTMLResult.EMPTY}}exports.Value=Value;class Variables extends _xfa_object.XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,"variables",!0),this.id=attributes.id||"",this.use=attributes.use||"",this.usehref=attributes.usehref||"",this.boolean=new _xfa_object.XFAObjectArray,this.date=new _xfa_object.XFAObjectArray,this.dateTime=new _xfa_object.XFAObjectArray,this.decimal=new _xfa_object.XFAObjectArray,this.exData=new _xfa_object.XFAObjectArray,this.float=new _xfa_object.XFAObjectArray,this.image=new _xfa_object.XFAObjectArray,this.integer=new _xfa_object.XFAObjectArray,this.manifest=new _xfa_object.XFAObjectArray,this.script=new _xfa_object.XFAObjectArray,this.text=new _xfa_object.XFAObjectArray,this.time=new _xfa_object.XFAObjectArray}[_xfa_object.$isTransparent](){return!0}}class TemplateNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(TemplateNamespace.hasOwnProperty(name)){const node=TemplateNamespace[name](attributes);return node[_xfa_object.$setSetAttributes](attributes),node}}static appearanceFilter(attrs){return new AppearanceFilter(attrs)}static arc(attrs){return new Arc(attrs)}static area(attrs){return new Area(attrs)}static assist(attrs){return new Assist(attrs)}static barcode(attrs){return new Barcode(attrs)}static bind(attrs){return new Bind(attrs)}static bindItems(attrs){return new BindItems(attrs)}static bookend(attrs){return new Bookend(attrs)}static boolean(attrs){return new BooleanElement(attrs)}static border(attrs){return new Border(attrs)}static break(attrs){return new Break(attrs)}static breakAfter(attrs){return new BreakAfter(attrs)}static breakBefore(attrs){return new BreakBefore(attrs)}static button(attrs){return new Button(attrs)}static calculate(attrs){return new Calculate(attrs)}static caption(attrs){return new Caption(attrs)}static certificate(attrs){return new Certificate(attrs)}static certificates(attrs){return new Certificates(attrs)}static checkButton(attrs){return new CheckButton(attrs)}static choiceList(attrs){return new ChoiceList(attrs)}static color(attrs){return new Color(attrs)}static comb(attrs){return new Comb(attrs)}static connect(attrs){return new Connect(attrs)}static contentArea(attrs){return new ContentArea(attrs)}static corner(attrs){return new Corner(attrs)}static date(attrs){return new DateElement(attrs)}static dateTime(attrs){return new DateTime(attrs)}static dateTimeEdit(attrs){return new DateTimeEdit(attrs)}static decimal(attrs){return new Decimal(attrs)}static defaultUi(attrs){return new DefaultUi(attrs)}static desc(attrs){return new Desc(attrs)}static digestMethod(attrs){return new DigestMethod(attrs)}static digestMethods(attrs){return new DigestMethods(attrs)}static draw(attrs){return new Draw(attrs)}static edge(attrs){return new Edge(attrs)}static encoding(attrs){return new Encoding(attrs)}static encodings(attrs){return new Encodings(attrs)}static encrypt(attrs){return new Encrypt(attrs)}static encryptData(attrs){return new EncryptData(attrs)}static encryption(attrs){return new Encryption(attrs)}static encryptionMethod(attrs){return new EncryptionMethod(attrs)}static encryptionMethods(attrs){return new EncryptionMethods(attrs)}static event(attrs){return new Event(attrs)}static exData(attrs){return new ExData(attrs)}static exObject(attrs){return new ExObject(attrs)}static exclGroup(attrs){return new ExclGroup(attrs)}static execute(attrs){return new Execute(attrs)}static extras(attrs){return new Extras(attrs)}static field(attrs){return new Field(attrs)}static fill(attrs){return new Fill(attrs)}static filter(attrs){return new Filter(attrs)}static float(attrs){return new Float(attrs)}static font(attrs){return new Font(attrs)}static format(attrs){return new Format(attrs)}static handler(attrs){return new Handler(attrs)}static hyphenation(attrs){return new Hyphenation(attrs)}static image(attrs){return new Image(attrs)}static imageEdit(attrs){return new ImageEdit(attrs)}static integer(attrs){return new Integer(attrs)}static issuers(attrs){return new Issuers(attrs)}static items(attrs){return new Items(attrs)}static keep(attrs){return new Keep(attrs)}static keyUsage(attrs){return new KeyUsage(attrs)}static line(attrs){return new Line(attrs)}static linear(attrs){return new Linear(attrs)}static lockDocument(attrs){return new LockDocument(attrs)}static manifest(attrs){return new Manifest(attrs)}static margin(attrs){return new Margin(attrs)}static mdp(attrs){return new Mdp(attrs)}static medium(attrs){return new Medium(attrs)}static message(attrs){return new Message(attrs)}static numericEdit(attrs){return new NumericEdit(attrs)}static occur(attrs){return new Occur(attrs)}static oid(attrs){return new Oid(attrs)}static oids(attrs){return new Oids(attrs)}static overflow(attrs){return new Overflow(attrs)}static pageArea(attrs){return new PageArea(attrs)}static pageSet(attrs){return new PageSet(attrs)}static para(attrs){return new Para(attrs)}static passwordEdit(attrs){return new PasswordEdit(attrs)}static pattern(attrs){return new Pattern(attrs)}static picture(attrs){return new Picture(attrs)}static proto(attrs){return new Proto(attrs)}static radial(attrs){return new Radial(attrs)}static reason(attrs){return new Reason(attrs)}static reasons(attrs){return new Reasons(attrs)}static rectangle(attrs){return new Rectangle(attrs)}static ref(attrs){return new RefElement(attrs)}static script(attrs){return new Script(attrs)}static setProperty(attrs){return new SetProperty(attrs)}static signData(attrs){return new SignData(attrs)}static signature(attrs){return new Signature(attrs)}static signing(attrs){return new Signing(attrs)}static solid(attrs){return new Solid(attrs)}static speak(attrs){return new Speak(attrs)}static stipple(attrs){return new Stipple(attrs)}static subform(attrs){return new Subform(attrs)}static subformSet(attrs){return new SubformSet(attrs)}static subjectDN(attrs){return new SubjectDN(attrs)}static subjectDNs(attrs){return new SubjectDNs(attrs)}static submit(attrs){return new Submit(attrs)}static template(attrs){return new Template(attrs)}static text(attrs){return new Text(attrs)}static textEdit(attrs){return new TextEdit(attrs)}static time(attrs){return new Time(attrs)}static timeStamp(attrs){return new TimeStamp(attrs)}static toolTip(attrs){return new ToolTip(attrs)}static traversal(attrs){return new Traversal(attrs)}static traverse(attrs){return new Traverse(attrs)}static ui(attrs){return new Ui(attrs)}static validate(attrs){return new Validate(attrs)}static value(attrs){return new Value(attrs)}static variables(attrs){return new Variables(attrs)}}exports.TemplateNamespace=TemplateNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.addHTML=function addHTML(node,html,bbox){const extra=node[_xfa_object.$extra],availableSpace=extra.availableSpace,[x,y,w,h]=bbox;switch(node.layout){case"position":extra.width=Math.max(extra.width,x+w),extra.height=Math.max(extra.height,y+h),extra.children.push(html);break;case"lr-tb":case"rl-tb":extra.line&&1!==extra.attempt||(extra.line=createLine(node,[]),extra.children.push(extra.line),extra.numberInLine=0),extra.numberInLine+=1,extra.line.children.push(html),0===extra.attempt?(extra.currentWidth+=w,extra.height=Math.max(extra.height,extra.prevHeight+h)):(extra.currentWidth=w,extra.prevHeight=extra.height,extra.height+=h,extra.attempt=0),extra.width=Math.max(extra.width,extra.currentWidth);break;case"rl-row":case"row":{extra.children.push(html),extra.width+=w,extra.height=Math.max(extra.height,h);const height=(0,_html_utils.measureToString)(extra.height);for(const child of extra.children)child.attributes.style.height=height;break}case"table":case"tb":extra.width=Math.min(availableSpace.width,Math.max(extra.width,w)),extra.height+=h,extra.children.push(html)}},exports.checkDimensions=function checkDimensions(node,space){if(null===node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].firstUnsplittable)return!0;if(0===node.w||0===node.h)return!0;const parent=node[_xfa_object.$getSubformParent](),attempt=parent[_xfa_object.$extra]&&parent[_xfa_object.$extra].attempt||0,[,y,w,h]=function getTransformedBBox(node){let x,y,w=""===node.w?NaN:node.w,h=""===node.h?NaN:node.h,[centerX,centerY]=[0,0];switch(node.anchorType||""){case"bottomCenter":[centerX,centerY]=[w/2,h];break;case"bottomLeft":[centerX,centerY]=[0,h];break;case"bottomRight":[centerX,centerY]=[w,h];break;case"middleCenter":[centerX,centerY]=[w/2,h/2];break;case"middleLeft":[centerX,centerY]=[0,h/2];break;case"middleRight":[centerX,centerY]=[w,h/2];break;case"topCenter":[centerX,centerY]=[w/2,0];break;case"topRight":[centerX,centerY]=[w,0]}switch(node.rotate||0){case 0:[x,y]=[-centerX,-centerY];break;case 90:[x,y]=[-centerY,centerX],[w,h]=[h,-w];break;case 180:[x,y]=[centerX,centerY],[w,h]=[-w,-h];break;case 270:[x,y]=[centerY,-centerX],[w,h]=[-h,w]}return[node.x+x+Math.min(0,w),node.y+y+Math.min(0,h),Math.abs(w),Math.abs(h)]}(node);switch(parent.layout){case"lr-tb":case"rl-tb":return 0===attempt?node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].noLayoutFailure?""!==node.w?Math.round(w-space.width)<=2:space.width>2:!(""!==node.h&&Math.round(h-space.height)>2)&&(""!==node.w?Math.round(w-space.width)<=2||0===parent[_xfa_object.$extra].numberInLine&&space.height>2:space.width>2):!!node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].noLayoutFailure||!(""!==node.h&&Math.round(h-space.height)>2)&&((""===node.w||Math.round(w-space.width)<=2||!parent[_xfa_object.$isThereMoreWidth]())&&space.height>2);case"table":case"tb":return!!node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].noLayoutFailure||(""===node.h||node[_xfa_object.$isSplittable]()?(""===node.w||Math.round(w-space.width)<=2||!parent[_xfa_object.$isThereMoreWidth]())&&space.height>2:Math.round(h-space.height)<=2);case"position":if(node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].noLayoutFailure)return!0;if(""===node.h||Math.round(h+y-space.height)<=2)return!0;const area=node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].currentContentArea;return h+y>area.h;case"rl-row":case"row":return!!node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].noLayoutFailure||(""===node.h||Math.round(h-space.height)<=2);default:return!0}},exports.flushHTML=function flushHTML(node){if(!node[_xfa_object.$extra])return null;const html={name:"div",attributes:node[_xfa_object.$extra].attributes,children:node[_xfa_object.$extra].children};if(node[_xfa_object.$extra].failingNode){const htmlFromFailing=node[_xfa_object.$extra].failingNode[_xfa_object.$flushHTML]();htmlFromFailing&&(node.layout.endsWith("-tb")?html.children.push(createLine(node,[htmlFromFailing])):html.children.push(htmlFromFailing))}if(0===html.children.length)return null;return html},exports.getAvailableSpace=function getAvailableSpace(node){const availableSpace=node[_xfa_object.$extra].availableSpace,marginV=node.margin?node.margin.topInset+node.margin.bottomInset:0,marginH=node.margin?node.margin.leftInset+node.margin.rightInset:0;switch(node.layout){case"lr-tb":case"rl-tb":return 0===node[_xfa_object.$extra].attempt?{width:availableSpace.width-marginH-node[_xfa_object.$extra].currentWidth,height:availableSpace.height-marginV-node[_xfa_object.$extra].prevHeight}:{width:availableSpace.width-marginH,height:availableSpace.height-marginV-node[_xfa_object.$extra].height};case"rl-row":case"row":return{width:node[_xfa_object.$extra].columnWidths.slice(node[_xfa_object.$extra].currentColumn).reduce(((a,x)=>a+x)),height:availableSpace.height-marginH};case"table":case"tb":return{width:availableSpace.width-marginH,height:availableSpace.height-marginV-node[_xfa_object.$extra].height};default:return availableSpace}};var _xfa_object=__w_pdfjs_require__(77),_html_utils=__w_pdfjs_require__(84);function createLine(node,children){return{name:"div",attributes:{class:["lr-tb"===node.layout?"xfaLr":"xfaRl"]},children}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.computeBbox=function computeBbox(node,html,availableSpace){let bbox;if(""!==node.w&&""!==node.h)bbox=[node.x,node.y,node.w,node.h];else{if(!availableSpace)return null;let width=node.w;if(""===width){if(0===node.maxW){const parent=node[_xfa_object.$getSubformParent]();width="position"===parent.layout&&""!==parent.w?0:node.minW}else width=Math.min(node.maxW,availableSpace.width);html.attributes.style.width=measureToString(width)}let height=node.h;if(""===height){if(0===node.maxH){const parent=node[_xfa_object.$getSubformParent]();height="position"===parent.layout&&""!==parent.h?0:node.minH}else height=Math.min(node.maxH,availableSpace.height);html.attributes.style.height=measureToString(height)}bbox=[node.x,node.y,width,height]}return bbox},exports.createWrapper=function createWrapper(node,html){const{attributes}=html,{style}=attributes,wrapper={name:"div",attributes:{class:["xfaWrapper"],style:Object.create(null)},children:[]};if(attributes.class.push("xfaWrapped"),node.border){const{widths,insets}=node.border[_xfa_object.$extra];let width,height,top=insets[0],left=insets[3];const insetsH=insets[0]+insets[2],insetsW=insets[1]+insets[3];switch(node.border.hand){case"even":top-=widths[0]/2,left-=widths[3]/2,width=`calc(100% + ${(widths[1]+widths[3])/2-insetsW}px)`,height=`calc(100% + ${(widths[0]+widths[2])/2-insetsH}px)`;break;case"left":top-=widths[0],left-=widths[3],width=`calc(100% + ${widths[1]+widths[3]-insetsW}px)`,height=`calc(100% + ${widths[0]+widths[2]-insetsH}px)`;break;case"right":width=insetsW?`calc(100% - ${insetsW}px)`:"100%",height=insetsH?`calc(100% - ${insetsH}px)`:"100%"}const classNames=["xfaBorder"];isPrintOnly(node.border)&&classNames.push("xfaPrintOnly");const border={name:"div",attributes:{class:classNames,style:{top:`${top}px`,left:`${left}px`,width,height}},children:[]};for(const key of["border","borderWidth","borderColor","borderRadius","borderStyle"])void 0!==style[key]&&(border.attributes.style[key]=style[key],delete style[key]);wrapper.children.push(border,html)}else wrapper.children.push(html);for(const key of["background","backgroundClip","top","left","width","height","minWidth","minHeight","maxWidth","maxHeight","transform","transformOrigin","visibility"])void 0!==style[key]&&(wrapper.attributes.style[key]=style[key],delete style[key]);"absolute"===style.position?wrapper.attributes.style.position="absolute":wrapper.attributes.style.position="relative";delete style.position,style.alignSelf&&(wrapper.attributes.style.alignSelf=style.alignSelf,delete style.alignSelf);return wrapper},exports.fixDimensions=function fixDimensions(node){const parent=node[_xfa_object.$getSubformParent]();if(parent.layout&&parent.layout.includes("row")){const extra=parent[_xfa_object.$extra],colSpan=node.colSpan;let width;width=-1===colSpan?extra.columnWidths.slice(extra.currentColumn).reduce(((a,w)=>a+w),0):extra.columnWidths.slice(extra.currentColumn,extra.currentColumn+colSpan).reduce(((a,w)=>a+w),0),isNaN(width)||(node.w=width)}parent.layout&&"position"!==parent.layout&&(node.x=node.y=0);"table"===node.layout&&""===node.w&&Array.isArray(node.columnWidths)&&(node.w=node.columnWidths.reduce(((a,x)=>a+x),0))},exports.fixTextIndent=function fixTextIndent(styles){const indent=(0,_utils.getMeasurement)(styles.textIndent,"0px");if(indent>=0)return;const name="padding"+("left"==("right"===styles.textAlign?"right":"left")?"Left":"Right"),padding=(0,_utils.getMeasurement)(styles[name],"0px");styles[name]=padding-indent+"px"},exports.fixURL=function fixURL(str){const absoluteUrl=(0,_util.createValidAbsoluteUrl)(str,null,{addDefaultProtocol:!0,tryConvertEncoding:!0});return absoluteUrl?absoluteUrl.href:null},exports.isPrintOnly=isPrintOnly,exports.layoutClass=function layoutClass(node){switch(node.layout){case"position":default:return"xfaPosition";case"lr-tb":return"xfaLrTb";case"rl-row":return"xfaRlRow";case"rl-tb":return"xfaRlTb";case"row":return"xfaRow";case"table":return"xfaTable";case"tb":return"xfaTb"}},exports.layoutNode=function layoutNode(node,availableSpace){let height=null,width=null,isBroken=!1;if((!node.w||!node.h)&&node.value){let marginH=0,marginV=0;node.margin&&(marginH=node.margin.leftInset+node.margin.rightInset,marginV=node.margin.topInset+node.margin.bottomInset);let lineHeight=null,margin=null;node.para&&(margin=Object.create(null),lineHeight=""===node.para.lineHeight?null:node.para.lineHeight,margin.top=""===node.para.spaceAbove?0:node.para.spaceAbove,margin.bottom=""===node.para.spaceBelow?0:node.para.spaceBelow,margin.left=""===node.para.marginLeft?0:node.para.marginLeft,margin.right=""===node.para.marginRight?0:node.para.marginRight);let font=node.font;if(!font){const root=node[_xfa_object.$getTemplateRoot]();let parent=node[_xfa_object.$getParent]();for(;parent&&parent!==root;){if(parent.font){font=parent.font;break}parent=parent[_xfa_object.$getParent]()}}const maxWidth=(node.w||availableSpace.width)-marginH,fontFinder=node[_xfa_object.$globalData].fontFinder;if(node.value.exData&&node.value.exData[_xfa_object.$content]&&"text/html"===node.value.exData.contentType){const res=layoutText(node.value.exData[_xfa_object.$content],font,margin,lineHeight,fontFinder,maxWidth);width=res.width,height=res.height,isBroken=res.isBroken}else{const text=node.value[_xfa_object.$text]();if(text){const res=layoutText(text,font,margin,lineHeight,fontFinder,maxWidth);width=res.width,height=res.height,isBroken=res.isBroken}}null===width||node.w||(width+=marginH),null===height||node.h||(height+=marginV)}return{w:width,h:height,isBroken}},exports.measureToString=measureToString,exports.setAccess=function setAccess(node,classNames){switch(node.access){case"nonInteractive":classNames.push("xfaNonInteractive");break;case"readOnly":classNames.push("xfaReadOnly");break;case"protected":classNames.push("xfaDisabled")}},exports.setFontFamily=function setFontFamily(xfaFont,node,fontFinder,style){if(!fontFinder)return void delete style.fontFamily;const name=(0,_utils.stripQuotes)(xfaFont.typeface);style.fontFamily=`"${name}"`;const typeface=fontFinder.find(name);if(typeface){const{fontFamily}=typeface.regular.cssFontInfo;fontFamily!==name&&(style.fontFamily=`"${fontFamily}"`);const para=getCurrentPara(node);if(para&&""!==para.lineHeight)return;if(style.lineHeight)return;const pdfFont=(0,_fonts.selectFont)(xfaFont,typeface);pdfFont&&(style.lineHeight=Math.max(1.2,pdfFont.lineHeight))}},exports.setMinMaxDimensions=function setMinMaxDimensions(node,style){"position"===node[_xfa_object.$getSubformParent]().layout&&(node.minW>0&&(style.minWidth=measureToString(node.minW)),node.maxW>0&&(style.maxWidth=measureToString(node.maxW)),node.minH>0&&(style.minHeight=measureToString(node.minH)),node.maxH>0&&(style.maxHeight=measureToString(node.maxH)))},exports.setPara=function setPara(node,nodeStyle,value){if(value.attributes.class&&value.attributes.class.includes("xfaRich")){nodeStyle&&(""===node.h&&(nodeStyle.height="auto"),""===node.w&&(nodeStyle.width="auto"));const para=getCurrentPara(node);if(para){const valueStyle=value.attributes.style;switch(valueStyle.display="flex",valueStyle.flexDirection="column",para.vAlign){case"top":valueStyle.justifyContent="start";break;case"bottom":valueStyle.justifyContent="end";break;case"middle":valueStyle.justifyContent="center"}const paraStyle=para[_xfa_object.$toStyle]();for(const[key,val]of Object.entries(paraStyle))key in valueStyle||(valueStyle[key]=val)}}},exports.toStyle=function toStyle(node,...names){const style=Object.create(null);for(const name of names){const value=node[name];if(null!==value)if(converters.hasOwnProperty(name))converters[name](node,style);else if(value instanceof _xfa_object.XFAObject){const newStyle=value[_xfa_object.$toStyle]();newStyle?Object.assign(style,newStyle):(0,_util.warn)(`(DEBUG) - XFA - style for ${name} not implemented yet`)}}return style};var _xfa_object=__w_pdfjs_require__(77),_util=__w_pdfjs_require__(2),_utils=__w_pdfjs_require__(78),_fonts=__w_pdfjs_require__(85),_text=__w_pdfjs_require__(86);function measureToString(m){return"string"==typeof m?"0px":Number.isInteger(m)?`${m}px`:`${m.toFixed(2)}px`}const converters={anchorType(node,style){const parent=node[_xfa_object.$getSubformParent]();if(parent&&(!parent.layout||"position"===parent.layout))switch("transform"in style||(style.transform=""),node.anchorType){case"bottomCenter":style.transform+="translate(-50%, -100%)";break;case"bottomLeft":style.transform+="translate(0,-100%)";break;case"bottomRight":style.transform+="translate(-100%,-100%)";break;case"middleCenter":style.transform+="translate(-50%,-50%)";break;case"middleLeft":style.transform+="translate(0,-50%)";break;case"middleRight":style.transform+="translate(-100%,-50%)";break;case"topCenter":style.transform+="translate(-50%,0)";break;case"topRight":style.transform+="translate(-100%,0)"}},dimensions(node,style){const parent=node[_xfa_object.$getSubformParent]();let width=node.w;const height=node.h;if(parent.layout&&parent.layout.includes("row")){const extra=parent[_xfa_object.$extra],colSpan=node.colSpan;let w;-1===colSpan?(w=extra.columnWidths.slice(extra.currentColumn).reduce(((a,x)=>a+x),0),extra.currentColumn=0):(w=extra.columnWidths.slice(extra.currentColumn,extra.currentColumn+colSpan).reduce(((a,x)=>a+x),0),extra.currentColumn=(extra.currentColumn+node.colSpan)%extra.columnWidths.length),isNaN(w)||(width=node.w=w)}style.width=""!==width?measureToString(width):"auto",style.height=""!==height?measureToString(height):"auto"},position(node,style){const parent=node[_xfa_object.$getSubformParent]();parent&&parent.layout&&"position"!==parent.layout||(style.position="absolute",style.left=measureToString(node.x),style.top=measureToString(node.y))},rotate(node,style){node.rotate&&("transform"in style||(style.transform=""),style.transform+=`rotate(-${node.rotate}deg)`,style.transformOrigin="top left")},presence(node,style){switch(node.presence){case"invisible":style.visibility="hidden";break;case"hidden":case"inactive":style.display="none"}},hAlign(node,style){if("para"===node[_xfa_object.$nodeName])switch(node.hAlign){case"justifyAll":style.textAlign="justify-all";break;case"radix":style.textAlign="left";break;default:style.textAlign=node.hAlign}else switch(node.hAlign){case"left":style.alignSelf="start";break;case"center":style.alignSelf="center";break;case"right":style.alignSelf="end"}},margin(node,style){node.margin&&(style.margin=node.margin[_xfa_object.$toStyle]().margin)}};function layoutText(text,xfaFont,margin,lineHeight,fontFinder,width){const measure=new _text.TextMeasure(xfaFont,margin,lineHeight,fontFinder);return"string"==typeof text?measure.addString(text):text[_xfa_object.$pushGlyphs](measure),measure.compute(width)}function isPrintOnly(node){return node.relevant.length>0&&!node.relevant[0].excluded&&"print"===node.relevant[0].viewname}function getCurrentPara(node){const stack=node[_xfa_object.$getTemplateRoot]()[_xfa_object.$extra].paraStack;return stack.length?stack.at(-1):null}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FontFinder=void 0,exports.getMetrics=function getMetrics(xfaFont,real=!1){let pdfFont=null;if(xfaFont){const name=(0,_utils.stripQuotes)(xfaFont.typeface),typeface=xfaFont[_xfa_object.$globalData].fontFinder.find(name);pdfFont=selectFont(xfaFont,typeface)}if(!pdfFont)return{lineHeight:12,lineGap:2,lineNoGap:10};const size=xfaFont.size||10,lineHeight=pdfFont.lineHeight?Math.max(real?0:1.2,pdfFont.lineHeight):1.2,lineGap=void 0===pdfFont.lineGap?.2:pdfFont.lineGap;return{lineHeight:lineHeight*size,lineGap:lineGap*size,lineNoGap:Math.max(1,lineHeight-lineGap)*size}},exports.selectFont=selectFont;var _xfa_object=__w_pdfjs_require__(77),_utils=__w_pdfjs_require__(78),_util=__w_pdfjs_require__(2);function selectFont(xfaFont,typeface){return"italic"===xfaFont.posture?"bold"===xfaFont.weight?typeface.bolditalic:typeface.italic:"bold"===xfaFont.weight?typeface.bold:typeface.regular}exports.FontFinder=class FontFinder{constructor(pdfFonts){this.fonts=new Map,this.cache=new Map,this.warned=new Set,this.defaultFont=null,this.add(pdfFonts)}add(pdfFonts,reallyMissingFonts=null){for(const pdfFont of pdfFonts)this.addPdfFont(pdfFont);for(const pdfFont of this.fonts.values())pdfFont.regular||(pdfFont.regular=pdfFont.italic||pdfFont.bold||pdfFont.bolditalic);if(!reallyMissingFonts||0===reallyMissingFonts.size)return;const myriad=this.fonts.get("PdfJS-Fallback-PdfJS-XFA");for(const missing of reallyMissingFonts)this.fonts.set(missing,myriad)}addPdfFont(pdfFont){const cssFontInfo=pdfFont.cssFontInfo,name=cssFontInfo.fontFamily;let font=this.fonts.get(name);font||(font=Object.create(null),this.fonts.set(name,font),this.defaultFont||(this.defaultFont=font));let property="";const fontWeight=parseFloat(cssFontInfo.fontWeight);0!==parseFloat(cssFontInfo.italicAngle)?property=fontWeight>=700?"bolditalic":"italic":fontWeight>=700&&(property="bold"),property||((pdfFont.name.includes("Bold")||pdfFont.psName&&pdfFont.psName.includes("Bold"))&&(property="bold"),(pdfFont.name.includes("Italic")||pdfFont.name.endsWith("It")||pdfFont.psName&&(pdfFont.psName.includes("Italic")||pdfFont.psName.endsWith("It")))&&(property+="italic")),property||(property="regular"),font[property]=pdfFont}getDefault(){return this.defaultFont}find(fontName,mustWarn=!0){let font=this.fonts.get(fontName)||this.cache.get(fontName);if(font)return font;const pattern=/,|-|_| |bolditalic|bold|italic|regular|it/gi;let name=fontName.replace(pattern,"");if(font=this.fonts.get(name),font)return this.cache.set(fontName,font),font;name=name.toLowerCase();const maybe=[];for(const[family,pdfFont]of this.fonts.entries())family.replace(pattern,"").toLowerCase().startsWith(name)&&maybe.push(pdfFont);if(0===maybe.length)for(const[,pdfFont]of this.fonts.entries())pdfFont.regular.name&&pdfFont.regular.name.replace(pattern,"").toLowerCase().startsWith(name)&&maybe.push(pdfFont);if(0===maybe.length){name=name.replace(/psmt|mt/gi,"");for(const[family,pdfFont]of this.fonts.entries())family.replace(pattern,"").toLowerCase().startsWith(name)&&maybe.push(pdfFont)}if(0===maybe.length)for(const pdfFont of this.fonts.values())pdfFont.regular.name&&pdfFont.regular.name.replace(pattern,"").toLowerCase().startsWith(name)&&maybe.push(pdfFont);return maybe.length>=1?(1!==maybe.length&&mustWarn&&(0,_util.warn)(`XFA - Too many choices to guess the correct font: ${fontName}`),this.cache.set(fontName,maybe[0]),maybe[0]):(mustWarn&&!this.warned.has(fontName)&&(this.warned.add(fontName),(0,_util.warn)(`XFA - Cannot find the font: ${fontName}`)),null)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextMeasure=void 0;var _fonts=__w_pdfjs_require__(85);class FontInfo{constructor(xfaFont,margin,lineHeight,fontFinder){if(this.lineHeight=lineHeight,this.paraMargin=margin||{top:0,bottom:0,left:0,right:0},!xfaFont)return void([this.pdfFont,this.xfaFont]=this.defaultFont(fontFinder));this.xfaFont={typeface:xfaFont.typeface,posture:xfaFont.posture,weight:xfaFont.weight,size:xfaFont.size,letterSpacing:xfaFont.letterSpacing};const typeface=fontFinder.find(xfaFont.typeface);typeface?(this.pdfFont=(0,_fonts.selectFont)(xfaFont,typeface),this.pdfFont||([this.pdfFont,this.xfaFont]=this.defaultFont(fontFinder))):[this.pdfFont,this.xfaFont]=this.defaultFont(fontFinder)}defaultFont(fontFinder){const font=fontFinder.find("Helvetica",!1)||fontFinder.find("Myriad Pro",!1)||fontFinder.find("Arial",!1)||fontFinder.getDefault();if(font&&font.regular){const pdfFont=font.regular;return[pdfFont,{typeface:pdfFont.cssFontInfo.fontFamily,posture:"normal",weight:"normal",size:10,letterSpacing:0}]}return[null,{typeface:"Courier",posture:"normal",weight:"normal",size:10,letterSpacing:0}]}}class FontSelector{constructor(defaultXfaFont,defaultParaMargin,defaultLineHeight,fontFinder){this.fontFinder=fontFinder,this.stack=[new FontInfo(defaultXfaFont,defaultParaMargin,defaultLineHeight,fontFinder)]}pushData(xfaFont,margin,lineHeight){const lastFont=this.stack.at(-1);for(const name of["typeface","posture","weight","size","letterSpacing"])xfaFont[name]||(xfaFont[name]=lastFont.xfaFont[name]);for(const name of["top","bottom","left","right"])isNaN(margin[name])&&(margin[name]=lastFont.paraMargin[name]);const fontInfo=new FontInfo(xfaFont,margin,lineHeight||lastFont.lineHeight,this.fontFinder);fontInfo.pdfFont||(fontInfo.pdfFont=lastFont.pdfFont),this.stack.push(fontInfo)}popFont(){this.stack.pop()}topFont(){return this.stack.at(-1)}}exports.TextMeasure=class TextMeasure{constructor(defaultXfaFont,defaultParaMargin,defaultLineHeight,fonts){this.glyphs=[],this.fontSelector=new FontSelector(defaultXfaFont,defaultParaMargin,defaultLineHeight,fonts),this.extraHeight=0}pushData(xfaFont,margin,lineHeight){this.fontSelector.pushData(xfaFont,margin,lineHeight)}popFont(xfaFont){return this.fontSelector.popFont()}addPara(){const lastFont=this.fontSelector.topFont();this.extraHeight+=lastFont.paraMargin.top+lastFont.paraMargin.bottom}addString(str){if(!str)return;const lastFont=this.fontSelector.topFont(),fontSize=lastFont.xfaFont.size;if(lastFont.pdfFont){const letterSpacing=lastFont.xfaFont.letterSpacing,pdfFont=lastFont.pdfFont,fontLineHeight=pdfFont.lineHeight||1.2,lineHeight=lastFont.lineHeight||Math.max(1.2,fontLineHeight)*fontSize,noGap=fontLineHeight-(void 0===pdfFont.lineGap?.2:pdfFont.lineGap),firstLineHeight=Math.max(1,noGap)*fontSize,scale=fontSize/1e3,fallbackWidth=pdfFont.defaultWidth||pdfFont.charsToGlyphs(" ")[0].width;for(const line of str.split(/[\u2029\n]/)){const encodedLine=pdfFont.encodeString(line).join(""),glyphs=pdfFont.charsToGlyphs(encodedLine);for(const glyph of glyphs){const width=glyph.width||fallbackWidth;this.glyphs.push([width*scale+letterSpacing,lineHeight,firstLineHeight,glyph.unicode,!1])}this.glyphs.push([0,0,0,"\n",!0])}this.glyphs.pop()}else{for(const line of str.split(/[\u2029\n]/)){for(const char of line.split(""))this.glyphs.push([fontSize,1.2*fontSize,fontSize,char,!1]);this.glyphs.push([0,0,0,"\n",!0])}this.glyphs.pop()}}compute(maxWidth){let lastSpacePos=-1,lastSpaceWidth=0,width=0,height=0,currentLineWidth=0,currentLineHeight=0,isBroken=!1,isFirstLine=!0;for(let i=0,ii=this.glyphs.length;i<ii;i++){const[glyphWidth,lineHeight,firstLineHeight,char,isEOL]=this.glyphs[i],isSpace=" "===char,glyphHeight=isFirstLine?firstLineHeight:lineHeight;isEOL?(width=Math.max(width,currentLineWidth),currentLineWidth=0,height+=currentLineHeight,currentLineHeight=glyphHeight,lastSpacePos=-1,lastSpaceWidth=0,isFirstLine=!1):isSpace?currentLineWidth+glyphWidth>maxWidth?(width=Math.max(width,currentLineWidth),currentLineWidth=0,height+=currentLineHeight,currentLineHeight=glyphHeight,lastSpacePos=-1,lastSpaceWidth=0,isBroken=!0,isFirstLine=!1):(currentLineHeight=Math.max(glyphHeight,currentLineHeight),lastSpaceWidth=currentLineWidth,currentLineWidth+=glyphWidth,lastSpacePos=i):currentLineWidth+glyphWidth>maxWidth?(height+=currentLineHeight,currentLineHeight=glyphHeight,-1!==lastSpacePos?(i=lastSpacePos,width=Math.max(width,lastSpaceWidth),currentLineWidth=0,lastSpacePos=-1,lastSpaceWidth=0):(width=Math.max(width,currentLineWidth),currentLineWidth=glyphWidth),isBroken=!0,isFirstLine=!1):(currentLineWidth+=glyphWidth,currentLineHeight=Math.max(glyphHeight,currentLineHeight))}return width=Math.max(width,currentLineWidth),height+=currentLineHeight+this.extraHeight,{width:1.02*width,height,isBroken}}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DataHandler=void 0;var _xfa_object=__w_pdfjs_require__(77);exports.DataHandler=class DataHandler{constructor(root,data){this.data=data,this.dataset=root.datasets||null}serialize(storage){const stack=[[-1,this.data[_xfa_object.$getChildren]()]];for(;stack.length>0;){const last=stack.at(-1),[i,children]=last;if(i+1===children.length){stack.pop();continue}const child=children[++last[0]],storageEntry=storage.get(child[_xfa_object.$uid]);if(storageEntry)child[_xfa_object.$setValue](storageEntry);else{const attributes=child[_xfa_object.$getAttributes]();for(const value of attributes.values()){const entry=storage.get(value[_xfa_object.$uid]);if(entry){value[_xfa_object.$setValue](entry);break}}}const nodes=child[_xfa_object.$getChildren]();nodes.length>0&&stack.push([-1,nodes])}const buf=['<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">'];if(this.dataset)for(const child of this.dataset[_xfa_object.$getChildren]())"data"!==child[_xfa_object.$nodeName]&&child[_xfa_object.$toString](buf);return this.data[_xfa_object.$toString](buf),buf.push("</xfa:datasets>"),buf.join("")}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XFAParser=void 0;var _xfa_object=__w_pdfjs_require__(77),_xml_parser=__w_pdfjs_require__(66),_builder=__w_pdfjs_require__(89),_util=__w_pdfjs_require__(2);class XFAParser extends _xml_parser.XMLParserBase{constructor(rootNameSpace=null,richText=!1){super(),this._builder=new _builder.Builder(rootNameSpace),this._stack=[],this._globalData={usedTypefaces:new Set},this._ids=new Map,this._current=this._builder.buildRoot(this._ids),this._errorCode=_xml_parser.XMLParserErrorCode.NoError,this._whiteRegex=/^\s+$/,this._nbsps=/\xa0+/g,this._richText=richText}parse(data){if(this.parseXml(data),this._errorCode===_xml_parser.XMLParserErrorCode.NoError)return this._current[_xfa_object.$finalize](),this._current.element}onText(text){text=text.replace(this._nbsps,(match=>match.slice(1)+" ")),this._richText||this._current[_xfa_object.$acceptWhitespace]()?this._current[_xfa_object.$onText](text,this._richText):this._whiteRegex.test(text)||this._current[_xfa_object.$onText](text.trim())}onCdata(text){this._current[_xfa_object.$onText](text)}_mkAttributes(attributes,tagName){let namespace=null,prefixes=null;const attributeObj=Object.create({});for(const{name,value}of attributes)if("xmlns"===name)namespace?(0,_util.warn)(`XFA - multiple namespace definition in <${tagName}>`):namespace=value;else if(name.startsWith("xmlns:")){const prefix=name.substring("xmlns:".length);prefixes||(prefixes=[]),prefixes.push({prefix,value})}else{const i=name.indexOf(":");if(-1===i)attributeObj[name]=value;else{let nsAttrs=attributeObj[_xfa_object.$nsAttributes];nsAttrs||(nsAttrs=attributeObj[_xfa_object.$nsAttributes]=Object.create(null));const[ns,attrName]=[name.slice(0,i),name.slice(i+1)];let attrs=nsAttrs[ns];attrs||(attrs=nsAttrs[ns]=Object.create(null)),attrs[attrName]=value}}return[namespace,prefixes,attributeObj]}_getNameAndPrefix(name,nsAgnostic){const i=name.indexOf(":");return-1===i?[name,null]:[name.substring(i+1),nsAgnostic?"":name.substring(0,i)]}onBeginElement(tagName,attributes,isEmpty){const[namespace,prefixes,attributesObj]=this._mkAttributes(attributes,tagName),[name,nsPrefix]=this._getNameAndPrefix(tagName,this._builder.isNsAgnostic()),node=this._builder.build({nsPrefix,name,attributes:attributesObj,namespace,prefixes});if(node[_xfa_object.$globalData]=this._globalData,isEmpty)return node[_xfa_object.$finalize](),this._current[_xfa_object.$onChild](node)&&node[_xfa_object.$setId](this._ids),void node[_xfa_object.$clean](this._builder);this._stack.push(this._current),this._current=node}onEndElement(name){const node=this._current;if(node[_xfa_object.$isCDATAXml]()&&"string"==typeof node[_xfa_object.$content]){const parser=new XFAParser;parser._globalData=this._globalData;const root=parser.parse(node[_xfa_object.$content]);node[_xfa_object.$content]=null,node[_xfa_object.$onChild](root)}node[_xfa_object.$finalize](),this._current=this._stack.pop(),this._current[_xfa_object.$onChild](node)&&node[_xfa_object.$setId](this._ids),node[_xfa_object.$clean](this._builder)}onError(code){this._errorCode=code}}exports.XFAParser=XFAParser},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Builder=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77),_setup=__w_pdfjs_require__(90),_template=__w_pdfjs_require__(82),_unknown=__w_pdfjs_require__(99),_util=__w_pdfjs_require__(2);class Root extends _xfa_object.XFAObject{constructor(ids){super(-1,"root",Object.create(null)),this.element=null,this[_xfa_object.$ids]=ids}[_xfa_object.$onChild](child){return this.element=child,!0}[_xfa_object.$finalize](){super[_xfa_object.$finalize](),this.element.template instanceof _template.Template&&(this[_xfa_object.$ids].set(_xfa_object.$root,this.element),this.element.template[_xfa_object.$resolvePrototypes](this[_xfa_object.$ids]),this.element.template[_xfa_object.$ids]=this[_xfa_object.$ids])}}class Empty extends _xfa_object.XFAObject{constructor(){super(-1,"",Object.create(null))}[_xfa_object.$onChild](_){return!1}}exports.Builder=class Builder{constructor(rootNameSpace=null){this._namespaceStack=[],this._nsAgnosticLevel=0,this._namespacePrefixes=new Map,this._namespaces=new Map,this._nextNsId=Math.max(...Object.values(_namespaces.NamespaceIds).map((({id})=>id))),this._currentNamespace=rootNameSpace||new _unknown.UnknownNamespace(++this._nextNsId)}buildRoot(ids){return new Root(ids)}build({nsPrefix,name,attributes,namespace,prefixes}){const hasNamespaceDef=null!==namespace;if(hasNamespaceDef&&(this._namespaceStack.push(this._currentNamespace),this._currentNamespace=this._searchNamespace(namespace)),prefixes&&this._addNamespacePrefix(prefixes),attributes.hasOwnProperty(_xfa_object.$nsAttributes)){const dataTemplate=_setup.NamespaceSetUp.datasets,nsAttrs=attributes[_xfa_object.$nsAttributes];let xfaAttrs=null;for(const[ns,attrs]of Object.entries(nsAttrs)){if(this._getNamespaceToUse(ns)===dataTemplate){xfaAttrs={xfa:attrs};break}}xfaAttrs?attributes[_xfa_object.$nsAttributes]=xfaAttrs:delete attributes[_xfa_object.$nsAttributes]}const namespaceToUse=this._getNamespaceToUse(nsPrefix),node=namespaceToUse&&namespaceToUse[_namespaces.$buildXFAObject](name,attributes)||new Empty;return node[_xfa_object.$isNsAgnostic]()&&this._nsAgnosticLevel++,(hasNamespaceDef||prefixes||node[_xfa_object.$isNsAgnostic]())&&(node[_xfa_object.$cleanup]={hasNamespace:hasNamespaceDef,prefixes,nsAgnostic:node[_xfa_object.$isNsAgnostic]()}),node}isNsAgnostic(){return this._nsAgnosticLevel>0}_searchNamespace(nsName){let ns=this._namespaces.get(nsName);if(ns)return ns;for(const[name,{check}]of Object.entries(_namespaces.NamespaceIds))if(check(nsName)){if(ns=_setup.NamespaceSetUp[name],ns)return this._namespaces.set(nsName,ns),ns;break}return ns=new _unknown.UnknownNamespace(++this._nextNsId),this._namespaces.set(nsName,ns),ns}_addNamespacePrefix(prefixes){for(const{prefix,value}of prefixes){const namespace=this._searchNamespace(value);let prefixStack=this._namespacePrefixes.get(prefix);prefixStack||(prefixStack=[],this._namespacePrefixes.set(prefix,prefixStack)),prefixStack.push(namespace)}}_getNamespaceToUse(prefix){if(!prefix)return this._currentNamespace;const prefixStack=this._namespacePrefixes.get(prefix);return prefixStack&&prefixStack.length>0?prefixStack.at(-1):((0,_util.warn)(`Unknown namespace prefix: ${prefix}.`),null)}clean(data){const{hasNamespace,prefixes,nsAgnostic}=data;hasNamespace&&(this._currentNamespace=this._namespaceStack.pop()),prefixes&&prefixes.forEach((({prefix})=>{this._namespacePrefixes.get(prefix).pop()})),nsAgnostic&&this._nsAgnosticLevel--}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NamespaceSetUp=void 0;var _config=__w_pdfjs_require__(91),_connection_set=__w_pdfjs_require__(92),_datasets=__w_pdfjs_require__(93),_locale_set=__w_pdfjs_require__(94),_signature=__w_pdfjs_require__(95),_stylesheet=__w_pdfjs_require__(96),_template=__w_pdfjs_require__(82),_xdp=__w_pdfjs_require__(97),_xhtml=__w_pdfjs_require__(98);const NamespaceSetUp={config:_config.ConfigNamespace,connection:_connection_set.ConnectionSetNamespace,datasets:_datasets.DatasetsNamespace,localeSet:_locale_set.LocaleSetNamespace,signature:_signature.SignatureNamespace,stylesheet:_stylesheet.StylesheetNamespace,template:_template.TemplateNamespace,xdp:_xdp.XdpNamespace,xhtml:_xhtml.XhtmlNamespace};exports.NamespaceSetUp=NamespaceSetUp},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfigNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77),_utils=__w_pdfjs_require__(78),_util=__w_pdfjs_require__(2);const CONFIG_NS_ID=_namespaces.NamespaceIds.config.id;class Acrobat extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"acrobat",!0),this.acrobat7=null,this.autoSave=null,this.common=null,this.validate=null,this.validateApprovalSignatures=null,this.submitUrl=new _xfa_object.XFAObjectArray}}class Acrobat7 extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"acrobat7",!0),this.dynamicRender=null}}class ADBE_JSConsole extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"ADBE_JSConsole",["delegate","Enable","Disable"])}}class ADBE_JSDebugger extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"ADBE_JSDebugger",["delegate","Enable","Disable"])}}class AddSilentPrint extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"addSilentPrint")}}class AddViewerPreferences extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"addViewerPreferences")}}class AdjustData extends _xfa_object.Option10{constructor(attributes){super(CONFIG_NS_ID,"adjustData")}}class AdobeExtensionLevel extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"adobeExtensionLevel",0,(n=>n>=1&&n<=8))}}class Agent extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"agent",!0),this.name=attributes.name?attributes.name.trim():"",this.common=new _xfa_object.XFAObjectArray}}class AlwaysEmbed extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"alwaysEmbed")}}class Amd extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"amd")}}class Area extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"area"),this.level=(0,_utils.getInteger)({data:attributes.level,defaultValue:0,validate:n=>n>=1&&n<=3}),this.name=(0,_utils.getStringOption)(attributes.name,["","barcode","coreinit","deviceDriver","font","general","layout","merge","script","signature","sourceSet","templateCache"])}}class Attributes extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"attributes",["preserve","delegate","ignore"])}}class AutoSave extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"autoSave",["disabled","enabled"])}}class Base extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"base")}}class BatchOutput extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"batchOutput"),this.format=(0,_utils.getStringOption)(attributes.format,["none","concat","zip","zipCompress"])}}class BehaviorOverride extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"behaviorOverride")}[_xfa_object.$finalize](){this[_xfa_object.$content]=new Map(this[_xfa_object.$content].trim().split(/\s+/).filter((x=>x.includes(":"))).map((x=>x.split(":",2))))}}class Cache extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"cache",!0),this.templateCache=null}}class Change extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"change")}}class Common extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"common",!0),this.data=null,this.locale=null,this.localeSet=null,this.messaging=null,this.suppressBanner=null,this.template=null,this.validationMessaging=null,this.versionControl=null,this.log=new _xfa_object.XFAObjectArray}}class Compress extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"compress"),this.scope=(0,_utils.getStringOption)(attributes.scope,["imageOnly","document"])}}class CompressLogicalStructure extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"compressLogicalStructure")}}class CompressObjectStream extends _xfa_object.Option10{constructor(attributes){super(CONFIG_NS_ID,"compressObjectStream")}}class Compression extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"compression",!0),this.compressLogicalStructure=null,this.compressObjectStream=null,this.level=null,this.type=null}}class Config extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"config",!0),this.acrobat=null,this.present=null,this.trace=null,this.agent=new _xfa_object.XFAObjectArray}}class Conformance extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"conformance",["A","B"])}}class ContentCopy extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"contentCopy")}}class Copies extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"copies",1,(n=>n>=1))}}class Creator extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"creator")}}class CurrentPage extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"currentPage",0,(n=>n>=0))}}class Data extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"data",!0),this.adjustData=null,this.attributes=null,this.incrementalLoad=null,this.outputXSL=null,this.range=null,this.record=null,this.startNode=null,this.uri=null,this.window=null,this.xsl=null,this.excludeNS=new _xfa_object.XFAObjectArray,this.transform=new _xfa_object.XFAObjectArray}}class Debug extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"debug",!0),this.uri=null}}class DefaultTypeface extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"defaultTypeface"),this.writingScript=(0,_utils.getStringOption)(attributes.writingScript,["*","Arabic","Cyrillic","EastEuropeanRoman","Greek","Hebrew","Japanese","Korean","Roman","SimplifiedChinese","Thai","TraditionalChinese","Vietnamese"])}}class Destination extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"destination",["pdf","pcl","ps","webClient","zpl"])}}class DocumentAssembly extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"documentAssembly")}}class Driver extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"driver",!0),this.name=attributes.name?attributes.name.trim():"",this.fontInfo=null,this.xdc=null}}class DuplexOption extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"duplexOption",["simplex","duplexFlipLongEdge","duplexFlipShortEdge"])}}class DynamicRender extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"dynamicRender",["forbidden","required"])}}class Embed extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"embed")}}class Encrypt extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"encrypt")}}class Encryption extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"encryption",!0),this.encrypt=null,this.encryptionLevel=null,this.permissions=null}}class EncryptionLevel extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"encryptionLevel",["40bit","128bit"])}}class Enforce extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"enforce")}}class Equate extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"equate"),this.force=(0,_utils.getInteger)({data:attributes.force,defaultValue:1,validate:n=>0===n}),this.from=attributes.from||"",this.to=attributes.to||""}}class EquateRange extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"equateRange"),this.from=attributes.from||"",this.to=attributes.to||"",this._unicodeRange=attributes.unicodeRange||""}get unicodeRange(){const ranges=[],unicodeRegex=/U\+([0-9a-fA-F]+)/,unicodeRange=this._unicodeRange;for(let range of unicodeRange.split(",").map((x=>x.trim())).filter((x=>!!x)))range=range.split("-",2).map((x=>{const found=x.match(unicodeRegex);return found?parseInt(found[1],16):0})),1===range.length&&range.push(range[0]),ranges.push(range);return(0,_util.shadow)(this,"unicodeRange",ranges)}}class Exclude extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"exclude")}[_xfa_object.$finalize](){this[_xfa_object.$content]=this[_xfa_object.$content].trim().split(/\s+/).filter((x=>x&&["calculate","close","enter","exit","initialize","ready","validate"].includes(x)))}}class ExcludeNS extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"excludeNS")}}class FlipLabel extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"flipLabel",["usePrinterSetting","on","off"])}}class FontInfo extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"fontInfo",!0),this.embed=null,this.map=null,this.subsetBelow=null,this.alwaysEmbed=new _xfa_object.XFAObjectArray,this.defaultTypeface=new _xfa_object.XFAObjectArray,this.neverEmbed=new _xfa_object.XFAObjectArray}}class FormFieldFilling extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"formFieldFilling")}}class GroupParent extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"groupParent")}}class IfEmpty extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"ifEmpty",["dataValue","dataGroup","ignore","remove"])}}class IncludeXDPContent extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"includeXDPContent")}}class IncrementalLoad extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"incrementalLoad",["none","forwardOnly"])}}class IncrementalMerge extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"incrementalMerge")}}class Interactive extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"interactive")}}class Jog extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"jog",["usePrinterSetting","none","pageSet"])}}class LabelPrinter extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"labelPrinter",!0),this.name=(0,_utils.getStringOption)(attributes.name,["zpl","dpl","ipl","tcpl"]),this.batchOutput=null,this.flipLabel=null,this.fontInfo=null,this.xdc=null}}class Layout extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"layout",["paginate","panel"])}}class Level extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"level",0,(n=>n>0))}}class Linearized extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"linearized")}}class Locale extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"locale")}}class LocaleSet extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"localeSet")}}class Log extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"log",!0),this.mode=null,this.threshold=null,this.to=null,this.uri=null}}class MapElement extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"map",!0),this.equate=new _xfa_object.XFAObjectArray,this.equateRange=new _xfa_object.XFAObjectArray}}class MediumInfo extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"mediumInfo",!0),this.map=null}}class Message extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"message",!0),this.msgId=null,this.severity=null}}class Messaging extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"messaging",!0),this.message=new _xfa_object.XFAObjectArray}}class Mode extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"mode",["append","overwrite"])}}class ModifyAnnots extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"modifyAnnots")}}class MsgId extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"msgId",1,(n=>n>=1))}}class NameAttr extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"nameAttr")}}class NeverEmbed extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"neverEmbed")}}class NumberOfCopies extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"numberOfCopies",null,(n=>n>=2&&n<=5))}}class OpenAction extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"openAction",!0),this.destination=null}}class Output extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"output",!0),this.to=null,this.type=null,this.uri=null}}class OutputBin extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"outputBin")}}class OutputXSL extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"outputXSL",!0),this.uri=null}}class Overprint extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"overprint",["none","both","draw","field"])}}class Packets extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"packets")}[_xfa_object.$finalize](){"*"!==this[_xfa_object.$content]&&(this[_xfa_object.$content]=this[_xfa_object.$content].trim().split(/\s+/).filter((x=>["config","datasets","template","xfdf","xslt"].includes(x))))}}class PageOffset extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"pageOffset"),this.x=(0,_utils.getInteger)({data:attributes.x,defaultValue:"useXDCSetting",validate:n=>!0}),this.y=(0,_utils.getInteger)({data:attributes.y,defaultValue:"useXDCSetting",validate:n=>!0})}}class PageRange extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"pageRange")}[_xfa_object.$finalize](){const numbers=this[_xfa_object.$content].trim().split(/\s+/).map((x=>parseInt(x,10))),ranges=[];for(let i=0,ii=numbers.length;i<ii;i+=2)ranges.push(numbers.slice(i,i+2));this[_xfa_object.$content]=ranges}}class Pagination extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"pagination",["simplex","duplexShortEdge","duplexLongEdge"])}}class PaginationOverride extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"paginationOverride",["none","forceDuplex","forceDuplexLongEdge","forceDuplexShortEdge","forceSimplex"])}}class Part extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"part",1,(n=>!1))}}class Pcl extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"pcl",!0),this.name=attributes.name||"",this.batchOutput=null,this.fontInfo=null,this.jog=null,this.mediumInfo=null,this.outputBin=null,this.pageOffset=null,this.staple=null,this.xdc=null}}class Pdf extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"pdf",!0),this.name=attributes.name||"",this.adobeExtensionLevel=null,this.batchOutput=null,this.compression=null,this.creator=null,this.encryption=null,this.fontInfo=null,this.interactive=null,this.linearized=null,this.openAction=null,this.pdfa=null,this.producer=null,this.renderPolicy=null,this.scriptModel=null,this.silentPrint=null,this.submitFormat=null,this.tagged=null,this.version=null,this.viewerPreferences=null,this.xdc=null}}class Pdfa extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"pdfa",!0),this.amd=null,this.conformance=null,this.includeXDPContent=null,this.part=null}}class Permissions extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"permissions",!0),this.accessibleContent=null,this.change=null,this.contentCopy=null,this.documentAssembly=null,this.formFieldFilling=null,this.modifyAnnots=null,this.plaintextMetadata=null,this.print=null,this.printHighQuality=null}}class PickTrayByPDFSize extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"pickTrayByPDFSize")}}class Picture extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"picture")}}class PlaintextMetadata extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"plaintextMetadata")}}class Presence extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"presence",["preserve","dissolve","dissolveStructure","ignore","remove"])}}class Present extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"present",!0),this.behaviorOverride=null,this.cache=null,this.common=null,this.copies=null,this.destination=null,this.incrementalMerge=null,this.layout=null,this.output=null,this.overprint=null,this.pagination=null,this.paginationOverride=null,this.script=null,this.validate=null,this.xdp=null,this.driver=new _xfa_object.XFAObjectArray,this.labelPrinter=new _xfa_object.XFAObjectArray,this.pcl=new _xfa_object.XFAObjectArray,this.pdf=new _xfa_object.XFAObjectArray,this.ps=new _xfa_object.XFAObjectArray,this.submitUrl=new _xfa_object.XFAObjectArray,this.webClient=new _xfa_object.XFAObjectArray,this.zpl=new _xfa_object.XFAObjectArray}}class Print extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"print")}}class PrintHighQuality extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"printHighQuality")}}class PrintScaling extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"printScaling",["appdefault","noScaling"])}}class PrinterName extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"printerName")}}class Producer extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"producer")}}class Ps extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"ps",!0),this.name=attributes.name||"",this.batchOutput=null,this.fontInfo=null,this.jog=null,this.mediumInfo=null,this.outputBin=null,this.staple=null,this.xdc=null}}class Range extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"range")}[_xfa_object.$finalize](){this[_xfa_object.$content]=this[_xfa_object.$content].trim().split(/\s*,\s*/,2).map((range=>range.split("-").map((x=>parseInt(x.trim(),10))))).filter((range=>range.every((x=>!isNaN(x))))).map((range=>(1===range.length&&range.push(range[0]),range)))}}class Record extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"record")}[_xfa_object.$finalize](){this[_xfa_object.$content]=this[_xfa_object.$content].trim();const n=parseInt(this[_xfa_object.$content],10);!isNaN(n)&&n>=0&&(this[_xfa_object.$content]=n)}}class Relevant extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"relevant")}[_xfa_object.$finalize](){this[_xfa_object.$content]=this[_xfa_object.$content].trim().split(/\s+/)}}class Rename extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"rename")}[_xfa_object.$finalize](){this[_xfa_object.$content]=this[_xfa_object.$content].trim(),(this[_xfa_object.$content].toLowerCase().startsWith("xml")||this[_xfa_object.$content].match(new RegExp("[\\p{L}_][\\p{L}\\d._\\p{M}-]*","u")))&&(0,_util.warn)("XFA - Rename: invalid XFA name")}}class RenderPolicy extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"renderPolicy",["server","client"])}}class RunScripts extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"runScripts",["both","client","none","server"])}}class Script extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"script",!0),this.currentPage=null,this.exclude=null,this.runScripts=null}}class ScriptModel extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"scriptModel",["XFA","none"])}}class Severity extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"severity",["ignore","error","information","trace","warning"])}}class SilentPrint extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"silentPrint",!0),this.addSilentPrint=null,this.printerName=null}}class Staple extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"staple"),this.mode=(0,_utils.getStringOption)(attributes.mode,["usePrinterSetting","on","off"])}}class StartNode extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"startNode")}}class StartPage extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"startPage",0,(n=>!0))}}class SubmitFormat extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"submitFormat",["html","delegate","fdf","xml","pdf"])}}class SubmitUrl extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"submitUrl")}}class SubsetBelow extends _xfa_object.IntegerObject{constructor(attributes){super(CONFIG_NS_ID,"subsetBelow",100,(n=>n>=0&&n<=100))}}class SuppressBanner extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"suppressBanner")}}class Tagged extends _xfa_object.Option01{constructor(attributes){super(CONFIG_NS_ID,"tagged")}}class Template extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"template",!0),this.base=null,this.relevant=null,this.startPage=null,this.uri=null,this.xsl=null}}class Threshold extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"threshold",["trace","error","information","warning"])}}class To extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"to",["null","memory","stderr","stdout","system","uri"])}}class TemplateCache extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"templateCache"),this.maxEntries=(0,_utils.getInteger)({data:attributes.maxEntries,defaultValue:5,validate:n=>n>=0})}}class Trace extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"trace",!0),this.area=new _xfa_object.XFAObjectArray}}class Transform extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"transform",!0),this.groupParent=null,this.ifEmpty=null,this.nameAttr=null,this.picture=null,this.presence=null,this.rename=null,this.whitespace=null}}class Type extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"type",["none","ascii85","asciiHex","ccittfax","flate","lzw","runLength","native","xdp","mergedXDP"])}}class Uri extends _xfa_object.StringObject{constructor(attributes){super(CONFIG_NS_ID,"uri")}}class Validate extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"validate",["preSubmit","prePrint","preExecute","preSave"])}}class ValidateApprovalSignatures extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"validateApprovalSignatures")}[_xfa_object.$finalize](){this[_xfa_object.$content]=this[_xfa_object.$content].trim().split(/\s+/).filter((x=>["docReady","postSign"].includes(x)))}}class ValidationMessaging extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"validationMessaging",["allMessagesIndividually","allMessagesTogether","firstMessageOnly","noMessages"])}}class Version extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"version",["1.7","1.6","1.5","1.4","1.3","1.2"])}}class VersionControl extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"VersionControl"),this.outputBelow=(0,_utils.getStringOption)(attributes.outputBelow,["warn","error","update"]),this.sourceAbove=(0,_utils.getStringOption)(attributes.sourceAbove,["warn","error"]),this.sourceBelow=(0,_utils.getStringOption)(attributes.sourceBelow,["update","maintain"])}}class ViewerPreferences extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"viewerPreferences",!0),this.ADBE_JSConsole=null,this.ADBE_JSDebugger=null,this.addViewerPreferences=null,this.duplexOption=null,this.enforce=null,this.numberOfCopies=null,this.pageRange=null,this.pickTrayByPDFSize=null,this.printScaling=null}}class WebClient extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"webClient",!0),this.name=attributes.name?attributes.name.trim():"",this.fontInfo=null,this.xdc=null}}class Whitespace extends _xfa_object.OptionObject{constructor(attributes){super(CONFIG_NS_ID,"whitespace",["preserve","ltrim","normalize","rtrim","trim"])}}class Window extends _xfa_object.ContentObject{constructor(attributes){super(CONFIG_NS_ID,"window")}[_xfa_object.$finalize](){const pair=this[_xfa_object.$content].trim().split(/\s*,\s*/,2).map((x=>parseInt(x,10)));pair.some((x=>isNaN(x)))?this[_xfa_object.$content]=[0,0]:(1===pair.length&&pair.push(pair[0]),this[_xfa_object.$content]=pair)}}class Xdc extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"xdc",!0),this.uri=new _xfa_object.XFAObjectArray,this.xsl=new _xfa_object.XFAObjectArray}}class Xdp extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"xdp",!0),this.packets=null}}class Xsl extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"xsl",!0),this.debug=null,this.uri=null}}class Zpl extends _xfa_object.XFAObject{constructor(attributes){super(CONFIG_NS_ID,"zpl",!0),this.name=attributes.name?attributes.name.trim():"",this.batchOutput=null,this.flipLabel=null,this.fontInfo=null,this.xdc=null}}class ConfigNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(ConfigNamespace.hasOwnProperty(name))return ConfigNamespace[name](attributes)}static acrobat(attrs){return new Acrobat(attrs)}static acrobat7(attrs){return new Acrobat7(attrs)}static ADBE_JSConsole(attrs){return new ADBE_JSConsole(attrs)}static ADBE_JSDebugger(attrs){return new ADBE_JSDebugger(attrs)}static addSilentPrint(attrs){return new AddSilentPrint(attrs)}static addViewerPreferences(attrs){return new AddViewerPreferences(attrs)}static adjustData(attrs){return new AdjustData(attrs)}static adobeExtensionLevel(attrs){return new AdobeExtensionLevel(attrs)}static agent(attrs){return new Agent(attrs)}static alwaysEmbed(attrs){return new AlwaysEmbed(attrs)}static amd(attrs){return new Amd(attrs)}static area(attrs){return new Area(attrs)}static attributes(attrs){return new Attributes(attrs)}static autoSave(attrs){return new AutoSave(attrs)}static base(attrs){return new Base(attrs)}static batchOutput(attrs){return new BatchOutput(attrs)}static behaviorOverride(attrs){return new BehaviorOverride(attrs)}static cache(attrs){return new Cache(attrs)}static change(attrs){return new Change(attrs)}static common(attrs){return new Common(attrs)}static compress(attrs){return new Compress(attrs)}static compressLogicalStructure(attrs){return new CompressLogicalStructure(attrs)}static compressObjectStream(attrs){return new CompressObjectStream(attrs)}static compression(attrs){return new Compression(attrs)}static config(attrs){return new Config(attrs)}static conformance(attrs){return new Conformance(attrs)}static contentCopy(attrs){return new ContentCopy(attrs)}static copies(attrs){return new Copies(attrs)}static creator(attrs){return new Creator(attrs)}static currentPage(attrs){return new CurrentPage(attrs)}static data(attrs){return new Data(attrs)}static debug(attrs){return new Debug(attrs)}static defaultTypeface(attrs){return new DefaultTypeface(attrs)}static destination(attrs){return new Destination(attrs)}static documentAssembly(attrs){return new DocumentAssembly(attrs)}static driver(attrs){return new Driver(attrs)}static duplexOption(attrs){return new DuplexOption(attrs)}static dynamicRender(attrs){return new DynamicRender(attrs)}static embed(attrs){return new Embed(attrs)}static encrypt(attrs){return new Encrypt(attrs)}static encryption(attrs){return new Encryption(attrs)}static encryptionLevel(attrs){return new EncryptionLevel(attrs)}static enforce(attrs){return new Enforce(attrs)}static equate(attrs){return new Equate(attrs)}static equateRange(attrs){return new EquateRange(attrs)}static exclude(attrs){return new Exclude(attrs)}static excludeNS(attrs){return new ExcludeNS(attrs)}static flipLabel(attrs){return new FlipLabel(attrs)}static fontInfo(attrs){return new FontInfo(attrs)}static formFieldFilling(attrs){return new FormFieldFilling(attrs)}static groupParent(attrs){return new GroupParent(attrs)}static ifEmpty(attrs){return new IfEmpty(attrs)}static includeXDPContent(attrs){return new IncludeXDPContent(attrs)}static incrementalLoad(attrs){return new IncrementalLoad(attrs)}static incrementalMerge(attrs){return new IncrementalMerge(attrs)}static interactive(attrs){return new Interactive(attrs)}static jog(attrs){return new Jog(attrs)}static labelPrinter(attrs){return new LabelPrinter(attrs)}static layout(attrs){return new Layout(attrs)}static level(attrs){return new Level(attrs)}static linearized(attrs){return new Linearized(attrs)}static locale(attrs){return new Locale(attrs)}static localeSet(attrs){return new LocaleSet(attrs)}static log(attrs){return new Log(attrs)}static map(attrs){return new MapElement(attrs)}static mediumInfo(attrs){return new MediumInfo(attrs)}static message(attrs){return new Message(attrs)}static messaging(attrs){return new Messaging(attrs)}static mode(attrs){return new Mode(attrs)}static modifyAnnots(attrs){return new ModifyAnnots(attrs)}static msgId(attrs){return new MsgId(attrs)}static nameAttr(attrs){return new NameAttr(attrs)}static neverEmbed(attrs){return new NeverEmbed(attrs)}static numberOfCopies(attrs){return new NumberOfCopies(attrs)}static openAction(attrs){return new OpenAction(attrs)}static output(attrs){return new Output(attrs)}static outputBin(attrs){return new OutputBin(attrs)}static outputXSL(attrs){return new OutputXSL(attrs)}static overprint(attrs){return new Overprint(attrs)}static packets(attrs){return new Packets(attrs)}static pageOffset(attrs){return new PageOffset(attrs)}static pageRange(attrs){return new PageRange(attrs)}static pagination(attrs){return new Pagination(attrs)}static paginationOverride(attrs){return new PaginationOverride(attrs)}static part(attrs){return new Part(attrs)}static pcl(attrs){return new Pcl(attrs)}static pdf(attrs){return new Pdf(attrs)}static pdfa(attrs){return new Pdfa(attrs)}static permissions(attrs){return new Permissions(attrs)}static pickTrayByPDFSize(attrs){return new PickTrayByPDFSize(attrs)}static picture(attrs){return new Picture(attrs)}static plaintextMetadata(attrs){return new PlaintextMetadata(attrs)}static presence(attrs){return new Presence(attrs)}static present(attrs){return new Present(attrs)}static print(attrs){return new Print(attrs)}static printHighQuality(attrs){return new PrintHighQuality(attrs)}static printScaling(attrs){return new PrintScaling(attrs)}static printerName(attrs){return new PrinterName(attrs)}static producer(attrs){return new Producer(attrs)}static ps(attrs){return new Ps(attrs)}static range(attrs){return new Range(attrs)}static record(attrs){return new Record(attrs)}static relevant(attrs){return new Relevant(attrs)}static rename(attrs){return new Rename(attrs)}static renderPolicy(attrs){return new RenderPolicy(attrs)}static runScripts(attrs){return new RunScripts(attrs)}static script(attrs){return new Script(attrs)}static scriptModel(attrs){return new ScriptModel(attrs)}static severity(attrs){return new Severity(attrs)}static silentPrint(attrs){return new SilentPrint(attrs)}static staple(attrs){return new Staple(attrs)}static startNode(attrs){return new StartNode(attrs)}static startPage(attrs){return new StartPage(attrs)}static submitFormat(attrs){return new SubmitFormat(attrs)}static submitUrl(attrs){return new SubmitUrl(attrs)}static subsetBelow(attrs){return new SubsetBelow(attrs)}static suppressBanner(attrs){return new SuppressBanner(attrs)}static tagged(attrs){return new Tagged(attrs)}static template(attrs){return new Template(attrs)}static templateCache(attrs){return new TemplateCache(attrs)}static threshold(attrs){return new Threshold(attrs)}static to(attrs){return new To(attrs)}static trace(attrs){return new Trace(attrs)}static transform(attrs){return new Transform(attrs)}static type(attrs){return new Type(attrs)}static uri(attrs){return new Uri(attrs)}static validate(attrs){return new Validate(attrs)}static validateApprovalSignatures(attrs){return new ValidateApprovalSignatures(attrs)}static validationMessaging(attrs){return new ValidationMessaging(attrs)}static version(attrs){return new Version(attrs)}static versionControl(attrs){return new VersionControl(attrs)}static viewerPreferences(attrs){return new ViewerPreferences(attrs)}static webClient(attrs){return new WebClient(attrs)}static whitespace(attrs){return new Whitespace(attrs)}static window(attrs){return new Window(attrs)}static xdc(attrs){return new Xdc(attrs)}static xdp(attrs){return new Xdp(attrs)}static xsl(attrs){return new Xsl(attrs)}static zpl(attrs){return new Zpl(attrs)}}exports.ConfigNamespace=ConfigNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConnectionSetNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77);const CONNECTION_SET_NS_ID=_namespaces.NamespaceIds.connectionSet.id;class ConnectionSet extends _xfa_object.XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"connectionSet",!0),this.wsdlConnection=new _xfa_object.XFAObjectArray,this.xmlConnection=new _xfa_object.XFAObjectArray,this.xsdConnection=new _xfa_object.XFAObjectArray}}class EffectiveInputPolicy extends _xfa_object.XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"effectiveInputPolicy"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class EffectiveOutputPolicy extends _xfa_object.XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"effectiveOutputPolicy"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Operation extends _xfa_object.StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"operation"),this.id=attributes.id||"",this.input=attributes.input||"",this.name=attributes.name||"",this.output=attributes.output||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class RootElement extends _xfa_object.StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"rootElement"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class SoapAction extends _xfa_object.StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"soapAction"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class SoapAddress extends _xfa_object.StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"soapAddress"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class Uri extends _xfa_object.StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"uri"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class WsdlAddress extends _xfa_object.StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"wsdlAddress"),this.id=attributes.id||"",this.name=attributes.name||"",this.use=attributes.use||"",this.usehref=attributes.usehref||""}}class WsdlConnection extends _xfa_object.XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"wsdlConnection",!0),this.dataDescription=attributes.dataDescription||"",this.name=attributes.name||"",this.effectiveInputPolicy=null,this.effectiveOutputPolicy=null,this.operation=null,this.soapAction=null,this.soapAddress=null,this.wsdlAddress=null}}class XmlConnection extends _xfa_object.XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"xmlConnection",!0),this.dataDescription=attributes.dataDescription||"",this.name=attributes.name||"",this.uri=null}}class XsdConnection extends _xfa_object.XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,"xsdConnection",!0),this.dataDescription=attributes.dataDescription||"",this.name=attributes.name||"",this.rootElement=null,this.uri=null}}class ConnectionSetNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(ConnectionSetNamespace.hasOwnProperty(name))return ConnectionSetNamespace[name](attributes)}static connectionSet(attrs){return new ConnectionSet(attrs)}static effectiveInputPolicy(attrs){return new EffectiveInputPolicy(attrs)}static effectiveOutputPolicy(attrs){return new EffectiveOutputPolicy(attrs)}static operation(attrs){return new Operation(attrs)}static rootElement(attrs){return new RootElement(attrs)}static soapAction(attrs){return new SoapAction(attrs)}static soapAddress(attrs){return new SoapAddress(attrs)}static uri(attrs){return new Uri(attrs)}static wsdlAddress(attrs){return new WsdlAddress(attrs)}static wsdlConnection(attrs){return new WsdlConnection(attrs)}static xmlConnection(attrs){return new XmlConnection(attrs)}static xsdConnection(attrs){return new XsdConnection(attrs)}}exports.ConnectionSetNamespace=ConnectionSetNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatasetsNamespace=void 0;var _xfa_object=__w_pdfjs_require__(77),_namespaces=__w_pdfjs_require__(79);const DATASETS_NS_ID=_namespaces.NamespaceIds.datasets.id;class Data extends _xfa_object.XmlObject{constructor(attributes){super(DATASETS_NS_ID,"data",attributes)}[_xfa_object.$isNsAgnostic](){return!0}}class Datasets extends _xfa_object.XFAObject{constructor(attributes){super(DATASETS_NS_ID,"datasets",!0),this.data=null,this.Signature=null}[_xfa_object.$onChild](child){const name=child[_xfa_object.$nodeName];("data"===name&&child[_xfa_object.$namespaceId]===DATASETS_NS_ID||"Signature"===name&&child[_xfa_object.$namespaceId]===_namespaces.NamespaceIds.signature.id)&&(this[name]=child),this[_xfa_object.$appendChild](child)}}class DatasetsNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(DatasetsNamespace.hasOwnProperty(name))return DatasetsNamespace[name](attributes)}static datasets(attributes){return new Datasets(attributes)}static data(attributes){return new Data(attributes)}}exports.DatasetsNamespace=DatasetsNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocaleSetNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77),_utils=__w_pdfjs_require__(78);const LOCALE_SET_NS_ID=_namespaces.NamespaceIds.localeSet.id;class CalendarSymbols extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"calendarSymbols",!0),this.name="gregorian",this.dayNames=new _xfa_object.XFAObjectArray(2),this.eraNames=null,this.meridiemNames=null,this.monthNames=new _xfa_object.XFAObjectArray(2)}}class CurrencySymbol extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"currencySymbol"),this.name=(0,_utils.getStringOption)(attributes.name,["symbol","isoname","decimal"])}}class CurrencySymbols extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"currencySymbols",!0),this.currencySymbol=new _xfa_object.XFAObjectArray(3)}}class DatePattern extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"datePattern"),this.name=(0,_utils.getStringOption)(attributes.name,["full","long","med","short"])}}class DatePatterns extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"datePatterns",!0),this.datePattern=new _xfa_object.XFAObjectArray(4)}}class DateTimeSymbols extends _xfa_object.ContentObject{constructor(attributes){super(LOCALE_SET_NS_ID,"dateTimeSymbols")}}class Day extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"day")}}class DayNames extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"dayNames",!0),this.abbr=(0,_utils.getInteger)({data:attributes.abbr,defaultValue:0,validate:x=>1===x}),this.day=new _xfa_object.XFAObjectArray(7)}}class Era extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"era")}}class EraNames extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"eraNames",!0),this.era=new _xfa_object.XFAObjectArray(2)}}class Locale extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"locale",!0),this.desc=attributes.desc||"",this.name="isoname",this.calendarSymbols=null,this.currencySymbols=null,this.datePatterns=null,this.dateTimeSymbols=null,this.numberPatterns=null,this.numberSymbols=null,this.timePatterns=null,this.typeFaces=null}}class LocaleSet extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"localeSet",!0),this.locale=new _xfa_object.XFAObjectArray}}class Meridiem extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"meridiem")}}class MeridiemNames extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"meridiemNames",!0),this.meridiem=new _xfa_object.XFAObjectArray(2)}}class Month extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"month")}}class MonthNames extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"monthNames",!0),this.abbr=(0,_utils.getInteger)({data:attributes.abbr,defaultValue:0,validate:x=>1===x}),this.month=new _xfa_object.XFAObjectArray(12)}}class NumberPattern extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"numberPattern"),this.name=(0,_utils.getStringOption)(attributes.name,["full","long","med","short"])}}class NumberPatterns extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"numberPatterns",!0),this.numberPattern=new _xfa_object.XFAObjectArray(4)}}class NumberSymbol extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"numberSymbol"),this.name=(0,_utils.getStringOption)(attributes.name,["decimal","grouping","percent","minus","zero"])}}class NumberSymbols extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"numberSymbols",!0),this.numberSymbol=new _xfa_object.XFAObjectArray(5)}}class TimePattern extends _xfa_object.StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,"timePattern"),this.name=(0,_utils.getStringOption)(attributes.name,["full","long","med","short"])}}class TimePatterns extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"timePatterns",!0),this.timePattern=new _xfa_object.XFAObjectArray(4)}}class TypeFace extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"typeFace",!0),this.name=""|attributes.name}}class TypeFaces extends _xfa_object.XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,"typeFaces",!0),this.typeFace=new _xfa_object.XFAObjectArray}}class LocaleSetNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(LocaleSetNamespace.hasOwnProperty(name))return LocaleSetNamespace[name](attributes)}static calendarSymbols(attrs){return new CalendarSymbols(attrs)}static currencySymbol(attrs){return new CurrencySymbol(attrs)}static currencySymbols(attrs){return new CurrencySymbols(attrs)}static datePattern(attrs){return new DatePattern(attrs)}static datePatterns(attrs){return new DatePatterns(attrs)}static dateTimeSymbols(attrs){return new DateTimeSymbols(attrs)}static day(attrs){return new Day(attrs)}static dayNames(attrs){return new DayNames(attrs)}static era(attrs){return new Era(attrs)}static eraNames(attrs){return new EraNames(attrs)}static locale(attrs){return new Locale(attrs)}static localeSet(attrs){return new LocaleSet(attrs)}static meridiem(attrs){return new Meridiem(attrs)}static meridiemNames(attrs){return new MeridiemNames(attrs)}static month(attrs){return new Month(attrs)}static monthNames(attrs){return new MonthNames(attrs)}static numberPattern(attrs){return new NumberPattern(attrs)}static numberPatterns(attrs){return new NumberPatterns(attrs)}static numberSymbol(attrs){return new NumberSymbol(attrs)}static numberSymbols(attrs){return new NumberSymbols(attrs)}static timePattern(attrs){return new TimePattern(attrs)}static timePatterns(attrs){return new TimePatterns(attrs)}static typeFace(attrs){return new TypeFace(attrs)}static typeFaces(attrs){return new TypeFaces(attrs)}}exports.LocaleSetNamespace=LocaleSetNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SignatureNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77);const SIGNATURE_NS_ID=_namespaces.NamespaceIds.signature.id;class Signature extends _xfa_object.XFAObject{constructor(attributes){super(SIGNATURE_NS_ID,"signature",!0)}}class SignatureNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(SignatureNamespace.hasOwnProperty(name))return SignatureNamespace[name](attributes)}static signature(attributes){return new Signature(attributes)}}exports.SignatureNamespace=SignatureNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StylesheetNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77);const STYLESHEET_NS_ID=_namespaces.NamespaceIds.stylesheet.id;class Stylesheet extends _xfa_object.XFAObject{constructor(attributes){super(STYLESHEET_NS_ID,"stylesheet",!0)}}class StylesheetNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(StylesheetNamespace.hasOwnProperty(name))return StylesheetNamespace[name](attributes)}static stylesheet(attributes){return new Stylesheet(attributes)}}exports.StylesheetNamespace=StylesheetNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XdpNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77);const XDP_NS_ID=_namespaces.NamespaceIds.xdp.id;class Xdp extends _xfa_object.XFAObject{constructor(attributes){super(XDP_NS_ID,"xdp",!0),this.uuid=attributes.uuid||"",this.timeStamp=attributes.timeStamp||"",this.config=null,this.connectionSet=null,this.datasets=null,this.localeSet=null,this.stylesheet=new _xfa_object.XFAObjectArray,this.template=null}[_xfa_object.$onChildCheck](child){const ns=_namespaces.NamespaceIds[child[_xfa_object.$nodeName]];return ns&&child[_xfa_object.$namespaceId]===ns.id}}class XdpNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(XdpNamespace.hasOwnProperty(name))return XdpNamespace[name](attributes)}static xdp(attributes){return new Xdp(attributes)}}exports.XdpNamespace=XdpNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XhtmlNamespace=void 0;var _xfa_object=__w_pdfjs_require__(77),_namespaces=__w_pdfjs_require__(79),_html_utils=__w_pdfjs_require__(84),_utils=__w_pdfjs_require__(78);const XHTML_NS_ID=_namespaces.NamespaceIds.xhtml.id,$richText=Symbol(),VALID_STYLES=new Set(["color","font","font-family","font-size","font-stretch","font-style","font-weight","margin","margin-bottom","margin-left","margin-right","margin-top","letter-spacing","line-height","orphans","page-break-after","page-break-before","page-break-inside","tab-interval","tab-stop","text-align","text-decoration","text-indent","vertical-align","widows","kerning-mode","xfa-font-horizontal-scale","xfa-font-vertical-scale","xfa-spacerun","xfa-tab-stops"]),StyleMapping=new Map([["page-break-after","breakAfter"],["page-break-before","breakBefore"],["page-break-inside","breakInside"],["kerning-mode",value=>"none"===value?"none":"normal"],["xfa-font-horizontal-scale",value=>`scaleX(${Math.max(0,Math.min(parseInt(value)/100)).toFixed(2)})`],["xfa-font-vertical-scale",value=>`scaleY(${Math.max(0,Math.min(parseInt(value)/100)).toFixed(2)})`],["xfa-spacerun",""],["xfa-tab-stops",""],["font-size",(value,original)=>(value=original.fontSize=(0,_utils.getMeasurement)(value),(0,_html_utils.measureToString)(.99*value))],["letter-spacing",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["line-height",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["margin",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["margin-bottom",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["margin-left",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["margin-right",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["margin-top",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["text-indent",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))],["font-family",value=>value],["vertical-align",value=>(0,_html_utils.measureToString)((0,_utils.getMeasurement)(value))]]),spacesRegExp=/\s+/g,crlfRegExp=/[\r\n]+/g,crlfForRichTextRegExp=/\r\n?/g;function mapStyle(styleStr,node,richText){const style=Object.create(null);if(!styleStr)return style;const original=Object.create(null);for(const[key,value]of styleStr.split(";").map((s=>s.split(":",2)))){const mapping=StyleMapping.get(key);if(""===mapping)continue;let newValue=value;mapping&&(newValue="string"==typeof mapping?mapping:mapping(value,original)),key.endsWith("scale")?style.transform?style.transform=`${style[key]} ${newValue}`:style.transform=newValue:style[key.replaceAll(/-([a-zA-Z])/g,((_,x)=>x.toUpperCase()))]=newValue}if(style.fontFamily&&(0,_html_utils.setFontFamily)({typeface:style.fontFamily,weight:style.fontWeight||"normal",posture:style.fontStyle||"normal",size:original.fontSize||0},node,node[_xfa_object.$globalData].fontFinder,style),richText&&style.verticalAlign&&"0px"!==style.verticalAlign&&style.fontSize){const SUB_SUPER_SCRIPT_FACTOR=.583,VERTICAL_FACTOR=.333,fontSize=(0,_utils.getMeasurement)(style.fontSize);style.fontSize=(0,_html_utils.measureToString)(fontSize*SUB_SUPER_SCRIPT_FACTOR),style.verticalAlign=(0,_html_utils.measureToString)(Math.sign((0,_utils.getMeasurement)(style.verticalAlign))*fontSize*VERTICAL_FACTOR)}return richText&&style.fontSize&&(style.fontSize=`calc(${style.fontSize} * var(--scale-factor))`),(0,_html_utils.fixTextIndent)(style),style}const NoWhites=new Set(["body","html"]);class XhtmlObject extends _xfa_object.XmlObject{constructor(attributes,name){super(XHTML_NS_ID,name),this[$richText]=!1,this.style=attributes.style||""}[_xfa_object.$clean](builder){super[_xfa_object.$clean](builder),this.style=function checkStyle(node){return node.style?node.style.trim().split(/\s*;\s*/).filter((s=>!!s)).map((s=>s.split(/\s*:\s*/,2))).filter((([key,value])=>("font-family"===key&&node[_xfa_object.$globalData].usedTypefaces.add(value),VALID_STYLES.has(key)))).map((kv=>kv.join(":"))).join(";"):""}(this)}[_xfa_object.$acceptWhitespace](){return!NoWhites.has(this[_xfa_object.$nodeName])}[_xfa_object.$onText](str,richText=!1){richText?this[$richText]=!0:(str=str.replace(crlfRegExp,""),this.style.includes("xfa-spacerun:yes")||(str=str.replace(spacesRegExp," "))),str&&(this[_xfa_object.$content]+=str)}[_xfa_object.$pushGlyphs](measure,mustPop=!0){const xfaFont=Object.create(null),margin={top:NaN,bottom:NaN,left:NaN,right:NaN};let lineHeight=null;for(const[key,value]of this.style.split(";").map((s=>s.split(":",2))))switch(key){case"font-family":xfaFont.typeface=(0,_utils.stripQuotes)(value);break;case"font-size":xfaFont.size=(0,_utils.getMeasurement)(value);break;case"font-weight":xfaFont.weight=value;break;case"font-style":xfaFont.posture=value;break;case"letter-spacing":xfaFont.letterSpacing=(0,_utils.getMeasurement)(value);break;case"margin":const values=value.split(/ \t/).map((x=>(0,_utils.getMeasurement)(x)));switch(values.length){case 1:margin.top=margin.bottom=margin.left=margin.right=values[0];break;case 2:margin.top=margin.bottom=values[0],margin.left=margin.right=values[1];break;case 3:margin.top=values[0],margin.bottom=values[2],margin.left=margin.right=values[1];break;case 4:margin.top=values[0],margin.left=values[1],margin.bottom=values[2],margin.right=values[3]}break;case"margin-top":margin.top=(0,_utils.getMeasurement)(value);break;case"margin-bottom":margin.bottom=(0,_utils.getMeasurement)(value);break;case"margin-left":margin.left=(0,_utils.getMeasurement)(value);break;case"margin-right":margin.right=(0,_utils.getMeasurement)(value);break;case"line-height":lineHeight=(0,_utils.getMeasurement)(value)}if(measure.pushData(xfaFont,margin,lineHeight),this[_xfa_object.$content])measure.addString(this[_xfa_object.$content]);else for(const child of this[_xfa_object.$getChildren]())"#text"!==child[_xfa_object.$nodeName]?child[_xfa_object.$pushGlyphs](measure):measure.addString(child[_xfa_object.$content]);mustPop&&measure.popFont()}[_xfa_object.$toHTML](availableSpace){const children=[];if(this[_xfa_object.$extra]={children},this[_xfa_object.$childrenToHTML]({}),0===children.length&&!this[_xfa_object.$content])return _utils.HTMLResult.EMPTY;let value;return value=this[$richText]?this[_xfa_object.$content]?this[_xfa_object.$content].replace(crlfForRichTextRegExp,"\n"):void 0:this[_xfa_object.$content]||void 0,_utils.HTMLResult.success({name:this[_xfa_object.$nodeName],attributes:{href:this.href,style:mapStyle(this.style,this,this[$richText])},children,value})}}class A extends XhtmlObject{constructor(attributes){super(attributes,"a"),this.href=(0,_html_utils.fixURL)(attributes.href)||""}}class B extends XhtmlObject{constructor(attributes){super(attributes,"b")}[_xfa_object.$pushGlyphs](measure){measure.pushFont({weight:"bold"}),super[_xfa_object.$pushGlyphs](measure),measure.popFont()}}class Body extends XhtmlObject{constructor(attributes){super(attributes,"body")}[_xfa_object.$toHTML](availableSpace){const res=super[_xfa_object.$toHTML](availableSpace),{html}=res;return html?(html.name="div",html.attributes.class=["xfaRich"],res):_utils.HTMLResult.EMPTY}}class Br extends XhtmlObject{constructor(attributes){super(attributes,"br")}[_xfa_object.$text](){return"\n"}[_xfa_object.$pushGlyphs](measure){measure.addString("\n")}[_xfa_object.$toHTML](availableSpace){return _utils.HTMLResult.success({name:"br"})}}class Html extends XhtmlObject{constructor(attributes){super(attributes,"html")}[_xfa_object.$toHTML](availableSpace){const children=[];if(this[_xfa_object.$extra]={children},this[_xfa_object.$childrenToHTML]({}),0===children.length)return _utils.HTMLResult.success({name:"div",attributes:{class:["xfaRich"],style:{}},value:this[_xfa_object.$content]||""});if(1===children.length){const child=children[0];if(child.attributes&&child.attributes.class.includes("xfaRich"))return _utils.HTMLResult.success(child)}return _utils.HTMLResult.success({name:"div",attributes:{class:["xfaRich"],style:{}},children})}}class I extends XhtmlObject{constructor(attributes){super(attributes,"i")}[_xfa_object.$pushGlyphs](measure){measure.pushFont({posture:"italic"}),super[_xfa_object.$pushGlyphs](measure),measure.popFont()}}class Li extends XhtmlObject{constructor(attributes){super(attributes,"li")}}class Ol extends XhtmlObject{constructor(attributes){super(attributes,"ol")}}class P extends XhtmlObject{constructor(attributes){super(attributes,"p")}[_xfa_object.$pushGlyphs](measure){super[_xfa_object.$pushGlyphs](measure,!1),measure.addString("\n"),measure.addPara(),measure.popFont()}[_xfa_object.$text](){return this[_xfa_object.$getParent]()[_xfa_object.$getChildren]().at(-1)===this?super[_xfa_object.$text]():super[_xfa_object.$text]()+"\n"}}class Span extends XhtmlObject{constructor(attributes){super(attributes,"span")}}class Sub extends XhtmlObject{constructor(attributes){super(attributes,"sub")}}class Sup extends XhtmlObject{constructor(attributes){super(attributes,"sup")}}class Ul extends XhtmlObject{constructor(attributes){super(attributes,"ul")}}class XhtmlNamespace{static[_namespaces.$buildXFAObject](name,attributes){if(XhtmlNamespace.hasOwnProperty(name))return XhtmlNamespace[name](attributes)}static a(attributes){return new A(attributes)}static b(attributes){return new B(attributes)}static body(attributes){return new Body(attributes)}static br(attributes){return new Br(attributes)}static html(attributes){return new Html(attributes)}static i(attributes){return new I(attributes)}static li(attributes){return new Li(attributes)}static ol(attributes){return new Ol(attributes)}static p(attributes){return new P(attributes)}static span(attributes){return new Span(attributes)}static sub(attributes){return new Sub(attributes)}static sup(attributes){return new Sup(attributes)}static ul(attributes){return new Ul(attributes)}}exports.XhtmlNamespace=XhtmlNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnknownNamespace=void 0;var _namespaces=__w_pdfjs_require__(79),_xfa_object=__w_pdfjs_require__(77);class UnknownNamespace{constructor(nsId){this.namespaceId=nsId}[_namespaces.$buildXFAObject](name,attributes){return new _xfa_object.XmlObject(this.namespaceId,name,attributes)}}exports.UnknownNamespace=UnknownNamespace},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatasetReader=void 0;var _util=__w_pdfjs_require__(2),_core_utils=__w_pdfjs_require__(6),_xml_parser=__w_pdfjs_require__(66);function decodeString(str){try{return(0,_util.stringToUTF8String)(str)}catch(ex){return(0,_util.warn)(`UTF-8 decoding failed: "${ex}".`),str}}class DatasetXMLParser extends _xml_parser.SimpleXMLParser{constructor(options){super(options),this.node=null}onEndElement(name){const node=super.onEndElement(name);if(node&&"xfa:datasets"===name)throw this.node=node,new Error("Aborting DatasetXMLParser.")}}exports.DatasetReader=class DatasetReader{constructor(data){if(data.datasets)this.node=new _xml_parser.SimpleXMLParser({hasAttributes:!0}).parseFromString(data.datasets).documentElement;else{const parser=new DatasetXMLParser({hasAttributes:!0});try{parser.parseFromString(data["xdp:xdp"])}catch(_){}this.node=parser.node}}getValue(path){if(!this.node||!path)return"";const node=this.node.searchNode((0,_core_utils.parseXFAPath)(path),0);if(!node)return"";const first=node.firstChild;return first&&"value"===first.nodeName?node.children.map((child=>decodeString(child.textContent))):decodeString(node.textContent)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.XRef=void 0;var _util=__w_pdfjs_require__(2),_primitives=__w_pdfjs_require__(5),_core_utils=__w_pdfjs_require__(6),_parser=__w_pdfjs_require__(17),_base_stream=__w_pdfjs_require__(7),_crypto=__w_pdfjs_require__(67);exports.XRef=class XRef{constructor(stream,pdfManager){this.stream=stream,this.pdfManager=pdfManager,this.entries=[],this.xrefstms=Object.create(null),this._cacheMap=new Map,this._pendingRefs=new _primitives.RefSet,this.stats=new _core_utils.DocStats(pdfManager.msgHandler),this._newRefNum=null}getNewRef(){return null===this._newRefNum&&(this._newRefNum=this.entries.length||1),_primitives.Ref.get(this._newRefNum++,0)}resetNewRef(){this._newRefNum=null}setStartXRef(startXRef){this.startXRefQueue=[startXRef]}parse(recoveryMode=!1){let trailerDict,encrypt,root;recoveryMode?((0,_util.warn)("Indexing all PDF objects"),trailerDict=this.indexObjects()):trailerDict=this.readXRef(),trailerDict.assignXref(this),this.trailer=trailerDict;try{encrypt=trailerDict.get("Encrypt")}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)(`XRef.parse - Invalid "Encrypt" reference: "${ex}".`)}if(encrypt instanceof _primitives.Dict){const ids=trailerDict.get("ID"),fileId=ids&&ids.length?ids[0]:"";encrypt.suppressEncryption=!0,this.encrypt=new _crypto.CipherTransformFactory(encrypt,fileId,this.pdfManager.password)}try{root=trailerDict.get("Root")}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)(`XRef.parse - Invalid "Root" reference: "${ex}".`)}if(root instanceof _primitives.Dict)try{if(root.get("Pages")instanceof _primitives.Dict)return void(this.root=root)}catch(ex){if(ex instanceof _core_utils.MissingDataException)throw ex;(0,_util.warn)(`XRef.parse - Invalid "Pages" reference: "${ex}".`)}if(!recoveryMode)throw new _core_utils.XRefParseException;throw new _util.InvalidPDFException("Invalid Root reference.")}processXRefTable(parser){"tableState"in this||(this.tableState={entryNum:0,streamPos:parser.lexer.stream.pos,parserBuf1:parser.buf1,parserBuf2:parser.buf2});const obj=this.readXRefTable(parser);if(!(0,_primitives.isCmd)(obj,"trailer"))throw new _util.FormatError("Invalid XRef table: could not find trailer dictionary");let dict=parser.getObj();if(dict instanceof _primitives.Dict||!dict.dict||(dict=dict.dict),!(dict instanceof _primitives.Dict))throw new _util.FormatError("Invalid XRef table: could not parse trailer dictionary");return delete this.tableState,dict}readXRefTable(parser){const stream=parser.lexer.stream,tableState=this.tableState;let obj;for(stream.pos=tableState.streamPos,parser.buf1=tableState.parserBuf1,parser.buf2=tableState.parserBuf2;;){if(!("firstEntryNum"in tableState)||!("entryCount"in tableState)){if((0,_primitives.isCmd)(obj=parser.getObj(),"trailer"))break;tableState.firstEntryNum=obj,tableState.entryCount=parser.getObj()}let first=tableState.firstEntryNum;const count=tableState.entryCount;if(!Number.isInteger(first)||!Number.isInteger(count))throw new _util.FormatError("Invalid XRef table: wrong types in subsection header");for(let i=tableState.entryNum;i<count;i++){tableState.streamPos=stream.pos,tableState.entryNum=i,tableState.parserBuf1=parser.buf1,tableState.parserBuf2=parser.buf2;const entry={};entry.offset=parser.getObj(),entry.gen=parser.getObj();const type=parser.getObj();if(type instanceof _primitives.Cmd)switch(type.cmd){case"f":entry.free=!0;break;case"n":entry.uncompressed=!0}if(!Number.isInteger(entry.offset)||!Number.isInteger(entry.gen)||!entry.free&&!entry.uncompressed)throw new _util.FormatError(`Invalid entry in XRef subsection: ${first}, ${count}`);0===i&&entry.free&&1===first&&(first=0),this.entries[i+first]||(this.entries[i+first]=entry)}tableState.entryNum=0,tableState.streamPos=stream.pos,tableState.parserBuf1=parser.buf1,tableState.parserBuf2=parser.buf2,delete tableState.firstEntryNum,delete tableState.entryCount}if(this.entries[0]&&!this.entries[0].free)throw new _util.FormatError("Invalid XRef table: unexpected first object");return obj}processXRefStream(stream){if(!("streamState"in this)){const streamParameters=stream.dict,byteWidths=streamParameters.get("W");let range=streamParameters.get("Index");range||(range=[0,streamParameters.get("Size")]),this.streamState={entryRanges:range,byteWidths,entryNum:0,streamPos:stream.pos}}return this.readXRefStream(stream),delete this.streamState,stream.dict}readXRefStream(stream){const streamState=this.streamState;stream.pos=streamState.streamPos;const[typeFieldWidth,offsetFieldWidth,generationFieldWidth]=streamState.byteWidths,entryRanges=streamState.entryRanges;for(;entryRanges.length>0;){const[first,n]=entryRanges;if(!Number.isInteger(first)||!Number.isInteger(n))throw new _util.FormatError(`Invalid XRef range fields: ${first}, ${n}`);if(!Number.isInteger(typeFieldWidth)||!Number.isInteger(offsetFieldWidth)||!Number.isInteger(generationFieldWidth))throw new _util.FormatError(`Invalid XRef entry fields length: ${first}, ${n}`);for(let i=streamState.entryNum;i<n;++i){streamState.entryNum=i,streamState.streamPos=stream.pos;let type=0,offset=0,generation=0;for(let j=0;j<typeFieldWidth;++j){const typeByte=stream.getByte();if(-1===typeByte)throw new _util.FormatError("Invalid XRef byteWidths 'type'.");type=type<<8|typeByte}0===typeFieldWidth&&(type=1);for(let j=0;j<offsetFieldWidth;++j){const offsetByte=stream.getByte();if(-1===offsetByte)throw new _util.FormatError("Invalid XRef byteWidths 'offset'.");offset=offset<<8|offsetByte}for(let j=0;j<generationFieldWidth;++j){const generationByte=stream.getByte();if(-1===generationByte)throw new _util.FormatError("Invalid XRef byteWidths 'generation'.");generation=generation<<8|generationByte}const entry={};switch(entry.offset=offset,entry.gen=generation,type){case 0:entry.free=!0;break;case 1:entry.uncompressed=!0;break;case 2:break;default:throw new _util.FormatError(`Invalid XRef entry type: ${type}`)}this.entries[first+i]||(this.entries[first+i]=entry)}streamState.entryNum=0,streamState.streamPos=stream.pos,entryRanges.splice(0,2)}}indexObjects(){function readToken(data,offset){let token="",ch=data[offset];for(;10!==ch&&13!==ch&&60!==ch&&!(++offset>=data.length);)token+=String.fromCharCode(ch),ch=data[offset];return token}function skipUntil(data,offset,what){const length=what.length,dataLength=data.length;let skipped=0;for(;offset<dataLength;){let i=0;for(;i<length&&data[offset+i]===what[i];)++i;if(i>=length)break;offset++,skipped++}return skipped}const objRegExp=/^(\d+)\s+(\d+)\s+obj\b/,endobjRegExp=/\bendobj[\b\s]$/,nestedObjRegExp=/\s+(\d+\s+\d+\s+obj[\b\s<])$/,trailerBytes=new Uint8Array([116,114,97,105,108,101,114]),startxrefBytes=new Uint8Array([115,116,97,114,116,120,114,101,102]),objBytes=new Uint8Array([111,98,106]),xrefBytes=new Uint8Array([47,88,82,101,102]);this.entries.length=0,this._cacheMap.clear();const stream=this.stream;stream.pos=0;const buffer=stream.getBytes(),length=buffer.length;let position=stream.start;const trailers=[],xrefStms=[];for(;position<length;){let ch=buffer[position];if(9===ch||10===ch||13===ch||32===ch){++position;continue}if(37===ch){do{if(++position,position>=length)break;ch=buffer[position]}while(10!==ch&&13!==ch);continue}const token=readToken(buffer,position);let m;if(token.startsWith("xref")&&(4===token.length||/\s/.test(token[4])))position+=skipUntil(buffer,position,trailerBytes),trailers.push(position),position+=skipUntil(buffer,position,startxrefBytes);else if(m=objRegExp.exec(token)){const num=0|m[1],gen=0|m[2];let contentLength,startPos=position+token.length,updateEntries=!1;if(this.entries[num]){if(this.entries[num].gen===gen)try{new _parser.Parser({lexer:new _parser.Lexer(stream.makeSubStream(startPos))}).getObj(),updateEntries=!0}catch(ex){ex instanceof _core_utils.ParserEOFException?(0,_util.warn)(`indexObjects -- checking object (${token}): "${ex}".`):updateEntries=!0}}else updateEntries=!0;for(updateEntries&&(this.entries[num]={offset:position-stream.start,gen,uncompressed:!0});startPos<buffer.length;){const endPos=startPos+skipUntil(buffer,startPos,objBytes)+4;contentLength=endPos-position;const checkPos=Math.max(endPos-25,startPos),tokenStr=(0,_util.bytesToString)(buffer.subarray(checkPos,endPos));if(endobjRegExp.test(tokenStr))break;{const objToken=nestedObjRegExp.exec(tokenStr);if(objToken&&objToken[1]){(0,_util.warn)('indexObjects: Found new "obj" inside of another "obj", caused by missing "endobj" -- trying to recover.'),contentLength-=objToken[1].length;break}}startPos=endPos}const content=buffer.subarray(position,position+contentLength),xrefTagOffset=skipUntil(content,0,xrefBytes);xrefTagOffset<contentLength&&content[xrefTagOffset+5]<64&&(xrefStms.push(position-stream.start),this.xrefstms[position-stream.start]=1),position+=contentLength}else token.startsWith("trailer")&&(7===token.length||/\s/.test(token[7]))?(trailers.push(position),position+=skipUntil(buffer,position,startxrefBytes)):position+=token.length+1}for(let i=0,ii=xrefStms.length;i<ii;++i)this.startXRefQueue.push(xrefStms[i]),this.readXRef(!0);let trailerDict;for(let i=0,ii=trailers.length;i<ii;++i){stream.pos=trailers[i];const parser=new _parser.Parser({lexer:new _parser.Lexer(stream),xref:this,allowStreams:!0,recoveryMode:!0}),obj=parser.getObj();if(!(0,_primitives.isCmd)(obj,"trailer"))continue;const dict=parser.getObj();if(dict instanceof _primitives.Dict){try{const rootDict=dict.get("Root");if(!(rootDict instanceof _primitives.Dict))continue;const pagesDict=rootDict.get("Pages");if(!(pagesDict instanceof _primitives.Dict))continue;const pagesCount=pagesDict.get("Count");if(!Number.isInteger(pagesCount))continue}catch(ex){continue}if(dict.has("ID"))return dict;trailerDict=dict}}if(trailerDict)return trailerDict;if(this.topDict)return this.topDict;throw new _util.InvalidPDFException("Invalid PDF structure.")}readXRef(recoveryMode=!1){const stream=this.stream,startXRefParsedCache=new Set;try{for(;this.startXRefQueue.length;){const startXRef=this.startXRefQueue[0];if(startXRefParsedCache.has(startXRef)){(0,_util.warn)("readXRef - skipping XRef table since it was already parsed."),this.startXRefQueue.shift();continue}startXRefParsedCache.add(startXRef),stream.pos=startXRef+stream.start;const parser=new _parser.Parser({lexer:new _parser.Lexer(stream),xref:this,allowStreams:!0});let dict,obj=parser.getObj();if((0,_primitives.isCmd)(obj,"xref")){if(dict=this.processXRefTable(parser),this.topDict||(this.topDict=dict),obj=dict.get("XRefStm"),Number.isInteger(obj)){const pos=obj;pos in this.xrefstms||(this.xrefstms[pos]=1,this.startXRefQueue.push(pos))}}else{if(!Number.isInteger(obj))throw new _util.FormatError("Invalid XRef stream header");if(!(Number.isInteger(parser.getObj())&&(0,_primitives.isCmd)(parser.getObj(),"obj")&&(obj=parser.getObj())instanceof _base_stream.BaseStream))throw new _util.FormatError("Invalid XRef stream");if(dict=this.processXRefStream(obj),this.topDict||(this.topDict=dict),!dict)throw new _util.FormatError("Failed to read XRef stream")}obj=dict.get("Prev"),Number.isInteger(obj)?this.startXRefQueue.push(obj):obj instanceof _primitives.Ref&&this.startXRefQueue.push(obj.num),this.startXRefQueue.shift()}return this.topDict}catch(e){if(e instanceof _core_utils.MissingDataException)throw e;(0,_util.info)("(while reading XRef): "+e),this.startXRefQueue.shift()}if(!recoveryMode)throw new _core_utils.XRefParseException}getEntry(i){const xrefEntry=this.entries[i];return xrefEntry&&!xrefEntry.free&&xrefEntry.offset?xrefEntry:null}fetchIfRef(obj,suppressEncryption=!1){return obj instanceof _primitives.Ref?this.fetch(obj,suppressEncryption):obj}fetch(ref,suppressEncryption=!1){if(!(ref instanceof _primitives.Ref))throw new Error("ref object is not a reference");const num=ref.num,cacheEntry=this._cacheMap.get(num);if(void 0!==cacheEntry)return cacheEntry instanceof _primitives.Dict&&!cacheEntry.objId&&(cacheEntry.objId=ref.toString()),cacheEntry;let xrefEntry=this.getEntry(num);if(null===xrefEntry)return this._cacheMap.set(num,xrefEntry),xrefEntry;if(this._pendingRefs.has(ref))return this._pendingRefs.remove(ref),(0,_util.warn)(`Ignoring circular reference: ${ref}.`),_primitives.CIRCULAR_REF;this._pendingRefs.put(ref);try{xrefEntry=xrefEntry.uncompressed?this.fetchUncompressed(ref,xrefEntry,suppressEncryption):this.fetchCompressed(ref,xrefEntry,suppressEncryption),this._pendingRefs.remove(ref)}catch(ex){throw this._pendingRefs.remove(ref),ex}return xrefEntry instanceof _primitives.Dict?xrefEntry.objId=ref.toString():xrefEntry instanceof _base_stream.BaseStream&&(xrefEntry.dict.objId=ref.toString()),xrefEntry}fetchUncompressed(ref,xrefEntry,suppressEncryption=!1){const gen=ref.gen;let num=ref.num;if(xrefEntry.gen!==gen)throw new _core_utils.XRefEntryException(`Inconsistent generation in XRef: ${ref}`);const stream=this.stream.makeSubStream(xrefEntry.offset+this.stream.start),parser=new _parser.Parser({lexer:new _parser.Lexer(stream),xref:this,allowStreams:!0}),obj1=parser.getObj(),obj2=parser.getObj(),obj3=parser.getObj();if(obj1!==num||obj2!==gen||!(obj3 instanceof _primitives.Cmd))throw new _core_utils.XRefEntryException(`Bad (uncompressed) XRef entry: ${ref}`);if("obj"!==obj3.cmd){if(obj3.cmd.startsWith("obj")&&(num=parseInt(obj3.cmd.substring(3),10),!Number.isNaN(num)))return num;throw new _core_utils.XRefEntryException(`Bad (uncompressed) XRef entry: ${ref}`)}return(xrefEntry=this.encrypt&&!suppressEncryption?parser.getObj(this.encrypt.createCipherTransform(num,gen)):parser.getObj())instanceof _base_stream.BaseStream||this._cacheMap.set(num,xrefEntry),xrefEntry}fetchCompressed(ref,xrefEntry,suppressEncryption=!1){const tableOffset=xrefEntry.offset,stream=this.fetch(_primitives.Ref.get(tableOffset,0));if(!(stream instanceof _base_stream.BaseStream))throw new _util.FormatError("bad ObjStm stream");const first=stream.dict.get("First"),n=stream.dict.get("N");if(!Number.isInteger(first)||!Number.isInteger(n))throw new _util.FormatError("invalid first and n parameters for ObjStm stream");let parser=new _parser.Parser({lexer:new _parser.Lexer(stream),xref:this,allowStreams:!0});const nums=new Array(n),offsets=new Array(n);for(let i=0;i<n;++i){const num=parser.getObj();if(!Number.isInteger(num))throw new _util.FormatError(`invalid object number in the ObjStm stream: ${num}`);const offset=parser.getObj();if(!Number.isInteger(offset))throw new _util.FormatError(`invalid object offset in the ObjStm stream: ${offset}`);nums[i]=num,offsets[i]=offset}const start=(stream.start||0)+first,entries=new Array(n);for(let i=0;i<n;++i){const length=i<n-1?offsets[i+1]-offsets[i]:void 0;if(length<0)throw new _util.FormatError("Invalid offset in the ObjStm stream.");parser=new _parser.Parser({lexer:new _parser.Lexer(stream.makeSubStream(start+offsets[i],length,stream.dict)),xref:this,allowStreams:!0});const obj=parser.getObj();if(entries[i]=obj,obj instanceof _base_stream.BaseStream)continue;const num=nums[i],entry=this.entries[num];entry&&entry.offset===tableOffset&&entry.gen===i&&this._cacheMap.set(num,obj)}if(void 0===(xrefEntry=entries[xrefEntry.gen]))throw new _core_utils.XRefEntryException(`Bad (compressed) XRef entry: ${ref}`);return xrefEntry}async fetchIfRefAsync(obj,suppressEncryption){return obj instanceof _primitives.Ref?this.fetchAsync(obj,suppressEncryption):obj}async fetchAsync(ref,suppressEncryption){try{return this.fetch(ref,suppressEncryption)}catch(ex){if(!(ex instanceof _core_utils.MissingDataException))throw ex;return await this.pdfManager.requestRange(ex.begin,ex.end),this.fetchAsync(ref,suppressEncryption)}}getCatalogObj(){return this.root}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MessageHandler=void 0;var _util=__w_pdfjs_require__(2);const CallbackKind_DATA=1,CallbackKind_ERROR=2,StreamKind_CANCEL=1,StreamKind_CANCEL_COMPLETE=2,StreamKind_CLOSE=3,StreamKind_ENQUEUE=4,StreamKind_ERROR=5,StreamKind_PULL=6,StreamKind_PULL_COMPLETE=7,StreamKind_START_COMPLETE=8;function wrapReason(reason){switch(reason instanceof Error||"object"==typeof reason&&null!==reason||(0,_util.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),reason.name){case"AbortException":return new _util.AbortException(reason.message);case"MissingPDFException":return new _util.MissingPDFException(reason.message);case"PasswordException":return new _util.PasswordException(reason.message,reason.code);case"UnexpectedResponseException":return new _util.UnexpectedResponseException(reason.message,reason.status);case"UnknownErrorException":return new _util.UnknownErrorException(reason.message,reason.details);default:return new _util.UnknownErrorException(reason.message,reason.toString())}}exports.MessageHandler=class MessageHandler{constructor(sourceName,targetName,comObj){this.sourceName=sourceName,this.targetName=targetName,this.comObj=comObj,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=event=>{const data=event.data;if(data.targetName!==this.sourceName)return;if(data.stream)return void this._processStreamMessage(data);if(data.callback){const callbackId=data.callbackId,capability=this.callbackCapabilities[callbackId];if(!capability)throw new Error(`Cannot resolve callback ${callbackId}`);if(delete this.callbackCapabilities[callbackId],data.callback===CallbackKind_DATA)capability.resolve(data.data);else{if(data.callback!==CallbackKind_ERROR)throw new Error("Unexpected callback case");capability.reject(wrapReason(data.reason))}return}const action=this.actionHandler[data.action];if(!action)throw new Error(`Unknown action from worker: ${data.action}`);if(data.callbackId){const cbSourceName=this.sourceName,cbTargetName=data.sourceName;new Promise((function(resolve){resolve(action(data.data))})).then((function(result){comObj.postMessage({sourceName:cbSourceName,targetName:cbTargetName,callback:CallbackKind_DATA,callbackId:data.callbackId,data:result})}),(function(reason){comObj.postMessage({sourceName:cbSourceName,targetName:cbTargetName,callback:CallbackKind_ERROR,callbackId:data.callbackId,reason:wrapReason(reason)})}))}else data.streamId?this._createStreamSink(data):action(data.data)},comObj.addEventListener("message",this._onComObjOnMessage)}on(actionName,handler){const ah=this.actionHandler;if(ah[actionName])throw new Error(`There is already an actionName called "${actionName}"`);ah[actionName]=handler}send(actionName,data,transfers){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:actionName,data},transfers)}sendWithPromise(actionName,data,transfers){const callbackId=this.callbackId++,capability=(0,_util.createPromiseCapability)();this.callbackCapabilities[callbackId]=capability;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:actionName,callbackId,data},transfers)}catch(ex){capability.reject(ex)}return capability.promise}sendWithStream(actionName,data,queueingStrategy,transfers){const streamId=this.streamId++,sourceName=this.sourceName,targetName=this.targetName,comObj=this.comObj;return new ReadableStream({start:controller=>{const startCapability=(0,_util.createPromiseCapability)();return this.streamControllers[streamId]={controller,startCall:startCapability,pullCall:null,cancelCall:null,isClosed:!1},comObj.postMessage({sourceName,targetName,action:actionName,streamId,data,desiredSize:controller.desiredSize},transfers),startCapability.promise},pull:controller=>{const pullCapability=(0,_util.createPromiseCapability)();return this.streamControllers[streamId].pullCall=pullCapability,comObj.postMessage({sourceName,targetName,stream:StreamKind_PULL,streamId,desiredSize:controller.desiredSize}),pullCapability.promise},cancel:reason=>{(0,_util.assert)(reason instanceof Error,"cancel must have a valid reason");const cancelCapability=(0,_util.createPromiseCapability)();return this.streamControllers[streamId].cancelCall=cancelCapability,this.streamControllers[streamId].isClosed=!0,comObj.postMessage({sourceName,targetName,stream:StreamKind_CANCEL,streamId,reason:wrapReason(reason)}),cancelCapability.promise}},queueingStrategy)}_createStreamSink(data){const streamId=data.streamId,sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj,self=this,action=this.actionHandler[data.action],streamSink={enqueue(chunk,size=1,transfers){if(this.isCancelled)return;const lastDesiredSize=this.desiredSize;this.desiredSize-=size,lastDesiredSize>0&&this.desiredSize<=0&&(this.sinkCapability=(0,_util.createPromiseCapability)(),this.ready=this.sinkCapability.promise),comObj.postMessage({sourceName,targetName,stream:StreamKind_ENQUEUE,streamId,chunk},transfers)},close(){this.isCancelled||(this.isCancelled=!0,comObj.postMessage({sourceName,targetName,stream:StreamKind_CLOSE,streamId}),delete self.streamSinks[streamId])},error(reason){(0,_util.assert)(reason instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,comObj.postMessage({sourceName,targetName,stream:StreamKind_ERROR,streamId,reason:wrapReason(reason)}))},sinkCapability:(0,_util.createPromiseCapability)(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:data.desiredSize,ready:null};streamSink.sinkCapability.resolve(),streamSink.ready=streamSink.sinkCapability.promise,this.streamSinks[streamId]=streamSink,new Promise((function(resolve){resolve(action(data.data,streamSink))})).then((function(){comObj.postMessage({sourceName,targetName,stream:StreamKind_START_COMPLETE,streamId,success:!0})}),(function(reason){comObj.postMessage({sourceName,targetName,stream:StreamKind_START_COMPLETE,streamId,reason:wrapReason(reason)})}))}_processStreamMessage(data){const streamId=data.streamId,sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj,streamController=this.streamControllers[streamId],streamSink=this.streamSinks[streamId];switch(data.stream){case StreamKind_START_COMPLETE:data.success?streamController.startCall.resolve():streamController.startCall.reject(wrapReason(data.reason));break;case StreamKind_PULL_COMPLETE:data.success?streamController.pullCall.resolve():streamController.pullCall.reject(wrapReason(data.reason));break;case StreamKind_PULL:if(!streamSink){comObj.postMessage({sourceName,targetName,stream:StreamKind_PULL_COMPLETE,streamId,success:!0});break}streamSink.desiredSize<=0&&data.desiredSize>0&&streamSink.sinkCapability.resolve(),streamSink.desiredSize=data.desiredSize,new Promise((function(resolve){resolve(streamSink.onPull&&streamSink.onPull())})).then((function(){comObj.postMessage({sourceName,targetName,stream:StreamKind_PULL_COMPLETE,streamId,success:!0})}),(function(reason){comObj.postMessage({sourceName,targetName,stream:StreamKind_PULL_COMPLETE,streamId,reason:wrapReason(reason)})}));break;case StreamKind_ENQUEUE:if((0,_util.assert)(streamController,"enqueue should have stream controller"),streamController.isClosed)break;streamController.controller.enqueue(data.chunk);break;case StreamKind_CLOSE:if((0,_util.assert)(streamController,"close should have stream controller"),streamController.isClosed)break;streamController.isClosed=!0,streamController.controller.close(),this._deleteStreamController(streamController,streamId);break;case StreamKind_ERROR:(0,_util.assert)(streamController,"error should have stream controller"),streamController.controller.error(wrapReason(data.reason)),this._deleteStreamController(streamController,streamId);break;case StreamKind_CANCEL_COMPLETE:data.success?streamController.cancelCall.resolve():streamController.cancelCall.reject(wrapReason(data.reason)),this._deleteStreamController(streamController,streamId);break;case StreamKind_CANCEL:if(!streamSink)break;new Promise((function(resolve){resolve(streamSink.onCancel&&streamSink.onCancel(wrapReason(data.reason)))})).then((function(){comObj.postMessage({sourceName,targetName,stream:StreamKind_CANCEL_COMPLETE,streamId,success:!0})}),(function(reason){comObj.postMessage({sourceName,targetName,stream:StreamKind_CANCEL_COMPLETE,streamId,reason:wrapReason(reason)})})),streamSink.sinkCapability.reject(wrapReason(data.reason)),streamSink.isCancelled=!0,delete this.streamSinks[streamId];break;default:throw new Error("Unexpected stream case")}}async _deleteStreamController(streamController,streamId){await Promise.allSettled([streamController.startCall&&streamController.startCall.promise,streamController.pullCall&&streamController.pullCall.promise,streamController.cancelCall&&streamController.cancelCall.promise]),delete this.streamControllers[streamId]}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PDFWorkerStream=void 0;var _util=__w_pdfjs_require__(2);exports.PDFWorkerStream=class PDFWorkerStream{constructor(msgHandler){this._msgHandler=msgHandler,this._contentLength=null,this._fullRequestReader=null,this._rangeRequestReaders=[]}getFullReader(){return(0,_util.assert)(!this._fullRequestReader,"PDFWorkerStream.getFullReader can only be called once."),this._fullRequestReader=new PDFWorkerStreamReader(this._msgHandler),this._fullRequestReader}getRangeReader(begin,end){const reader=new PDFWorkerStreamRangeReader(begin,end,this._msgHandler);return this._rangeRequestReaders.push(reader),reader}cancelAllRequests(reason){this._fullRequestReader&&this._fullRequestReader.cancel(reason);for(const reader of this._rangeRequestReaders.slice(0))reader.cancel(reason)}};class PDFWorkerStreamReader{constructor(msgHandler){this._msgHandler=msgHandler,this.onProgress=null,this._contentLength=null,this._isRangeSupported=!1,this._isStreamingSupported=!1;const readableStream=this._msgHandler.sendWithStream("GetReader");this._reader=readableStream.getReader(),this._headersReady=this._msgHandler.sendWithPromise("ReaderHeadersReady").then((data=>{this._isStreamingSupported=data.isStreamingSupported,this._isRangeSupported=data.isRangeSupported,this._contentLength=data.contentLength}))}get headersReady(){return this._headersReady}get contentLength(){return this._contentLength}get isStreamingSupported(){return this._isStreamingSupported}get isRangeSupported(){return this._isRangeSupported}async read(){const{value,done}=await this._reader.read();return done?{value:void 0,done:!0}:{value:value.buffer,done:!1}}cancel(reason){this._reader.cancel(reason)}}class PDFWorkerStreamRangeReader{constructor(begin,end,msgHandler){this._msgHandler=msgHandler,this.onProgress=null;const readableStream=this._msgHandler.sendWithStream("GetRangeReader",{begin,end});this._reader=readableStream.getReader()}get isStreamingSupported(){return!1}async read(){const{value,done}=await this._reader.read();return done?{value:void 0,done:!0}:{value:value.buffer,done:!1}}cancel(reason){this._reader.cancel(reason)}}}],__webpack_module_cache__={};function __w_pdfjs_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId](module,module.exports,__w_pdfjs_require__),module.exports}__w_pdfjs_require__.d=(exports,definition)=>{for(var key in definition)__w_pdfjs_require__.o(definition,key)&&!__w_pdfjs_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__w_pdfjs_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__w_pdfjs_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{var exports=__webpack_exports__;Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"WorkerMessageHandler",{enumerable:!0,get:function(){return _worker.WorkerMessageHandler}});var _worker=__w_pdfjs_require__(1)})(),__webpack_exports__})()));